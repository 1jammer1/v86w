{
"version":3,
"file":"build/libv86.js",
"lineCount":1302,
"mappings":"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",
"sources":[" [synthetic:base] "," [synthetic:es6/util/arrayiterator] "," [synthetic:es6/util/makeiterator] "," [synthetic:util/checkstringargs] "," [synthetic:util/defines] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/string/repeat] "," [synthetic:es6/math/trunc] "," [synthetic:es6/symbol] "," [synthetic:es6/util/iteratorfromarray] "," [synthetic:es6/array/entries] "," [synthetic:es6/string/trimend] "," [synthetic:es6/array/fill] "," [synthetic:es6/conformance] "," [synthetic:util/owns] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:util/objectcreate] "," [synthetic:es6/util/construct] "," [synthetic:es6/reflect/construct] "," [synthetic:es6/util/setprototypeof] "," [synthetic:es6/reflect/setprototypeof] ","lib/closure-base.js","src/const.js","src/browser/screen.js","lib/9p.js","src/config.js","src/io.js","src/main.js","src/lib.js","src/fpu.js","src/ide.js","src/pci.js","src/floppy.js","src/memory.js","src/dma.js","src/pit.js","src/vga.js","src/ps2.js","src/pic.js","src/rtc.js","src/uart.js","src/hpet.js","src/acpi.js","src/apic.js","src/ioapic.js","src/state.js","src/ne2k.js","src/sb16.js","src/virtio.js","src/bus.js","src/log.js","src/cpu.js","src/translate.js","src/modrm.js","src/string.js","src/arith.js","src/misc_instr.js","src/instructions.js","src/debug.js","src/elf.js","src/browser/keyboard.js","src/browser/mouse.js","src/browser/speaker.js","src/browser/serial.js","src/browser/network.js","src/browser/lib.js","src/browser/starter.js","src/browser/worker_bus.js","src/browser/dummy_screen.js","lib/filesystem.js","lib/jor1k.js","lib/marshall.js","lib/utf8.js"],
"sourcesContent":["/*\n * Copyright 2012 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview The base namespace for code injected by the compiler\n * at compile-time.\n *\n * @author nicksantos@google.com (Nick Santos)\n */\n\n/** @const */\nvar $jscomp = $jscomp || {};\n\n/** @const Locals for goog.scope */\n$jscomp.scope = {};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Throws if the argument is a RegExp, or if thisArg is undefined.\n * @param {?} thisArg The 'this' arg, which must be defined.\n * @param {*} arg The first argument of the function, which mustn't be a RegExp.\n * @param {string} func Name of the function, for reporting.\n * @return {string} The thisArg, coerced to a string.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkStringArgs = function(thisArg, arg, func) {\n  if (thisArg == null) {\n    throw new TypeError(\n        \"The 'this' value for String.prototype.\" + func +\n        ' must not be null or undefined');\n  }\n  if (arg instanceof RegExp) {\n    throw new TypeError(\n        'First argument to String.prototype.' + func +\n        ' must not be a regular expression');\n  }\n  return thisArg + '';\n};\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Whether to assume ES5 is available.  This enables removing several\n * internal polyfills, which must otherwise be detected at runtime.\n * @define {boolean}\n */\n$jscomp.ASSUME_ES5 = false;\n\n/**\n * Whether to skip the conformance check and simply use the polyfill always.\n * @define {boolean}\n */\n$jscomp.ASSUME_NO_NATIVE_MAP = false;\n\n/**\n * Whether to skip the conformance check and simply use the polyfill always.\n * @define {boolean}\n */\n$jscomp.ASSUME_NO_NATIVE_SET = false;\n\n/**\n * Whether to provide an incorrect but tiny Math.fround polyfill that just\n * returns the number given.  This is usually okay to do, particularly if\n * `Math.fround` is only used to allow the JavaScript engine to use faster\n * 32-bit float operations, but could cause problems if program logic is\n * dependent on floats being truncated consistently.\n * @define {boolean}\n */\n$jscomp.SIMPLE_FROUND_POLYFILL = false;\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  // This logic can be simplified to be made more optimizable.\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ?\n      /** @type {!Object} */ (global) :\n      maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\" now that the type\n// of \"Global\" has landed in the type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.repeat', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns a new string repeated the given number of times.\n   *\n   * <p>Polyfills the instance method String.prototype.repeat().\n   *\n   * @this {string}\n   * @param {number} copies\n   * @return {string}\n   */\n  var polyfill = function(copies) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, null, 'repeat');\n    if (copies < 0 || copies > 0x4FFFFFFF) { // impose a 1GB limit\n      throw new RangeError('Invalid count value');\n    }\n    copies = copies | 0; // cast to a signed integer.\n    var result = '';\n    while (copies) {\n      if (copies & 1) result += string;\n      if ((copies >>>= 1)) string += string;\n    }\n    return result;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/polyfill';\n\n$jscomp.polyfill('Math.trunc', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Truncates any fractional digits from its argument (towards zero).\n   *\n   * <p>Polyfills the static function Math.trunc().\n   *\n   * @param {number} x Any number, or value that can be coerced to a number.\n   * @return {number}\n   */\n  var polyfill = function(x) {\n    x = Number(x);\n    if (isNaN(x) || x === Infinity || x === -Infinity || x === 0) return x;\n    var y = Math.floor(Math.abs(x));\n    return x < 0 ? -y : y;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Symbol polyfill.\n * @suppress {uselessCode}\n */\n\n'require es6/util/arrayiterator';\n'require util/defineproperty';\n'require util/global';\n\n/** @const {string} */\n$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';\n\n/**\n * Initializes the Symbol function.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbol = function() {\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbol = function() {};\n\n  if (!$jscomp.global['Symbol']) {\n    $jscomp.global['Symbol'] = $jscomp.Symbol;\n  }\n};\n\n\n/**\n * @struct @constructor\n * @param {string} id\n * @param {string=} opt_description\n */\n$jscomp.SymbolClass = function(id, opt_description) {\n  /** @private @const {string} */\n  this.$jscomp$symbol$id_ = id;\n\n  /** @const {string|undefined} */\n  this.description;\n\n  // description is read-only.\n  $jscomp.defineProperty(\n      this, 'description',\n      {configurable: true, writable: true, value: opt_description});\n};\n\n\n/** @override */\n$jscomp.SymbolClass.prototype.toString = function() {\n  return this.$jscomp$symbol$id_;\n};\n\n\n/**\n * Produces \"symbols\" (actually just unique strings).\n * @param {string=} opt_description\n * @return {symbol}\n */\n$jscomp.Symbol = /** @type {function(): !Function} */ (function() {\n  var counter = 0;\n\n  /**\n   * @param {string=} opt_description\n   * @return {symbol}\n   * @suppress {reportUnknownTypes}\n   */\n  function Symbol(opt_description) {\n    if (/** @type {?} */ (this) instanceof Symbol) {\n      throw new TypeError('Symbol is not a constructor');\n    }\n    return /** @type {?} */ (new $jscomp.SymbolClass(\n        $jscomp.SYMBOL_PREFIX + (opt_description || '') + '_' + (counter++),\n        opt_description));\n  }\n\n  return Symbol;\n})();\n\n/**\n * Initializes Symbol.iterator (if it's not already defined) and adds a\n * Symbol.iterator property to the Array prototype.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var symbolIterator = $jscomp.global['Symbol'].iterator;\n  if (!symbolIterator) {\n    symbolIterator = $jscomp.global['Symbol'].iterator =\n        $jscomp.global['Symbol']('Symbol.iterator');\n  }\n\n  if (typeof Array.prototype[symbolIterator] != 'function') {\n    $jscomp.defineProperty(\n        Array.prototype, symbolIterator, {\n          configurable: true,\n          writable: true,\n          /**\n           * @this {Array}\n           * @return {!IteratorIterable}\n           */\n          value: function() {\n            return $jscomp.iteratorPrototype(\n                $jscomp.arrayIteratorImpl(this));\n          }\n        });\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolIterator = function() {};\n};\n\n\n/**\n * Initializes Symbol.asyncIterator (if it's not already defined)\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolAsyncIterator = function() {\n  $jscomp.initSymbol();\n  var symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator;\n  if (!symbolAsyncIterator) {\n    symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator =\n        $jscomp.global['Symbol']('Symbol.asyncIterator');\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolAsyncIterator = function() {};\n};\n\n/**\n * Returns an iterator with the given `next` method.  Passing\n * all iterators through this function allows easily extending\n * the definition of `%IteratorPrototype%` if methods are ever\n * added to it in the future.\n *\n * @param {function(this: Iterator<T>): T} next\n * @return {!IteratorIterable<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.iteratorPrototype = function(next) {\n  $jscomp.initSymbolIterator();\n\n  var iterator = {next: next};\n  /**\n   * @this {IteratorIterable}\n   * @return {!IteratorIterable}\n   */\n  iterator[$jscomp.global['Symbol'].iterator] = function() {\n    return this;\n  };\n  return /** @type {!IteratorIterable} */ (iterator);\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utilities for iterator-returning methods.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator from an array-like, with a transformation function.\n * @param {!IArrayLike<INPUT>} array\n * @param {function(number, INPUT): OUTPUT} transform\n * @return {!IteratorIterable<OUTPUT>}\n * @template INPUT, OUTPUT\n * @suppress {checkTypes|reportUnknownTypes}\n */\n$jscomp.iteratorFromArray = function(array, transform) {\n  $jscomp.initSymbolIterator();\n  // NOTE: IE8 doesn't support indexing from boxed Strings.\n  if (array instanceof String) array = array + '';\n  var i = 0;\n  var iter = {\n    next: function() {\n      if (i < array.length) {\n        var index = i++;\n        return {value: transform(index, array[index]), done: false};\n      }\n      iter.next = function() { return {done: true, value: void 0}; };\n      return iter.next();\n    }\n  };\n  iter[Symbol.iterator] = function() { return iter; };\n  return iter;\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/polyfill';\n'require es6/util/iteratorfromarray';\n\n$jscomp.polyfill('Array.prototype.entries', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of [key, value] arrays, one for each entry\n   * in the given array.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @return {!IteratorIterable<!Array<number|VALUE>>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(\n        this, function(i, v) { return [i, v]; });\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2019 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n'require util/polyfill';\n\n// Most browsers implemented trimRight around ES5-time-frame, but it wasn't\n// officially part of the language specification until ES_2019, so we have\n// to provide a polyfill for it.\n// IE11 doesn't have it, of course...\n$jscomp.polyfill('String.prototype.trimRight', function(orig) {\n  /**\n   * @this {string}\n   * @return {string}\n   */\n  function polyfill() {\n    return this.replace(/[\\s\\xa0]+$/, '');\n  }\n  return orig || polyfill;\n}, 'es_2019', 'es3');\n\n$jscomp.polyfill('String.prototype.trimEnd', function(orig) {\n  return orig || String.prototype.trimRight;\n}, 'es_2019', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.fill', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Fills elements of an array with a constant value.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @param {VALUE} value Value to fill.\n   * @param {number=} opt_start Start index, or zero if omitted.\n   * @param {number=} opt_end End index, or length if omitted.\n   * @return {!IArrayLike<VALUE>} The array, with the fill performed in-place.\n   * @template VALUE\n   * @suppress {reportUnknownTypes, strictPrimitiveOperators}\n   */\n  var polyfill = function(value, opt_start, opt_end) {\n    var length = this.length || 0;\n    if (opt_start < 0) {\n      opt_start = Math.max(0, length + /** @type {number} */ (opt_start));\n    }\n    if (opt_end == null || opt_end > length) opt_end = length;\n    opt_end = Number(opt_end);\n    if (opt_end < 0) opt_end = Math.max(0, length + opt_end);\n    for (var i = Number(opt_start || 0); i < opt_end; i++) {\n      this[i] = value;\n    }\n    return this;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/global';\n\n\n/**\n * @fileoverview Check one of the most obscure features of ES6 as a proxy\n * for full conformance.  If this is enabled, this test is used instead of\n * larger, more specific conformance tests.\n */\n\n/**\n * Check ES6 conformance by checking an obscure detail of Proxy that\n * wasn't implemented correctly until after all other ES6 features in\n * most browsers.\n * @return {boolean} Whether Proxy works correctly.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkEs6ConformanceViaProxy = function() {\n  try {\n    var proxied = {};\n    var proxy = Object.create(new $jscomp.global['Proxy'](proxied, {\n      'get': function (target, key, receiver) {\n        return target == proxied && key == 'q' && receiver == proxy;\n      }\n    }));\n    return proxy['q'] === true;\n  } catch (err) {\n    return false;\n  }\n};\n\n/**\n * If this is true, assume that a runtime which implements Proxy also\n * implements the rest of the ECMAScript 2015 spec.\n * @define {boolean}\n */\n$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = false;\n\n/**\n * Whether the runtime implements the entire ECMAScript 2015 spec.\n * @const {boolean}\n */\n$jscomp.ES6_CONFORMANCE =\n    $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS &&\n    $jscomp.checkEs6ConformanceViaProxy();\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n/**\n * Synonym for Object.prototype.hasOwnProperty.call(obj, prop).\n * @param {!Object} obj\n * @param {string} prop\n * @return {boolean}\n */\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/conformance';\n'require es6/util/makeiterator';\n'require util/defineproperty';\n'require util/owns';\n'require util/polyfill';\n\n$jscomp.polyfill('WeakMap',\n    /**\n     * @param {*} NativeWeakMap\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativeWeakMap) {\n  /**\n   * Checks conformance of the existing WeakMap.\n   * @return {boolean} True if the browser's implementation conforms.\n   */\n  function isConformant() {\n    if (!NativeWeakMap || !Object.seal) return false;\n    try {\n      var x = Object.seal({});\n      var y = Object.seal({});\n      var map = new /** @type {function(new: WeakMap, !Array)} */ (\n          NativeWeakMap)([[x, 2], [y, 3]]);\n      if (map.get(x) != 2 || map.get(y) != 3) return false;\n      map.delete(x);\n      map.set(y, 4);\n      return !map.has(x) && map.get(y) == 4;\n    } catch (err) { // This should hopefully never happen, but let's be safe.\n      return false;\n    }\n  }\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeWeakMap && $jscomp.ES6_CONFORMANCE) return NativeWeakMap;\n  } else {\n    if (isConformant()) return NativeWeakMap;\n  }\n\n  var prop = '$jscomp_hidden_' + Math.random();\n\n  /** @constructor */\n  function WeakMapMembership() {}\n\n  /**\n   * Inserts the hidden property into the target.\n   * @param {!Object} target\n   */\n  function insert(target) {\n    if (!$jscomp.owns(target, prop)) {\n      var obj = new WeakMapMembership();\n      // TODO(sdh): This property will be enumerated in IE8.  If this becomes\n      // a problem, we could avoid it by copying an infrequently-used non-enum\n      // method (like toLocaleString) onto the object itself and encoding the\n      // property on the copy instead.  This codepath must be easily removable\n      // if IE8 support is not needed.\n      $jscomp.defineProperty(target, prop, {value: obj});\n    }\n  }\n\n  /**\n   * Monkey-patches the freezing methods to ensure that the hidden\n   * property is added before any freezing happens.\n   * @param {string} name\n   */\n  function patch(name) {\n    var prev = Object[name];\n    if (prev) {\n      Object[name] = function(target) {\n        if (target instanceof WeakMapMembership) {\n          return target;\n        } else {\n          insert(target);\n          return prev(target);\n        }\n      };\n    }\n  }\n  patch('freeze');\n  patch('preventExtensions');\n  patch('seal');\n  // Note: no need to patch Reflect.preventExtensions since the polyfill\n  // just calls Object.preventExtensions anyway (and if it's not polyfilled\n  // then neither is WeakMap).\n\n  var index = 0;\n\n  /**\n   * Polyfill for WeakMap:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\n   *\n   * This implementation is as non-leaky as possible, due to patching\n   * the freezing and sealing operations.  It does not include any logic\n   * to handle cases where a key was somehow made non-extensible without\n   * the special hidden property being added.  It takes some care to ensure\n   * the hidden property is not enumerated over nor discoverable, though\n   * it's not completely secure (particularly in IE8).\n   *\n   * @constructor\n   * @extends {WeakMap<KEY, VALUE>}\n   * @template KEY, VALUE\n   * @param {!Iterator<!Array<KEY|VALUE>>|!Array<!Array<KEY|VALUE>>|null=}\n   *     opt_iterable Optional initial data.\n   */\n  var PolyfillWeakMap = function(opt_iterable) {\n    /** @private @const {string} */\n    this.id_ = (index += (Math.random() + 1)).toString();\n\n    if (opt_iterable) {\n      var iter = $jscomp.makeIterator(opt_iterable);\n      var entry;\n      while (!(entry = iter.next()).done) {\n        var item = entry.value;\n        this.set(/** @type {KEY} */ (item[0]), /** @type {VALUE} */ (item[1]));\n      }\n    }\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.set = function(key, value) {\n    insert(key);\n    if (!$jscomp.owns(key, prop)) {\n      // NOTE: If the insert() call fails on the key, but the property\n      // has previously successfully been added higher up the prototype\n      // chain, then we'll silently misbehave.  Instead, throw immediately\n      // before doing something bad.  If this becomes a problem (e.g. due\n      // to some rogue frozen objects) then we may need to add a slow and\n      // leaky fallback array to each WeakMap instance, as well as extra\n      // logic in each accessor to use it (*only*) when necessary.\n      throw new Error('WeakMap key fail: ' + key);\n    }\n    key[prop][this.id_] = value;\n    return this;\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.get = function(key) {\n    return $jscomp.owns(key, prop) ? key[prop][this.id_] : undefined;\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.has = function(key) {\n    return $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_);\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.delete = function(key) {\n    if (!$jscomp.owns(key, prop) ||\n        !$jscomp.owns(key[prop], this.id_)) {\n      return false;\n    }\n    return delete key[prop][this.id_];\n  };\n\n  return PolyfillWeakMap;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/conformance';\n'require es6/symbol';\n'require es6/util/makeiterator';\n'require es6/weakmap';\n'require util/defines';\n'require util/owns';\n'require util/polyfill';\n\n\n/**\n * Internal record type for entries.\n * @record\n * @template KEY, VALUE\n * @suppress {reportUnknownTypes}\n */\n$jscomp.MapEntry = function() {\n  /** @type {!$jscomp.MapEntry<KEY, VALUE>} */\n  this.previous;\n  /** @type {!$jscomp.MapEntry<KEY, VALUE>} */\n  this.next;\n  /** @type {?Object} */\n  this.head;\n  /** @type {KEY} */\n  this.key;\n  /** @type {VALUE} */\n  this.value;\n};\n\n\n$jscomp.polyfill('Map',\n    /**\n     * @param {*} NativeMap\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativeMap) {\n\n  /**\n   * Checks conformance of the existing Map.\n   * @return {boolean} True if the browser's implementation conforms.\n   * @suppress {missingProperties} \"entries\" unknown prototype\n   */\n  function isConformant() {\n    if ($jscomp.ASSUME_NO_NATIVE_MAP ||\n        !NativeMap ||\n        typeof NativeMap != \"function\" ||\n        !NativeMap.prototype.entries ||\n        typeof Object.seal != 'function') {\n      return false;\n    }\n    // Some implementations don't support constructor arguments.\n    try {\n      NativeMap = /** @type {function(new: Map, !Iterator=)} */ (NativeMap);\n      var key = Object.seal({x: 4});\n      var map = new NativeMap($jscomp.makeIterator([[key, 's']]));\n      if (map.get(key) != 's' || map.size != 1 || map.get({x: 4}) ||\n          map.set({x: 4}, 't') != map || map.size != 2) {\n        return false;\n      }\n      var /** !Iterator<!Array> */ iter = map.entries();\n      var item = iter.next();\n      if (item.done || item.value[0] != key || item.value[1] != 's') {\n        return false;\n      }\n      item = iter.next();\n      if (item.done || item.value[0].x != 4 ||\n          item.value[1] != 't' || !iter.next().done) {\n        return false;\n      }\n      return true;\n    } catch (err) { // This should hopefully never happen, but let's be safe.\n      return false;\n    }\n  }\n\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeMap && $jscomp.ES6_CONFORMANCE) return NativeMap;\n  } else {\n    if (isConformant()) return NativeMap;\n  }\n\n  // We depend on Symbol.iterator, so ensure it's loaded.\n  $jscomp.initSymbolIterator();\n\n\n  /** @const {!WeakMap<!Object, string>} */\n  var idMap = new WeakMap();\n\n\n  /**\n   * Polyfill for the global Map data type.\n   * @constructor\n   * @struct\n   * @extends {Map<KEY, VALUE>}\n   * @implements {Iterable<!Array<KEY|VALUE>>}\n   * @template KEY, VALUE\n   * @param {!Iterable<!Array<KEY|VALUE>>|!Array<!Array<KEY|VALUE>>|null=}\n   *     opt_iterable Optional data to populate the map.\n   */\n  // TODO(sdh): fix param type if heterogeneous arrays ever supported.\n  var PolyfillMap = function(opt_iterable) {\n    /** @private {!Object<!Array<!$jscomp.MapEntry<KEY, VALUE>>>} */\n    this.data_ = {};\n\n    /** @private {!$jscomp.MapEntry<KEY, VALUE>} */\n    this.head_ = createHead();\n\n    // Note: this property should not be changed.  If we're willing to give up\n    // ES3 support, we could define it as a property directly.  It should be\n    // marked readonly if such an annotation ever comes into existence.\n    /** @type {number} */\n    this.size = 0;\n\n    if (opt_iterable) {\n      var iter = $jscomp.makeIterator(opt_iterable);\n      var entry;\n      while (!(entry = iter.next()).done) {\n        var item =\n            /** @type {!IIterableResult<!Array<KEY|VALUE>>} */ (entry).value;\n        this.set(/** @type {KEY} */ (item[0]), /** @type {VALUE} */ (item[1]));\n      }\n    }\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.set = function(key, value) {\n    // normalize -0/+0 to +0\n    key = key === 0 ? 0 : key;\n    var r = maybeGetEntry(this, key);\n    if (!r.list) {\n      r.list = (this.data_[r.id] = []);\n    }\n    if (!r.entry) {\n      r.entry = {\n        next: this.head_,\n        previous: this.head_.previous,\n        head: this.head_,\n        key: key,\n        value: value,\n      };\n      r.list.push(r.entry);\n      this.head_.previous.next = r.entry;\n      this.head_.previous = r.entry;\n      this.size++;\n    } else {\n      r.entry.value = value;\n    }\n    return this;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.delete = function(key) {\n    var r = maybeGetEntry(this, key);\n    if (r.entry && r.list) {\n      r.list.splice(r.index, 1);\n      if (!r.list.length) delete this.data_[r.id];\n      r.entry.previous.next = r.entry.next;\n      r.entry.next.previous = r.entry.previous;\n      r.entry.head = null;\n      this.size--;\n      return true;\n    }\n    return false;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.clear = function() {\n    this.data_ = {};\n    this.head_ = this.head_.previous = createHead();\n    this.size = 0;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.has = function(key) {\n    return !!(maybeGetEntry(this, key).entry);\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.get = function(key) {\n    var entry = maybeGetEntry(this, key).entry;\n    // NOTE: this cast is a lie, but so is the extern.\n    return /** @type {VALUE} */ (entry &&\n      /** @type {VALUE} */ (entry.value));\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.entries = function() {\n    return makeIterator(this, /** @return {!Array<(KEY|VALUE)>} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return ([entry.key, entry.value]);\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.keys = function() {\n    return makeIterator(this, /** @return {KEY} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return entry.key;\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.values = function() {\n    return makeIterator(this, /** @return {VALUE} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return entry.value;\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.forEach = function(callback, opt_thisArg) {\n    var iter = this.entries();\n    var item;\n    while (!(item = iter.next()).done) {\n      var entry = item.value;\n      callback.call(\n          /** @type {?} */ (opt_thisArg),\n          /** @type {VALUE} */ (entry[1]),\n          /** @type {KEY} */ (entry[0]),\n          this);\n    }\n  };\n\n\n  /** @type {?} */ (PolyfillMap.prototype)[Symbol.iterator] =\n      PolyfillMap.prototype.entries;\n\n\n  /**\n   * Returns an entry or undefined.\n   * @param {!PolyfillMap<KEY, VALUE>} map\n   * @param {KEY} key\n   * @return {{id: string,\n   *           list: (!Array<!$jscomp.MapEntry<KEY, VALUE>>|undefined),\n   *           index: number,\n   *           entry: (!$jscomp.MapEntry<KEY, VALUE>|undefined)}}\n   * @template KEY, VALUE\n   */\n  var maybeGetEntry = function(map, key) {\n    var id = getId(key);\n    var list = map.data_[id];\n    if (list && $jscomp.owns(map.data_, id)) {\n      for (var index = 0; index < list.length; index++) {\n        var entry = list[index];\n        if ((key !== key && entry.key !== entry.key) || key === entry.key) {\n          return {id: id, list: list, index: index, entry: entry};\n        }\n      }\n    }\n    return {id: id, list: list, index: -1, entry: undefined};\n  };\n\n\n  /**\n   * Maps over the entries with the given function.\n   * @param {!PolyfillMap<KEY, VALUE>} map\n   * @param {function(!$jscomp.MapEntry<KEY, VALUE>): T} func\n   * @return {!IteratorIterable<T>}\n   * @template KEY, VALUE, T\n   * @private\n   */\n  var makeIterator = function(map, func) {\n    var entry = map.head_;\n    return $jscomp.iteratorPrototype(function() {\n      if (entry) {\n        while (entry.head != map.head_) {\n          entry = entry.previous;\n        }\n        while (entry.next != entry.head) {\n          entry = entry.next;\n          return {done: false, value: func(entry)};\n        }\n        entry = null; // make sure depletion is permanent\n      }\n      return {done: true, value: void 0};\n    });\n  };\n\n\n  /**\n   * Makes a new \"head\" element.\n   * @return {!$jscomp.MapEntry<KEY, VALUE>}\n   * @template KEY, VALUE\n   * @suppress {checkTypes} ignore missing key/value for head only\n   */\n  var createHead = function() {\n    var head = /** type {!$jscomp.MapEntry<KEY, VALUE>} */ ({});\n    head.previous = head.next = head.head = head;\n    return head;\n  };\n\n\n  /**\n   * Counter for generating IDs.\n   * @private {number}\n   */\n  var mapIndex = 0;\n\n\n  /**\n   * @param {*} obj An extensible object.\n   * @return {string} A unique ID.\n   */\n  var getId = function(obj) {\n    var type = obj && typeof obj;\n    if (type == 'object' || type == 'function') {\n      obj = /** @type {!Object} */ (obj);\n      if (!idMap.has(obj)) {\n        var id = '' + (++mapIndex);\n        idMap.set(obj, id);\n        return id;\n      }\n      return idMap.get(obj);\n    }\n    // Add a prefix since obj could be '__proto__';\n    return 'p_' + obj;\n  };\n\n\n  return PolyfillMap;\n}, 'es6', 'es3');\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a partial internal polyfill for Object.create.\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.create() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n *\n * Does not implement the second argument.\n * @param {!Object} prototype\n * @return {!Object}\n */\n$jscomp.objectCreate =\n    ($jscomp.ASSUME_ES5 || typeof Object.create == 'function') ?\n    Object.create :\n    function(prototype) {\n      /** @constructor */\n      var ctor = function() {};\n      ctor.prototype = prototype;\n      return new ctor();\n    };\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n'require util/objectcreate';\n\n/**\n * Polyfill for Reflect.construct() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\n *\n * Calls a constructor as with the 'new' operator.\n * TODO(sdh): how to type 'target' with (new: TARGET) if opt_newTarget missing?\n *\n * @param {function(new: ?, ...?)} target The constructor to call.\n * @param {!Array} argList The arguments as a list.\n * @param {function(new: TARGET, ...?)=} opt_newTarget The constructor to instantiate.\n * @return {TARGET} The result of the function call.\n * @template TARGET\n */\n$jscomp.construct = /** @type {function(): !Function} */ (function() {\n\n  // Check for https://github.com/Microsoft/ChakraCore/issues/3217\n  /** @return {boolean} */\n  function reflectConstructWorks() {\n    /** @constructor */ function Base() {}\n    /** @constructor */ function Derived() {}\n    new Base();\n    Reflect.construct(Base, [], Derived);\n    return new Base() instanceof Base;\n  }\n\n  if (typeof Reflect != 'undefined' && Reflect.construct) {\n    if (reflectConstructWorks()) return Reflect.construct;\n    var brokenConstruct = Reflect.construct;\n    /**\n     * @param {function(new: ?, ...?)} target The constructor to call.\n     * @param {!Array} argList The arguments as a list.\n     * @param {function(new: TARGET, ...?)=} opt_newTarget The constructor to instantiate.\n     * @return {TARGET} The result of the function call.\n     * @template TARGET\n     * @suppress {reportUnknownTypes}\n     */\n    var patchedConstruct = function(target, argList, opt_newTarget) {\n      var out = brokenConstruct(target, argList);\n      if (opt_newTarget) Reflect.setPrototypeOf(out, opt_newTarget.prototype);\n      return out;\n    };\n    return patchedConstruct;\n  }\n\n  /**\n   * @param {function(new: ?, ...?)} target The constructor to call.\n   * @param {!Array} argList The arguments as a list.\n   * @param {function(new: TARGET, ...?)=} opt_newTarget The constructor to instantiate.\n   * @return {TARGET} The result of the function call.\n   * @template TARGET\n   * @suppress {reportUnknownTypes}\n   */\n  function construct(target, argList, opt_newTarget) {\n    if (opt_newTarget === undefined) opt_newTarget = target;\n    var proto = opt_newTarget.prototype || Object.prototype;\n    var obj = $jscomp.objectCreate(proto);\n    var apply = Function.prototype.apply;\n    var out = apply.call(target, obj, argList);\n    return out || obj;\n  }\n  return construct;\n})();\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n'require es6/util/construct';\n'require util/polyfill';\n\n$jscomp.polyfill('Reflect.construct', function(orig) {\n  // NOTE: This is just Reflect.construct if it's present and functional.\n  return $jscomp.construct;\n}, 'es6', 'es3');\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n/**\n * @suppress {missingProperties,reportUnknownTypes}\n * @return {boolean}\n */\n$jscomp.underscoreProtoCanBeSet = function() {\n  var x = {a: true};\n  var y = {};\n  try {\n    y.__proto__ = x;\n    return y.a;\n  } catch (e) {\n    // __proto__ property is readonly (possibly IE 10?)\n  }\n  return false;\n};\n\n/**\n * If we can implement it, this will be a function that attempts to set the\n * prototype of an object, otherwise it will be `null`.\n *\n * It returns the first argument if successful. Throws a `TypeError` if the\n * object is not extensible.\n *\n * @type {null|function(!Object, ?Object): !Object}\n */\n$jscomp.setPrototypeOf = (typeof Object.setPrototypeOf == 'function') ?\n    Object.setPrototypeOf :\n    $jscomp.underscoreProtoCanBeSet() ?\n    function(target, proto) {\n      target.__proto__ = proto;\n      if (target.__proto__ !== proto) {\n        throw new TypeError(target + ' is not extensible');\n      }\n      return target;\n    } :\n    null;\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n'require util/polyfill';\n'require es6/util/setprototypeof';\n\n\n$jscomp.polyfill(\n    'Reflect.setPrototypeOf',\n    /**\n     * These annotations are intended to match the signature of\n     * $jscomp.polyfill(). Being more specific makes the compiler unhappy.\n     * @suppress {reportUnknownTypes}\n     * @param {?*} orig\n     * @return {*}\n     */\n    function(orig) {\n      if (orig) {\n        return orig;\n      } else if ($jscomp.setPrototypeOf) {\n        /** @const {!function(!Object,?Object):!Object} */\n        var setPrototypeOf = $jscomp.setPrototypeOf;\n        /**\n         * @param {!Object} target\n         * @param {?Object} proto\n         * @return {boolean}\n         */\n        var polyfill = function(target, proto) {\n          try {\n            setPrototypeOf(target, proto);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        };\n        return polyfill;\n      } else {\n        // it isn't possible to implement this method\n        return null;\n      }\n    },\n    'es6', 'es5');\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n/**\r\n * @fileoverview Bootstrap for the Google JS Library (Closure).\r\n *\r\n * In uncompiled mode base.js will write out Closure's deps file, unless the\r\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\r\n * include their own deps file(s) from different locations.\r\n *\r\n * @author arv@google.com (Erik Arvidsson)\r\n *\r\n * @provideGoog\r\n */\r\n\r\n\r\n/**\r\n * @define {boolean} Overridden to true by the compiler when --closure_pass\r\n *     or --mark_as_compiled is specified.\r\n */\r\nvar COMPILED = false;\r\n\r\n\r\n/**\r\n * Base namespace for the Closure library.  Checks to see goog is already\r\n * defined in the current scope before assigning to prevent clobbering if\r\n * base.js is loaded more than once.\r\n *\r\n * @const\r\n */\r\nvar goog = goog || {};\r\n\r\n\r\n/**\r\n * Reference to the global context.  In most cases this will be 'window'.\r\n */\r\ngoog.global = this;\r\n\r\n\r\n/**\r\n * A hook for overriding the define values in uncompiled mode.\r\n *\r\n * In uncompiled mode, {@code CLOSURE_UNCOMPILED_DEFINES} may be defined before\r\n * loading base.js.  If a key is defined in {@code CLOSURE_UNCOMPILED_DEFINES},\r\n * {@code goog.define} will use the value instead of the default value.  This\r\n * allows flags to be overwritten without compilation (this is normally\r\n * accomplished with the compiler's \"define\" flag).\r\n *\r\n * Example:\r\n * <pre>\r\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\r\n * </pre>\r\n *\r\n * @type {Object<string, (string|number|boolean)>|undefined}\r\n */\r\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\r\n\r\n\r\n/**\r\n * A hook for overriding the define values in uncompiled or compiled mode,\r\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\r\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\r\n *\r\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\r\n * string literals or the compiler will emit an error.\r\n *\r\n * While any @define value may be set, only those set with goog.define will be\r\n * effective for uncompiled code.\r\n *\r\n * Example:\r\n * <pre>\r\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\r\n * </pre>\r\n *\r\n * @type {Object<string, (string|number|boolean)>|undefined}\r\n */\r\ngoog.global.CLOSURE_DEFINES;\r\n\r\n\r\n/**\r\n * Returns true if the specified value is not undefined.\r\n * WARNING: Do not use this to test if an object has a property. Use the in\r\n * operator instead.\r\n *\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is defined.\r\n */\r\ngoog.isDef = function(val) {\r\n  // void 0 always evaluates to undefined and hence we do not need to depend on\r\n  // the definition of the global variable named 'undefined'.\r\n  return val !== void 0;\r\n};\r\n\r\n\r\n/**\r\n * Builds an object structure for the provided namespace path, ensuring that\r\n * names that already exist are not overwritten. For example:\r\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\r\n * Used by goog.provide and goog.exportSymbol.\r\n * @param {string} name name of the object that this file defines.\r\n * @param {*=} opt_object the object to expose at the end of the path.\r\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\r\n *     is |goog.global|.\r\n * @private\r\n */\r\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\r\n  var parts = name.split('.');\r\n  var cur = opt_objectToExportTo || goog.global;\r\n\r\n  // Internet Explorer exhibits strange behavior when throwing errors from\r\n  // methods externed in this manner.  See the testExportSymbolExceptions in\r\n  // base_test.html for an example.\r\n  if (!(parts[0] in cur) && cur.execScript) {\r\n    cur.execScript('var ' + parts[0]);\r\n  }\r\n\r\n  // Certain browsers cannot parse code in the form for((a in b); c;);\r\n  // This pattern is produced by the JSCompiler when it collapses the\r\n  // statement above into the conditional loop below. To prevent this from\r\n  // happening, use a for-loop and reserve the init logic as below.\r\n\r\n  // Parentheses added to eliminate strict JS warning in Firefox.\r\n  for (var part; parts.length && (part = parts.shift());) {\r\n    if (!parts.length && goog.isDef(opt_object)) {\r\n      // last part and we have an object; use it\r\n      cur[part] = opt_object;\r\n    } else if (cur[part]) {\r\n      cur = cur[part];\r\n    } else {\r\n      cur = cur[part] = {};\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Defines a named value. In uncompiled mode, the value is retrieved from\r\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\r\n * has the property specified, and otherwise used the defined defaultValue.\r\n * When compiled the default can be overridden using the compiler\r\n * options or the value set in the CLOSURE_DEFINES object.\r\n *\r\n * @param {string} name The distinguished name to provide.\r\n * @param {string|number|boolean} defaultValue\r\n */\r\ngoog.define = function(name, defaultValue) {\r\n  var value = defaultValue;\r\n  if (!COMPILED) {\r\n    if (goog.global.CLOSURE_UNCOMPILED_DEFINES &&\r\n        Object.prototype.hasOwnProperty.call(\r\n            goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {\r\n      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];\r\n    } else if (goog.global.CLOSURE_DEFINES &&\r\n        Object.prototype.hasOwnProperty.call(\r\n            goog.global.CLOSURE_DEFINES, name)) {\r\n      value = goog.global.CLOSURE_DEFINES[name];\r\n    }\r\n  }\r\n  goog.exportPath_(name, value);\r\n};\r\n\r\n\r\n/**\r\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\r\n * that should not be included in a production js_binary can be easily stripped\r\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\r\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\r\n * because they are generally used for debugging purposes and it is difficult\r\n * for the JSCompiler to statically determine whether they are used.\r\n */\r\ngoog.define('goog.DEBUG', true);\r\n\r\n\r\n/**\r\n * @define {string} LOCALE defines the locale being used for compilation. It is\r\n * used to select locale specific data to be compiled in js binary. BUILD rule\r\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\r\n * option.\r\n *\r\n * Take into account that the locale code format is important. You should use\r\n * the canonical Unicode format with hyphen as a delimiter. Language must be\r\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\r\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\r\n *\r\n * See more info about locale codes here:\r\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\r\n *\r\n * For language codes you should use values defined by ISO 693-1. See it here\r\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\r\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\r\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\r\n */\r\ngoog.define('goog.LOCALE', 'en');  // default to en\r\n\r\n\r\n/**\r\n * @define {boolean} Whether this code is running on trusted sites.\r\n *\r\n * On untrusted sites, several native functions can be defined or overridden by\r\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\r\n * to false forces closure to use its own implementations when possible.\r\n *\r\n * If your JavaScript can be loaded by a third party site and you are wary about\r\n * relying on non-standard implementations, specify\r\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\r\n */\r\ngoog.define('goog.TRUSTED_SITE', true);\r\n\r\n\r\n/**\r\n * @define {boolean} Whether a project is expected to be running in strict mode.\r\n *\r\n * This define can be used to trigger alternate implementations compatible with\r\n * running in EcmaScript Strict mode or warn about unavailable functionality.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\r\n *\r\n */\r\ngoog.define('goog.STRICT_MODE_COMPATIBLE', false);\r\n\r\n\r\n/**\r\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\r\n *     be disallowed in the compilation unit.\r\n */\r\ngoog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\r\n\r\n\r\n/**\r\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\r\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\r\n */\r\ngoog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\r\n\r\n\r\n/**\r\n * Defines a namespace in Closure.\r\n *\r\n * A namespace may only be defined once in a codebase. It may be defined using\r\n * goog.provide() or goog.module().\r\n *\r\n * The presence of one or more goog.provide() calls in a file indicates\r\n * that the file defines the given objects/namespaces.\r\n * Provided symbols must not be null or undefined.\r\n *\r\n * In addition, goog.provide() creates the object stubs for a namespace\r\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\r\n * goog.foo.bar if it does not already exist).\r\n *\r\n * Build tools also scan for provide/require/module statements\r\n * to discern dependencies, build dependency files (see deps.js), etc.\r\n *\r\n * @see goog.require\r\n * @see goog.module\r\n * @param {string} name Namespace provided by this file in the form\r\n *     \"goog.package.part\".\r\n */\r\ngoog.provide = function(name) {\r\n  if (!COMPILED) {\r\n    // Ensure that the same namespace isn't provided twice.\r\n    // A goog.module/goog.provide maps a goog.require to a specific file\r\n    if (goog.isProvided_(name)) {\r\n      throw Error('Namespace \"' + name + '\" already declared.');\r\n    }\r\n  }\r\n\r\n  goog.constructNamespace_(name);\r\n};\r\n\r\n\r\n/**\r\n * @param {string} name Namespace provided by this file in the form\r\n *     \"goog.package.part\".\r\n * @param {Object=} opt_obj The object to embed in the namespace.\r\n * @private\r\n */\r\ngoog.constructNamespace_ = function(name, opt_obj) {\r\n  if (!COMPILED) {\r\n    delete goog.implicitNamespaces_[name];\r\n\r\n    var namespace = name;\r\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\r\n      if (goog.getObjectByName(namespace)) {\r\n        break;\r\n      }\r\n      goog.implicitNamespaces_[namespace] = true;\r\n    }\r\n  }\r\n\r\n  goog.exportPath_(name, opt_obj);\r\n};\r\n\r\n\r\n/**\r\n * Module identifier validation regexp.\r\n * Note: This is a conservative check, it is very possible to be more lenient,\r\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\r\n *   restrictions are intended to leave the door open for using goog.require\r\n *   with relative file paths rather than module identifiers.\r\n * @private\r\n */\r\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\r\n\r\n\r\n/**\r\n * Defines a module in Closure.\r\n *\r\n * Marks that this file must be loaded as a module and claims the namespace.\r\n *\r\n * A namespace may only be defined once in a codebase. It may be defined using\r\n * goog.provide() or goog.module().\r\n *\r\n * goog.module() has three requirements:\r\n * - goog.module may not be used in the same file as goog.provide.\r\n * - goog.module must be the first statement in the file.\r\n * - only one goog.module is allowed per file.\r\n *\r\n * When a goog.module annotated file is loaded, it is enclosed in\r\n * a strict function closure. This means that:\r\n * - any variables declared in a goog.module file are private to the file\r\n * (not global), though the compiler is expected to inline the module.\r\n * - The code must obey all the rules of \"strict\" JavaScript.\r\n * - the file will be marked as \"use strict\"\r\n *\r\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\r\n * itself. If declared symbols are desired, use\r\n * goog.module.declareLegacyNamespace().\r\n *\r\n *\r\n * See the public goog.module proposal: http://goo.gl/Va1hin\r\n *\r\n * @param {string} name Namespace provided by this file in the form\r\n *     \"goog.package.part\", is expected but not required.\r\n */\r\ngoog.module = function(name) {\r\n  if (!goog.isString(name) ||\r\n      !name ||\r\n      name.search(goog.VALID_MODULE_RE_) == -1) {\r\n    throw Error('Invalid module identifier');\r\n  }\r\n  if (!goog.isInModuleLoader_()) {\r\n    throw Error('Module ' + name + ' has been loaded incorrectly.');\r\n  }\r\n  if (goog.moduleLoaderState_.moduleName) {\r\n    throw Error('goog.module may only be called once per module.');\r\n  }\r\n\r\n  // Store the module name for the loader.\r\n  goog.moduleLoaderState_.moduleName = name;\r\n  if (!COMPILED) {\r\n    // Ensure that the same namespace isn't provided twice.\r\n    // A goog.module/goog.provide maps a goog.require to a specific file\r\n    if (goog.isProvided_(name)) {\r\n      throw Error('Namespace \"' + name + '\" already declared.');\r\n    }\r\n    delete goog.implicitNamespaces_[name];\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {string} name The module identifier.\r\n * @return {?} The module exports for an already loaded module or null.\r\n *\r\n * Note: This is not an alternative to goog.require, it does not\r\n * indicate a hard dependency, instead it is used to indicate\r\n * an optional dependency or to access the exports of a module\r\n * that has already been loaded.\r\n * @suppress {missingProvide}\r\n */\r\ngoog.module.get = function(name) {\r\n  return goog.module.getInternal_(name);\r\n};\r\n\r\n\r\n/**\r\n * @param {string} name The module identifier.\r\n * @return {?} The module exports for an already loaded module or null.\r\n * @private\r\n */\r\ngoog.module.getInternal_ = function(name) {\r\n  if (!COMPILED) {\r\n    if (goog.isProvided_(name)) {\r\n      // goog.require only return a value with-in goog.module files.\r\n      return name in goog.loadedModules_ ?\r\n          goog.loadedModules_[name] :\r\n          goog.getObjectByName(name);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @private {?{\r\n *   moduleName: (string|undefined),\r\n *   declareTestMethods: boolean\r\n * }}\r\n */\r\ngoog.moduleLoaderState_ = null;\r\n\r\n\r\n/**\r\n * @private\r\n * @return {boolean} Whether a goog.module is currently being initialized.\r\n */\r\ngoog.isInModuleLoader_ = function() {\r\n  return goog.moduleLoaderState_ != null;\r\n};\r\n\r\n\r\n/**\r\n * Indicate that a module's exports that are known test methods should\r\n * be copied to the global object.  This makes the test methods visible to\r\n * test runners that inspect the global object.\r\n *\r\n * TODO(johnlenz): Make the test framework aware of goog.module so\r\n * that this isn't necessary. Alternately combine this with goog.setTestOnly\r\n * to minimize boiler plate.\r\n * @suppress {missingProvide}\r\n * @deprecated This approach does not translate to ES6 module syntax, instead\r\n *    use goog.testing.testSuite to declare the test methods.\r\n */\r\ngoog.module.declareTestMethods = function() {\r\n  if (!goog.isInModuleLoader_()) {\r\n    throw new Error('goog.module.declareTestMethods must be called from ' +\r\n        'within a goog.module');\r\n  }\r\n  goog.moduleLoaderState_.declareTestMethods = true;\r\n};\r\n\r\n\r\n/**\r\n * Provide the module's exports as a globally accessible object under the\r\n * module's declared name.  This is intended to ease migration to goog.module\r\n * for files that have existing usages.\r\n * @suppress {missingProvide}\r\n */\r\ngoog.module.declareLegacyNamespace = function() {\r\n  if (!COMPILED && !goog.isInModuleLoader_()) {\r\n    throw new Error('goog.module.declareLegacyNamespace must be called from ' +\r\n        'within a goog.module');\r\n  }\r\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\r\n    throw Error('goog.module must be called prior to ' +\r\n        'goog.module.declareLegacyNamespace.');\r\n  }\r\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\r\n};\r\n\r\n\r\n/**\r\n * Marks that the current file should only be used for testing, and never for\r\n * live code in production.\r\n *\r\n * In the case of unit tests, the message may optionally be an exact namespace\r\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\r\n * provide (if not explicitly defined in the code).\r\n *\r\n * @param {string=} opt_message Optional message to add to the error that's\r\n *     raised when used in production code.\r\n */\r\ngoog.setTestOnly = function(opt_message) {\r\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\r\n    opt_message = opt_message || '';\r\n    throw Error('Importing test-only code into non-debug environment' +\r\n                (opt_message ? ': ' + opt_message : '.'));\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Forward declares a symbol. This is an indication to the compiler that the\r\n * symbol may be used in the source yet is not required and may not be provided\r\n * in compilation.\r\n *\r\n * The most common usage of forward declaration is code that takes a type as a\r\n * function parameter but does not need to require it. By forward declaring\r\n * instead of requiring, no hard dependency is made, and (if not required\r\n * elsewhere) the namespace may never be required and thus, not be pulled\r\n * into the JavaScript binary. If it is required elsewhere, it will be type\r\n * checked as normal.\r\n *\r\n *\r\n * @param {string} name The namespace to forward declare in the form of\r\n *     \"goog.package.part\".\r\n */\r\ngoog.forwardDeclare = function(name) {};\r\n\r\n\r\nif (!COMPILED) {\r\n\r\n  /**\r\n   * Check if the given name has been goog.provided. This will return false for\r\n   * names that are available only as implicit namespaces.\r\n   * @param {string} name name of the object to look for.\r\n   * @return {boolean} Whether the name has been provided.\r\n   * @private\r\n   */\r\n  goog.isProvided_ = function(name) {\r\n    return (name in goog.loadedModules_) ||\r\n        (!goog.implicitNamespaces_[name] &&\r\n            goog.isDefAndNotNull(goog.getObjectByName(name)));\r\n  };\r\n\r\n  /**\r\n   * Namespaces implicitly defined by goog.provide. For example,\r\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\r\n   * 'goog.events' must be namespaces.\r\n   *\r\n   * @type {!Object<string, (boolean|undefined)>}\r\n   * @private\r\n   */\r\n  goog.implicitNamespaces_ = {'goog.module': true};\r\n\r\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\r\n  // here and because the existing module package has not been moved yet out of\r\n  // the goog.module namespace. This satisifies both the debug loader and\r\n  // ahead-of-time dependency management.\r\n}\r\n\r\n\r\n/**\r\n * Returns an object based on its fully qualified external name.  The object\r\n * is not found if null or undefined.  If you are using a compilation pass that\r\n * renames property names beware that using this function will not find renamed\r\n * properties.\r\n *\r\n * @param {string} name The fully qualified name.\r\n * @param {Object=} opt_obj The object within which to look; default is\r\n *     |goog.global|.\r\n * @return {?} The value (object or primitive) or, if not found, null.\r\n */\r\ngoog.getObjectByName = function(name, opt_obj) {\r\n  var parts = name.split('.');\r\n  var cur = opt_obj || goog.global;\r\n  for (var part; part = parts.shift(); ) {\r\n    if (goog.isDefAndNotNull(cur[part])) {\r\n      cur = cur[part];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  return cur;\r\n};\r\n\r\n\r\n/**\r\n * Globalizes a whole namespace, such as goog or goog.lang.\r\n *\r\n * @param {!Object} obj The namespace to globalize.\r\n * @param {Object=} opt_global The object to add the properties to.\r\n * @deprecated Properties may be explicitly exported to the global scope, but\r\n *     this should no longer be done in bulk.\r\n */\r\ngoog.globalize = function(obj, opt_global) {\r\n  var global = opt_global || goog.global;\r\n  for (var x in obj) {\r\n    global[x] = obj[x];\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Adds a dependency from a file to the files it requires.\r\n * @param {string} relPath The path to the js file.\r\n * @param {!Array<string>} provides An array of strings with\r\n *     the names of the objects this file provides.\r\n * @param {!Array<string>} requires An array of strings with\r\n *     the names of the objects this file requires.\r\n * @param {boolean=} opt_isModule Whether this dependency must be loaded as\r\n *     a module as declared by goog.module.\r\n */\r\ngoog.addDependency = function(relPath, provides, requires, opt_isModule) {\r\n  if (goog.DEPENDENCIES_ENABLED) {\r\n    var provide, require;\r\n    var path = relPath.replace(/\\\\/g, '/');\r\n    var deps = goog.dependencies_;\r\n    for (var i = 0; provide = provides[i]; i++) {\r\n      deps.nameToPath[provide] = path;\r\n      deps.pathIsModule[path] = !!opt_isModule;\r\n    }\r\n    for (var j = 0; require = requires[j]; j++) {\r\n      if (!(path in deps.requires)) {\r\n        deps.requires[path] = {};\r\n      }\r\n      deps.requires[path][require] = true;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\r\n// to do \"debug-mode\" development.  The dependency system can sometimes be\r\n// confusing, as can the debug DOM loader's asynchronous nature.\r\n//\r\n// With the DOM loader, a call to goog.require() is not blocking -- the script\r\n// will not load until some point after the current script.  If a namespace is\r\n// needed at runtime, it needs to be defined in a previous script, or loaded via\r\n// require() with its registered dependencies.\r\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\r\n// http://go/genjsdeps, or, externally, DepsWriter.\r\n// https://developers.google.com/closure/library/docs/depswriter\r\n//\r\n// Because of legacy clients, the DOM loader can't be easily removed from\r\n// base.js.  Work is being done to make it disableable or replaceable for\r\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\r\n// for example). See bootstrap/ for more information.\r\n\r\n\r\n/**\r\n * @define {boolean} Whether to enable the debug loader.\r\n *\r\n * If enabled, a call to goog.require() will attempt to load the namespace by\r\n * appending a script tag to the DOM (if the namespace has been registered).\r\n *\r\n * If disabled, goog.require() will simply assert that the namespace has been\r\n * provided (and depend on the fact that some outside tool correctly ordered\r\n * the script).\r\n */\r\ngoog.define('goog.ENABLE_DEBUG_LOADER', true);\r\n\r\n\r\n/**\r\n * @param {string} msg\r\n * @private\r\n */\r\ngoog.logToConsole_ = function(msg) {\r\n  if (goog.global.console) {\r\n    goog.global.console['error'](msg);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Implements a system for the dynamic resolution of dependencies that works in\r\n * parallel with the BUILD system. Note that all calls to goog.require will be\r\n * stripped by the JSCompiler when the --closure_pass option is used.\r\n * @see goog.provide\r\n * @param {string} name Namespace to include (as was given in goog.provide()) in\r\n *     the form \"goog.package.part\".\r\n * @return {?} If called within a goog.module file, the associated namespace or\r\n *     module otherwise null.\r\n */\r\ngoog.require = function(name) {\r\n\r\n  // If the object already exists we do not need do do anything.\r\n  if (!COMPILED) {\r\n    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {\r\n      goog.maybeProcessDeferredDep_(name);\r\n    }\r\n\r\n    if (goog.isProvided_(name)) {\r\n      if (goog.isInModuleLoader_()) {\r\n        return goog.module.getInternal_(name);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (goog.ENABLE_DEBUG_LOADER) {\r\n      var path = goog.getPathFromDeps_(name);\r\n      if (path) {\r\n        goog.included_[path] = true;\r\n        goog.writeScripts_();\r\n        return null;\r\n      }\r\n    }\r\n\r\n    var errorMessage = 'goog.require could not find: ' + name;\r\n    goog.logToConsole_(errorMessage);\r\n\r\n    throw Error(errorMessage);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Path for included scripts.\r\n * @type {string}\r\n */\r\ngoog.basePath = '';\r\n\r\n\r\n/**\r\n * A hook for overriding the base path.\r\n * @type {string|undefined}\r\n */\r\ngoog.global.CLOSURE_BASE_PATH;\r\n\r\n\r\n/**\r\n * Whether to write out Closure's deps file. By default, the deps are written.\r\n * @type {boolean|undefined}\r\n */\r\ngoog.global.CLOSURE_NO_DEPS;\r\n\r\n\r\n/**\r\n * A function to import a single script. This is meant to be overridden when\r\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\r\n * in the global scope so that it can be set before base.js is loaded, which\r\n * allows deps.js to be imported properly.\r\n *\r\n * The function is passed the script source, which is a relative URI. It should\r\n * return true if the script was imported, false otherwise.\r\n * @type {(function(string): boolean)|undefined}\r\n */\r\ngoog.global.CLOSURE_IMPORT_SCRIPT;\r\n\r\n\r\n/**\r\n * Null function used for default values of callbacks, etc.\r\n * @return {void} Nothing.\r\n */\r\ngoog.nullFunction = function() {};\r\n\r\n\r\n\r\n/**\r\n * When defining a class Foo with an abstract method bar(), you can do:\r\n * Foo.prototype.bar = goog.abstractMethod\r\n *\r\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\r\n * when bar() is invoked.\r\n *\r\n * Note: This does not take the name of the function to override as an argument\r\n * because that would make it more difficult to obfuscate our JavaScript code.\r\n *\r\n * @type {!Function}\r\n * @throws {Error} when invoked to indicate the method should be overridden.\r\n */\r\ngoog.abstractMethod = function() {\r\n  throw Error('unimplemented abstract method');\r\n};\r\n\r\n\r\n/**\r\n * Adds a {@code getInstance} static method that always returns the same\r\n * instance object.\r\n * @param {!Function} ctor The constructor for the class to add the static\r\n *     method to.\r\n */\r\ngoog.addSingletonGetter = function(ctor) {\r\n  ctor.getInstance = function() {\r\n    if (ctor.instance_) {\r\n      return ctor.instance_;\r\n    }\r\n    if (goog.DEBUG) {\r\n      // NOTE: JSCompiler can't optimize away Array#push.\r\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\r\n    }\r\n    return ctor.instance_ = new ctor;\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * All singleton classes that have been instantiated, for testing. Don't read\r\n * it directly, use the {@code goog.testing.singleton} module. The compiler\r\n * removes this variable if unused.\r\n * @type {!Array<!Function>}\r\n * @private\r\n */\r\ngoog.instantiatedSingletons_ = [];\r\n\r\n\r\n/**\r\n * @define {boolean} Whether to load goog.modules using {@code eval} when using\r\n * the debug loader.  This provides a better debugging experience as the\r\n * source is unmodified and can be edited using Chrome Workspaces or similar.\r\n * However in some environments the use of {@code eval} is banned\r\n * so we provide an alternative.\r\n */\r\ngoog.define('goog.LOAD_MODULE_USING_EVAL', true);\r\n\r\n\r\n/**\r\n * @define {boolean} Whether the exports of goog.modules should be sealed when\r\n * possible.\r\n */\r\ngoog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\r\n\r\n\r\n/**\r\n * The registry of initialized modules:\r\n * the module identifier to module exports map.\r\n * @private @const {!Object<string, ?>}\r\n */\r\ngoog.loadedModules_ = {};\r\n\r\n\r\n/**\r\n * True if goog.dependencies_ is available.\r\n * @const {boolean}\r\n */\r\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\r\n\r\n\r\nif (goog.DEPENDENCIES_ENABLED) {\r\n  /**\r\n   * Object used to keep track of urls that have already been added. This record\r\n   * allows the prevention of circular dependencies.\r\n   * @private {!Object<string, boolean>}\r\n   */\r\n  goog.included_ = {};\r\n\r\n\r\n  /**\r\n   * This object is used to keep track of dependencies and other data that is\r\n   * used for loading scripts.\r\n   * @private\r\n   * @type {{\r\n   *   pathIsModule: !Object<string, boolean>,\r\n   *   nameToPath: !Object<string, string>,\r\n   *   requires: !Object<string, !Object<string, boolean>>,\r\n   *   visited: !Object<string, boolean>,\r\n   *   written: !Object<string, boolean>,\r\n   *   deferred: !Object<string, string>\r\n   * }}\r\n   */\r\n  goog.dependencies_ = {\r\n    pathIsModule: {}, // 1 to 1\r\n\r\n    nameToPath: {}, // 1 to 1\r\n\r\n    requires: {}, // 1 to many\r\n\r\n    // Used when resolving dependencies to prevent us from visiting file twice.\r\n    visited: {},\r\n\r\n    written: {}, // Used to keep track of script files we have written.\r\n\r\n    deferred: {} // Used to track deferred module evaluations in old IEs\r\n  };\r\n\r\n\r\n  /**\r\n   * Tries to detect whether is in the context of an HTML document.\r\n   * @return {boolean} True if it looks like HTML document.\r\n   * @private\r\n   */\r\n  goog.inHtmlDocument_ = function() {\r\n    var doc = goog.global.document;\r\n    return typeof doc != 'undefined' &&\r\n           'write' in doc;  // XULDocument misses write.\r\n  };\r\n\r\n\r\n  /**\r\n   * Tries to detect the base path of base.js script that bootstraps Closure.\r\n   * @private\r\n   */\r\n  goog.findBasePath_ = function() {\r\n    if (goog.global.CLOSURE_BASE_PATH) {\r\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\r\n      return;\r\n    } else if (!goog.inHtmlDocument_()) {\r\n      return;\r\n    }\r\n    var doc = goog.global.document;\r\n    var scripts = doc.getElementsByTagName('SCRIPT');\r\n    // Search backwards since the current script is in almost all cases the one\r\n    // that has base.js.\r\n    for (var i = scripts.length - 1; i >= 0; --i) {\r\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\r\n      var src = script.src;\r\n      var qmark = src.lastIndexOf('?');\r\n      var l = qmark == -1 ? src.length : qmark;\r\n      if (src.substr(l - 7, 7) == 'base.js') {\r\n        goog.basePath = src.substr(0, l - 7);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Imports a script if, and only if, that script hasn't already been imported.\r\n   * (Must be called at execution time)\r\n   * @param {string} src Script source.\r\n   * @param {string=} opt_sourceText The optionally source text to evaluate\r\n   * @private\r\n   */\r\n  goog.importScript_ = function(src, opt_sourceText) {\r\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\r\n        goog.writeScriptTag_;\r\n    if (importScript(src, opt_sourceText)) {\r\n      goog.dependencies_.written[src] = true;\r\n    }\r\n  };\r\n\r\n\r\n  /** @const @private {boolean} */\r\n  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document &&\r\n      goog.global.document.all;\r\n\r\n\r\n  /**\r\n   * Given a URL initiate retrieval and execution of the module.\r\n   * @param {string} src Script source URL.\r\n   * @private\r\n   */\r\n  goog.importModule_ = function(src) {\r\n    // In an attempt to keep browsers from timing out loading scripts using\r\n    // synchronous XHRs, put each load in its own script block.\r\n    var bootstrap = 'goog.retrieveAndExecModule_(\"' + src + '\");';\r\n\r\n    if (goog.importScript_('', bootstrap)) {\r\n      goog.dependencies_.written[src] = true;\r\n    }\r\n  };\r\n\r\n\r\n  /** @private {!Array<string>} */\r\n  goog.queuedModules_ = [];\r\n\r\n\r\n  /**\r\n   * Return an appropriate module text. Suitable to insert into\r\n   * a script tag (that is unescaped).\r\n   * @param {string} srcUrl\r\n   * @param {string} scriptText\r\n   * @return {string}\r\n   * @private\r\n   */\r\n  goog.wrapModule_ = function(srcUrl, scriptText) {\r\n    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {\r\n      return '' +\r\n          'goog.loadModule(function(exports) {' +\r\n          '\"use strict\";' +\r\n          scriptText +\r\n          '\\n' + // terminate any trailing single line comment.\r\n          ';return exports' +\r\n          '});' +\r\n          '\\n//# sourceURL=' + srcUrl + '\\n';\r\n    } else {\r\n      return '' +\r\n          'goog.loadModule(' +\r\n          goog.global.JSON.stringify(\r\n              scriptText + '\\n//# sourceURL=' + srcUrl + '\\n') +\r\n          ');';\r\n    }\r\n  };\r\n\r\n  // On IE9 and earlier, it is necessary to handle\r\n  // deferred module loads. In later browsers, the\r\n  // code to be evaluated is simply inserted as a script\r\n  // block in the correct order. To eval deferred\r\n  // code at the right time, we piggy back on goog.require to call\r\n  // goog.maybeProcessDeferredDep_.\r\n  //\r\n  // The goog.requires are used both to bootstrap\r\n  // the loading process (when no deps are available) and\r\n  // declare that they should be available.\r\n  //\r\n  // Here we eval the sources, if all the deps are available\r\n  // either already eval'd or goog.require'd.  This will\r\n  // be the case when all the dependencies have already\r\n  // been loaded, and the dependent module is loaded.\r\n  //\r\n  // But this alone isn't sufficient because it is also\r\n  // necessary to handle the case where there is no root\r\n  // that is not deferred.  For that there we register for an event\r\n  // and trigger goog.loadQueuedModules_ handle any remaining deferred\r\n  // evaluations.\r\n\r\n  /**\r\n   * Handle any remaining deferred goog.module evals.\r\n   * @private\r\n   */\r\n  goog.loadQueuedModules_ = function() {\r\n    var count = goog.queuedModules_.length;\r\n    if (count > 0) {\r\n      var queue = goog.queuedModules_;\r\n      goog.queuedModules_ = [];\r\n      for (var i = 0; i < count; i++) {\r\n        var path = queue[i];\r\n        goog.maybeProcessDeferredPath_(path);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Eval the named module if its dependencies are\r\n   * available.\r\n   * @param {string} name The module to load.\r\n   * @private\r\n   */\r\n  goog.maybeProcessDeferredDep_ = function(name) {\r\n    if (goog.isDeferredModule_(name) &&\r\n        goog.allDepsAreAvailable_(name)) {\r\n      var path = goog.getPathFromDeps_(name);\r\n      goog.maybeProcessDeferredPath_(goog.basePath + path);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {string} name The module to check.\r\n   * @return {boolean} Whether the name represents a\r\n   *     module whose evaluation has been deferred.\r\n   * @private\r\n   */\r\n  goog.isDeferredModule_ = function(name) {\r\n    var path = goog.getPathFromDeps_(name);\r\n    if (path && goog.dependencies_.pathIsModule[path]) {\r\n      var abspath = goog.basePath + path;\r\n      return (abspath) in goog.dependencies_.deferred;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @param {string} name The module to check.\r\n   * @return {boolean} Whether the name represents a\r\n   *     module whose declared dependencies have all been loaded\r\n   *     (eval'd or a deferred module load)\r\n   * @private\r\n   */\r\n  goog.allDepsAreAvailable_ = function(name) {\r\n    var path = goog.getPathFromDeps_(name);\r\n    if (path && (path in goog.dependencies_.requires)) {\r\n      for (var requireName in goog.dependencies_.requires[path]) {\r\n        if (!goog.isProvided_(requireName) &&\r\n            !goog.isDeferredModule_(requireName)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} abspath\r\n   * @private\r\n   */\r\n  goog.maybeProcessDeferredPath_ = function(abspath) {\r\n    if (abspath in goog.dependencies_.deferred) {\r\n      var src = goog.dependencies_.deferred[abspath];\r\n      delete goog.dependencies_.deferred[abspath];\r\n      goog.globalEval(src);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {function(?):?|string} moduleDef The module definition.\r\n   */\r\n  goog.loadModule = function(moduleDef) {\r\n    // NOTE: we allow function definitions to be either in the from\r\n    // of a string to eval (which keeps the original source intact) or\r\n    // in a eval forbidden environment (CSP) we allow a function definition\r\n    // which in its body must call {@code goog.module}, and return the exports\r\n    // of the module.\r\n    var previousState = goog.moduleLoaderState_;\r\n    try {\r\n      goog.moduleLoaderState_ = {\r\n        moduleName: undefined, declareTestMethods: false};\r\n      var exports;\r\n      if (goog.isFunction(moduleDef)) {\r\n        exports = moduleDef.call(goog.global, {});\r\n      } else if (goog.isString(moduleDef)) {\r\n        exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);\r\n      } else {\r\n        throw Error('Invalid module definition');\r\n      }\r\n\r\n      var moduleName = goog.moduleLoaderState_.moduleName;\r\n      if (!goog.isString(moduleName) || !moduleName) {\r\n        throw Error('Invalid module name \\\"' + moduleName + '\\\"');\r\n      }\r\n\r\n      // Don't seal legacy namespaces as they may be uses as a parent of\r\n      // another namespace\r\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\r\n        goog.constructNamespace_(moduleName, exports);\r\n      } else if (goog.SEAL_MODULE_EXPORTS && Object.seal) {\r\n        Object.seal(exports);\r\n      }\r\n\r\n      goog.loadedModules_[moduleName] = exports;\r\n      if (goog.moduleLoaderState_.declareTestMethods) {\r\n        for (var entry in exports) {\r\n          if (entry.indexOf('test', 0) === 0 ||\r\n              entry == 'tearDown' ||\r\n              entry == 'setUp' ||\r\n              entry == 'setUpPage' ||\r\n              entry == 'tearDownPage') {\r\n            goog.global[entry] = exports[entry];\r\n          }\r\n        }\r\n      }\r\n    } finally {\r\n      goog.moduleLoaderState_ = previousState;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} source\r\n   * @return {!Object}\r\n   * @private\r\n   */\r\n  goog.loadModuleFromSource_ = function(source) {\r\n    // NOTE: we avoid declaring parameters or local variables here to avoid\r\n    // masking globals or leaking values into the module definition.\r\n    'use strict';\r\n    var exports = {};\r\n    eval(arguments[0]);\r\n    return exports;\r\n  };\r\n\r\n\r\n  /**\r\n   * Writes a new script pointing to {@code src} directly into the DOM.\r\n   *\r\n   * NOTE: This method is not CSP-compliant. @see goog.appendScriptSrcNode_ for\r\n   * the fallback mechanism.\r\n   *\r\n   * @param {string} src The script URL.\r\n   * @private\r\n   */\r\n  goog.writeScriptSrcNode_ = function(src) {\r\n    goog.global.document.write(\r\n        '<script type=\"text/javascript\" src=\"' + src + '\"></' + 'script>');\r\n  };\r\n\r\n\r\n  /**\r\n   * Appends a new script node to the DOM using a CSP-compliant mechanism. This\r\n   * method exists as a fallback for document.write (which is not allowed in a\r\n   * strict CSP context, e.g., Chrome apps).\r\n   *\r\n   * NOTE: This method is not analogous to using document.write to insert a\r\n   * <script> tag; specifically, the user agent will execute a script added by\r\n   * document.write immediately after the current script block finishes\r\n   * executing, whereas the DOM-appended script node will not be executed until\r\n   * the entire document is parsed and executed. That is to say, this script is\r\n   * added to the end of the script execution queue.\r\n   *\r\n   * The page must not attempt to call goog.required entities until after the\r\n   * document has loaded, e.g., in or after the window.onload callback.\r\n   *\r\n   * @param {string} src The script URL.\r\n   * @private\r\n   */\r\n  goog.appendScriptSrcNode_ = function(src) {\r\n    var doc = goog.global.document;\r\n    var scriptEl = doc.createElement('script');\r\n    scriptEl.type = 'text/javascript';\r\n    scriptEl.src = src;\r\n    scriptEl.defer = false;\r\n    scriptEl.async = false;\r\n    doc.head.appendChild(scriptEl);\r\n  };\r\n\r\n\r\n  /**\r\n   * The default implementation of the import function. Writes a script tag to\r\n   * import the script.\r\n   *\r\n   * @param {string} src The script url.\r\n   * @param {string=} opt_sourceText The optionally source text to evaluate\r\n   * @return {boolean} True if the script was imported, false otherwise.\r\n   * @private\r\n   */\r\n  goog.writeScriptTag_ = function(src, opt_sourceText) {\r\n    if (goog.inHtmlDocument_()) {\r\n      var doc = goog.global.document;\r\n\r\n      // If the user tries to require a new symbol after document load,\r\n      // something has gone terribly wrong. Doing a document.write would\r\n      // wipe out the page. This does not apply to the CSP-compliant method\r\n      // of writing script tags.\r\n      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\r\n          doc.readyState == 'complete') {\r\n        // Certain test frameworks load base.js multiple times, which tries\r\n        // to write deps.js each time. If that happens, just fail silently.\r\n        // These frameworks wipe the page between each load of base.js, so this\r\n        // is OK.\r\n        var isDeps = /\\bdeps.js$/.test(src);\r\n        if (isDeps) {\r\n          return false;\r\n        } else {\r\n          throw Error('Cannot write \"' + src + '\" after document load');\r\n        }\r\n      }\r\n\r\n      var isOldIE = goog.IS_OLD_IE_;\r\n\r\n      if (opt_sourceText === undefined) {\r\n        if (!isOldIE) {\r\n          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\r\n            goog.appendScriptSrcNode_(src);\r\n          } else {\r\n            goog.writeScriptSrcNode_(src);\r\n          }\r\n        } else {\r\n          var state = \" onreadystatechange='goog.onScriptLoad_(this, \" +\r\n              ++goog.lastNonModuleScriptIndex_ + \")' \";\r\n          doc.write(\r\n              '<script type=\"text/javascript\" src=\"' +\r\n                  src + '\"' + state + '></' + 'script>');\r\n        }\r\n      } else {\r\n        doc.write(\r\n            '<script type=\"text/javascript\">' +\r\n            opt_sourceText +\r\n            '</' + 'script>');\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  /** @private {number} */\r\n  goog.lastNonModuleScriptIndex_ = 0;\r\n\r\n\r\n  /**\r\n   * A readystatechange handler for legacy IE\r\n   * @param {!HTMLScriptElement} script\r\n   * @param {number} scriptIndex\r\n   * @return {boolean}\r\n   * @private\r\n   */\r\n  goog.onScriptLoad_ = function(script, scriptIndex) {\r\n    // for now load the modules when we reach the last script,\r\n    // later allow more inter-mingling.\r\n    if (script.readyState == 'complete' &&\r\n        goog.lastNonModuleScriptIndex_ == scriptIndex) {\r\n      goog.loadQueuedModules_();\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Resolves dependencies based on the dependencies added using addDependency\r\n   * and calls importScript_ in the correct order.\r\n   * @private\r\n   */\r\n  goog.writeScripts_ = function() {\r\n    /** @type {!Array<string>} The scripts we need to write this time. */\r\n    var scripts = [];\r\n    var seenScript = {};\r\n    var deps = goog.dependencies_;\r\n\r\n    /** @param {string} path */\r\n    function visitNode(path) {\r\n      if (path in deps.written) {\r\n        return;\r\n      }\r\n\r\n      // We have already visited this one. We can get here if we have cyclic\r\n      // dependencies.\r\n      if (path in deps.visited) {\r\n        if (!(path in seenScript)) {\r\n          seenScript[path] = true;\r\n          scripts.push(path);\r\n        }\r\n        return;\r\n      }\r\n\r\n      deps.visited[path] = true;\r\n\r\n      if (path in deps.requires) {\r\n        for (var requireName in deps.requires[path]) {\r\n          // If the required name is defined, we assume that it was already\r\n          // bootstrapped by other means.\r\n          if (!goog.isProvided_(requireName)) {\r\n            if (requireName in deps.nameToPath) {\r\n              visitNode(deps.nameToPath[requireName]);\r\n            } else {\r\n              throw Error('Undefined nameToPath for ' + requireName);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!(path in seenScript)) {\r\n        seenScript[path] = true;\r\n        scripts.push(path);\r\n      }\r\n    }\r\n\r\n    for (var path in goog.included_) {\r\n      if (!deps.written[path]) {\r\n        visitNode(path);\r\n      }\r\n    }\r\n\r\n    // record that we are going to load all these scripts.\r\n    for (var i = 0; i < scripts.length; i++) {\r\n      var path = scripts[i];\r\n      goog.dependencies_.written[path] = true;\r\n    }\r\n\r\n    // If a module is loaded synchronously then we need to\r\n    // clear the current inModuleLoader value, and restore it when we are\r\n    // done loading the current \"requires\".\r\n    var moduleState = goog.moduleLoaderState_;\r\n    goog.moduleLoaderState_ = null;\r\n\r\n    var loadingModule = false;\r\n    for (var i = 0; i < scripts.length; i++) {\r\n      var path = scripts[i];\r\n      if (path) {\r\n        if (!deps.pathIsModule[path]) {\r\n          goog.importScript_(goog.basePath + path);\r\n        } else {\r\n          loadingModule = true;\r\n          goog.importModule_(goog.basePath + path);\r\n        }\r\n      } else {\r\n        goog.moduleLoaderState_ = moduleState;\r\n        throw Error('Undefined script input');\r\n      }\r\n    }\r\n\r\n    // restore the current \"module loading state\"\r\n    goog.moduleLoaderState_ = moduleState;\r\n  };\r\n\r\n\r\n  /**\r\n   * Looks at the dependency rules and tries to determine the script file that\r\n   * fulfills a particular rule.\r\n   * @param {string} rule In the form goog.namespace.Class or project.script.\r\n   * @return {?string} Url corresponding to the rule, or null.\r\n   * @private\r\n   */\r\n  goog.getPathFromDeps_ = function(rule) {\r\n    if (rule in goog.dependencies_.nameToPath) {\r\n      return goog.dependencies_.nameToPath[rule];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  goog.findBasePath_();\r\n\r\n  // Allow projects to manage the deps files themselves.\r\n  if (!goog.global.CLOSURE_NO_DEPS) {\r\n    goog.importScript_(goog.basePath + 'deps.js');\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\r\n * path components.\r\n * @param {string} path\r\n * @return {string}\r\n * @private\r\n */\r\ngoog.normalizePath_ = function(path) {\r\n  var components = path.split('/');\r\n  var i = 0;\r\n  while (i < components.length) {\r\n    if (components[i] == '.') {\r\n      components.splice(i, 1);\r\n    } else if (i && components[i] == '..' &&\r\n        components[i - 1] && components[i - 1] != '..') {\r\n      components.splice(--i, 2);\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n  return components.join('/');\r\n};\r\n\r\n\r\n/**\r\n * Loads file by synchronous XHR. Should not be used in production environments.\r\n * @param {string} src Source URL.\r\n * @return {string} File contents.\r\n * @private\r\n */\r\ngoog.loadFileSync_ = function(src) {\r\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\r\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\r\n  } else {\r\n    var xhr = new goog.global['XMLHttpRequest']();\r\n    xhr.open('get', src, false);\r\n    xhr.send();\r\n    return xhr.responseText;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Retrieve and execute a module.\r\n * @param {string} src Script source URL.\r\n * @private\r\n */\r\ngoog.retrieveAndExecModule_ = function(src) {\r\n  if (!COMPILED) {\r\n    // The full but non-canonicalized URL for later use.\r\n    var originalPath = src;\r\n    // Canonicalize the path, removing any /./ or /../ since Chrome's debugging\r\n    // console doesn't auto-canonicalize XHR loads as it does <script> srcs.\r\n    src = goog.normalizePath_(src);\r\n\r\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\r\n        goog.writeScriptTag_;\r\n\r\n    var scriptText = goog.loadFileSync_(src);\r\n\r\n    if (scriptText != null) {\r\n      var execModuleScript = goog.wrapModule_(src, scriptText);\r\n      var isOldIE = goog.IS_OLD_IE_;\r\n      if (isOldIE) {\r\n        goog.dependencies_.deferred[originalPath] = execModuleScript;\r\n        goog.queuedModules_.push(originalPath);\r\n      } else {\r\n        importScript(src, execModuleScript);\r\n      }\r\n    } else {\r\n      throw new Error('load of ' + src + 'failed');\r\n    }\r\n  }\r\n};\r\n\r\n\r\n//==============================================================================\r\n// Language Enhancements\r\n//==============================================================================\r\n\r\n\r\n/**\r\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\r\n * operator in such a way that null returns 'null' and arrays return 'array'.\r\n * @param {*} value The value to get the type of.\r\n * @return {string} The name of the type.\r\n */\r\ngoog.typeOf = function(value) {\r\n  var s = typeof value;\r\n  if (s == 'object') {\r\n    if (value) {\r\n      // Check these first, so we can avoid calling Object.prototype.toString if\r\n      // possible.\r\n      //\r\n      // IE improperly marshals tyepof across execution contexts, but a\r\n      // cross-context object will still return false for \"instanceof Object\".\r\n      if (value instanceof Array) {\r\n        return 'array';\r\n      } else if (value instanceof Object) {\r\n        return s;\r\n      }\r\n\r\n      // HACK: In order to use an Object prototype method on the arbitrary\r\n      //   value, the compiler requires the value be cast to type Object,\r\n      //   even though the ECMA spec explicitly allows it.\r\n      var className = Object.prototype.toString.call(\r\n          /** @type {Object} */ (value));\r\n      // In Firefox 3.6, attempting to access iframe window objects' length\r\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\r\n      // here.\r\n      if (className == '[object Window]') {\r\n        return 'object';\r\n      }\r\n\r\n      // We cannot always use constructor == Array or instanceof Array because\r\n      // different frames have different Array objects. In IE6, if the iframe\r\n      // where the array was created is destroyed, the array loses its\r\n      // prototype. Then dereferencing val.splice here throws an exception, so\r\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\r\n      // so that will work. In this case, this function will return false and\r\n      // most array functions will still work because the array is still\r\n      // array-like (supports length and []) even though it has lost its\r\n      // prototype.\r\n      // Mark Miller noticed that Object.prototype.toString\r\n      // allows access to the unforgeable [[Class]] property.\r\n      //  15.2.4.2 Object.prototype.toString ( )\r\n      //  When the toString method is called, the following steps are taken:\r\n      //      1. Get the [[Class]] property of this object.\r\n      //      2. Compute a string value by concatenating the three strings\r\n      //         \"[object \", Result(1), and \"]\".\r\n      //      3. Return Result(2).\r\n      // and this behavior survives the destruction of the execution context.\r\n      if ((className == '[object Array]' ||\r\n           // In IE all non value types are wrapped as objects across window\r\n           // boundaries (not iframe though) so we have to do object detection\r\n           // for this edge case.\r\n           typeof value.length == 'number' &&\r\n           typeof value.splice != 'undefined' &&\r\n           typeof value.propertyIsEnumerable != 'undefined' &&\r\n           !value.propertyIsEnumerable('splice')\r\n\r\n          )) {\r\n        return 'array';\r\n      }\r\n      // HACK: There is still an array case that fails.\r\n      //     function ArrayImpostor() {}\r\n      //     ArrayImpostor.prototype = [];\r\n      //     var impostor = new ArrayImpostor;\r\n      // this can be fixed by getting rid of the fast path\r\n      // (value instanceof Array) and solely relying on\r\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\r\n      // but that would require many more function calls and is not warranted\r\n      // unless closure code is receiving objects from untrusted sources.\r\n\r\n      // IE in cross-window calls does not correctly marshal the function type\r\n      // (it appears just as an object) so we cannot use just typeof val ==\r\n      // 'function'. However, if the object has a call property, it is a\r\n      // function.\r\n      if ((className == '[object Function]' ||\r\n          typeof value.call != 'undefined' &&\r\n          typeof value.propertyIsEnumerable != 'undefined' &&\r\n          !value.propertyIsEnumerable('call'))) {\r\n        return 'function';\r\n      }\r\n\r\n    } else {\r\n      return 'null';\r\n    }\r\n\r\n  } else if (s == 'function' && typeof value.call == 'undefined') {\r\n    // In Safari typeof nodeList returns 'function', and on Firefox typeof\r\n    // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\r\n    // would like to return object for those and we can detect an invalid\r\n    // function by making sure that the function object has a call method.\r\n    return 'object';\r\n  }\r\n  return s;\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is null.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is null.\r\n */\r\ngoog.isNull = function(val) {\r\n  return val === null;\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is defined and not null.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is defined and not null.\r\n */\r\ngoog.isDefAndNotNull = function(val) {\r\n  // Note that undefined == null.\r\n  return val != null;\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is an array.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is an array.\r\n */\r\ngoog.isArray = function(val) {\r\n  return goog.typeOf(val) == 'array';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the object looks like an array. To qualify as array like\r\n * the value needs to be either a NodeList or an object with a Number length\r\n * property. As a special case, a function value is not array like, because its\r\n * length property is fixed to correspond to the number of expected arguments.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is an array.\r\n */\r\ngoog.isArrayLike = function(val) {\r\n  var type = goog.typeOf(val);\r\n  // We do not use goog.isObject here in order to exclude function values.\r\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the object looks like a Date. To qualify as Date-like the\r\n * value needs to be an object and have a getFullYear() function.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is a like a Date.\r\n */\r\ngoog.isDateLike = function(val) {\r\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is a string.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is a string.\r\n */\r\ngoog.isString = function(val) {\r\n  return typeof val == 'string';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is a boolean.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is boolean.\r\n */\r\ngoog.isBoolean = function(val) {\r\n  return typeof val == 'boolean';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is a number.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is a number.\r\n */\r\ngoog.isNumber = function(val) {\r\n  return typeof val == 'number';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is a function.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is a function.\r\n */\r\ngoog.isFunction = function(val) {\r\n  return goog.typeOf(val) == 'function';\r\n};\r\n\r\n\r\n/**\r\n * Returns true if the specified value is an object.  This includes arrays and\r\n * functions.\r\n * @param {?} val Variable to test.\r\n * @return {boolean} Whether variable is an object.\r\n */\r\ngoog.isObject = function(val) {\r\n  var type = typeof val;\r\n  return type == 'object' && val != null || type == 'function';\r\n  // return Object(val) === val also works, but is slower, especially if val is\r\n  // not an object.\r\n};\r\n\r\n\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. The unique ID is\r\n * guaranteed to be unique across the current session amongst objects that are\r\n * passed into {@code getUid}. There is no guarantee that the ID is unique or\r\n * consistent across sessions. It is unsafe to generate unique ID for function\r\n * prototypes.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {number} The unique ID for the object.\r\n */\r\ngoog.getUid = function(obj) {\r\n  // TODO(arv): Make the type stricter, do not accept null.\r\n\r\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\r\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\r\n  // and SubClass.prototype will be the same.\r\n  return obj[goog.UID_PROPERTY_] ||\r\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\r\n};\r\n\r\n\r\n/**\r\n * Whether the given object is already assigned a unique ID.\r\n *\r\n * This does not modify the object.\r\n *\r\n * @param {!Object} obj The object to check.\r\n * @return {boolean} Whether there is an assigned unique id for the object.\r\n */\r\ngoog.hasUid = function(obj) {\r\n  return !!obj[goog.UID_PROPERTY_];\r\n};\r\n\r\n\r\n/**\r\n * Removes the unique ID from an object. This is useful if the object was\r\n * previously mutated using {@code goog.getUid} in which case the mutation is\r\n * undone.\r\n * @param {Object} obj The object to remove the unique ID field from.\r\n */\r\ngoog.removeUid = function(obj) {\r\n  // TODO(arv): Make the type stricter, do not accept null.\r\n\r\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\r\n  // try to delete.  Instead we try to use removeAttribute.\r\n  if ('removeAttribute' in obj) {\r\n    obj.removeAttribute(goog.UID_PROPERTY_);\r\n  }\r\n  /** @preserveTry */\r\n  try {\r\n    delete obj[goog.UID_PROPERTY_];\r\n  } catch (ex) {\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Name for unique ID property. Initialized in a way to help avoid collisions\r\n * with other closure JavaScript on the same page.\r\n * @type {string}\r\n * @private\r\n */\r\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\r\n\r\n\r\n/**\r\n * Counter for UID.\r\n * @type {number}\r\n * @private\r\n */\r\ngoog.uidCounter_ = 0;\r\n\r\n\r\n/**\r\n * Adds a hash code field to an object. The hash code is unique for the\r\n * given object.\r\n * @param {Object} obj The object to get the hash code for.\r\n * @return {number} The hash code for the object.\r\n * @deprecated Use goog.getUid instead.\r\n */\r\ngoog.getHashCode = goog.getUid;\r\n\r\n\r\n/**\r\n * Removes the hash code field from an object.\r\n * @param {Object} obj The object to remove the field from.\r\n * @deprecated Use goog.removeUid instead.\r\n */\r\ngoog.removeHashCode = goog.removeUid;\r\n\r\n\r\n/**\r\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\r\n * arrays will be cloned recursively.\r\n *\r\n * WARNINGS:\r\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\r\n * refer to themselves will cause infinite recursion.\r\n *\r\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\r\n * UIDs created by <code>getUid</code> into cloned results.\r\n *\r\n * @param {*} obj The value to clone.\r\n * @return {*} A clone of the input value.\r\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\r\n */\r\ngoog.cloneObject = function(obj) {\r\n  var type = goog.typeOf(obj);\r\n  if (type == 'object' || type == 'array') {\r\n    if (obj.clone) {\r\n      return obj.clone();\r\n    }\r\n    var clone = type == 'array' ? [] : {};\r\n    for (var key in obj) {\r\n      clone[key] = goog.cloneObject(obj[key]);\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\n\r\n/**\r\n * A native implementation of goog.bind.\r\n * @param {Function} fn A function to partially apply.\r\n * @param {Object|undefined} selfObj Specifies the object which this should\r\n *     point to when the function is run.\r\n * @param {...*} var_args Additional arguments that are partially applied to the\r\n *     function.\r\n * @return {!Function} A partially-applied form of the function bind() was\r\n *     invoked as a method of.\r\n * @private\r\n * @suppress {deprecated} The compiler thinks that Function.prototype.bind is\r\n *     deprecated because some people have declared a pure-JS version.\r\n *     Only the pure-JS version is truly deprecated.\r\n */\r\ngoog.bindNative_ = function(fn, selfObj, var_args) {\r\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\r\n};\r\n\r\n\r\n/**\r\n * A pure-JS implementation of goog.bind.\r\n * @param {Function} fn A function to partially apply.\r\n * @param {Object|undefined} selfObj Specifies the object which this should\r\n *     point to when the function is run.\r\n * @param {...*} var_args Additional arguments that are partially applied to the\r\n *     function.\r\n * @return {!Function} A partially-applied form of the function bind() was\r\n *     invoked as a method of.\r\n * @private\r\n */\r\ngoog.bindJs_ = function(fn, selfObj, var_args) {\r\n  if (!fn) {\r\n    throw new Error();\r\n  }\r\n\r\n  if (arguments.length > 2) {\r\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\r\n    return function() {\r\n      // Prepend the bound arguments to the current arguments.\r\n      var newArgs = Array.prototype.slice.call(arguments);\r\n      Array.prototype.unshift.apply(newArgs, boundArgs);\r\n      return fn.apply(selfObj, newArgs);\r\n    };\r\n\r\n  } else {\r\n    return function() {\r\n      return fn.apply(selfObj, arguments);\r\n    };\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Partially applies this function to a particular 'this object' and zero or\r\n * more arguments. The result is a new function with some arguments of the first\r\n * function pre-filled and the value of this 'pre-specified'.\r\n *\r\n * Remaining arguments specified at call-time are appended to the pre-specified\r\n * ones.\r\n *\r\n * Also see: {@link #partial}.\r\n *\r\n * Usage:\r\n * <pre>var barMethBound = bind(myFunction, myObj, 'arg1', 'arg2');\r\n * barMethBound('arg3', 'arg4');</pre>\r\n *\r\n * @param {?function(this:T, ...)} fn A function to partially apply.\r\n * @param {T} selfObj Specifies the object which this should point to when the\r\n *     function is run.\r\n * @param {...*} var_args Additional arguments that are partially applied to the\r\n *     function.\r\n * @return {!Function} A partially-applied form of the function bind() was\r\n *     invoked as a method of.\r\n * @template T\r\n * @suppress {deprecated} See above.\r\n */\r\ngoog.bind = function(fn, selfObj, var_args) {\r\n  // TODO(nicksantos): narrow the type signature.\r\n  if (Function.prototype.bind &&\r\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\r\n      // extension environment. This means that for Chrome extensions, they get\r\n      // the implementation of Function.prototype.bind that calls goog.bind\r\n      // instead of the native one. Even worse, we don't want to introduce a\r\n      // circular dependency between goog.bind and Function.prototype.bind, so\r\n      // we have to hack this to make sure it works correctly.\r\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\r\n    goog.bind = goog.bindNative_;\r\n  } else {\r\n    goog.bind = goog.bindJs_;\r\n  }\r\n  return goog.bind.apply(null, arguments);\r\n};\r\n\r\n\r\n/**\r\n * Like bind(), except that a 'this object' is not required. Useful when the\r\n * target function is already bound.\r\n *\r\n * Usage:\r\n * var g = partial(f, arg1, arg2);\r\n * g(arg3, arg4);\r\n *\r\n * @param {Function} fn A function to partially apply.\r\n * @param {...*} var_args Additional arguments that are partially applied to fn.\r\n * @return {!Function} A partially-applied form of the function bind() was\r\n *     invoked as a method of.\r\n */\r\ngoog.partial = function(fn, var_args) {\r\n  var args = Array.prototype.slice.call(arguments, 1);\r\n  return function() {\r\n    // Clone the array (with slice()) and append additional arguments\r\n    // to the existing arguments.\r\n    var newArgs = args.slice();\r\n    newArgs.push.apply(newArgs, arguments);\r\n    return fn.apply(this, newArgs);\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Copies all the members of a source object to a target object. This method\r\n * does not work on all browsers for all objects that contain keys such as\r\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\r\n * @param {Object} target Target.\r\n * @param {Object} source Source.\r\n */\r\ngoog.mixin = function(target, source) {\r\n  for (var x in source) {\r\n    target[x] = source[x];\r\n  }\r\n\r\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\r\n  // not enumerable on the prototype object (for example, isPrototypeOf from\r\n  // Object.prototype) but also it will not include 'replace' on objects that\r\n  // extend String and change 'replace' (not that it is common for anyone to\r\n  // extend anything except Object).\r\n};\r\n\r\n\r\n/**\r\n * @return {number} An integer value representing the number of milliseconds\r\n *     between midnight, January 1, 1970 and the current time.\r\n */\r\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\r\n  // Unary plus operator converts its operand to a number which in the case of\r\n  // a date is done by calling getTime().\r\n  return +new Date();\r\n});\r\n\r\n\r\n/**\r\n * Evals JavaScript in the global scope.  In IE this uses execScript, other\r\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\r\n * global scope (for example, in Safari), appends a script tag instead.\r\n * Throws an exception if neither execScript or eval is defined.\r\n * @param {string} script JavaScript string.\r\n */\r\ngoog.globalEval = function(script) {\r\n  if (goog.global.execScript) {\r\n    goog.global.execScript(script, 'JavaScript');\r\n  } else if (goog.global.eval) {\r\n    // Test to see if eval works\r\n    if (goog.evalWorksForGlobals_ == null) {\r\n      goog.global.eval('var _et_ = 1;');\r\n      if (typeof goog.global['_et_'] != 'undefined') {\r\n        delete goog.global['_et_'];\r\n        goog.evalWorksForGlobals_ = true;\r\n      } else {\r\n        goog.evalWorksForGlobals_ = false;\r\n      }\r\n    }\r\n\r\n    if (goog.evalWorksForGlobals_) {\r\n      goog.global.eval(script);\r\n    } else {\r\n      var doc = goog.global.document;\r\n      var scriptElt = doc.createElement('SCRIPT');\r\n      scriptElt.type = 'text/javascript';\r\n      scriptElt.defer = false;\r\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\r\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\r\n      scriptElt.appendChild(doc.createTextNode(script));\r\n      doc.body.appendChild(scriptElt);\r\n      doc.body.removeChild(scriptElt);\r\n    }\r\n  } else {\r\n    throw Error('goog.globalEval not available');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Indicates whether or not we can call 'eval' directly to eval code in the\r\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\r\n * empirically tests whether eval works for globals). @see goog.globalEval\r\n * @type {?boolean}\r\n * @private\r\n */\r\ngoog.evalWorksForGlobals_ = null;\r\n\r\n\r\n/**\r\n * Optional map of CSS class names to obfuscated names used with\r\n * goog.getCssName().\r\n * @private {!Object<string, string>|undefined}\r\n * @see goog.setCssNameMapping\r\n */\r\ngoog.cssNameMapping_;\r\n\r\n\r\n/**\r\n * Optional obfuscation style for CSS class names. Should be set to either\r\n * 'BY_WHOLE' or 'BY_PART' if defined.\r\n * @type {string|undefined}\r\n * @private\r\n * @see goog.setCssNameMapping\r\n */\r\ngoog.cssNameMappingStyle_;\r\n\r\n\r\n/**\r\n * Handles strings that are intended to be used as CSS class names.\r\n *\r\n * This function works in tandem with @see goog.setCssNameMapping.\r\n *\r\n * Without any mapping set, the arguments are simple joined with a hyphen and\r\n * passed through unaltered.\r\n *\r\n * When there is a mapping, there are two possible styles in which these\r\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\r\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\r\n * style, the full css name is looked up in the map directly. If a rewrite is\r\n * not specified by the map, the compiler will output a warning.\r\n *\r\n * When the mapping is passed to the compiler, it will replace calls to\r\n * goog.getCssName with the strings from the mapping, e.g.\r\n *     var x = goog.getCssName('foo');\r\n *     var y = goog.getCssName(this.baseClass, 'active');\r\n *  becomes:\r\n *     var x= 'foo';\r\n *     var y = this.baseClass + '-active';\r\n *\r\n * If one argument is passed it will be processed, if two are passed only the\r\n * modifier will be processed, as it is assumed the first argument was generated\r\n * as a result of calling goog.getCssName.\r\n *\r\n * @param {string} className The class name.\r\n * @param {string=} opt_modifier A modifier to be appended to the class name.\r\n * @return {string} The class name or the concatenation of the class name and\r\n *     the modifier.\r\n */\r\ngoog.getCssName = function(className, opt_modifier) {\r\n  var getMapping = function(cssName) {\r\n    return goog.cssNameMapping_[cssName] || cssName;\r\n  };\r\n\r\n  var renameByParts = function(cssName) {\r\n    // Remap all the parts individually.\r\n    var parts = cssName.split('-');\r\n    var mapped = [];\r\n    for (var i = 0; i < parts.length; i++) {\r\n      mapped.push(getMapping(parts[i]));\r\n    }\r\n    return mapped.join('-');\r\n  };\r\n\r\n  var rename;\r\n  if (goog.cssNameMapping_) {\r\n    rename = goog.cssNameMappingStyle_ == 'BY_WHOLE' ?\r\n        getMapping : renameByParts;\r\n  } else {\r\n    rename = function(a) {\r\n      return a;\r\n    };\r\n  }\r\n\r\n  if (opt_modifier) {\r\n    return className + '-' + rename(opt_modifier);\r\n  } else {\r\n    return rename(className);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Sets the map to check when returning a value from goog.getCssName(). Example:\r\n * <pre>\r\n * goog.setCssNameMapping({\r\n *   \"goog\": \"a\",\r\n *   \"disabled\": \"b\",\r\n * });\r\n *\r\n * var x = goog.getCssName('goog');\r\n * // The following evaluates to: \"a a-b\".\r\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\r\n * </pre>\r\n * When declared as a map of string literals to string literals, the JSCompiler\r\n * will replace all calls to goog.getCssName() using the supplied map if the\r\n * --closure_pass flag is set.\r\n *\r\n * @param {!Object} mapping A map of strings to strings where keys are possible\r\n *     arguments to goog.getCssName() and values are the corresponding values\r\n *     that should be returned.\r\n * @param {string=} opt_style The style of css name mapping. There are two valid\r\n *     options: 'BY_PART', and 'BY_WHOLE'.\r\n * @see goog.getCssName for a description.\r\n */\r\ngoog.setCssNameMapping = function(mapping, opt_style) {\r\n  goog.cssNameMapping_ = mapping;\r\n  goog.cssNameMappingStyle_ = opt_style;\r\n};\r\n\r\n\r\n/**\r\n * To use CSS renaming in compiled mode, one of the input files should have a\r\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\r\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\r\n * mode, JavaScript code should be loaded before this base.js file that declares\r\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\r\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\r\n * are made in uncompiled mode.\r\n *\r\n * A hook for overriding the CSS name mapping.\r\n * @type {!Object<string, string>|undefined}\r\n */\r\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\r\n\r\n\r\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\r\n  // This does not call goog.setCssNameMapping() because the JSCompiler\r\n  // requires that goog.setCssNameMapping() be called with an object literal.\r\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\r\n}\r\n\r\n\r\n/**\r\n * Gets a localized message.\r\n *\r\n * This function is a compiler primitive. If you give the compiler a localized\r\n * message bundle, it will replace the string at compile-time with a localized\r\n * version, and expand goog.getMsg call to a concatenated string.\r\n *\r\n * Messages must be initialized in the form:\r\n * <code>\r\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\r\n * </code>\r\n *\r\n * @param {string} str Translatable string, places holders in the form {$foo}.\r\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\r\n * @return {string} message with placeholders filled.\r\n */\r\ngoog.getMsg = function(str, opt_values) {\r\n  if (opt_values) {\r\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\r\n      return key in opt_values ? opt_values[key] : match;\r\n    });\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\n/**\r\n * Gets a localized message. If the message does not have a translation, gives a\r\n * fallback message.\r\n *\r\n * This is useful when introducing a new message that has not yet been\r\n * translated into all languages.\r\n *\r\n * This function is a compiler primitive. Must be used in the form:\r\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\r\n * where MSG_A and MSG_B were initialized with goog.getMsg.\r\n *\r\n * @param {string} a The preferred message.\r\n * @param {string} b The fallback message.\r\n * @return {string} The best translated message.\r\n */\r\ngoog.getMsgWithFallback = function(a, b) {\r\n  return a;\r\n};\r\n\r\n\r\n/**\r\n * Exposes an unobfuscated global namespace path for the given object.\r\n * Note that fields of the exported object *will* be obfuscated, unless they are\r\n * exported in turn via this function or goog.exportProperty.\r\n *\r\n * Also handy for making public items that are defined in anonymous closures.\r\n *\r\n * ex. goog.exportSymbol('public.path.Foo', Foo);\r\n *\r\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\r\n *     public.path.Foo.staticFunction();\r\n *\r\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\r\n *                       Foo.prototype.myMethod);\r\n *     new public.path.Foo().myMethod();\r\n *\r\n * @param {string} publicPath Unobfuscated name to export.\r\n * @param {*} object Object the name should point to.\r\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\r\n *     is goog.global.\r\n */\r\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\r\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\r\n};\r\n\r\n\r\n/**\r\n * Exports a property unobfuscated into the object's namespace.\r\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\r\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\r\n * @param {Object} object Object whose static property is being exported.\r\n * @param {string} publicName Unobfuscated name to export.\r\n * @param {*} symbol Object the name should point to.\r\n */\r\ngoog.exportProperty = function(object, publicName, symbol) {\r\n  object[publicName] = symbol;\r\n};\r\n\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * Usage:\r\n * <pre>\r\n * function ParentClass(a, b) { }\r\n * ParentClass.prototype.foo = function(a) { };\r\n *\r\n * function ChildClass(a, b, c) {\r\n *   ChildClass.base(this, 'constructor', a, b);\r\n * }\r\n * goog.inherits(ChildClass, ParentClass);\r\n *\r\n * var child = new ChildClass('a', 'b', 'see');\r\n * child.foo(); // This works.\r\n * </pre>\r\n *\r\n * @param {Function} childCtor Child class.\r\n * @param {Function} parentCtor Parent class.\r\n */\r\ngoog.inherits = function(childCtor, parentCtor) {\r\n  /** @constructor */\r\n  function tempCtor() {};\r\n  tempCtor.prototype = parentCtor.prototype;\r\n  childCtor.superClass_ = parentCtor.prototype;\r\n  childCtor.prototype = new tempCtor();\r\n  /** @override */\r\n  childCtor.prototype.constructor = childCtor;\r\n\r\n  /**\r\n   * Calls superclass constructor/method.\r\n   *\r\n   * This function is only available if you use goog.inherits to\r\n   * express inheritance relationships between classes.\r\n   *\r\n   * NOTE: This is a replacement for goog.base and for superClass_\r\n   * property defined in childCtor.\r\n   *\r\n   * @param {!Object} me Should always be \"this\".\r\n   * @param {string} methodName The method name to call. Calling\r\n   *     superclass constructor can be done with the special string\r\n   *     'constructor'.\r\n   * @param {...*} var_args The arguments to pass to superclass\r\n   *     method/constructor.\r\n   * @return {*} The return value of the superclass method/constructor.\r\n   */\r\n  childCtor.base = function(me, methodName, var_args) {\r\n    // Copying using loop to avoid deop due to passing arguments object to\r\n    // function. This is faster in many JS engines as of late 2014.\r\n    var args = new Array(arguments.length - 2);\r\n    for (var i = 2; i < arguments.length; i++) {\r\n      args[i - 2] = arguments[i];\r\n    }\r\n    return parentCtor.prototype[methodName].apply(me, args);\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Call up to the superclass.\r\n *\r\n * If this is called from a constructor, then this calls the superclass\r\n * constructor with arguments 1-N.\r\n *\r\n * If this is called from a prototype method, then you must pass the name of the\r\n * method as the second argument to this function. If you do not, you will get a\r\n * runtime error. This calls the superclass' method with arguments 2-N.\r\n *\r\n * This function only works if you use goog.inherits to express inheritance\r\n * relationships between your classes.\r\n *\r\n * This function is a compiler primitive. At compile-time, the compiler will do\r\n * macro expansion to remove a lot of the extra overhead that this function\r\n * introduces. The compiler will also enforce a lot of the assumptions that this\r\n * function makes, and treat it as a compiler error if you break them.\r\n *\r\n * @param {!Object} me Should always be \"this\".\r\n * @param {*=} opt_methodName The method name if calling a super method.\r\n * @param {...*} var_args The rest of the arguments.\r\n * @return {*} The return value of the superclass method.\r\n * @suppress {es5Strict} This method can not be used in strict mode, but\r\n *     all Closure Library consumers must depend on this file.\r\n */\r\ngoog.base = function(me, opt_methodName, var_args) {\r\n  var caller = arguments.callee.caller;\r\n\r\n  if (goog.STRICT_MODE_COMPATIBLE || (goog.DEBUG && !caller)) {\r\n    throw Error('arguments.caller not defined.  goog.base() cannot be used ' +\r\n                'with strict mode code. See ' +\r\n                'http://www.ecma-international.org/ecma-262/5.1/#sec-C');\r\n  }\r\n\r\n  if (caller.superClass_) {\r\n    // Copying using loop to avoid deop due to passing arguments object to\r\n    // function. This is faster in many JS engines as of late 2014.\r\n    var ctorArgs = new Array(arguments.length - 1);\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      ctorArgs[i - 1] = arguments[i];\r\n    }\r\n    // This is a constructor. Call the superclass constructor.\r\n    return caller.superClass_.constructor.apply(me, ctorArgs);\r\n  }\r\n\r\n  // Copying using loop to avoid deop due to passing arguments object to\r\n  // function. This is faster in many JS engines as of late 2014.\r\n  var args = new Array(arguments.length - 2);\r\n  for (var i = 2; i < arguments.length; i++) {\r\n    args[i - 2] = arguments[i];\r\n  }\r\n  var foundCaller = false;\r\n  for (var ctor = me.constructor;\r\n       ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {\r\n    if (ctor.prototype[opt_methodName] === caller) {\r\n      foundCaller = true;\r\n    } else if (foundCaller) {\r\n      return ctor.prototype[opt_methodName].apply(me, args);\r\n    }\r\n  }\r\n\r\n  // If we did not find the caller in the prototype chain, then one of two\r\n  // things happened:\r\n  // 1) The caller is an instance method.\r\n  // 2) This method was not called by the right caller.\r\n  if (me[opt_methodName] === caller) {\r\n    return me.constructor.prototype[opt_methodName].apply(me, args);\r\n  } else {\r\n    throw Error(\r\n        'goog.base called from a method of one name ' +\r\n        'to a method of a different name');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Allow for aliasing within scope functions.  This function exists for\r\n * uncompiled code - in compiled code the calls will be inlined and the aliases\r\n * applied.  In uncompiled code the function is simply run since the aliases as\r\n * written are valid JavaScript.\r\n *\r\n *\r\n * @param {function()} fn Function to call.  This function can contain aliases\r\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\r\n *     (e.g. \"var Timer = goog.Timer\").\r\n */\r\ngoog.scope = function(fn) {\r\n  fn.call(goog.global);\r\n};\r\n\r\n\r\n/*\r\n * To support uncompiled, strict mode bundles that use eval to divide source\r\n * like so:\r\n *    eval('someSource;//# sourceUrl sourcefile.js');\r\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\r\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\r\n * be defined externally.\r\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\r\n * extern generation when that compiler option is enabled.\r\n */\r\nif (!COMPILED) {\r\n  goog.global['COMPILED'] = COMPILED;\r\n}\r\n\r\n\r\n\r\n//==============================================================================\r\n// goog.defineClass implementation\r\n//==============================================================================\r\n\r\n\r\n/**\r\n * Creates a restricted form of a Closure \"class\":\r\n *   - from the compiler's perspective, the instance returned from the\r\n *     constructor is sealed (no new properties may be added).  This enables\r\n *     better checks.\r\n *   - the compiler will rewrite this definition to a form that is optimal\r\n *     for type checking and optimization (initially this will be a more\r\n *     traditional form).\r\n *\r\n * @param {Function} superClass The superclass, Object or null.\r\n * @param {goog.defineClass.ClassDescriptor} def\r\n *     An object literal describing\r\n *     the class.  It may have the following properties:\r\n *     \"constructor\": the constructor function\r\n *     \"statics\": an object literal containing methods to add to the constructor\r\n *        as \"static\" methods or a function that will receive the constructor\r\n *        function as its only parameter to which static properties can\r\n *        be added.\r\n *     all other properties are added to the prototype.\r\n * @return {!Function} The class constructor.\r\n */\r\ngoog.defineClass = function(superClass, def) {\r\n  // TODO(johnlenz): consider making the superClass an optional parameter.\r\n  var constructor = def.constructor;\r\n  var statics = def.statics;\r\n  // Wrap the constructor prior to setting up the prototype and static methods.\r\n  if (!constructor || constructor == Object.prototype.constructor) {\r\n    constructor = function() {\r\n      throw Error('cannot instantiate an interface (no constructor defined).');\r\n    };\r\n  }\r\n\r\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\r\n  if (superClass) {\r\n    goog.inherits(cls, superClass);\r\n  }\r\n\r\n  // Remove all the properties that should not be copied to the prototype.\r\n  delete def.constructor;\r\n  delete def.statics;\r\n\r\n  goog.defineClass.applyProperties_(cls.prototype, def);\r\n  if (statics != null) {\r\n    if (statics instanceof Function) {\r\n      statics(cls);\r\n    } else {\r\n      goog.defineClass.applyProperties_(cls, statics);\r\n    }\r\n  }\r\n\r\n  return cls;\r\n};\r\n\r\n\r\n/**\r\n * @typedef {\r\n *     !Object|\r\n *     {constructor:!Function}|\r\n *     {constructor:!Function, statics:(Object|function(Function):void)}}\r\n * @suppress {missingProvide}\r\n */\r\ngoog.defineClass.ClassDescriptor;\r\n\r\n\r\n/**\r\n * @define {boolean} Whether the instances returned by\r\n * goog.defineClass should be sealed when possible.\r\n */\r\ngoog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\r\n\r\n\r\n/**\r\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\r\n * defined, this function will wrap the constructor in a function that seals the\r\n * results of the provided constructor function.\r\n *\r\n * @param {!Function} ctr The constructor whose results maybe be sealed.\r\n * @param {Function} superClass The superclass constructor.\r\n * @return {!Function} The replacement constructor.\r\n * @private\r\n */\r\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\r\n  if (goog.defineClass.SEAL_CLASS_INSTANCES &&\r\n      Object.seal instanceof Function) {\r\n    // Don't seal subclasses of unsealable-tagged legacy classes.\r\n    if (superClass && superClass.prototype &&\r\n        superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {\r\n      return ctr;\r\n    }\r\n    /**\r\n     * @this {Object}\r\n     * @return {?}\r\n     */\r\n    var wrappedCtr = function() {\r\n      // Don't seal an instance of a subclass when it calls the constructor of\r\n      // its super class as there is most likely still setup to do.\r\n      var instance = ctr.apply(this, arguments) || this;\r\n      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\r\n      if (this.constructor === wrappedCtr) {\r\n        Object.seal(instance);\r\n      }\r\n      return instance;\r\n    };\r\n    return wrappedCtr;\r\n  }\r\n  return ctr;\r\n};\r\n\r\n\r\n// TODO(johnlenz): share these values with the goog.object\r\n/**\r\n * The names of the fields that are defined on Object.prototype.\r\n * @type {!Array<string>}\r\n * @private\r\n * @const\r\n */\r\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\r\n  'constructor',\r\n  'hasOwnProperty',\r\n  'isPrototypeOf',\r\n  'propertyIsEnumerable',\r\n  'toLocaleString',\r\n  'toString',\r\n  'valueOf'\r\n];\r\n\r\n\r\n// TODO(johnlenz): share this function with the goog.object\r\n/**\r\n * @param {!Object} target The object to add properties to.\r\n * @param {!Object} source The object to copy properties from.\r\n * @private\r\n */\r\ngoog.defineClass.applyProperties_ = function(target, source) {\r\n  // TODO(johnlenz): update this to support ES5 getters/setters\r\n\r\n  var key;\r\n  for (key in source) {\r\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  // For IE the for-in-loop does not contain any properties that are not\r\n  // enumerable on the prototype object (for example isPrototypeOf from\r\n  // Object.prototype) and it will also not include 'replace' on objects that\r\n  // extend String and change 'replace' (not that it is common for anyone to\r\n  // extend anything except Object).\r\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\r\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\r\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Sealing classes breaks the older idiom of assigning properties on the\r\n * prototype rather than in the constructor.  As such, goog.defineClass\r\n * must not seal subclasses of these old-style classes until they are fixed.\r\n * Until then, this marks a class as \"broken\", instructing defineClass\r\n * not to seal subclasses.\r\n * @param {!Function} ctr The legacy constructor to tag as unsealable.\r\n */\r\ngoog.tagUnsealableClass = function(ctr) {\r\n  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {\r\n    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Name for unsealable tag property.\r\n * @const @private {string}\r\n */\r\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = 'goog_defineClass_legacy_unsealable';\r\n","\"use strict\";\r\n\r\nvar\r\n/** @const */ LOG_ALL = -1,\r\n/** @const */ LOG_NONE = 0,\r\n\r\n/** @const */ LOG_OTHER =  0x000001,\r\n/** @const */ LOG_CPU =    0x000002,\r\n/** @const */ LOG_FPU =    0x000004,\r\n/** @const */ LOG_MEM =    0x000008,\r\n/** @const */ LOG_DMA =    0x000010,\r\n/** @const */ LOG_IO =     0x000020,\r\n/** @const */ LOG_PS2 =    0x000040,\r\n/** @const */ LOG_PIC =    0x000080,\r\n/** @const */ LOG_VGA =    0x000100,\r\n/** @const */ LOG_PIT =    0x000200,\r\n/** @const */ LOG_MOUSE =  0x000400,\r\n/** @const */ LOG_PCI =    0x000800,\r\n/** @const */ LOG_BIOS =   0x001000,\r\n/** @const */ LOG_FLOPPY = 0x002000,\r\n/** @const */ LOG_SERIAL = 0x004000,\r\n/** @const */ LOG_DISK =   0x008000,\r\n/** @const */ LOG_RTC =    0x010000,\r\n/** @const */ LOG_HPET =   0x020000,\r\n/** @const */ LOG_ACPI =   0x040000,\r\n/** @const */ LOG_APIC =   0x080000,\r\n/** @const */ LOG_NET =    0x100000,\r\n/** @const */ LOG_VIRTIO = 0x200000,\r\n/** @const */ LOG_9P =     0x400000,\r\n/** @const */ LOG_SB16 =   0x800000;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<Array<string|number>>}\r\n */\r\nvar LOG_NAMES = [\r\n    [1, \"\"],\r\n    [LOG_CPU, \"CPU\"],\r\n    [LOG_DISK, \"DISK\"],\r\n    [LOG_FPU, \"FPU\"],\r\n    [LOG_MEM, \"MEM\"],\r\n    [LOG_DMA, \"DMA\"],\r\n    [LOG_IO, \"IO\"],\r\n    [LOG_PS2, \"PS2\"],\r\n    [LOG_PIC, \"PIC\"],\r\n    [LOG_VGA, \"VGA\"],\r\n    [LOG_PIT, \"PIT\"],\r\n    [LOG_MOUSE, \"MOUS\"],\r\n    [LOG_PCI, \"PCI\"],\r\n    [LOG_BIOS, \"BIOS\"],\r\n    [LOG_FLOPPY, \"FLOP\"],\r\n    [LOG_SERIAL, \"SERI\"],\r\n    [LOG_RTC, \"RTC\"],\r\n    [LOG_HPET, \"HPET\"],\r\n    [LOG_ACPI, \"ACPI\"],\r\n    [LOG_APIC, \"APIC\"],\r\n    [LOG_NET, \"NET\"],\r\n    [LOG_VIRTIO, \"VIO\"],\r\n    [LOG_9P, \"9P\"],\r\n    [LOG_SB16, \"SB16\"]\r\n];\r\n\r\nvar\r\n/** @const */ TLB_SYSTEM_READ = 1,\r\n/** @const */ TLB_SYSTEM_WRITE = 2,\r\n/** @const */ TLB_USER_READ = 4,\r\n/** @const */ TLB_USER_WRITE = 8;\r\n\r\n\r\nvar\r\n\r\n// flags register bitflags\r\n/** @const */ flag_carry = 1,\r\n/** @const */ flag_parity = 4,\r\n/** @const */ flag_adjust = 16,\r\n/** @const */ flag_zero = 64,\r\n/** @const */ flag_sign = 128,\r\n/** @const */ flag_trap = 256,\r\n/** @const */ flag_interrupt = 512,\r\n/** @const */ flag_direction = 1024,\r\n/** @const */ flag_overflow = 2048,\r\n/** @const */ flag_iopl = 1 << 12 | 1 << 13,\r\n/** @const */ flag_nt = 1 << 14,\r\n/** @const */ flag_rf = 1 << 16,\r\n/** @const */ flag_vm = 1 << 17,\r\n/** @const */ flag_ac = 1 << 18,\r\n/** @const */ flag_vif = 1 << 19,\r\n/** @const */ flag_vip = 1 << 20,\r\n/** @const */ flag_id = 1 << 21,\r\n\r\n/**\r\n * default values of reserved flags bits\r\n * @const\r\n */\r\nflags_default = 1 << 1,\r\n\r\n/**\r\n * bitmask to select non-reserved flags bits\r\n * @const\r\n */\r\nflags_mask =\r\n    flag_carry | flag_parity | flag_adjust | flag_zero | flag_sign | flag_trap | flag_interrupt |\r\n    flag_direction | flag_overflow | flag_iopl | flag_nt | flag_rf | flag_vm | flag_ac |\r\n    flag_vif | flag_vip | flag_id,\r\n\r\n\r\n/**\r\n * all arithmetic flags\r\n * @const\r\n */\r\nflags_all = flag_carry | flag_parity | flag_adjust | flag_zero | flag_sign | flag_overflow,\r\n\r\n\r\n/**\r\n * opsizes used by get flag functions\r\n *\r\n * @const\r\n */\r\nOPSIZE_8 = 7,\r\n/** @const */\r\nOPSIZE_16 = 15,\r\n/** @const */\r\nOPSIZE_32 = 31,\r\n\r\n/** @const */\r\nPSE_ENABLED = 128,\r\n\r\n/** @const */ reg_eax = 0,\r\n/** @const */ reg_ecx = 1,\r\n/** @const */ reg_edx = 2,\r\n/** @const */ reg_ebx = 3,\r\n/** @const */ reg_esp = 4,\r\n/** @const */ reg_ebp = 5,\r\n/** @const */ reg_esi = 6,\r\n/** @const */ reg_edi = 7,\r\n\r\n/** @const */ reg_ax = 0,\r\n/** @const */ reg_cx = 2,\r\n/** @const */ reg_dx = 4,\r\n/** @const */ reg_bx = 6,\r\n/** @const */ reg_sp = 8,\r\n/** @const */ reg_bp = 10,\r\n/** @const */ reg_si = 12,\r\n/** @const */ reg_di = 14,\r\n\r\n/** @const */ reg_al = 0,\r\n/** @const */ reg_cl = 4,\r\n/** @const */ reg_dl = 8,\r\n/** @const */ reg_bl = 12,\r\n/** @const */ reg_ah = 1,\r\n/** @const */ reg_ch = 5,\r\n/** @const */ reg_dh = 9,\r\n/** @const */ reg_bh = 13,\r\n\r\n\r\n/** @const */ reg_es = 0,\r\n/** @const */ reg_cs = 1,\r\n/** @const */ reg_ss = 2,\r\n/** @const */ reg_ds = 3,\r\n/** @const */ reg_fs = 4,\r\n/** @const */ reg_gs = 5,\r\n\r\n\r\n/** @const */ reg_tr = 6, // task register\r\n/** @const */ reg_ldtr = 7; // local descriptor table register\r\n\r\nvar\r\n    /**\r\n     * The minimum number of bytes that can be memory-mapped\r\n     * by one device.\r\n     *\r\n     * @const\r\n     */\r\n    MMAP_BLOCK_BITS = 17,\r\n    /** @const */\r\n    MMAP_BLOCK_SIZE = 1 << MMAP_BLOCK_BITS;\r\n\r\n\r\n/** @const */\r\nvar MEM_PAGE_WRITTEN = 1;\r\n\r\n\r\n/** @const */\r\nvar MAGIC_CPU_EXCEPTION = 0xDEADBEE;\r\n\r\n\r\nvar\r\n    /** @const */\r\n    REPEAT_STRING_PREFIX_NONE = 0,\r\n    /** @const */\r\n    REPEAT_STRING_PREFIX_NZ = 1,\r\n    /** @const */\r\n    REPEAT_STRING_PREFIX_Z = 2;\r\n\r\nvar\r\n    /** @const */\r\n    CR0_PE = 1,\r\n    /** @const */\r\n    CR0_MP = 1 << 1,\r\n    /** @const */\r\n    CR0_EM = 1 << 2,\r\n    /** @const */\r\n    CR0_TS = 1 << 3,\r\n    /** @const */\r\n    CR0_ET = 1 << 4,\r\n    /** @const */\r\n    CR0_WP = 1 << 16,\r\n    /** @const */\r\n    CR0_NW = 1 << 29,\r\n    /** @const */\r\n    CR0_CD = 1 << 30,\r\n    /** @const */\r\n    CR0_PG = 1 << 31;\r\n\r\nvar\r\n    /** @const */\r\n    CR4_VME = 1,\r\n    /** @const */\r\n    CR4_PVI = 1 << 1,\r\n    /** @const */\r\n    CR4_TSD = 1 << 2,\r\n    /** @const */\r\n    CR4_PSE = 1 << 4,\r\n    /** @const */\r\n    CR4_DE = 1 << 3,\r\n    /** @const */\r\n    CR4_PAE = 1 << 5,\r\n    /** @const */\r\n    CR4_PGE = 1 << 7,\r\n    /** @const */\r\n    CR4_OSFXSR = 1 << 9,\r\n    /** @const */\r\n    CR4_OSXMMEXCPT = 1 << 10;\r\n\r\n\r\n// Segment prefixes must not collide with reg_*s variables\r\n// _ZERO is a special zero offset segment\r\nvar\r\n    /** @const */\r\n    SEG_PREFIX_NONE = -1,\r\n\r\n    /** @const */\r\n    SEG_PREFIX_ZERO = 7;\r\n\r\n\r\nvar\r\n    /** @const */\r\n    IA32_SYSENTER_CS = 0x174,\r\n\r\n    // Note: These are wrong in Intel's manuals. Fuck Intel\r\n    /** @const */\r\n    IA32_SYSENTER_ESP = 0x175,\r\n\r\n    /** @const */\r\n    IA32_SYSENTER_EIP = 0x176;\r\n\r\n/** @const */\r\nvar IA32_TIME_STAMP_COUNTER = 0x10;\r\n\r\n/** @const */\r\nvar IA32_PLATFORM_ID = 0x17;\r\n\r\n/** @const */\r\nvar MSR_EBC_FREQUENCY_ID = 0x2C;\r\n\r\n/** @const */\r\nvar IA32_APIC_BASE_MSR = 0x1B;\r\n\r\n/** @const */\r\nvar IA32_BIOS_SIGN_ID = 0x8B;\r\n\r\n/** @const */\r\nvar IA32_MISC_ENABLE = 0x1A0;\r\n\r\n/** @const */\r\nvar IA32_RTIT_CTL = 0x570;\r\n\r\n/** @const */\r\nvar MSR_SMI_COUNT = 0x34;\r\n\r\n/** @const */\r\nvar IA32_MCG_CAP = 0x179;\r\n\r\n/** @const */\r\nvar IA32_KERNEL_GS_BASE = 0xC0000101 | 0;\r\n\r\n/** @const */\r\nvar MSR_PKG_C2_RESIDENCY = 0x60D;\r\n\r\n\r\n/** @const */\r\nvar IA32_APIC_BASE_BSP = 1 << 8;\r\n/** @const */\r\nvar IA32_APIC_BASE_EXTD = 1 << 10;\r\n/** @const */\r\nvar IA32_APIC_BASE_EN = 1 << 11;\r\n\r\n\r\n/** @const */ var TSR_BACKLINK = 0x00;\r\n/** @const */ var TSR_CR3 = 0x1C;\r\n/** @const */ var TSR_EIP = 0x20;\r\n/** @const */ var TSR_EFLAGS = 0x24;\r\n\r\n/** @const */ var TSR_EAX = 0x28;\r\n/** @const */ var TSR_ECX = 0x2c;\r\n/** @const */ var TSR_EDX = 0x30;\r\n/** @const */ var TSR_EBX = 0x34;\r\n/** @const */ var TSR_ESP = 0x38;\r\n/** @const */ var TSR_EBP = 0x3c;\r\n/** @const */ var TSR_ESI = 0x40;\r\n/** @const */ var TSR_EDI = 0x44;\r\n\r\n/** @const */ var TSR_ES = 0x48;\r\n/** @const */ var TSR_CS = 0x4c;\r\n/** @const */ var TSR_SS = 0x50;\r\n/** @const */ var TSR_DS = 0x54;\r\n/** @const */ var TSR_FS = 0x58;\r\n/** @const */ var TSR_GS = 0x5c;\r\n/** @const */ var TSR_LDT = 0x60;\r\n\r\n\r\n/** @const */ var FW_CFG_SIGNATURE = 0x00;\r\n/** @const */ var FW_CFG_RAM_SIZE = 0x03;\r\n/** @const */ var FW_CFG_NB_CPUS = 0x05;\r\n\r\n\r\n/** @const */\r\nvar PREFIX_MASK_REP = 0b11000;\r\n/** @const */\r\nvar PREFIX_REPZ = 0b01000;\r\n/** @const */\r\nvar PREFIX_REPNZ = 0b10000;\r\n\r\n/** @const */\r\nvar PREFIX_MASK_SEGMENT = 0b111;\r\n\r\n/** @const */\r\nvar PREFIX_MASK_OPSIZE = 0b100000;\r\n/** @const */\r\nvar PREFIX_MASK_ADDRSIZE = 0b1000000;\r\n\r\n/** @const */\r\nvar PREFIX_F2 = PREFIX_REPNZ; // alias\r\n/** @const */\r\nvar PREFIX_F3 = PREFIX_REPZ; // alias\r\n/** @const */\r\nvar PREFIX_66 = PREFIX_MASK_OPSIZE; // alias\r\n\r\n/** @const */\r\nvar MXCSR_MASK = (0xFFFF & ~(1 << 6));\r\n\r\n\r\n/** @const */\r\nvar MIXER_CHANNEL_LEFT = 0;\r\n/** @const */\r\nvar MIXER_CHANNEL_RIGHT = 1;\r\n/** @const */\r\nvar MIXER_CHANNEL_BOTH = 2;\r\n/** @const */\r\nvar MIXER_SRC_MASTER = 0;\r\n/** @const */\r\nvar MIXER_SRC_PCSPEAKER = 1;\r\n/** @const */\r\nvar MIXER_SRC_DAC = 2;\r\n","\"use strict\";\r\n\r\n\r\nif(typeof window !== \"undefined\" && !window.requestAnimationFrame)\r\n{\r\n    window.requestAnimationFrame =\r\n        window.mozRequestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame;\r\n}\r\n\r\n/**\r\n * Adapter to use visual screen in browsers (in contrast to node)\r\n * @constructor\r\n *\r\n * @param {BusConnector} bus\r\n */\r\nfunction ScreenAdapter(screen_container, bus)\r\n{\r\n    console.assert(screen_container, \"1st argument must be a DOM container\");\r\n\r\n    var\r\n        graphic_screen = screen_container.getElementsByTagName(\"canvas\")[0],\r\n        graphic_context = graphic_screen.getContext(\"2d\", { alpha: false }),\r\n\r\n        text_screen = screen_container.getElementsByTagName(\"div\")[0],\r\n        cursor_element = document.createElement(\"div\");\r\n\r\n    var\r\n        graphic_image_data,\r\n        graphic_buffer,\r\n        graphic_buffer32,\r\n\t\t\r\n        /** @type {number} */\r\n        cursor_row,\r\n\r\n        /** @type {number} */\r\n        cursor_col,\r\n\r\n        /** @type {number} */\r\n        scale_x = 1,\r\n\r\n        /** @type {number} */\r\n        scale_y = 1,\r\n\t\t\r\n        /** @type {number} */\r\n        char_width = 9,\r\n\r\n        /** @type {number} */\r\n        char_height = 16,\r\n\r\n        /** @type {boolean} */\r\n        char_wide = false,\r\n\r\n        graphical_mode_width,\r\n        graphical_mode_height,\r\n\r\n        modified_pixel_min = 0,\r\n        modified_pixel_max = 0,\r\n\r\n        changed_rows,\r\n\r\n        // are we in graphical mode now?\r\n        is_graphical = false,\r\n\r\n        // Index 0: ASCII code\r\n        // Index 1: Background color\r\n        // Index 2: Foreground color\r\n        text_mode_data,\r\n\r\n        // number of columns\r\n        text_mode_width,\r\n\r\n        // number of rows\r\n        text_mode_height;\r\n\r\n    var stopped = false;\r\n\r\n    var screen = this;\r\n\r\n    // 0x12345 -> \"#012345\"\r\n    function number_as_color(n)\r\n    {\r\n        n = n.toString(16);\r\n        return \"#\" + \"0\".repeat(6 - n.length) + n;\r\n    }\r\n\r\n\r\n    /**\r\n     * Charmaps that constraint unicode sequences for the default dospage\r\n     * @const\r\n     */\r\n    var charmap_high = new Uint16Array([\r\n        0xC7, 0xFC, 0xE9, 0xE2, 0xE4, 0xE0, 0xE5, 0xE7,\r\n        0xEA, 0xEB, 0xE8, 0xEF, 0xEE, 0xEC, 0xC4, 0xC5,\r\n        0xC9, 0xE6, 0xC6, 0xF4, 0xF6, 0xF2, 0xFB, 0xF9,\r\n        0xFF, 0xD6, 0xDC, 0xA2, 0xA3, 0xA5, 0x20A7, 0x192,\r\n        0xE1, 0xED, 0xF3, 0xFA, 0xF1, 0xD1, 0xAA, 0xBA,\r\n        0xBF, 0x2310, 0xAC, 0xBD, 0xBC, 0xA1, 0xAB, 0xBB,\r\n        0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556,\r\n        0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,\r\n        0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F,\r\n        0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,\r\n        0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B,\r\n        0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,\r\n        0x3B1, 0xDF, 0x393, 0x3C0, 0x3A3, 0x3C3, 0xB5, 0x3C4,\r\n        0x3A6, 0x398, 0x3A9, 0x3B4, 0x221E, 0x3C6, 0x3B5, 0x2229,\r\n        0x2261, 0xB1, 0x2265, 0x2264, 0x2320, 0x2321, 0xF7,\r\n        0x2248, 0xB0, 0x2219, 0xB7, 0x221A, 0x207F, 0xB2, 0x25A0, 0xA0\r\n    ]);\r\n\r\n    /** @const */\r\n    var charmap_low = new Uint16Array([\r\n        0x20,   0x263A, 0x263B, 0x2665, 0x2666, 0x2663, 0x2660, 0x2022,\r\n        0x25D8, 0x25CB, 0x25D9, 0x2642, 0x2640, 0x266A, 0x266B, 0x263C,\r\n        0x25BA, 0x25C4, 0x2195, 0x203C, 0xB6,   0xA7,   0x25AC, 0x21A8,\r\n        0x2191, 0x2193, 0x2192, 0x2190, 0x221F, 0x2194, 0x25B2, 0x25BC\r\n    ]);\r\n\r\n    var charmap = [],\r\n        chr;\r\n\r\n    for(var i = 0; i < 256; i++)\r\n    {\r\n        if(i > 127)\r\n        {\r\n            chr = charmap_high[i - 0x80];\r\n        }\r\n        else if(i < 32)\r\n        {\r\n            chr = charmap_low[i];\r\n        }\r\n        else\r\n        {\r\n            chr = i;\r\n        }\r\n\r\n        charmap[i] = String.fromCharCode(chr);\r\n    }\r\n\r\n    graphic_context.imageSmoothingEnabled = false;\r\n\r\n    cursor_element.style.position = \"absolute\";\r\n    cursor_element.style.backgroundColor = \"#ccc\";\r\n    cursor_element.style.width = \"9px\";\r\n    cursor_element.style.display = \"inline-block\";\r\n\tcursor_element.id = \"text_cursor\";\r\n\r\n    text_screen.style.display = \"block\";\r\n    graphic_screen.style.display = \"none\";\r\n\r\n    this.bus = bus;\r\n\r\n    bus.register(\"screen-set-mode\", function(data)\r\n    {\r\n        this.set_mode(data);\r\n    }, this);\r\n\r\n    bus.register(\"screen-fill-buffer-end\", function(data)\r\n    {\r\n        this.update_buffer(data);\r\n    }, this);\r\n\r\n    bus.register(\"screen-put-char\", function(data)\r\n    {\r\n        //console.log(data);\r\n        this.put_char(data[0], data[1], data[2], data[3], data[4]);\r\n    }, this);\r\n\r\n    bus.register(\"screen-update-cursor\", function(data)\r\n    {\r\n        this.update_cursor(data[0], data[1]);\r\n    }, this);\r\n    bus.register(\"screen-update-cursor-scanline\", function(data)\r\n    {\r\n        this.update_cursor_scanline(data[0], data[1]);\r\n    }, this);\r\n\r\n    bus.register(\"screen-clear\", function()\r\n    {\r\n        this.clear_screen();\r\n    }, this);\r\n\r\n    bus.register(\"screen-set-size-text\", function(data)\r\n    {\r\n        this.set_size_text(data[0], data[1]);\r\n    }, this);\r\n    bus.register(\"screen-set-size-char\", function(data)\r\n    {\r\n        this.set_size_char(data[0], data[1], data[2]);\r\n    }, this);\r\n    bus.register(\"screen-set-size-graphical\", function(data)\r\n    {\r\n        this.set_size_graphical(data[0], data[1], data[2], data[3]);\r\n    }, this);\r\n\r\n\r\n    this.init = function()\r\n    {\r\n        // not necessary, because this gets initialized by the bios early,\r\n        // but nicer to look at\r\n        this.set_size_text(80, 25);\r\n\r\n        this.timer();\r\n    };\r\n\r\n    this.make_screenshot = function()\r\n    {\r\n        const image = new Image();\r\n\r\n        if(is_graphical)\r\n        {\r\n            image.src = graphic_screen.toDataURL(\"image/png\");\r\n        }\r\n        else\r\n        {\r\n            // Default 720x400, but can be [8, 16] at 640x400\r\n            const char_size = [char_wide ? 8 : char_width, char_height];\r\n\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = text_mode_width * char_size[0] * (char_wide ? 2 : 1);\r\n            canvas.height = text_mode_height * char_size[1];\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.font = window.getComputedStyle(text_screen).font;\r\n            context.textBaseline = \"top\";\r\n\t\t\tif (char_wide) {\r\n\t\t\t\tcontext.scale(2, 1);\r\n\t\t\t}\r\n\r\n            for(let x = 0; x < text_mode_width; x++)\r\n            {\r\n                for(let y = 0; y < text_mode_height; y++)\r\n                {\r\n                    const index = (y * text_mode_width + x) * 3;\r\n                    context.fillStyle = number_as_color(text_mode_data[index + 1]);\r\n                    context.fillRect(x * char_size[0], y * char_size[1], char_size[0], char_size[1]);\r\n                    context.fillStyle = number_as_color(text_mode_data[index + 2]);\r\n                    context.fillText(charmap[text_mode_data[index]], x * char_size[0], y * char_size[1]);\r\n                }\r\n            }\r\n\r\n            if(cursor_element.style.display !== \"none\")\r\n            {\r\n                context.fillStyle = cursor_element.style.backgroundColor;\r\n                context.fillRect(\r\n                    cursor_col * char_size[0],\r\n                    cursor_row * char_size[1] + parseInt(cursor_element.style.marginTop, 10) - 1,\r\n                    parseInt(cursor_element.style.width, 10),\r\n                    parseInt(cursor_element.style.height, 10)\r\n                );\r\n            }\r\n\r\n            image.src = canvas.toDataURL(\"image/png\");\r\n        }\r\n\r\n        try {\r\n            const w = window.open(\"\");\r\n            w.document.write(image.outerHTML);\r\n        }\r\n        catch(e) {}\r\n    };\r\n\r\n    this.put_char = function(row, col, chr, bg_color, fg_color)\r\n    {\r\n        if(row < text_mode_height && col < text_mode_width)\r\n        {\r\n            var p = 3 * (row * text_mode_width + col);\r\n\r\n            text_mode_data[p] = chr;\r\n            text_mode_data[p + 1] = bg_color;\r\n            text_mode_data[p + 2] = fg_color;\r\n\r\n            changed_rows[row] = 1;\r\n        }\r\n    };\r\n\r\n    this.timer = function()\r\n    {\r\n        if(!stopped)\r\n        {\r\n            requestAnimationFrame(is_graphical ? update_graphical : update_text);\r\n        }\r\n    };\r\n\r\n    var update_text = function()\r\n    {\r\n        for(var i = 0; i < text_mode_height; i++)\r\n        {\r\n            if(changed_rows[i])\r\n            {\r\n                screen.text_update_row(i);\r\n                changed_rows[i] = 0;\r\n            }\r\n        }\r\n\r\n        this.timer();\r\n    }.bind(this);\r\n\r\n    var update_graphical = function()\r\n    {\r\n        this.bus.send(\"screen-fill-buffer\");\r\n        this.timer();\r\n    }.bind(this);\r\n\r\n    this.destroy = function()\r\n    {\r\n        stopped = true;\r\n    };\r\n\r\n    this.set_mode = function(graphical)\r\n    {\r\n        is_graphical = graphical;\r\n\r\n        if(graphical)\r\n        {\r\n            text_screen.style.display = \"none\";\r\n            graphic_screen.style.display = \"block\";\r\n        }\r\n        else\r\n        {\r\n            text_screen.style.display = \"block\";\r\n            graphic_screen.style.display = \"none\";\r\n        }\r\n    };\r\n\r\n    this.clear_screen = function()\r\n    {\r\n        graphic_context.fillStyle = \"#000\";\r\n        graphic_context.fillRect(0, 0, graphic_screen.width, graphic_screen.height);\r\n    };\r\n\r\n    /**\r\n     * @param {number} cols\r\n     * @param {number} rows\r\n     */\r\n    this.set_size_text = function(cols, rows)\r\n    {\r\n        if(cols === text_mode_width && rows === text_mode_height)\r\n        {\r\n            return;\r\n        }\r\n\r\n        changed_rows = new Int8Array(rows);\r\n        text_mode_data = new Int32Array(cols * rows * 3);\r\n\r\n        text_mode_width = cols;\r\n        text_mode_height = rows;\r\n\r\n        while(text_screen.childNodes.length > rows)\r\n        {\r\n            text_screen.removeChild(text_screen.firstChild);\r\n        }\r\n\r\n        while(text_screen.childNodes.length < rows)\r\n        {\r\n            text_screen.appendChild(document.createElement(\"div\"));\r\n        }\r\n\r\n        for(var i = 0; i < rows; i++)\r\n        {\r\n            this.text_update_row(i);\r\n        }\r\n\r\n        update_scale_text();\r\n    };\r\n\r\n    /**\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {boolean} wide\r\n     */\r\n    this.set_size_char = function(width, height, wide)\r\n    {\r\n\t\theight = 16; // TODO\r\n\t\t\r\n\t\tchar_width = width;\r\n\t\tchar_height = height;\r\n\t\tchar_wide = wide;\r\n        update_scale_text();\r\n    };\r\n\r\n    this.set_size_graphical = function(width, height, buffer_width, buffer_height)\r\n    {\r\n        if(DEBUG_SCREEN_LAYERS)\r\n        {\r\n            // Draw the entire buffer. Useful for debugging\r\n            // panning / page flipping / screen splitting code for both\r\n            // v86 developers and os developers\r\n            width = buffer_width;\r\n            height = buffer_height;\r\n        }\r\n\r\n        graphic_screen.style.display = \"block\";\r\n\r\n        graphic_screen.width = width;\r\n        graphic_screen.height = height;\r\n\r\n        //graphic_screen.style.width = width * scale_x + \"px\";\r\n        //graphic_screen.style.height = height * scale_y + \"px\";\r\n\r\n        // Make sure to call this here, because pixels are transparent otherwise\r\n        //screen.clear_screen();\r\n\r\n        graphic_image_data = graphic_context.createImageData(buffer_width, buffer_height);\r\n        graphic_buffer = new Uint8Array(graphic_image_data.data.buffer);\r\n        graphic_buffer32 = new Int32Array(graphic_image_data.data.buffer);\r\n\r\n        graphical_mode_width = width;\r\n        graphical_mode_height = height;\r\n\r\n        this.bus.send(\"screen-tell-buffer\", [graphic_buffer32], [graphic_buffer32.buffer]);\r\n        update_scale_graphic();\r\n    };\r\n\r\n    this.set_scale = function(s_x, s_y)\r\n    {\r\n        scale_x = s_x;\r\n        scale_y = s_y;\r\n\r\n        update_scale_text();\r\n        update_scale_graphic();\r\n    };\r\n    this.set_scale(scale_x, scale_y);\r\n\r\n    function update_scale_text()\r\n    {\r\n\t\tvar current_scale_x = scale_x;\r\n\t\tif (char_wide)\r\n\t\t\tcurrent_scale_x = current_scale_x / 9 * 16;\r\n\t\tif (char_width !== 9)\r\n\t\t\tcurrent_scale_x = current_scale_x / 9 * char_width;\r\n\t\tvar current_scale_y = scale_y;\r\n\t\tif (char_height !== 17) // Wtf why font height is 17px\r\n\t\t\tcurrent_scale_y = current_scale_y / 17 * char_height;\r\n        elem_set_scale(text_screen, current_scale_x, current_scale_y, true);\r\n    }\r\n\r\n    function update_scale_graphic()\r\n    {\r\n        elem_set_scale(graphic_screen, scale_x, scale_y, false);\r\n    }\r\n\r\n    function elem_set_scale(elem, scale_x, scale_y, use_scale)\r\n    {\r\n        elem.style.width = \"\";\r\n        elem.style.height = \"\";\r\n\r\n        if(use_scale)\r\n        {\r\n            elem.style.transform = \"\";\r\n        }\r\n\r\n        var rectangle = elem.getBoundingClientRect();\r\n\r\n        if(use_scale)\r\n        {\r\n            var scale_str = \"\";\r\n\r\n            scale_str += scale_x === 1 ? \"\" : \" scaleX(\" + scale_x + \")\";\r\n            scale_str += scale_y === 1 ? \"\" : \" scaleY(\" + scale_y + \")\";\r\n\r\n            elem.style.transform = scale_str;\r\n        }\r\n        else\r\n        {\r\n            // unblur non-fractional scales\r\n            if(scale_x % 1 === 0 && scale_y % 1 === 0)\r\n            {\r\n                graphic_screen.style[\"imageRendering\"] = \"crisp-edges\"; // firefox\r\n                graphic_screen.style[\"imageRendering\"] = \"pixelated\";\r\n                graphic_screen.style[\"-ms-interpolation-mode\"] = \"nearest-neighbor\";\r\n            }\r\n            else\r\n            {\r\n                graphic_screen.style.imageRendering = \"\";\r\n                graphic_screen.style[\"-ms-interpolation-mode\"] = \"\";\r\n            }\r\n\r\n            // undo fractional css-to-device pixel ratios\r\n            var device_pixel_ratio = window.devicePixelRatio || 1;\r\n            if(device_pixel_ratio % 1 !== 0)\r\n            {\r\n                scale_x /= device_pixel_ratio;\r\n                scale_y /= device_pixel_ratio;\r\n            }\r\n        }\r\n\r\n        if(scale_x !== 1 || scale_y !== 1)\r\n        {\r\n            elem.style.width = rectangle.width * scale_x + \"px\";\r\n            elem.style.height = rectangle.height * scale_y + \"px\";\r\n        }\r\n    }\r\n\r\n    this.update_cursor_scanline = function(start, end)\r\n    {\r\n        if(start & 0x20)\r\n        {\r\n            cursor_element.style.display = \"none\";\r\n        }\r\n        else\r\n        {\r\n            cursor_element.style.display = \"inline\";\r\n\r\n            cursor_element.style.height = Math.min(15, end - start + 1) + \"px\";\r\n            cursor_element.style.marginTop = Math.min(15, start - 1) + \"px\";\r\n        }\r\n    };\r\n\r\n    this.update_cursor = function(row, col)\r\n    {\r\n        if(row !== cursor_row || col !== cursor_col)\r\n        {\r\n            changed_rows[row] = 1;\r\n            changed_rows[cursor_row] = 1;\r\n\r\n            cursor_row = row;\r\n            cursor_col = col;\r\n        }\r\n    };\r\n\r\n    this.text_update_row = function(row)\r\n    {\r\n        var offset = 3 * row * text_mode_width,\r\n            row_element,\r\n            color_element,\r\n            fragment;\r\n\r\n        var bg_color,\r\n            fg_color,\r\n            text;\r\n\r\n        row_element = text_screen.childNodes[row];\r\n        fragment = document.createElement(\"div\");\r\n\r\n        for(var i = 0; i < text_mode_width; )\r\n        {\r\n            color_element = document.createElement(\"span\");\r\n\r\n            bg_color = text_mode_data[offset + 1];\r\n            fg_color = text_mode_data[offset + 2];\r\n\r\n            color_element.style.backgroundColor = number_as_color(bg_color);\r\n            color_element.style.color = number_as_color(fg_color);\r\n\r\n            text = \"\";\r\n\r\n            // put characters of the same color in one element\r\n            while(i < text_mode_width &&\r\n                text_mode_data[offset + 1] === bg_color &&\r\n                text_mode_data[offset + 2] === fg_color)\r\n            {\r\n                var ascii = text_mode_data[offset];\r\n\r\n                text += charmap[ascii];\r\n                dbg_assert(charmap[ascii]);\r\n\r\n                i++;\r\n                offset += 3;\r\n\r\n                if(row === cursor_row)\r\n                {\r\n                    if(i === cursor_col)\r\n                    {\r\n                        // next row will be cursor\r\n                        // create new element\r\n                        break;\r\n                    }\r\n                    else if(i === cursor_col + 1)\r\n                    {\r\n                        // found the cursor\r\n\t\t\t\t\t\tcursor_element.style.backgroundColor = number_as_color(fg_color);\r\n                        fragment.appendChild(cursor_element);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            color_element.textContent = text;\r\n            fragment.appendChild(color_element);\r\n        }\r\n\r\n        row_element.parentNode.replaceChild(fragment, row_element);\r\n    };\r\n\r\n    this.update_buffer = function(layers)\r\n    {\r\n        if(DEBUG_SCREEN_LAYERS)\r\n        {\r\n            // Draw the entire buffer. Useful for debugging\r\n            // panning / page flipping / screen splitting code for both\r\n            // v86 developers and os developers\r\n            graphic_context.putImageData(\r\n                graphic_image_data,\r\n                0, 0\r\n            );\r\n\r\n            // For each visible layer that would've been drawn, draw a\r\n            // rectangle to visualise the layer instead.\r\n            graphic_context.strokeStyle = \"#0F0\";\r\n            graphic_context.lineWidth = 4;\r\n            layers.forEach((layer) =>\r\n            {\r\n                graphic_context.strokeRect(\r\n                    layer.buffer_x,\r\n                    layer.buffer_y,\r\n                    layer.buffer_width,\r\n                    layer.buffer_height\r\n                );\r\n            });\r\n            graphic_context.lineWidth = 1;\r\n            return;\r\n        }\r\n\r\n        layers.forEach(layer =>\r\n        {\r\n            graphic_context.putImageData(\r\n                graphic_image_data,\r\n                layer.screen_x - layer.buffer_x,\r\n                layer.screen_y - layer.buffer_y,\r\n                layer.buffer_x,\r\n                layer.buffer_y,\r\n                layer.buffer_width,\r\n                layer.buffer_height\r\n            );\r\n        });\r\n    };\r\n\r\n    this.init();\r\n}\r\n","// -------------------------------------------------\r\n// --------------------- 9P ------------------------\r\n// -------------------------------------------------\r\n// Implementation of the 9p filesystem device following the \r\n// 9P2000.L protocol ( https://code.google.com/p/diod/wiki/protocol )\r\n\r\n\"use strict\";\r\n\r\n// TODO\r\n// flush\r\n// lock?\r\n// correct hard links\r\n\r\nvar EPERM = 1;       /* Operation not permitted */\r\nvar ENOENT = 2;      /* No such file or directory */\r\nvar EINVAL = 22;     /* Invalid argument */\r\nvar ENOTSUPP = 524;  /* Operation is not supported */\r\nvar ENOTEMPTY = 39;  /* Directory not empty */\r\nvar EPROTO    = 71   /* Protocol error */\r\n\r\nvar P9_SETATTR_MODE = 0x00000001;\r\nvar P9_SETATTR_UID = 0x00000002;\r\nvar P9_SETATTR_GID = 0x00000004;\r\nvar P9_SETATTR_SIZE = 0x00000008;\r\nvar P9_SETATTR_ATIME = 0x00000010;\r\nvar P9_SETATTR_MTIME = 0x00000020;\r\nvar P9_SETATTR_CTIME = 0x00000040;\r\nvar P9_SETATTR_ATIME_SET = 0x00000080;\r\nvar P9_SETATTR_MTIME_SET = 0x00000100;\r\n\r\nvar P9_STAT_MODE_DIR = 0x80000000;\r\nvar P9_STAT_MODE_APPEND = 0x40000000;\r\nvar P9_STAT_MODE_EXCL = 0x20000000;\r\nvar P9_STAT_MODE_MOUNT = 0x10000000;\r\nvar P9_STAT_MODE_AUTH = 0x08000000;\r\nvar P9_STAT_MODE_TMP = 0x04000000;\r\nvar P9_STAT_MODE_SYMLINK = 0x02000000;\r\nvar P9_STAT_MODE_LINK = 0x01000000;\r\nvar P9_STAT_MODE_DEVICE = 0x00800000;\r\nvar P9_STAT_MODE_NAMED_PIPE = 0x00200000;\r\nvar P9_STAT_MODE_SOCKET = 0x00100000;\r\nvar P9_STAT_MODE_SETUID = 0x00080000;\r\nvar P9_STAT_MODE_SETGID = 0x00040000;\r\nvar P9_STAT_MODE_SETVTX = 0x00010000;\r\n\r\nvar FID_NONE = -1;\r\nvar FID_INODE = 1;\r\nvar FID_XATTR = 2;\r\n\r\n/** \r\n * @constructor \r\n *\r\n * @param {FS} filesystem\r\n */\r\nfunction Virtio9p(filesystem, bus) {\r\n    /** @const @type {FS} */\r\n    this.fs = filesystem;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    this.SendReply = function(x, y) {};\r\n    this.deviceid = 0x9; // 9p filesystem\r\n    this.hostfeature = 0x1; // mountpoint\r\n    //this.configspace = [0x0, 0x4, 0x68, 0x6F, 0x73, 0x74]; // length of string and \"host\" string\r\n    //this.configspace = [0x0, 0x9, 0x2F, 0x64, 0x65, 0x76, 0x2F, 0x72, 0x6F, 0x6F, 0x74 ]; // length of string and \"/dev/root\" string\r\n\r\n    this.configspace = new Uint8Array([0x6, 0x0, 0x68, 0x6F, 0x73, 0x74, 0x39, 0x70]); // length of string and \"host9p\" string\r\n    this.VERSION = \"9P2000.L\";\r\n    this.BLOCKSIZE = 8192; // Let's define one page.\r\n    this.msize = 8192; // maximum message size\r\n    this.replybuffer = new Uint8Array(this.msize*2); // Twice the msize to stay on the safe site\r\n    this.replybuffersize = 0;\r\n\r\n    this.fids = [];\r\n}\r\n\r\nVirtio9p.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.deviceid;\r\n    state[1] = this.hostfeature;\r\n    state[2] = this.configspace;\r\n    state[3] = this.VERSION;\r\n    state[4] = this.BLOCKSIZE;\r\n    state[5] = this.msize;\r\n    state[6] = this.replybuffer;\r\n    state[7] = this.replybuffersize;\r\n    state[8] = this.fids.map(function(f) { return [f.inodeid, f.type, f.uid] });\r\n\r\n    return state;\r\n};\r\n\r\nVirtio9p.prototype.set_state = function(state)\r\n{\r\n    this.deviceid = state[0];\r\n    this.hostfeature = state[1];\r\n    this.configspace = state[2];\r\n    this.VERSION = state[3];\r\n    this.BLOCKSIZE = state[4];\r\n    this.msize = state[5];\r\n    this.replybuffer = state[6];\r\n    this.replybuffersize = state[7];\r\n    this.fids = state[8].map(function(f) { return { inodeid: f[0], type: f[1], uid: f[2] } });\r\n};\r\n\r\nVirtio9p.prototype.Createfid = function(inode, type, uid) {\r\n    return {inodeid: inode, type: type, uid: uid};\r\n}\r\n\r\nVirtio9p.prototype.Reset = function() {\r\n    this.fids = [];\r\n}\r\n\r\n\r\nVirtio9p.prototype.BuildReply = function(id, tag, payloadsize) {\r\n    marshall.Marshall([\"w\", \"b\", \"h\"], [payloadsize+7, id+1, tag], this.replybuffer, 0);\r\n    if ((payloadsize+7) >= this.replybuffer.length) {\r\n        message.Debug(\"Error in 9p: payloadsize exceeds maximum length\");\r\n    }\r\n    //for(var i=0; i<payload.length; i++)\r\n    //    this.replybuffer[7+i] = payload[i];\r\n    this.replybuffersize = payloadsize+7;\r\n    return;\r\n}\r\n\r\nVirtio9p.prototype.SendError = function (tag, errormsg, errorcode) {\r\n    //var size = marshall.Marshall([\"s\", \"w\"], [errormsg, errorcode], this.replybuffer, 7);\r\n    var size = marshall.Marshall([\"w\"], [errorcode], this.replybuffer, 7);\r\n    this.BuildReply(6, tag, size);\r\n}\r\n\r\nVirtio9p.prototype.ReceiveRequest = function (index, GetByte) {\r\n    var header = marshall.Unmarshall2([\"w\", \"b\", \"h\"], GetByte);\r\n    var size = header[0];\r\n    var id = header[1];\r\n    var tag = header[2];\r\n    //message.Debug(\"size:\" + size + \" id:\" + id + \" tag:\" + tag);\r\n\r\n    switch(id)\r\n    {\r\n        case 8: // statfs\r\n            size = this.fs.GetTotalSize(); // size used by all files\r\n            var space = this.fs.GetSpace();\r\n            var req = [];\r\n            req[0] = 0x01021997;\r\n            req[1] = this.BLOCKSIZE; // optimal transfer block size\r\n            req[2] = Math.floor(space/req[1]); // free blocks\r\n            req[3] = req[2] - Math.floor(size/req[1]); // free blocks in fs\r\n            req[4] = req[2] - Math.floor(size/req[1]); // free blocks avail to non-superuser\r\n            req[5] = this.fs.inodes.length; // total number of inodes\r\n            req[6] = 1024*1024;\r\n            req[7] = 0; // file system id?\r\n            req[8] = 256; // maximum length of filenames\r\n\r\n            size = marshall.Marshall([\"w\", \"w\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"w\"], req, this.replybuffer, 7);\r\n            this.BuildReply(id, tag, size);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 112: // topen\r\n        case 12: // tlopen\r\n            var req = marshall.Unmarshall2([\"w\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var mode = req[1];\r\n            message.Debug(\"[open] fid=\" + fid + \", mode=\" + mode);\r\n            var idx = this.fids[fid].inodeid;\r\n            var inode = this.fs.GetInode(idx);\r\n            message.Debug(\"file open \" + inode.name);\r\n            //if (inode.status == STATUS_LOADING) return;\r\n            var ret = this.fs.OpenInode(idx, mode);\r\n\r\n            this.fs.AddEvent(this.fids[fid].inodeid,\r\n                function() {\r\n                    message.Debug(\"file opened \" + inode.name + \" tag:\"+tag);\r\n                    req[0] = inode.qid;\r\n                    req[1] = this.msize - 24;\r\n                    marshall.Marshall([\"Q\", \"w\"], req, this.replybuffer, 7);\r\n                    this.BuildReply(id, tag, 13+4);\r\n                    this.SendReply(0, index);\r\n                }.bind(this)\r\n            );\r\n            break;\r\n\r\n        case 70: // link (just copying)\r\n            var req = marshall.Unmarshall2([\"w\", \"w\", \"s\"], GetByte);\r\n            var dfid = req[0];\r\n            var fid = req[1];\r\n            var name = req[2];\r\n            message.Debug(\"[link] dfid=\" + dfid + \", name=\" + name);\r\n            var inode = this.fs.CreateInode();\r\n            var inodetarget = this.fs.GetInode(this.fids[fid].inodeid);\r\n            var targetdata = this.fs.inodedata[this.fids[fid].inodeid];\r\n            //inode = inodetarget;\r\n            inode.mode = inodetarget.mode;\r\n            inode.size = inodetarget.size;\r\n            inode.symlink = inodetarget.symlink;\r\n            var data = this.fs.inodedata[this.fs.inodes.length] = new Uint8Array(inode.size);\r\n            for(var i=0; i<inode.size; i++) {\r\n                data[i] = targetdata[i];\r\n            }\r\n            inode.name = name;\r\n            inode.parentid = this.fids[dfid].inodeid;\r\n            this.fs.PushInode(inode);\r\n            \r\n            //inode.uid = inodetarget.uid;\r\n            //inode.gid = inodetarget.gid;\r\n            //inode.mode = inodetarget.mode | S_IFLNK;\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);       \r\n            break;\r\n\r\n        case 16: // symlink\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"s\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var name = req[1];\r\n            var symgt = req[2];\r\n            var gid = req[3];\r\n            message.Debug(\"[symlink] fid=\" + fid + \", name=\" + name + \", symgt=\" + symgt + \", gid=\" + gid); \r\n            var idx = this.fs.CreateSymlink(name, this.fids[fid].inodeid, symgt);\r\n            var inode = this.fs.GetInode(idx);\r\n            inode.uid = this.fids[fid].uid;\r\n            inode.gid = gid;\r\n            marshall.Marshall([\"Q\"], [inode.qid], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 13);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 18: // mknod\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"w\", \"w\", \"w\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var name = req[1];\r\n            var mode = req[2];\r\n            var major = req[3];\r\n            var minor = req[4];\r\n            var gid = req[5];\r\n            message.Debug(\"[mknod] fid=\" + fid + \", name=\" + name + \", major=\" + major + \", minor=\" + minor+ \"\");\r\n            var idx = this.fs.CreateNode(name, this.fids[fid].inodeid, major, minor);\r\n            var inode = this.fs.GetInode(idx);\r\n            inode.mode = mode;\r\n            inode.uid = this.fids[fid].uid;\r\n            inode.gid = gid;\r\n            marshall.Marshall([\"Q\"], [inode.qid], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 13);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n\r\n        case 22: // TREADLINK\r\n            var req = marshall.Unmarshall2([\"w\"], GetByte);\r\n            var fid = req[0];\r\n            message.Debug(\"[readlink] fid=\" + fid);\r\n            var inode = this.fs.GetInode(this.fids[fid].inodeid);\r\n            size = marshall.Marshall([\"s\"], [inode.symlink], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, size);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n\r\n        case 72: // tmkdir\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"w\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var name = req[1];\r\n            var mode = req[2];\r\n            var gid = req[3];\r\n            message.Debug(\"[mkdir] fid=\" + fid + \", name=\" + name + \", mode=\" + mode + \", gid=\" + gid); \r\n            var idx = this.fs.CreateDirectory(name, this.fids[fid].inodeid);\r\n            var inode = this.fs.GetInode(idx);\r\n            inode.mode = mode | S_IFDIR;\r\n            inode.uid = this.fids[fid].uid;\r\n            inode.gid = gid;\r\n            marshall.Marshall([\"Q\"], [inode.qid], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 13);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 14: // tlcreate\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"w\", \"w\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var name = req[1];\r\n            var flags = req[2];\r\n            var mode = req[3];\r\n            var gid = req[4];\r\n            message.Debug(\"[create] fid=\" + fid + \", name=\" + name + \", flags=\" + flags + \", mode=\" + mode + \", gid=\" + gid); \r\n            var idx = this.fs.CreateFile(name, this.fids[fid].inodeid);\r\n            this.fids[fid].inodeid = idx;\r\n            this.fids[fid].type = FID_INODE;\r\n            var inode = this.fs.GetInode(idx);\r\n            inode.uid = this.fids[fid].uid;\r\n            inode.gid = gid;\r\n            inode.mode = mode;\r\n            marshall.Marshall([\"Q\", \"w\"], [inode.qid, this.msize - 24], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 13+4);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 52: // lock always suceed\r\n            message.Debug(\"lock file\\n\");\r\n            marshall.Marshall([\"w\"], [0], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 1);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        /*\r\n        case 54: // getlock\r\n            break;        \r\n        */\r\n\r\n        case 24: // getattr\r\n            var req = marshall.Unmarshall2([\"w\", \"d\"], GetByte);\r\n            var fid = req[0];\r\n            var inode = this.fs.GetInode(this.fids[fid].inodeid);\r\n            message.Debug(\"[getattr]: fid=\" + fid + \" name=\" + inode.name + \" request mask=\" + req[1]);\r\n            if(!inode || inode.status === STATUS_UNLINKED)\r\n            {\r\n                message.Debug(\"getattr: unlinked\");\r\n                this.SendError(tag, \"No such file or directory\", ENOENT);\r\n                this.SendReply(0, index);\r\n                break;\r\n            }\r\n            req[0] |= 0x1000; // P9_STATS_GEN\r\n\r\n            req[0] = req[1]; // request mask\r\n            req[1] = inode.qid;\r\n\r\n            req[2] = inode.mode; \r\n            req[3] = inode.uid; // user id\r\n            req[4] = inode.gid; // group id\r\n            \r\n            req[5] = inode.nlinks; // number of hard links\r\n            req[6] = (inode.major<<8) | (inode.minor); // device id low\r\n            req[7] = inode.size; // size low\r\n            req[8] = this.BLOCKSIZE;\r\n            req[9] = Math.floor(inode.size/512+1);; // blk size low\r\n            req[10] = inode.atime; // atime\r\n            req[11] = 0x0;\r\n            req[12] = inode.mtime; // mtime\r\n            req[13] = 0x0;\r\n            req[14] = inode.ctime; // ctime\r\n            req[15] = 0x0;\r\n            req[16] = 0x0; // btime\r\n            req[17] = 0x0; \r\n            req[18] = 0x0; // st_gen\r\n            req[19] = 0x0; // data_version\r\n            marshall.Marshall([\r\n            \"d\", \"Q\", \r\n            \"w\",  \r\n            \"w\", \"w\", \r\n            \"d\", \"d\", \r\n            \"d\", \"d\", \"d\",\r\n            \"d\", \"d\", // atime\r\n            \"d\", \"d\", // mtime\r\n            \"d\", \"d\", // ctime\r\n            \"d\", \"d\", // btime\r\n            \"d\", \"d\",\r\n            ], req, this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 8 + 13 + 4 + 4+ 4 + 8*15);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 26: // setattr\r\n            var req = marshall.Unmarshall2([\"w\", \"w\", \r\n                \"w\", // mode \r\n                \"w\", \"w\", // uid, gid\r\n                \"d\", // size\r\n                \"d\", \"d\", // atime\r\n                \"d\", \"d\"] // mtime\r\n            , GetByte);\r\n            var fid = req[0];\r\n            var inode = this.fs.GetInode(this.fids[fid].inodeid);\r\n            message.Debug(\"[setattr]: fid=\" + fid + \" request mask=\" + req[1] + \" name=\" +inode.name);\r\n            if (req[1] & P9_SETATTR_MODE) {\r\n                inode.mode = req[2];\r\n            }\r\n            if (req[1] & P9_SETATTR_UID) {\r\n                inode.uid = req[3];\r\n            }\r\n            if (req[1] & P9_SETATTR_GID) {\r\n                inode.gid = req[4];\r\n            }\r\n            if (req[1] & P9_SETATTR_ATIME) {\r\n                inode.atime = Math.floor((new Date()).getTime()/1000);\r\n            }\r\n            if (req[1] & P9_SETATTR_MTIME) {\r\n                inode.mtime = Math.floor((new Date()).getTime()/1000);\r\n            }\r\n            if (req[1] & P9_SETATTR_CTIME) {\r\n                inode.ctime = Math.floor((new Date()).getTime()/1000);\r\n            }\r\n            if (req[1] & P9_SETATTR_ATIME_SET) {\r\n                inode.atime = req[6];\r\n            }\r\n            if (req[1] & P9_SETATTR_MTIME_SET) {\r\n                inode.mtime = req[8];\r\n            }\r\n            if (req[1] & P9_SETATTR_SIZE) {\r\n                this.fs.ChangeSize(this.fids[fid].inodeid, req[5]);\r\n            }\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 50: // fsync\r\n            var req = marshall.Unmarshall2([\"w\", \"d\"], GetByte);\r\n            var fid = req[0];\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 40: // TREADDIR\r\n        case 116: // read\r\n            var req = marshall.Unmarshall2([\"w\", \"d\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var offset = req[1];\r\n            var count = req[2];\r\n            var inode = this.fs.GetInode(this.fids[fid].inodeid);\r\n            if (id == 40) message.Debug(\"[treaddir]: fid=\" + fid + \" offset=\" + offset + \" count=\" + count);\r\n            if (id == 116) message.Debug(\"[read]: fid=\" + fid + \" (\" + inode.name + \") offset=\" + offset + \" count=\" + count + \" fidtype=\" + this.fids[fid].type);\r\n            if(!inode || inode.status === STATUS_UNLINKED)\r\n            {\r\n                message.Debug(\"read/treaddir: unlinked\");\r\n                this.SendError(tag, \"No such file or directory\", ENOENT);\r\n                this.SendReply(0, index);\r\n                break;\r\n            }\r\n            if (this.fids[fid].type == FID_XATTR) {\r\n                if (inode.caps.length < offset+count) count = inode.caps.length - offset;\r\n                for(var i=0; i<count; i++)\r\n                    this.replybuffer[7+4+i] = inode.caps[offset+i];\r\n                marshall.Marshall([\"w\"], [count], this.replybuffer, 7);\r\n                this.BuildReply(id, tag, 4 + count);\r\n                this.SendReply(0, index);\r\n            } else {\r\n                var file = this.fs.inodes[this.fids[fid].inodeid];\r\n                this.bus.send(\"9p-read-start\");\r\n\r\n                this.fs.OpenInode(this.fids[fid].inodeid, undefined);\r\n                this.fs.AddEvent(this.fids[fid].inodeid,\r\n                    function() {\r\n                        this.bus.send(\"9p-read-end\", [file.name, count]);\r\n\r\n                        if (inode.size < offset+count) count = inode.size - offset;\r\n                        var data = this.fs.inodedata[this.fids[fid].inodeid];\r\n                        if(data) {\r\n                            for(var i=0; i<count; i++)\r\n                                this.replybuffer[7+4+i] = data[offset+i];\r\n                        }\r\n                        marshall.Marshall([\"w\"], [count], this.replybuffer, 7);\r\n                        this.BuildReply(id, tag, 4 + count);\r\n                        this.SendReply(0, index);\r\n                    }.bind(this)\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 118: // write\r\n            var req = marshall.Unmarshall2([\"w\", \"d\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var offset = req[1];\r\n            var count = req[2];\r\n            message.Debug(\"[write]: fid=\" + fid + \" (\" + this.fs.inodes[this.fids[fid].inodeid].name + \") offset=\" + offset + \" count=\" + count);\r\n            this.fs.Write(this.fids[fid].inodeid, offset, count, GetByte);\r\n\r\n            var file = this.fs.inodes[this.fids[fid].inodeid];\r\n            this.bus.send(\"9p-write-end\", [file.name, count]);\r\n\r\n            marshall.Marshall([\"w\"], [count], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 4);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 74: // RENAMEAT\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"w\", \"s\"], GetByte);\r\n            var olddirfid = req[0];\r\n            var oldname = req[1];\r\n            var newdirfid = req[2];\r\n            var newname = req[3];\r\n            message.Debug(\"[renameat]: oldname=\" + oldname + \" newname=\" + newname);\r\n            var ret = this.fs.Rename(this.fids[olddirfid].inodeid, oldname, this.fids[newdirfid].inodeid, newname);\r\n            if (ret == false) {\r\n                this.SendError(tag, \"No such file or directory\", ENOENT);                   \r\n                this.SendReply(0, index);\r\n                break;\r\n            }\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 76: // TUNLINKAT\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"w\"], GetByte);\r\n            var dirfd = req[0];\r\n            var name = req[1];\r\n            var flags = req[2];\r\n            message.Debug(\"[unlink]: dirfd=\" + dirfd + \" name=\" + name + \" flags=\" + flags);\r\n            var fid = this.fs.Search(this.fids[dirfd].inodeid, name);\r\n            if (fid == -1) {\r\n                   this.SendError(tag, \"No such file or directory\", ENOENT);\r\n                   this.SendReply(0, index);\r\n                   break;\r\n            }\r\n            var ret = this.fs.Unlink(fid);\r\n            if (!ret) {\r\n                this.SendError(tag, \"Directory not empty\", ENOTEMPTY);\r\n                this.SendReply(0, index);\r\n                break;\r\n            }\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 100: // version\r\n            var version = marshall.Unmarshall2([\"w\", \"s\"], GetByte);\r\n            message.Debug(\"[version]: msize=\" + version[0] + \" version=\" + version[1]);\r\n            this.msize = version[0];\r\n            size = marshall.Marshall([\"w\", \"s\"], [this.msize, this.VERSION], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, size);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 104: // attach\r\n            // return root directorie's QID\r\n            var req = marshall.Unmarshall2([\"w\", \"w\", \"s\", \"s\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var uid = req[4];\r\n            message.Debug(\"[attach]: fid=\" + fid + \" afid=\" + hex8(req[1]) + \" uname=\" + req[2] + \" aname=\" + req[3]);\r\n            this.fids[fid] = this.Createfid(0, FID_INODE, uid);\r\n            var inode = this.fs.GetInode(this.fids[fid].inodeid);\r\n            marshall.Marshall([\"Q\"], [inode.qid], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 13);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 108: // tflush\r\n            var req = marshall.Unmarshall2([\"h\"], GetByte);\r\n            var oldtag = req[0];\r\n            message.Debug(\"[flush] \" + tag);\r\n            //marshall.Marshall([\"Q\"], [inode.qid], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n\r\n        case 110: // walk\r\n            var req = marshall.Unmarshall2([\"w\", \"w\", \"h\"], GetByte);\r\n            var fid = req[0];\r\n            var nwfid = req[1];\r\n            var nwname = req[2];\r\n            message.Debug(\"[walk]: fid=\" + req[0] + \" nwfid=\" + req[1] + \" nwname=\" + nwname);\r\n            if (nwname == 0) {\r\n                this.fids[nwfid] = this.Createfid(this.fids[fid].inodeid, FID_INODE, this.fids[fid].uid);\r\n                //this.fids[nwfid].inodeid = this.fids[fid].inodeid;\r\n                marshall.Marshall([\"h\"], [0], this.replybuffer, 7);\r\n                this.BuildReply(id, tag, 2);\r\n                this.SendReply(0, index);\r\n                break;\r\n            }\r\n            var wnames = [];\r\n            for(var i=0; i<nwname; i++) {\r\n                wnames.push(\"s\");\r\n            }\r\n            var walk = marshall.Unmarshall2(wnames, GetByte);\r\n            var idx = this.fids[fid].inodeid;\r\n            var offset = 7+2;\r\n            var nwidx = 0;\r\n            //console.log(idx, this.fs.inodes[idx]);\r\n            message.Debug(\"walk in dir \" + this.fs.inodes[idx].name  + \" to: \" + walk.toString());\r\n            for(var i=0; i<nwname; i++) {\r\n                idx = this.fs.Search(idx, walk[i]);\r\n\r\n                if (idx == -1) {\r\n                   message.Debug(\"Could not find: \" + walk[i]);\r\n                   break;\r\n                }\r\n                offset += marshall.Marshall([\"Q\"], [this.fs.inodes[idx].qid], this.replybuffer, offset);\r\n                nwidx++;\r\n                //message.Debug(this.fids[nwfid].inodeid);\r\n                //this.fids[nwfid].inodeid = idx;\r\n                //this.fids[nwfid].type = FID_INODE;\r\n                this.fids[nwfid] = this.Createfid(idx, FID_INODE, this.fids[fid].uid);\r\n            }\r\n            marshall.Marshall([\"h\"], [nwidx], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, offset-7);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 120: // clunk\r\n            var req = marshall.Unmarshall2([\"w\"], GetByte);\r\n            message.Debug(\"[clunk]: fid=\" + req[0]);\r\n            if (this.fids[req[0]] && this.fids[req[0]].inodeid >=  0) {\r\n                this.fs.CloseInode(this.fids[req[0]].inodeid);\r\n                this.fids[req[0]].inodeid = -1;\r\n                this.fids[req[0]].type = FID_NONE;\r\n            }\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        case 32: // txattrcreate\r\n            var req = marshall.Unmarshall2([\"w\", \"s\", \"d\", \"w\"], GetByte);\r\n            var fid = req[0];\r\n            var name = req[1];\r\n            var attr_size = req[2];\r\n            var flags = req[3];\r\n            message.Debug(\"[txattrcreate]: fid=\" + fid + \" name=\" + name + \" attr_size=\" + attr_size + \" flags=\" + flags);\r\n            this.BuildReply(id, tag, 0);\r\n            this.SendReply(0, index);\r\n            //this.SendError(tag, \"Operation i not supported\",  EINVAL);\r\n            //this.SendReply(0, index);\r\n            break;\r\n\r\n        case 30: // xattrwalk\r\n            var req = marshall.Unmarshall2([\"w\", \"w\", \"s\"], GetByte);\r\n            var fid = req[0];\r\n            var newfid = req[1];\r\n            var name = req[2];\r\n            message.Debug(\"[xattrwalk]: fid=\" + req[0] + \" newfid=\" + req[1] + \" name=\" + req[2]);\r\n            this.fids[newfid] = this.Createfid(this.fids[fid].inodeid, FID_NONE, this.fids[fid].uid);\r\n            //this.fids[newfid].inodeid = this.fids[fid].inodeid;\r\n            //this.fids[newfid].type = FID_NONE;\r\n            var length = 0;\r\n            if (name == \"security.capability\") {\r\n                length = this.fs.PrepareCAPs(this.fids[fid].inodeid);\r\n                this.fids[newfid].type = FID_XATTR;\r\n            }\r\n            marshall.Marshall([\"d\"], [length], this.replybuffer, 7);\r\n            this.BuildReply(id, tag, 8);\r\n            this.SendReply(0, index);\r\n            break;\r\n\r\n        default:\r\n            message.Debug(\"Error in Virtio9p: Unknown id \" + id + \" received\");\r\n            message.Abort();\r\n            //this.SendError(tag, \"Operation i not supported\",  ENOTSUPP);\r\n            //this.SendReply(0, index);\r\n            break;\r\n    }\r\n\r\n    //consistency checks if there are problems with the filesystem\r\n    //this.fs.Check();\r\n}\r\n","\"use strict\";\r\n/*\r\n * Compile time configuration, some only relevant for debug mode\r\n */\r\n\r\n/**\r\n * @define {boolean}\r\n * Overridden for production by closure compiler\r\n */\r\nvar DEBUG = false;\r\n\r\n/** @const */\r\nvar LOG_TO_FILE = false;\r\n\r\n/**\r\n * @const\r\n * Enables logging all IO port reads and writes. Very verbose\r\n */\r\nvar LOG_ALL_IO = false;\r\n\r\n/**\r\n * @const\r\n * Enables logging of page faults, quite verbose\r\n */\r\nvar LOG_PAGE_FAULTS = false;\r\n\r\n\r\nvar LOG_LEVEL = LOG_ALL & ~LOG_PS2 & ~LOG_PIT & ~LOG_VIRTIO & ~LOG_9P & ~LOG_PIC &\r\n                          ~LOG_DMA & ~LOG_SERIAL & ~LOG_NET & ~LOG_FLOPPY & ~LOG_DISK;\r\n\r\n/**\r\n * @const\r\n * Draws entire buffer and visualizes the layers that would be drawn\r\n */\r\nvar DEBUG_SCREEN_LAYERS = DEBUG && false;\r\n\r\n\r\n/** @const */\r\nvar ENABLE_HPET = DEBUG && false;\r\n\r\n/**\r\n * @define {boolean}\r\n * Overridden by closure compiler\r\n */\r\nvar ENABLE_ACPI = false;\r\n\r\n/** @const */\r\nvar WINNT_FIX = false;\r\n\r\n/**\r\n * @const\r\n * How many cycles the CPU does at a time before running hardware timers\r\n */\r\nvar LOOP_COUNTER = 11001;\r\n\r\n/**\r\n * @const\r\n * How often, in milliseconds, to yield to the browser for rendering and\r\n * running events\r\n */\r\nvar TIME_PER_FRAME = 1;\r\n\r\n/**\r\n * @const\r\n * How many ticks the TSC does per millisecond\r\n */\r\nvar TSC_RATE = 8 * 1024;\r\n\r\n\r\n/** @const */\r\nvar APIC_TIMER_FREQ = TSC_RATE;\r\n\r\n\r\n/** @const */\r\nvar VMWARE_HYPERVISOR_PORT = true;\r\n","\"use strict\";\r\n\r\n/**\r\n * The ISA IO bus\r\n * Devices register their ports here\r\n *\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction IO(cpu)\r\n{\r\n    /** @const */\r\n    this.ports = [];\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    for(var i = 0; i < 0x10000; i++)\r\n    {\r\n        this.ports[i] = this.create_empty_entry();\r\n    }\r\n\r\n    var memory_size = cpu.memory_size;\r\n\r\n    for(var i = 0; (i << MMAP_BLOCK_BITS) < memory_size; i++)\r\n    {\r\n        // avoid sparse arrays\r\n        cpu.memory_map_read8[i] = cpu.memory_map_write8[i] = undefined;\r\n        cpu.memory_map_read32[i] = cpu.memory_map_write32[i] = undefined;\r\n    }\r\n\r\n    this.mmap_register(memory_size, 0x100000000 - memory_size,\r\n        function(addr) {\r\n            // read outside of the memory size\r\n            dbg_log(\"Read from unmapped memory space, addr=\" + h(addr >>> 0, 8), LOG_IO);\r\n            return 0xFF;\r\n        },\r\n        function(addr, value) {\r\n            // write outside of the memory size\r\n            dbg_log(\"Write to unmapped memory space, addr=\" + h(addr >>> 0, 8) + \" value=\" + h(value, 2), LOG_IO);\r\n        },\r\n        function(addr) {\r\n            dbg_log(\"Read from unmapped memory space, addr=\" + h(addr >>> 0, 8), LOG_IO);\r\n            return -1;\r\n        },\r\n        function(addr, value) {\r\n            dbg_log(\"Write to unmapped memory space, addr=\" + h(addr >>> 0, 8) + \" value=\" + h(value >>> 0, 8), LOG_IO);\r\n        }\r\n    );\r\n}\r\n\r\nIO.prototype.create_empty_entry = function()\r\n{\r\n    return {\r\n        read8: this.empty_port_read8,\r\n        read16: this.empty_port_read16,\r\n        read32: this.empty_port_read32,\r\n\r\n        write8: this.empty_port_write,\r\n        write16: this.empty_port_write,\r\n        write32: this.empty_port_write,\r\n\r\n        device: undefined,\r\n    };\r\n};\r\n\r\nIO.prototype.empty_port_read8 = function()\r\n{\r\n    return 0xFF;\r\n};\r\n\r\nIO.prototype.empty_port_read16 = function()\r\n{\r\n    return 0xFFFF;\r\n};\r\n\r\nIO.prototype.empty_port_read32 = function()\r\n{\r\n    return -1;\r\n};\r\n\r\nIO.prototype.empty_port_write = function(x)\r\n{\r\n};\r\n\r\n\r\n/**\r\n * @param {number} port_addr\r\n * @param {Object} device\r\n * @param {function():number=} r8\r\n * @param {function():number=} r16\r\n * @param {function():number=} r32\r\n */\r\nIO.prototype.register_read = function(port_addr, device, r8, r16, r32)\r\n{\r\n    dbg_assert(typeof port_addr === \"number\");\r\n    dbg_assert(typeof device === \"object\");\r\n    dbg_assert(!r8 || typeof r8 === \"function\");\r\n    dbg_assert(!r16 || typeof r16 === \"function\");\r\n    dbg_assert(!r32 || typeof r32 === \"function\");\r\n    dbg_assert(r8 || r16 || r32);\r\n\r\n    if(DEBUG)\r\n    {\r\n        var fail = function(n) {\r\n            dbg_assert(false, \"Overlapped read\" + n + \" \" + h(port_addr, 4) + \" (\" + device.name + \")\");\r\n            return -1 >>> (32 - n) | 0;\r\n        };\r\n        if(!r8) r8 = fail.bind(this, 8);\r\n        if(!r16) r16 = fail.bind(this, 16);\r\n        if(!r32) r32 = fail.bind(this, 32);\r\n    }\r\n\r\n    if(r8) this.ports[port_addr].read8 = r8;\r\n    if(r16) this.ports[port_addr].read16 = r16;\r\n    if(r32) this.ports[port_addr].read32 = r32;\r\n    this.ports[port_addr].device = device;\r\n};\r\n\r\n/**\r\n * @param {number} port_addr\r\n * @param {Object} device\r\n * @param {function(number)=} w8\r\n * @param {function(number)=} w16\r\n * @param {function(number)=} w32\r\n */\r\nIO.prototype.register_write = function(port_addr, device, w8, w16, w32)\r\n{\r\n    dbg_assert(typeof port_addr === \"number\");\r\n    dbg_assert(typeof device === \"object\");\r\n    dbg_assert(!w8 || typeof w8 === \"function\");\r\n    dbg_assert(!w16 || typeof w16 === \"function\");\r\n    dbg_assert(!w32 || typeof w32 === \"function\");\r\n    dbg_assert(w8 || w16 || w32);\r\n\r\n    if(DEBUG)\r\n    {\r\n        var fail = function(n) {\r\n            dbg_assert(false, \"Overlapped write\" + n + \" \" + h(port_addr) + \" (\" + device.name + \")\");\r\n        };\r\n        if(!w8) w8 = fail.bind(this, 8);\r\n        if(!w16) w16 = fail.bind(this, 16);\r\n        if(!w32) w32 = fail.bind(this, 32);\r\n    }\r\n\r\n    if(w8) this.ports[port_addr].write8 = w8;\r\n    if(w16) this.ports[port_addr].write16 = w16;\r\n    if(w32) this.ports[port_addr].write32 = w32;\r\n    this.ports[port_addr].device = device;\r\n};\r\n\r\n/**\r\n * > Any two consecutive 8-bit ports can be treated as a 16-bit port;\r\n * > and four consecutive 8-bit ports can be treated as a 32-bit port\r\n * > http://css.csail.mit.edu/6.858/2012/readings/i386/s08_01.htm\r\n *\r\n * This info is not correct for all ports, but handled by the following functions\r\n *\r\n * Register the write of 2 or 4 consecutive 8-bit ports, 1 or 2 16-bit\r\n * ports and 0 or 1 32-bit ports\r\n *\r\n * @param {number} port_addr\r\n * @param {!Object} device\r\n * @param {function():number} r8_1\r\n * @param {function():number} r8_2\r\n * @param {function():number=} r8_3\r\n * @param {function():number=} r8_4\r\n */\r\nIO.prototype.register_read_consecutive = function(port_addr, device, r8_1, r8_2, r8_3, r8_4)\r\n{\r\n    dbg_assert(arguments.length === 4 || arguments.length === 6);\r\n\r\n    function r16_1()\r\n    {\r\n        return r8_1.call(this) |\r\n                r8_2.call(this) << 8;\r\n    }\r\n    function r16_2()\r\n    {\r\n        return r8_3.call(this) |\r\n                r8_4.call(this) << 8;\r\n    }\r\n    function r32()\r\n    {\r\n        return r8_1.call(this) |\r\n                r8_2.call(this) << 8 |\r\n                r8_3.call(this) << 16 |\r\n                r8_4.call(this) << 24;\r\n    }\r\n\r\n    if(r8_3 && r8_4)\r\n    {\r\n        this.register_read(port_addr, device, r8_1, r16_1, r32);\r\n        this.register_read(port_addr + 1, device, r8_2);\r\n        this.register_read(port_addr + 2, device, r8_3, r16_2);\r\n        this.register_read(port_addr + 3, device, r8_4);\r\n    }\r\n    else\r\n    {\r\n        this.register_read(port_addr, device, r8_1, r16_1);\r\n        this.register_read(port_addr + 1, device, r8_2);\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} port_addr\r\n * @param {!Object} device\r\n * @param {function(number)} w8_1\r\n * @param {function(number)} w8_2\r\n * @param {function(number)=} w8_3\r\n * @param {function(number)=} w8_4\r\n */\r\nIO.prototype.register_write_consecutive = function(port_addr, device, w8_1, w8_2, w8_3, w8_4)\r\n{\r\n    dbg_assert(arguments.length === 4 || arguments.length === 6);\r\n\r\n    function w16_1(data)\r\n    {\r\n        w8_1.call(this, data & 0xFF);\r\n        w8_2.call(this, data >> 8 & 0xFF);\r\n    }\r\n    function w16_2(data)\r\n    {\r\n        w8_3.call(this, data & 0xFF);\r\n        w8_4.call(this, data >> 8 & 0xFF);\r\n    }\r\n    function w32(data)\r\n    {\r\n        w8_1.call(this, data & 0xFF);\r\n        w8_2.call(this, data >> 8 & 0xFF);\r\n        w8_3.call(this, data >> 16 & 0xFF);\r\n        w8_4.call(this, data >>> 24);\r\n    }\r\n\r\n    if(w8_3 && w8_4)\r\n    {\r\n        this.register_write(port_addr,     device, w8_1, w16_1, w32);\r\n        this.register_write(port_addr + 1, device, w8_2);\r\n        this.register_write(port_addr + 2, device, w8_3, w16_2);\r\n        this.register_write(port_addr + 3, device, w8_4);\r\n    }\r\n    else\r\n    {\r\n        this.register_write(port_addr,     device, w8_1, w16_1);\r\n        this.register_write(port_addr + 1, device, w8_2);\r\n    }\r\n};\r\n\r\nIO.prototype.in_mmap_range = function(start, count)\r\n{\r\n    start >>>= 0;\r\n    count >>>= 0;\r\n\r\n    var end = start + count;\r\n\r\n    if(end >= this.cpu.memory_size)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //dbg_log(\"in_mmap_range start=\" + start + \" count=\" + count);\r\n    start &= ~(MMAP_BLOCK_SIZE - 1);\r\n\r\n    while(start < end)\r\n    {\r\n        if(this.cpu.in_mapped_range(start))\r\n        {\r\n            return true;\r\n        }\r\n\r\n        start += MMAP_BLOCK_SIZE;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nIO.prototype.mmap_read32_shim = function(addr)\r\n{\r\n    var aligned_addr = addr >>> MMAP_BLOCK_BITS;\r\n    var fn = this.cpu.memory_map_read8[aligned_addr];\r\n\r\n    return fn(addr) | fn(addr + 1) << 8 |\r\n            fn(addr + 2) << 16 | fn(addr + 3) << 24;\r\n};\r\n\r\nIO.prototype.mmap_write32_shim = function(addr, value)\r\n{\r\n    var aligned_addr = addr >>> MMAP_BLOCK_BITS;\r\n    var fn = this.cpu.memory_map_write8[aligned_addr];\r\n\r\n    fn(addr, value & 0xFF);\r\n    fn(addr + 1, value >> 8 & 0xFF);\r\n    fn(addr + 2, value >> 16 & 0xFF);\r\n    fn(addr + 3, value >>> 24);\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n * @param {number} size\r\n * @param {*} read_func8\r\n * @param {*} write_func8\r\n * @param {*=} read_func32\r\n * @param {*=} write_func32\r\n */\r\nIO.prototype.mmap_register = function(addr, size, read_func8, write_func8, read_func32, write_func32)\r\n{\r\n    dbg_log(\"mmap_register addr=\" + h(addr >>> 0, 8) + \" size=\" + h(size, 8), LOG_IO);\r\n\r\n    dbg_assert((addr & MMAP_BLOCK_SIZE - 1) === 0);\r\n    dbg_assert(size && (size & MMAP_BLOCK_SIZE - 1) === 0);\r\n\r\n    if(!read_func32)\r\n        read_func32 = this.mmap_read32_shim.bind(this);\r\n\r\n    if(!write_func32)\r\n        write_func32 = this.mmap_write32_shim.bind(this);\r\n\r\n    var aligned_addr = addr >>> MMAP_BLOCK_BITS;\r\n\r\n    for(; size > 0; aligned_addr++)\r\n    {\r\n        this.cpu.memory_map_read8[aligned_addr] = read_func8;\r\n        this.cpu.memory_map_write8[aligned_addr] = write_func8;\r\n        this.cpu.memory_map_read32[aligned_addr] = read_func32;\r\n        this.cpu.memory_map_write32[aligned_addr] = write_func32;\r\n\r\n        size -= MMAP_BLOCK_SIZE;\r\n    }\r\n};\r\n\r\n\r\nIO.prototype.port_write8 = function(port_addr, data)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.write8 === this.empty_port_write || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"write8 port #\" + h(port_addr, 4) + \" <- \" + h(data, 2) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    return entry.write8.call(entry.device, data);\r\n};\r\n\r\nIO.prototype.port_write16 = function(port_addr, data)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.write16 === this.empty_port_write || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"write16 port #\" + h(port_addr, 4) + \" <- \" + h(data, 4) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    return entry.write16.call(entry.device, data);\r\n};\r\n\r\nIO.prototype.port_write32 = function(port_addr, data)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.write32 === this.empty_port_write || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"write32 port #\" + h(port_addr, 4) + \" <- \" + h(data >>> 0, 8) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    return entry.write32.call(entry.device, data);\r\n};\r\n\r\nIO.prototype.port_read8 = function(port_addr)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.read8 === this.empty_port_read8 || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"read8 port  #\" + h(port_addr, 4) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    var value = entry.read8.call(entry.device);\r\n    dbg_assert(value < 0x100, \"8 bit port returned large value: \" + h(port_addr));\r\n    return value;\r\n};\r\n\r\nIO.prototype.port_read16 = function(port_addr)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.read16 === this.empty_port_read16 || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"read16 port  #\" + h(port_addr, 4) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    var value = entry.read16.call(entry.device);\r\n    dbg_assert(value < 0x10000 && value >= 0, \"16 bit port returned large value: \" + h(port_addr));\r\n    return value;\r\n};\r\n\r\nIO.prototype.port_read32 = function(port_addr)\r\n{\r\n    var entry = this.ports[port_addr];\r\n\r\n    if(entry.read32 === this.empty_port_read32 || LOG_ALL_IO)\r\n    {\r\n        dbg_log(\r\n            \"read32 port  #\" + h(port_addr, 4) + this.get_port_description(port_addr),\r\n            LOG_IO\r\n        );\r\n    }\r\n    var value = entry.read32.call(entry.device);\r\n    dbg_assert((value | 0) === value);\r\n    return value;\r\n};\r\n\r\n// via seabios ioport.h\r\nvar debug_port_list = {\r\n    0x0004: \"PORT_DMA_ADDR_2\",\r\n    0x0005: \"PORT_DMA_CNT_2\",\r\n    0x000a: \"PORT_DMA1_MASK_REG\",\r\n    0x000b: \"PORT_DMA1_MODE_REG\",\r\n    0x000c: \"PORT_DMA1_CLEAR_FF_REG\",\r\n    0x000d: \"PORT_DMA1_MASTER_CLEAR\",\r\n    0x0020: \"PORT_PIC1_CMD\",\r\n    0x0021: \"PORT_PIC1_DATA\",\r\n    0x0040: \"PORT_PIT_COUNTER0\",\r\n    0x0041: \"PORT_PIT_COUNTER1\",\r\n    0x0042: \"PORT_PIT_COUNTER2\",\r\n    0x0043: \"PORT_PIT_MODE\",\r\n    0x0060: \"PORT_PS2_DATA\",\r\n    0x0061: \"PORT_PS2_CTRLB\",\r\n    0x0064: \"PORT_PS2_STATUS\",\r\n    0x0070: \"PORT_CMOS_INDEX\",\r\n    0x0071: \"PORT_CMOS_DATA\",\r\n    0x0080: \"PORT_DIAG\",\r\n    0x0081: \"PORT_DMA_PAGE_2\",\r\n    0x0092: \"PORT_A20\",\r\n    0x00a0: \"PORT_PIC2_CMD\",\r\n    0x00a1: \"PORT_PIC2_DATA\",\r\n    0x00b2: \"PORT_SMI_CMD\",\r\n    0x00b3: \"PORT_SMI_STATUS\",\r\n    0x00d4: \"PORT_DMA2_MASK_REG\",\r\n    0x00d6: \"PORT_DMA2_MODE_REG\",\r\n    0x00da: \"PORT_DMA2_MASTER_CLEAR\",\r\n    0x00f0: \"PORT_MATH_CLEAR\",\r\n    0x0170: \"PORT_ATA2_CMD_BASE\",\r\n    0x01f0: \"PORT_ATA1_CMD_BASE\",\r\n    0x0278: \"PORT_LPT2\",\r\n    0x02e8: \"PORT_SERIAL4\",\r\n    0x02f8: \"PORT_SERIAL2\",\r\n    0x0374: \"PORT_ATA2_CTRL_BASE\",\r\n    0x0378: \"PORT_LPT1\",\r\n    0x03e8: \"PORT_SERIAL3\",\r\n    //0x03f4: \"PORT_ATA1_CTRL_BASE\",\r\n    0x03f0: \"PORT_FD_BASE\",\r\n    0x03f2: \"PORT_FD_DOR\",\r\n    0x03f4: \"PORT_FD_STATUS\",\r\n    0x03f5: \"PORT_FD_DATA\",\r\n    0x03f6: \"PORT_HD_DATA\",\r\n    0x03f7: \"PORT_FD_DIR\",\r\n    0x03f8: \"PORT_SERIAL1\",\r\n    0x0cf8: \"PORT_PCI_CMD\",\r\n    0x0cf9: \"PORT_PCI_REBOOT\",\r\n    0x0cfc: \"PORT_PCI_DATA\",\r\n    0x0402: \"PORT_BIOS_DEBUG\",\r\n    0x0510: \"PORT_QEMU_CFG_CTL\",\r\n    0x0511: \"PORT_QEMU_CFG_DATA\",\r\n    0xb000: \"PORT_ACPI_PM_BASE\",\r\n    0xb100: \"PORT_SMB_BASE\",\r\n    0x8900: \"PORT_BIOS_APM\"\r\n};\r\n\r\nIO.prototype.get_port_description = function(addr)\r\n{\r\n    if(debug_port_list[addr])\r\n    {\r\n        return \"  (\" + debug_port_list[addr] + \")\";\r\n    }\r\n    else\r\n    {\r\n        return \"\";\r\n    }\r\n};\r\n\r\n\r\n","\"use strict\";\r\n\r\n/** @constructor */\r\nfunction v86(bus)\r\n{\r\n    /** @type {boolean} */\r\n    this.running = false;\r\n\r\n    /** @type {boolean} */\r\n    this.stopped = false;\r\n\r\n    /** @type {CPU} */\r\n    this.cpu = new CPU(bus);\r\n\r\n    this.bus = bus;\r\n    bus.register(\"cpu-init\", this.init, this);\r\n    bus.register(\"cpu-run\", this.run, this);\r\n    bus.register(\"cpu-stop\", this.stop, this);\r\n    bus.register(\"cpu-restart\", this.restart, this);\r\n\r\n    this.register_tick();\r\n}\r\n\r\nv86.prototype.run = function()\r\n{\r\n    if(!this.running)\r\n    {\r\n        this.bus.send(\"emulator-started\");\r\n        this.fast_next_tick();\r\n    }\r\n};\r\n\r\nv86.prototype.do_tick = function()\r\n{\r\n    if(this.stopped)\r\n    {\r\n        this.stopped = this.running = false;\r\n        this.bus.send(\"emulator-stopped\");\r\n        return;\r\n    }\r\n\r\n    this.running = true;\r\n    var dt = this.cpu.main_run();\r\n\r\n    if(dt <= 0)\r\n    {\r\n        this.fast_next_tick();\r\n    }\r\n    else\r\n    {\r\n        this.next_tick(dt);\r\n    }\r\n};\r\n\r\nv86.prototype.stop = function()\r\n{\r\n    if(this.running)\r\n    {\r\n        this.stopped = true;\r\n    }\r\n};\r\n\r\nv86.prototype.destroy = function()\r\n{\r\n    this.unregister_tick();\r\n};\r\n\r\nv86.prototype.restart = function()\r\n{\r\n    this.cpu.reset();\r\n    this.cpu.load_bios();\r\n};\r\n\r\nv86.prototype.init = function(settings)\r\n{\r\n    this.cpu.init(settings, this.bus);\r\n    this.bus.send(\"emulator-ready\");\r\n};\r\n\r\nif(typeof setImmediate !== \"undefined\")\r\n{\r\n    /** @this {v86} */\r\n    var fast_next_tick = function()\r\n    {\r\n        setImmediate(() => { this.do_tick(); });\r\n    };\r\n\r\n    /** @this {v86} */\r\n    var register_tick = function() {};\r\n\r\n    /** @this {v86} */\r\n    var unregister_tick = function() {};\r\n}\r\nelse if(typeof window !== \"undefined\" && typeof postMessage !== \"undefined\")\r\n{\r\n    // setImmediate shim for the browser.\r\n    // TODO: Make this deactivatable, for other applications\r\n    //       using postMessage\r\n\r\n    /** @const */\r\n    let MAGIC_POST_MESSAGE = 0xAA55;\r\n\r\n    /** @this {v86} */\r\n    fast_next_tick = function()\r\n    {\r\n        window.postMessage(MAGIC_POST_MESSAGE, \"*\");\r\n    };\r\n\r\n    let tick;\r\n\r\n    /** @this {v86} */\r\n    register_tick = function()\r\n    {\r\n        tick = e =>\r\n        {\r\n            if(e.source === window && e.data === MAGIC_POST_MESSAGE)\r\n            {\r\n                this.do_tick();\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"message\", tick, false);\r\n    };\r\n\r\n    /** @this {v86} */\r\n    unregister_tick = function()\r\n    {\r\n        window.removeEventListener(\"message\", tick);\r\n        tick = null;\r\n    };\r\n}\r\nelse\r\n{\r\n    /** @this {v86} */\r\n    fast_next_tick = function()\r\n    {\r\n        setTimeout(() => { this.do_tick(); }, 0);\r\n    };\r\n\r\n    /** @this {v86} */\r\n    register_tick = function() {};\r\n\r\n    /** @this {v86} */\r\n    unregister_tick = function() {};\r\n}\r\n\r\nv86.prototype.fast_next_tick = fast_next_tick;\r\nv86.prototype.register_tick = register_tick;\r\nv86.prototype.unregister_tick = unregister_tick;\r\n\r\nif(typeof document !== \"undefined\" && typeof document.hidden === \"boolean\")\r\n{\r\n    /** @this {v86} */\r\n    var next_tick = function(t)\r\n    {\r\n        if(t < 4 || document.hidden)\r\n        {\r\n            // Avoid sleeping for 1 second (happens if page is not\r\n            // visible), it can break boot processes. Also don't try to\r\n            // sleep for less than 4ms, since the value is clamped up\r\n            this.fast_next_tick();\r\n        }\r\n        else\r\n        {\r\n            setTimeout(() => { this.do_tick(); }, t);\r\n        }\r\n    };\r\n}\r\nelse\r\n{\r\n    // In environments that aren't browsers, we might as well use setTimeout\r\n    /** @this {v86} */\r\n    next_tick = function(t)\r\n    {\r\n        setTimeout(() => { this.do_tick(); }, t);\r\n    };\r\n}\r\n\r\nv86.prototype.next_tick = next_tick;\r\n\r\nv86.prototype.save_state = function()\r\n{\r\n    // TODO: Should be implemented here, not on cpu\r\n    return this.cpu.save_state();\r\n};\r\n\r\nv86.prototype.restore_state = function(state)\r\n{\r\n    // TODO: Should be implemented here, not on cpu\r\n    return this.cpu.restore_state(state);\r\n};\r\n\r\n\r\nif(typeof performance === \"object\" && performance.now)\r\n{\r\n    v86.microtick = function()\r\n    {\r\n        return performance.now();\r\n    };\r\n}\r\n//else if(typeof process === \"object\" && process.hrtime)\r\n//{\r\n//    v86.microtick = function()\r\n//    {\r\n//        var t = process.hrtime();\r\n//        return t[0] * 1000 + t[1] / 1e6;\r\n//    };\r\n//}\r\nelse\r\n{\r\n    v86.microtick = Date.now;\r\n}\r\n","\"use strict\";\r\n\r\nvar v86util = v86util || {};\r\n\r\n// pad string with spaces on the right\r\nv86util.pads = function(str, len)\r\n{\r\n    str = str ? str + \"\" : \"\";\r\n\r\n    while(str.length < len)\r\n    {\r\n        str = str + \" \";\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\n// pad string with zeros on the left\r\nv86util.pad0 = function(str, len)\r\n{\r\n    str = str ? str + \"\" : \"\";\r\n\r\n    while(str.length < len)\r\n    {\r\n        str = \"0\" + str;\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * number to hex\r\n * @param {number} n\r\n * @param {number=} len\r\n * @return {string}\r\n */\r\nfunction h(n, len)\r\n{\r\n    if(!n)\r\n    {\r\n        var str = \"\";\r\n    }\r\n    else\r\n    {\r\n        var str = n.toString(16);\r\n    }\r\n\r\n    return \"0x\" + v86util.pad0(str.toUpperCase(), len || 1);\r\n}\r\n\r\n\r\nif(typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues)\r\n{\r\n    let rand_data = new Int32Array(1);\r\n\r\n    v86util.has_rand_int = function()\r\n    {\r\n        return true;\r\n    };\r\n\r\n    v86util.get_rand_int = function()\r\n    {\r\n        window.crypto.getRandomValues(rand_data);\r\n        return rand_data[0];\r\n    };\r\n}\r\nelse\r\n{\r\n    v86util.has_rand_int = function()\r\n    {\r\n        return false;\r\n    };\r\n\r\n    v86util.get_rand_int = function()\r\n    {\r\n        console.assert(false);\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Synchronous access to ArrayBuffer\r\n * @constructor\r\n */\r\nfunction SyncBuffer(buffer)\r\n{\r\n    this.buffer = buffer;\r\n    this.byteLength = buffer.byteLength;\r\n    this.onload = undefined;\r\n    this.onprogress = undefined;\r\n}\r\n\r\nSyncBuffer.prototype.load = function()\r\n{\r\n    this.onload && this.onload({ buffer: this.buffer });\r\n};\r\n\r\n/**\r\n * @param {number} start\r\n * @param {number} len\r\n * @param {function(!Uint8Array)} fn\r\n */\r\nSyncBuffer.prototype.get = function(start, len, fn)\r\n{\r\n    dbg_assert(start + len <= this.byteLength);\r\n    fn(new Uint8Array(this.buffer, start, len));\r\n};\r\n\r\n/**\r\n * @param {number} start\r\n * @param {!Uint8Array} slice\r\n * @param {function()} fn\r\n */\r\nSyncBuffer.prototype.set = function(start, slice, fn)\r\n{\r\n    dbg_assert(start + slice.byteLength <= this.byteLength);\r\n\r\n    new Uint8Array(this.buffer, start, slice.byteLength).set(slice);\r\n    fn();\r\n};\r\n\r\n/**\r\n * @param {function(!ArrayBuffer)} fn\r\n */\r\nSyncBuffer.prototype.get_buffer = function(fn)\r\n{\r\n    fn(this.buffer);\r\n};\r\n\r\n\r\n\r\n(function()\r\n{\r\n    if(typeof Math.clz32 === \"function\" && Math.clz32(0) === 32 &&\r\n       Math.clz32(0x12345) === 15 && Math.clz32(-1) === 0)\r\n    {\r\n        /**\r\n         * calculate the integer logarithm base 2 of a byte\r\n         * @param {number} x\r\n         * @return {number}\r\n         */\r\n        v86util.int_log2_byte = function(x)\r\n        {\r\n            dbg_assert(x > 0);\r\n            dbg_assert(x < 0x100);\r\n\r\n            return 31 - Math.clz32(x);\r\n        };\r\n\r\n        /**\r\n         * calculate the integer logarithm base 2\r\n         * @param {number} x\r\n         * @return {number}\r\n         */\r\n        v86util.int_log2 = function(x)\r\n        {\r\n            dbg_assert(x > 0);\r\n\r\n            return 31 - Math.clz32(x);\r\n        };\r\n\r\n        return;\r\n    }\r\n\r\n    var int_log2_table = new Int8Array(256);\r\n\r\n    for(var i = 0, b = -2; i < 256; i++)\r\n    {\r\n        if(!(i & i - 1))\r\n            b++;\r\n\r\n        int_log2_table[i] = b;\r\n    }\r\n\r\n    /**\r\n     * calculate the integer logarithm base 2 of a byte\r\n     * @param {number} x\r\n     * @return {number}\r\n     */\r\n    v86util.int_log2_byte = function(x)\r\n    {\r\n        dbg_assert(x > 0);\r\n        dbg_assert(x < 0x100);\r\n\r\n        return int_log2_table[x];\r\n    };\r\n\r\n    /**\r\n     * calculate the integer logarithm base 2\r\n     * @param {number} x\r\n     * @return {number}\r\n     */\r\n    v86util.int_log2 = function(x)\r\n    {\r\n        dbg_assert(x > 0);\r\n\r\n        // http://jsperf.com/integer-log2/6\r\n        var tt = x >>> 16;\r\n\r\n        if(tt)\r\n        {\r\n            var t = tt >>> 8;\r\n            if(t)\r\n            {\r\n                return 24 + int_log2_table[t];\r\n            }\r\n            else\r\n            {\r\n                return 16 + int_log2_table[tt];\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var t = x >>> 8;\r\n            if(t)\r\n            {\r\n                return 8 + int_log2_table[t];\r\n            }\r\n            else\r\n            {\r\n                return int_log2_table[x];\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nv86util.mul_low = v86util.imul_low =\r\n    typeof Math.imul === \"function\" &&\r\n    Math.imul(0x01234567, 0x89abcdef) === -0x36b1b9d7 ? Math.imul : function(a, b) {\r\n        b |= 0;\r\n        return (a & 0x003fffff) * b + ((a & 0xffc00000) * b | 0) | 0;\r\n    };\r\n\r\n\r\nv86util.imul_high = function(a, b) {\r\n    return Math.floor(a * b / 0x100000000) | 0;\r\n};\r\n\r\nv86util.mul_high = function(a, b) {\r\n    return Math.floor((a >>> 0) * (b >>> 0) / 0x100000000) | 0;\r\n};\r\n\r\n/**\r\n * @constructor\r\n *\r\n * Queue wrapper around Uint8Array\r\n * Used by devices such as the PS2 controller\r\n */\r\nfunction ByteQueue(size)\r\n{\r\n    var data = new Uint8Array(size),\r\n        start,\r\n        end;\r\n\r\n    dbg_assert((size & size - 1) === 0);\r\n\r\n    this.length = 0;\r\n\r\n    this.push = function(item)\r\n    {\r\n        if(this.length === size)\r\n        {\r\n            // intentional overwrite\r\n        }\r\n        else\r\n        {\r\n            this.length++;\r\n        }\r\n\r\n        data[end] = item;\r\n        end = end + 1 & size - 1;\r\n    };\r\n\r\n    this.shift = function()\r\n    {\r\n        if(!this.length)\r\n        {\r\n            return -1;\r\n        }\r\n        else\r\n        {\r\n            var item = data[start];\r\n\r\n            start = start + 1 & size - 1;\r\n            this.length--;\r\n\r\n            return item;\r\n        }\r\n    };\r\n\r\n    this.peek = function()\r\n    {\r\n        if(!this.length)\r\n        {\r\n            return -1;\r\n        }\r\n        else\r\n        {\r\n            return data[start];\r\n        }\r\n    };\r\n\r\n    this.clear = function()\r\n    {\r\n        start = 0;\r\n        end = 0;\r\n        this.length = 0;\r\n    };\r\n\r\n    this.clear();\r\n}\r\n\r\n\r\n/**\r\n * @constructor\r\n *\r\n * Queue wrapper around Float32Array\r\n * Used by devices such as the sound blaster sound card\r\n */\r\nfunction FloatQueue(size)\r\n{\r\n    this.size = size;\r\n    this.data = new Float32Array(size);\r\n    this.start = 0;\r\n    this.end = 0;\r\n    this.length = 0;\r\n\r\n    dbg_assert((size & size - 1) === 0);\r\n}\r\n\r\nFloatQueue.prototype.push = function(item)\r\n{\r\n    if(this.length === this.size)\r\n    {\r\n        // intentional overwrite\r\n        this.start = this.start + 1 & this.size - 1;\r\n    }\r\n    else\r\n    {\r\n        this.length++;\r\n    }\r\n\r\n    this.data[this.end] = item;\r\n    this.end = this.end + 1 & this.size - 1;\r\n};\r\n\r\nFloatQueue.prototype.shift = function()\r\n{\r\n    if(!this.length)\r\n    {\r\n        return undefined;\r\n    }\r\n    else\r\n    {\r\n        var item = this.data[this.start];\r\n\r\n        this.start = this.start + 1 & this.size - 1;\r\n        this.length--;\r\n\r\n        return item;\r\n    }\r\n};\r\n\r\nFloatQueue.prototype.shift_block = function(count)\r\n{\r\n    var slice = new Float32Array(count);\r\n\r\n    if(count > this.length)\r\n    {\r\n        count = this.length;\r\n    }\r\n    var slice_end = this.start + count;\r\n\r\n    var partial = this.data.subarray(this.start, slice_end);\r\n\r\n    slice.set(partial);\r\n    if(slice_end >= this.size)\r\n    {\r\n        slice_end -= this.size;\r\n        slice.set(this.data.subarray(0, slice_end), partial.length);\r\n    }\r\n    this.start = slice_end;\r\n\r\n    this.length -= count;\r\n\r\n    return slice;\r\n};\r\n\r\nFloatQueue.prototype.peek = function()\r\n{\r\n    if(!this.length)\r\n    {\r\n        return undefined;\r\n    }\r\n    else\r\n    {\r\n        return this.data[this.start];\r\n    }\r\n};\r\n\r\nFloatQueue.prototype.clear = function()\r\n{\r\n    this.start = 0;\r\n    this.end = 0;\r\n    this.length = 0;\r\n};\r\n\r\n\r\n/**\r\n * Simple circular queue for logs\r\n *\r\n * @param {number} size\r\n * @constructor\r\n */\r\nfunction CircularQueue(size)\r\n{\r\n    this.data = [];\r\n    this.index = 0;\r\n    this.size = size;\r\n}\r\n\r\nCircularQueue.prototype.add = function(item)\r\n{\r\n    this.data[this.index] = item;\r\n    this.index = (this.index + 1) % this.size;\r\n};\r\n\r\nCircularQueue.prototype.toArray = function()\r\n{\r\n    return [].slice.call(this.data, this.index).concat([].slice.call(this.data, 0, this.index));\r\n};\r\n\r\nCircularQueue.prototype.clear = function()\r\n{\r\n    this.data = [];\r\n    this.index = 0;\r\n};\r\n\r\n/**\r\n * @param {Array} new_data\r\n */\r\nCircularQueue.prototype.set = function(new_data)\r\n{\r\n    this.data = new_data;\r\n    this.index = 0;\r\n};\r\n\r\nfunction dump_file(ab, name)\r\n{\r\n    if(!(ab instanceof Array))\r\n    {\r\n        ab = [ab];\r\n    }\r\n\r\n    var blob = new Blob(ab);\r\n    download(blob, name);\r\n}\r\n\r\nfunction download(file_or_blob, name)\r\n{\r\n    var a = document.createElement(\"a\");\r\n    a[\"download\"] = name;\r\n    a.href = window.URL.createObjectURL(file_or_blob);\r\n    a.dataset[\"downloadurl\"] = [\"application/octet-stream\", a[\"download\"], a.href].join(\":\");\r\n\r\n    if(document.createEvent)\r\n    {\r\n        var ev = document.createEvent(\"MouseEvent\");\r\n        ev.initMouseEvent(\"click\", true, true, window,\r\n                          0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(ev);\r\n    }\r\n    else\r\n    {\r\n        a.click();\r\n    }\r\n\r\n    window.URL.revokeObjectURL(a.href);\r\n}\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar FPU_LOG_OP = false;\r\n\r\nvar\r\n    /** @const */\r\n    FPU_C0 = 0x100,\r\n    /** @const */\r\n    FPU_C1 = 0x200,\r\n    /** @const */\r\n    FPU_C2 = 0x400,\r\n    /** @const */\r\n    FPU_C3 = 0x4000,\r\n    /** @const */\r\n    FPU_RESULT_FLAGS = FPU_C0 | FPU_C1 | FPU_C2 | FPU_C3,\r\n    /** @const */\r\n    FPU_STACK_TOP = 0x3800;\r\n\r\nvar\r\n    // precision, round & infinity control\r\n    /** @const */\r\n    FPU_PC = 3 << 8,\r\n    /** @const */\r\n    FPU_RC = 3 << 10,\r\n    /** @const */\r\n    FPU_IF = 1 << 12;\r\n\r\n// exception bits in the status word\r\nvar\r\n    /** @const */\r\n    FPU_EX_SF = 1 << 6,\r\n    /** @const */\r\n    FPU_EX_P = 1 << 5,\r\n    /** @const */\r\n    FPU_EX_U = 1 << 4,\r\n    /** @const */\r\n    FPU_EX_O = 1 << 3,\r\n    /** @const */\r\n    FPU_EX_Z = 1 << 2,\r\n    /** @const */\r\n    FPU_EX_D = 1 << 1,\r\n    /** @const */\r\n    FPU_EX_I = 1 << 0;\r\n\r\nvar\r\n    /** @const */\r\n    TWO_POW_63 =  0x8000000000000000;\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction FPU(cpu)\r\n{\r\n    // TODO:\r\n    // - Precision Control\r\n    // - QNaN, unordered comparison\r\n    // - Exceptions\r\n\r\n    this.cpu = cpu;\r\n\r\n    // Why no Float80Array :-(\r\n    this.st = new Float64Array(8);\r\n\r\n    // used for conversion\r\n    /** @const */ this.float32 = new Float32Array(1);\r\n    /** @const */ this.float32_byte = new Uint8Array(this.float32.buffer);\r\n    /** @const */ this.float32_int = new Int32Array(this.float32.buffer);\r\n    /** @const */ this.float64 = new Float64Array(1);\r\n    /** @const */ this.float64_byte = new Uint8Array(this.float64.buffer);\r\n    /** @const */ this.float64_int = new Int32Array(this.float64.buffer);\r\n\r\n    /** @const */ this.st8 = new Uint8Array(this.st.buffer);\r\n    /** @const */ this.st32 = new Int32Array(this.st.buffer);\r\n\r\n\r\n    // bitmap of which stack registers are empty\r\n    this.stack_empty = 0xff;\r\n    this.stack_ptr = 0;\r\n\r\n    this.control_word = 0x37F;\r\n    this.status_word = 0;\r\n    this.fpu_ip = 0;\r\n    this.fpu_ip_selector = 0;\r\n    this.fpu_opcode = 0;\r\n    this.fpu_dp = 0;\r\n    this.fpu_dp_selector = 0;\r\n\r\n    /** @const */\r\n    this.indefinite_nan = NaN;\r\n\r\n    /** @const */\r\n    this.constants = new Float64Array([\r\n        1, Math.log(10) / Math.LN2, Math.LOG2E, Math.PI,\r\n        Math.log(2) / Math.LN10, Math.LN2, 0\r\n    ]);\r\n\r\n}\r\n\r\nFPU.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.st;\r\n    state[1] = this.stack_empty;\r\n    state[2] = this.stack_ptr;\r\n    state[3] = this.control_word;\r\n    state[4] = this.fpu_dp_selector;\r\n    state[5] = this.fpu_ip;\r\n    state[6] = this.fpu_ip_selector;\r\n    state[7] = this.fpu_dp;\r\n    state[8] = this.fpu_dp_selector;\r\n    state[9] = this.fpu_opcode;\r\n\r\n    return state;\r\n};\r\n\r\nFPU.prototype.set_state = function(state)\r\n{\r\n    this.st.set(state[0]);\r\n    this.stack_empty = state[1];\r\n    this.stack_ptr = state[2];\r\n    this.control_word = state[3];\r\n    this.fpu_dp_selector = state[4];\r\n    this.fpu_ip = state[5];\r\n    this.fpu_ip_selector = state[6];\r\n    this.fpu_dp = state[7];\r\n    this.fpu_dp_selector = state[8];\r\n    this.fpu_opcode = state[9];\r\n};\r\n\r\nFPU.prototype.fpu_unimpl = function()\r\n{\r\n    dbg_trace();\r\n    if(DEBUG) throw \"fpu: unimplemented\";\r\n    else this.cpu.trigger_ud();\r\n}\r\n\r\nFPU.prototype.stack_fault = function()\r\n{\r\n    // TODO: Interrupt\r\n    this.status_word |= FPU_EX_SF | FPU_EX_I;\r\n}\r\n\r\nFPU.prototype.invalid_arithmatic = function()\r\n{\r\n    this.status_word |= FPU_EX_I;\r\n}\r\n\r\nFPU.prototype.fcom = function(y)\r\n{\r\n    var x = this.get_st0();\r\n\r\n    this.status_word &= ~FPU_RESULT_FLAGS;\r\n\r\n    if(x > y)\r\n    {\r\n    }\r\n    else if(y > x)\r\n    {\r\n        this.status_word |= FPU_C0;\r\n    }\r\n    else if(x === y)\r\n    {\r\n        this.status_word |= FPU_C3;\r\n    }\r\n    else\r\n    {\r\n        this.status_word |= FPU_C0 | FPU_C2 | FPU_C3;\r\n    }\r\n}\r\n\r\nFPU.prototype.fucom = function(y)\r\n{\r\n    // TODO\r\n    this.fcom(y);\r\n}\r\n\r\n\r\nFPU.prototype.fcomi = function(y)\r\n{\r\n    var x = this.st[this.stack_ptr];\r\n\r\n    this.cpu.flags_changed &= ~(1 | flag_parity | flag_zero);\r\n    this.cpu.flags &= ~(1 | flag_parity | flag_zero);\r\n\r\n    if(x > y)\r\n    {\r\n    }\r\n    else if(y > x)\r\n    {\r\n        this.cpu.flags |= 1;\r\n    }\r\n    else if(x === y)\r\n    {\r\n        this.cpu.flags |= flag_zero;\r\n    }\r\n    else\r\n    {\r\n        this.cpu.flags |= 1 | flag_parity | flag_zero;\r\n    }\r\n}\r\n\r\nFPU.prototype.fucomi = function(y)\r\n{\r\n    // TODO\r\n    this.fcomi(y);\r\n}\r\n\r\nFPU.prototype.ftst = function(x)\r\n{\r\n    this.status_word &= ~FPU_RESULT_FLAGS;\r\n\r\n    if(isNaN(x))\r\n    {\r\n        this.status_word |= FPU_C3 | FPU_C2 | FPU_C0;\r\n    }\r\n    else if(x === 0)\r\n    {\r\n        this.status_word |= FPU_C3;\r\n    }\r\n    else if(x < 0)\r\n    {\r\n        this.status_word |= FPU_C0;\r\n    }\r\n\r\n    // TODO: unordered (x is nan, etc)\r\n}\r\n\r\nFPU.prototype.fxam = function(x)\r\n{\r\n    this.status_word &= ~FPU_RESULT_FLAGS;\r\n    this.status_word |= this.sign(0) << 9;\r\n\r\n    if(this.stack_empty >> this.stack_ptr & 1)\r\n    {\r\n        this.status_word |= FPU_C3 | FPU_C0;\r\n    }\r\n    else if(isNaN(x))\r\n    {\r\n        this.status_word |= FPU_C0;\r\n    }\r\n    else if(x === 0)\r\n    {\r\n        this.status_word |= FPU_C3;\r\n    }\r\n    else if(x === Infinity || x === -Infinity)\r\n    {\r\n        this.status_word |= FPU_C2 | FPU_C0;\r\n    }\r\n    else\r\n    {\r\n        this.status_word |= FPU_C2;\r\n    }\r\n    // TODO:\r\n    // Unsupported, Denormal\r\n}\r\n\r\nFPU.prototype.finit = function()\r\n{\r\n    this.control_word = 0x37F;\r\n    this.status_word = 0;\r\n    this.fpu_ip = 0;\r\n    this.fpu_dp = 0;\r\n    this.fpu_opcode = 0;\r\n\r\n    this.stack_empty = 0xFF;\r\n    this.stack_ptr = 0;\r\n}\r\n\r\nFPU.prototype.load_status_word = function()\r\n{\r\n    return this.status_word & ~(7 << 11) | this.stack_ptr << 11;\r\n}\r\n\r\nFPU.prototype.set_status_word = function(sw)\r\n{\r\n    this.status_word = sw & ~(7 << 11);\r\n    this.stack_ptr = sw >> 11 & 7;\r\n}\r\n\r\nFPU.prototype.load_tag_word = function()\r\n{\r\n    var tag_word = 0,\r\n        value;\r\n\r\n    for(var i = 0; i < 8; i++)\r\n    {\r\n        value = this.st[i];\r\n\r\n        if(this.stack_empty >> i & 1)\r\n        {\r\n            tag_word |= 3 << (i << 1);\r\n        }\r\n        else if(value === 0)\r\n        {\r\n            tag_word |= 1 << (i << 1);\r\n        }\r\n        else if(!isFinite(value))\r\n        {\r\n            tag_word |= 2 << (i << 1);\r\n        }\r\n    }\r\n\r\n    //dbg_log(\"load  tw=\" + h(tag_word) + \" se=\" + h(this.stack_empty) + \" sp=\" + this.stack_ptr, LOG_FPU);\r\n\r\n    return tag_word;\r\n}\r\n\r\nFPU.prototype.set_tag_word = function(tag_word)\r\n{\r\n    this.stack_empty = 0;\r\n\r\n    for(var i = 0; i < 8; i++)\r\n    {\r\n        this.stack_empty |= (tag_word >> i) & (tag_word >> i + 1) & 1 << i;\r\n    }\r\n\r\n    //dbg_log(\"set_tag_word  tw=\" + h(tag_word) + \" se=\" + h(this.stack_empty), LOG_FPU);\r\n}\r\n\r\nFPU.prototype.fstenv = function(addr)\r\n{\r\n    if(this.cpu.is_osize_32())\r\n    {\r\n        this.cpu.writable_or_pagefault(addr, 26);\r\n\r\n        this.cpu.safe_write16(addr, this.control_word);\r\n\r\n        this.cpu.safe_write16(addr + 4, this.load_status_word());\r\n        this.cpu.safe_write16(addr + 8, this.load_tag_word());\r\n\r\n        this.cpu.safe_write32(addr + 12, this.fpu_ip);\r\n        this.cpu.safe_write16(addr + 16, this.fpu_ip_selector);\r\n        this.cpu.safe_write16(addr + 18, this.fpu_opcode);\r\n        this.cpu.safe_write32(addr + 20, this.fpu_dp);\r\n        this.cpu.safe_write16(addr + 24, this.fpu_dp_selector);\r\n    }\r\n    else\r\n    {\r\n        this.fpu_unimpl();\r\n    }\r\n}\r\n\r\nFPU.prototype.fldenv = function(addr)\r\n{\r\n    if(this.cpu.is_osize_32())\r\n    {\r\n        this.control_word = this.cpu.safe_read16(addr);\r\n\r\n        this.set_status_word(this.cpu.safe_read16(addr + 4));\r\n        this.set_tag_word(this.cpu.safe_read16(addr + 8));\r\n\r\n        this.fpu_ip = this.cpu.safe_read32s(addr + 12);\r\n        this.fpu_ip_selector = this.cpu.safe_read16(addr + 16);\r\n        this.fpu_opcode = this.cpu.safe_read16(addr + 18);\r\n        this.fpu_dp = this.cpu.safe_read32s(addr + 20);\r\n        this.fpu_dp_selector = this.cpu.safe_read16(addr + 24);\r\n    }\r\n    else\r\n    {\r\n        this.fpu_unimpl();\r\n    }\r\n}\r\n\r\nFPU.prototype.fsave = function(addr)\r\n{\r\n    this.cpu.writable_or_pagefault(addr, 108);\r\n\r\n    this.fstenv(addr);\r\n    addr += 28;\r\n\r\n    for(var i = 0; i < 8; i++)\r\n    {\r\n        this.store_m80(addr, this.st[this.stack_ptr + i & 7]);\r\n        addr += 10;\r\n    }\r\n\r\n    //dbg_log(\"save st=\" + this.stack_ptr + \" \" + [].slice.call(this.st), LOG_FPU);\r\n\r\n    this.finit();\r\n}\r\n\r\nFPU.prototype.frstor = function(addr)\r\n{\r\n    this.fldenv(addr);\r\n    addr += 28;\r\n\r\n    for(var i = 0; i < 8; i++)\r\n    {\r\n        this.st[(i + this.stack_ptr) & 7] = this.load_m80(addr);\r\n        addr += 10;\r\n    }\r\n\r\n    //dbg_log(\"rstor st=\" + this.stack_ptr + \" \" + [].slice.call(this.st), LOG_FPU);\r\n}\r\n\r\nFPU.prototype.fxtract = function()\r\n{\r\n    this.float64[0] = this.get_st0();\r\n\r\n    var exponent = ((this.float64_byte[7] & 0x7F) << 4 | this.float64_byte[6] >> 4) - 0x3FF;\r\n\r\n    this.float64_byte[7] = 0x3F | (this.float64_byte[7] & 0x80);\r\n    this.float64_byte[6] |= 0xF0;\r\n\r\n    this.st[this.stack_ptr] = exponent;\r\n    this.push(this.float64[0]);\r\n};\r\n\r\nFPU.prototype.integer_round = function(f)\r\n{\r\n    var rc = this.control_word >> 10 & 3;\r\n    return this.cpu.integer_round(f, rc);\r\n}\r\n\r\nFPU.prototype.truncate = function(x)\r\n{\r\n    return x > 0 ? Math.floor(x) : Math.ceil(x);\r\n}\r\n\r\nFPU.prototype.push = function(x)\r\n{\r\n    this.stack_ptr = this.stack_ptr - 1 & 7;\r\n\r\n    if(this.stack_empty >> this.stack_ptr & 1)\r\n    {\r\n        this.status_word &= ~FPU_C1;\r\n        this.stack_empty &= ~(1 << this.stack_ptr);\r\n        this.st[this.stack_ptr] = x;\r\n    }\r\n    else\r\n    {\r\n        this.status_word |= FPU_C1;\r\n        this.stack_fault();\r\n        this.st[this.stack_ptr] = this.indefinite_nan;\r\n    }\r\n}\r\n\r\nFPU.prototype.pop = function()\r\n{\r\n    this.stack_empty |= 1 << this.stack_ptr;\r\n    this.stack_ptr = this.stack_ptr + 1 & 7;\r\n}\r\n\r\nFPU.prototype.get_sti = function(i)\r\n{\r\n    dbg_assert(typeof i === \"number\" && i >= 0 && i < 8);\r\n\r\n    i = i + this.stack_ptr & 7;\r\n\r\n    if(this.stack_empty >> i & 1)\r\n    {\r\n        this.status_word &= ~FPU_C1;\r\n        this.stack_fault();\r\n        return this.indefinite_nan;\r\n    }\r\n    else\r\n    {\r\n        return this.st[i];\r\n    }\r\n}\r\n\r\nFPU.prototype.get_st0 = function()\r\n{\r\n    if(this.stack_empty >> this.stack_ptr & 1)\r\n    {\r\n        this.status_word &= ~FPU_C1;\r\n        this.stack_fault();\r\n        return this.indefinite_nan;\r\n    }\r\n    else\r\n    {\r\n        return this.st[this.stack_ptr];\r\n    }\r\n}\r\n\r\nFPU.prototype.load_m80 = function(addr)\r\n{\r\n    var exponent = this.cpu.safe_read16(addr + 8),\r\n        sign,\r\n        low = this.cpu.safe_read32s(addr) >>> 0,\r\n        high = this.cpu.safe_read32s(addr + 4) >>> 0;\r\n\r\n    sign = exponent >> 15;\r\n    exponent &= ~0x8000;\r\n\r\n    if(exponent === 0)\r\n    {\r\n        // TODO: denormal numbers\r\n        return 0;\r\n    }\r\n\r\n    if(exponent < 0x7FFF)\r\n    {\r\n        exponent -= 0x3FFF;\r\n    }\r\n    else\r\n    {\r\n        // TODO: NaN, Infinity\r\n        //dbg_log(\"Load m80 TODO\", LOG_FPU);\r\n        this.float64_byte[7] = 0x7F | sign << 7;\r\n        this.float64_byte[6] = 0xF0 | high >> 30 << 3 & 0x08;\r\n\r\n        this.float64_byte[5] = 0;\r\n        this.float64_byte[4] = 0;\r\n\r\n        this.float64_int[0] = 0;\r\n\r\n        return this.float64[0];\r\n    }\r\n\r\n    // Note: some bits might be lost at this point\r\n    var mantissa = low + 0x100000000 * high;\r\n\r\n    if(sign)\r\n    {\r\n        mantissa = -mantissa;\r\n    }\r\n\r\n    //console.log(\"m: \" + mantissa);\r\n    //console.log(\"e: \" + exponent);\r\n    //console.log(\"s: \" + this.sign);\r\n    //console.log(\"f: \" + mantissa * Math.pow(2, exponent - 63));\r\n\r\n    // Simply compute the 64 bit floating point number.\r\n    // An alternative write the mantissa, sign and exponent in the\r\n    // float64_byte and return float64[0]\r\n\r\n    return mantissa * Math.pow(2, exponent - 63);\r\n}\r\n\r\nFPU.prototype.store_m80 = function(addr, n)\r\n{\r\n    this.float64[0] = n;\r\n\r\n    var sign = this.float64_byte[7] & 0x80,\r\n        exponent = (this.float64_byte[7] & 0x7f) << 4 | this.float64_byte[6] >> 4,\r\n        low,\r\n        high;\r\n\r\n    if(exponent === 0x7FF)\r\n    {\r\n        // all bits set (NaN and infinity)\r\n        exponent = 0x7FFF;\r\n        low = 0;\r\n        high = 0x80000000 | (this.float64_int[1] & 0x80000) << 11;\r\n    }\r\n    else if(exponent === 0)\r\n    {\r\n        // zero and denormal numbers\r\n        // Just assume zero for now\r\n        low = 0;\r\n        high = 0;\r\n    }\r\n    else\r\n    {\r\n        exponent += 0x3FFF - 0x3FF;\r\n\r\n        // does the mantissa need to be adjusted?\r\n        low = this.float64_int[0] << 11;\r\n        high = 0x80000000 | (this.float64_int[1] & 0xFFFFF) << 11 | (this.float64_int[0] >>> 21);\r\n    }\r\n\r\n    dbg_assert(exponent >= 0 && exponent < 0x8000);\r\n\r\n    this.cpu.safe_write32(addr, low);\r\n    this.cpu.safe_write32(addr + 4, high);\r\n\r\n    this.cpu.safe_write16(addr + 8, sign << 8 | exponent);\r\n}\r\n\r\nFPU.prototype.load_m64 = function(addr)\r\n{\r\n    var low = this.cpu.safe_read32s(addr),\r\n        high = this.cpu.safe_read32s(addr + 4);\r\n\r\n    this.float64_int[0] = low;\r\n    this.float64_int[1] = high;\r\n\r\n    return this.float64[0];\r\n};\r\n\r\nFPU.prototype.store_m64 = function(addr, i)\r\n{\r\n    this.cpu.writable_or_pagefault(addr, 8);\r\n\r\n    this.float64[0] = this.get_sti(i);\r\n\r\n    this.cpu.safe_write32(addr, this.float64_int[0]);\r\n    this.cpu.safe_write32(addr + 4, this.float64_int[1]);\r\n};\r\n\r\nFPU.prototype.load_m32 = function(addr)\r\n{\r\n    this.float32_int[0] = this.cpu.safe_read32s(addr);\r\n\r\n    return this.float32[0];\r\n};\r\n\r\nFPU.prototype.store_m32 = function(addr, x)\r\n{\r\n    this.float32[0] = x;\r\n\r\n    this.cpu.safe_write32(addr, this.float32_int[0]);\r\n};\r\n\r\n// sign of a number on the stack\r\nFPU.prototype.sign = function(i)\r\n{\r\n    return this.st8[(this.stack_ptr + i & 7) << 3 | 7] >> 7;\r\n};\r\n\r\n\r\nFPU.prototype.dbg_log_fpu_op = function(op, imm8)\r\n{\r\n    if(!FPU_LOG_OP)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(imm8 >= 0xC0)\r\n    {\r\n        dbg_log(h(op, 2) + \" \" + h(imm8, 2) + \"/\" + (imm8 >> 3 & 7) + \"/\" + (imm8 & 7) +\r\n                \" @\" + h(this.cpu.instruction_pointer >>> 0, 8) + \" sp=\" + this.stack_ptr + \" st=\" + h(this.stack_empty, 2), LOG_FPU);\r\n    }\r\n    else\r\n    {\r\n        dbg_log(h(op, 2) + \" /\" + (imm8 >> 3 & 7) +\r\n                \"     @\" + h(this.cpu.instruction_pointer >>> 0, 8) + \" sp=\" + this.stack_ptr + \" st=\" + h(this.stack_empty, 2), LOG_FPU);\r\n    }\r\n}\r\n\r\n\r\nFPU.prototype.fwait = function()\r\n{\r\n    // NOP unless FPU instructions run in parallel with CPU instructions\r\n};\r\n\r\n\r\nFPU.prototype.op_D8_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xD8, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7,\r\n        sti = this.get_sti(low),\r\n        st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[this.stack_ptr] = st0 + sti;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[this.stack_ptr] = st0 * sti;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(sti);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(sti);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsub\r\n            this.st[this.stack_ptr] = st0 - sti;\r\n            break;\r\n        case 5:\r\n            // fsubr\r\n            this.st[this.stack_ptr] = sti - st0;\r\n            break;\r\n        case 6:\r\n            // fdiv\r\n            this.st[this.stack_ptr] = st0 / sti;\r\n            break;\r\n        case 7:\r\n            // fdivr\r\n            this.st[this.stack_ptr] = sti / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_D8_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xD8, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        m32 = this.load_m32(addr);\r\n\r\n    var st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[this.stack_ptr] = st0 + m32;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[this.stack_ptr] = st0 * m32;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(m32);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(m32);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsub\r\n            this.st[this.stack_ptr] = st0 - m32;\r\n            break;\r\n        case 5:\r\n            // fsubr\r\n            this.st[this.stack_ptr] = m32 - st0;\r\n            break;\r\n        case 6:\r\n            // fdiv\r\n            this.st[this.stack_ptr] = st0 / m32;\r\n            break;\r\n        case 7:\r\n            // fdivr\r\n            this.st[this.stack_ptr] = m32 / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_D9_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xD9, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fld\r\n            var sti = this.get_sti(low);\r\n            this.push(sti);\r\n            break;\r\n        case 1:\r\n            // fxch\r\n            var sti = this.get_sti(low);\r\n\r\n            this.st[this.stack_ptr + low & 7] = this.get_st0();\r\n            this.st[this.stack_ptr] = sti;\r\n            break;\r\n        case 2:\r\n            switch(low)\r\n            {\r\n                case 0:\r\n                    // fnop\r\n                    break;\r\n                default:\r\n                    dbg_log(low);\r\n                    this.fpu_unimpl();\r\n            }\r\n            break;\r\n        case 3:\r\n            // fstp1\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 4:\r\n            var st0 = this.get_st0();\r\n\r\n            switch(low)\r\n            {\r\n                case 0:\r\n                    // fchs\r\n                    this.st[this.stack_ptr] = -st0;\r\n                    break;\r\n                case 1:\r\n                    // fabs\r\n                    this.st[this.stack_ptr] = Math.abs(st0);\r\n                    break;\r\n                case 4:\r\n                    this.ftst(st0);\r\n                    break;\r\n                case 5:\r\n                    this.fxam(st0);\r\n                    break;\r\n                default:\r\n                    dbg_log(low);\r\n                    this.fpu_unimpl();\r\n            }\r\n            break;\r\n        case 5:\r\n            this.push(this.constants[low]);\r\n            break;\r\n        case 6:\r\n            var st0 = this.get_st0();\r\n\r\n            switch(low)\r\n            {\r\n                case 0:\r\n                    // f2xm1\r\n                    this.st[this.stack_ptr] = Math.pow(2, st0) - 1;\r\n                    break;\r\n                case 1:\r\n                    // fyl2x\r\n                    this.st[this.stack_ptr + 1 & 7] = this.get_sti(1) * Math.log(st0) / Math.LN2;\r\n                    this.pop();\r\n                    break;\r\n                case 2:\r\n                    // fptan\r\n                    this.st[this.stack_ptr] = Math.tan(st0);\r\n                    this.push(1); // no bug: push constant 1\r\n                    break;\r\n                case 3:\r\n                    // fpatan\r\n                    this.st[this.stack_ptr + 1 & 7] = Math.atan2(this.get_sti(1), st0);\r\n                    this.pop();\r\n                    break;\r\n                case 4:\r\n                    this.fxtract();\r\n                    break;\r\n                case 5:\r\n                    // fprem1\r\n                    this.st[this.stack_ptr] = st0 % this.get_sti(1);\r\n                    break;\r\n                case 6:\r\n                    // fdecstp\r\n                    this.stack_ptr = this.stack_ptr - 1 & 7;\r\n                    this.status_word &= ~FPU_C1;\r\n                    break;\r\n                case 7:\r\n                    // fincstp\r\n                    this.stack_ptr = this.stack_ptr + 1 & 7;\r\n                    this.status_word &= ~FPU_C1;\r\n                    break;\r\n                default:\r\n                    dbg_assert(false);\r\n            }\r\n            break;\r\n        case 7:\r\n            var st0 = this.get_st0();\r\n\r\n            switch(low)\r\n            {\r\n                case 0:\r\n                    // fprem\r\n                    var st1 = this.get_sti(1);\r\n                    var fprem_quotient = Math.trunc(st0 / st1);\r\n                    this.st[this.stack_ptr] = st0 % st1;\r\n\r\n                    this.status_word &= ~(FPU_C0 | FPU_C1 | FPU_C3);\r\n                    if (fprem_quotient & 1) {\r\n                        this.status_word |= FPU_C1;\r\n                    }\r\n                    if (fprem_quotient & (1 << 1)) {\r\n                        this.status_word |= FPU_C3;\r\n                    }\r\n                    if (fprem_quotient & (1 << 2)) {\r\n                        this.status_word |= FPU_C0;\r\n                    }\r\n\r\n                    this.status_word &= ~FPU_C2;\r\n                    break;\r\n                case 1:\r\n                    // fyl2xp1: y * log2(x+1) and pop\r\n                    this.st[this.stack_ptr + 1 & 7] = this.get_sti(1) * Math.log(st0 + 1) / Math.LN2;\r\n                    this.pop();\r\n                    break;\r\n                case 2:\r\n                    this.st[this.stack_ptr] = Math.sqrt(st0);\r\n                    break;\r\n                case 3:\r\n                    this.st[this.stack_ptr] = Math.sin(st0);\r\n                    this.push(Math.cos(st0));\r\n                    break;\r\n                case 4:\r\n                    // frndint\r\n                    this.st[this.stack_ptr] = this.integer_round(st0);\r\n                    break;\r\n                case 5:\r\n                    // fscale\r\n                    this.st[this.stack_ptr] = st0 * Math.pow(2, this.truncate(this.get_sti(1)));\r\n                    break;\r\n                case 6:\r\n                    this.st[this.stack_ptr] = Math.sin(st0);\r\n                    break;\r\n                case 7:\r\n                    this.st[this.stack_ptr] = Math.cos(st0);\r\n                    break;\r\n                default:\r\n                    dbg_assert(false);\r\n            }\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_D9_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xD9, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fld\r\n            var data = this.load_m32(addr);\r\n            this.push(data);\r\n            break;\r\n        case 1:\r\n            // not defined\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 2:\r\n            // fst\r\n            this.store_m32(addr, this.get_st0());\r\n            break;\r\n        case 3:\r\n            // fstp\r\n            this.store_m32(addr, this.get_st0());\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            this.fldenv(addr);\r\n            break;\r\n        case 5:\r\n            // fldcw\r\n            var word = this.cpu.safe_read16(addr);\r\n            this.control_word = word;\r\n            break;\r\n        case 6:\r\n            this.fstenv(addr);\r\n            break;\r\n        case 7:\r\n            // fstcw\r\n            this.cpu.safe_write16(addr, this.control_word);\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DA_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDA, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fcmovb\r\n            if(this.cpu.test_b())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 1:\r\n            // fcmove\r\n            if(this.cpu.test_z())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 2:\r\n            // fcmovbe\r\n            if(this.cpu.test_be())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 3:\r\n            // fcmovu\r\n            if(this.cpu.test_p())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 5:\r\n            if(low === 1)\r\n            {\r\n                // fucompp\r\n                this.fucom(this.get_sti(1));\r\n                this.pop();\r\n                this.pop();\r\n            }\r\n            else\r\n            {\r\n                dbg_log(mod); this.fpu_unimpl();\r\n            }\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            this.fpu_unimpl();\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DA_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDA, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        m32 = this.cpu.safe_read32s(addr);\r\n\r\n    var st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[this.stack_ptr] = st0 + m32;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[this.stack_ptr] = st0 * m32;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(m32);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(m32);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsub\r\n            this.st[this.stack_ptr] = st0 - m32;\r\n            break;\r\n        case 5:\r\n            // fsubr\r\n            this.st[this.stack_ptr] = m32 - st0;\r\n            break;\r\n        case 6:\r\n            // fdiv\r\n            this.st[this.stack_ptr] = st0 / m32;\r\n            break;\r\n        case 7:\r\n            // fdivr\r\n            this.st[this.stack_ptr] = m32 / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DB_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDB, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fcmovnb\r\n            if(!this.cpu.test_b())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 1:\r\n            // fcmovne\r\n            if(!this.cpu.test_z())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 2:\r\n            // fcmovnbe\r\n            if(!this.cpu.test_be())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 3:\r\n            // fcmovnu\r\n            if(!this.cpu.test_p())\r\n            {\r\n                this.st[this.stack_ptr] = this.get_sti(low);\r\n                this.stack_empty &= ~(1 << this.stack_ptr);\r\n            }\r\n            break;\r\n        case 4:\r\n            if(imm8 === 0xE3)\r\n            {\r\n                this.finit();\r\n            }\r\n            else if(imm8 === 0xE4)\r\n            {\r\n                // fsetpm\r\n                // treat as nop\r\n            }\r\n            else if(imm8 === 0xE1)\r\n            {\r\n                // fdisi\r\n                // also treat as nop\r\n            }\r\n            else if(imm8 === 0xE2)\r\n            {\r\n                // fclex\r\n                this.status_word = 0;\r\n            }\r\n            else\r\n            {\r\n                dbg_log(h(imm8));\r\n                this.fpu_unimpl();\r\n            }\r\n            break;\r\n        case 5:\r\n            this.fucomi(this.get_sti(low));\r\n            break;\r\n        case 6:\r\n            this.fcomi(this.get_sti(low));\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            this.fpu_unimpl();\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DB_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDB, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fild\r\n            var int32 = this.cpu.safe_read32s(addr);\r\n            this.push(int32);\r\n            break;\r\n        case 2:\r\n            // fist\r\n            var st0 = this.integer_round(this.get_st0());\r\n            if(st0 <= 0x7FFFFFFF && st0 >= -0x80000000)\r\n            {\r\n                // TODO: Invalid operation\r\n                this.cpu.safe_write32(addr, st0);\r\n            }\r\n            else\r\n            {\r\n                this.invalid_arithmatic();\r\n                this.cpu.safe_write32(addr, 0x80000000|0);\r\n            }\r\n            break;\r\n        case 3:\r\n            // fistp\r\n            var st0 = this.integer_round(this.get_st0());\r\n            if(st0 <= 0x7FFFFFFF && st0 >= -0x80000000)\r\n            {\r\n                this.cpu.safe_write32(addr, st0);\r\n            }\r\n            else\r\n            {\r\n                this.invalid_arithmatic();\r\n                this.cpu.safe_write32(addr, 0x80000000|0);\r\n            }\r\n            this.pop();\r\n            break;\r\n        case 5:\r\n            // fld\r\n            this.push(this.load_m80(addr));\r\n            break;\r\n        case 7:\r\n            // fstp\r\n            this.cpu.writable_or_pagefault(addr, 10);\r\n            this.store_m80(addr, this.get_st0());\r\n            this.pop();\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            this.fpu_unimpl();\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DC_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDC, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7,\r\n        low_ptr = this.stack_ptr + low & 7,\r\n        sti = this.get_sti(low),\r\n        st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[low_ptr] = sti + st0;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[low_ptr] = sti * st0;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(sti);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(sti);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsubr\r\n            this.st[low_ptr] = st0 - sti;\r\n            break;\r\n        case 5:\r\n            // fsub\r\n            this.st[low_ptr] = sti - st0;\r\n            break;\r\n        case 6:\r\n            // fdivr\r\n            this.st[low_ptr] = st0 / sti;\r\n            break;\r\n        case 7:\r\n            // fdiv\r\n            this.st[low_ptr] = sti / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DC_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDC, imm8);\r\n\r\n    var\r\n        mod = imm8 >> 3 & 7,\r\n        m64 = this.load_m64(addr);\r\n\r\n    var st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[this.stack_ptr] = st0 + m64;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[this.stack_ptr] = st0 * m64;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(m64);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(m64);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsub\r\n            this.st[this.stack_ptr] = st0 - m64;\r\n            break;\r\n        case 5:\r\n            // fsubr\r\n            this.st[this.stack_ptr] = m64 - st0;\r\n            break;\r\n        case 6:\r\n            // fdiv\r\n            this.st[this.stack_ptr] = st0 / m64;\r\n            break;\r\n        case 7:\r\n            // fdivr\r\n            this.st[this.stack_ptr] = m64 / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DD_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDD, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // ffree\r\n            this.stack_empty |= 1 << (this.stack_ptr + low & 7);\r\n            break;\r\n        case 2:\r\n            // fst\r\n            this.st[this.stack_ptr + low & 7] = this.get_st0();\r\n            break;\r\n        case 3:\r\n            // fstp\r\n            if(low === 0)\r\n            {\r\n                this.pop();\r\n            }\r\n            else\r\n            {\r\n                this.st[this.stack_ptr + low & 7] = this.get_st0();\r\n                this.pop();\r\n            }\r\n            break;\r\n        case 4:\r\n            this.fucom(this.get_sti(low));\r\n            break;\r\n        case 5:\r\n            // fucomp\r\n            this.fucom(this.get_sti(low));\r\n            this.pop();\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            this.fpu_unimpl();\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DD_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDD, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fld\r\n            var data = this.load_m64(addr);\r\n            this.push(data);\r\n            break;\r\n        case 1:\r\n            // fisttp\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 2:\r\n            // fst\r\n            this.store_m64(addr, 0);\r\n            break;\r\n        case 3:\r\n            // fstp\r\n            this.store_m64(addr, 0);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            this.frstor(addr);\r\n            break;\r\n        case 5:\r\n            // nothing\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 6:\r\n            // fsave\r\n            this.fsave(addr);\r\n            break;\r\n        case 7:\r\n            // fnstsw / store status word\r\n            this.cpu.safe_write16(addr, this.load_status_word());\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\n\r\nFPU.prototype.op_DE_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDE, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7,\r\n        low_ptr = this.stack_ptr + low & 7,\r\n        sti = this.get_sti(low),\r\n        st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // faddp\r\n            this.st[low_ptr] = sti + st0;\r\n            break;\r\n        case 1:\r\n            // fmulp\r\n            this.st[low_ptr] = sti * st0;\r\n            break;\r\n        case 2:\r\n            // fcomp\r\n            this.fcom(sti);\r\n            break;\r\n        case 3:\r\n            // fcompp\r\n            if(low === 1)\r\n            {\r\n                this.fcom(this.st[low_ptr]);\r\n                this.pop();\r\n            }\r\n            else\r\n            {\r\n                // not a valid encoding\r\n                dbg_log(mod);\r\n                this.fpu_unimpl();\r\n            }\r\n            break;\r\n        case 4:\r\n            // fsubrp\r\n            this.st[low_ptr] = st0 - sti;\r\n            break;\r\n        case 5:\r\n            // fsubp\r\n            this.st[low_ptr] = sti - st0;\r\n            break;\r\n        case 6:\r\n            // fdivrp\r\n            this.st[low_ptr] = st0 / sti;\r\n            break;\r\n        case 7:\r\n            // fdivp\r\n            this.st[low_ptr] = sti / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n\r\n    this.pop();\r\n};\r\n\r\nFPU.prototype.op_DE_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDE, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        m16 = this.cpu.safe_read16(addr) << 16 >> 16;\r\n\r\n    var st0 = this.get_st0();\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // fadd\r\n            this.st[this.stack_ptr] = st0 + m16;\r\n            break;\r\n        case 1:\r\n            // fmul\r\n            this.st[this.stack_ptr] = st0 * m16;\r\n            break;\r\n        case 2:\r\n            // fcom\r\n            this.fcom(m16);\r\n            break;\r\n        case 3:\r\n            // fcomp\r\n            this.fcom(m16);\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fsub\r\n            this.st[this.stack_ptr] = st0 - m16;\r\n            break;\r\n        case 5:\r\n            // fsubr\r\n            this.st[this.stack_ptr] = m16 - st0;\r\n            break;\r\n        case 6:\r\n            // fdiv\r\n            this.st[this.stack_ptr] = st0 / m16;\r\n            break;\r\n        case 7:\r\n            // fdivr\r\n            this.st[this.stack_ptr] = m16 / st0;\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DF_reg = function(imm8)\r\n{\r\n    this.dbg_log_fpu_op(0xDF, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7,\r\n        low = imm8 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 4:\r\n            if(imm8 === 0xE0)\r\n            {\r\n                // fnstsw\r\n                this.cpu.reg16[reg_ax] = this.load_status_word();\r\n            }\r\n            else\r\n            {\r\n                dbg_log(imm8);\r\n                this.fpu_unimpl();\r\n            }\r\n            break;\r\n        case 5:\r\n            // fucomip\r\n            this.fucomi(this.get_sti(low));\r\n            this.pop();\r\n            break;\r\n        case 6:\r\n            // fcomip\r\n            this.fcomi(this.get_sti(low));\r\n            this.pop();\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            this.fpu_unimpl();\r\n    }\r\n};\r\n\r\nFPU.prototype.op_DF_mem = function(imm8, addr)\r\n{\r\n    this.dbg_log_fpu_op(0xDF, imm8);\r\n\r\n    var mod = imm8 >> 3 & 7;\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            var m16 = this.cpu.safe_read16(addr) << 16 >> 16;\r\n\r\n            this.push(m16);\r\n            break;\r\n        case 1:\r\n            // fisttp\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 2:\r\n            // fist\r\n            var st0 = this.integer_round(this.get_st0());\r\n            if(st0 <= 0x7FFF && st0 >= -0x8000)\r\n            {\r\n                this.cpu.safe_write16(addr, st0);\r\n            }\r\n            else\r\n            {\r\n                this.invalid_arithmatic();\r\n                this.cpu.safe_write16(addr, 0x8000);\r\n            }\r\n            break;\r\n        case 3:\r\n            // fistp\r\n            var st0 = this.integer_round(this.get_st0());\r\n            if(st0 <= 0x7FFF && st0 >= -0x8000)\r\n            {\r\n                this.cpu.safe_write16(addr, st0);\r\n            }\r\n            else\r\n            {\r\n                this.invalid_arithmatic();\r\n                this.cpu.safe_write16(addr, 0x8000);\r\n            }\r\n            this.pop();\r\n            break;\r\n        case 4:\r\n            // fbld\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 5:\r\n            // fild\r\n            var low = this.cpu.safe_read32s(addr) >>> 0,\r\n                high = this.cpu.safe_read32s(addr + 4);\r\n\r\n            var m64 = low + 0x100000000 * high;\r\n\r\n            this.push(m64);\r\n            break;\r\n        case 6:\r\n            // fbstp\r\n            this.fpu_unimpl();\r\n            break;\r\n        case 7:\r\n            this.cpu.writable_or_pagefault(addr, 8);\r\n\r\n            // fistp\r\n            var st0 = this.integer_round(this.get_st0()),\r\n                st0_low,\r\n                st0_high;\r\n\r\n            if(st0 < TWO_POW_63 && st0 >= -TWO_POW_63)\r\n            {\r\n                st0_low = st0 | 0;\r\n                st0_high = st0 / 0x100000000 | 0;\r\n\r\n                if(st0_high === 0 && st0 < 0)\r\n                    st0_high = -1;\r\n            }\r\n            else\r\n            {\r\n                // write 0x8000000000000000\r\n                st0_low  = 0;\r\n                st0_high = 0x80000000 | 0;\r\n                this.invalid_arithmatic();\r\n            }\r\n\r\n            this.cpu.safe_write32(addr, st0_low);\r\n            this.cpu.safe_write32(addr + 4, st0_high);\r\n\r\n            this.pop();\r\n            break;\r\n        default:\r\n            dbg_assert(false);\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n/** @param {number=} length */\r\nfunction hex_dump(buffer, length)\r\n{\r\n    var result = [];\r\n    length = length || buffer.byteLength;\r\n    var addr = 0;\r\n    var line, byt;\r\n\r\n    for(var i = 0; i < length >> 4; i++)\r\n    {\r\n        line = h(addr + (i << 4), 5) + \"   \";\r\n\r\n        for(var j = 0; j < 0x10; j++)\r\n        {\r\n            byt = buffer[addr + (i << 4) + j];\r\n            line += h(byt, 2) + \" \";\r\n        }\r\n\r\n        line += \"  \";\r\n\r\n        for(j = 0; j < 0x10; j++)\r\n        {\r\n            byt = buffer[addr + (i << 4) + j];\r\n            line += (byt < 33 || byt > 126) ? \".\" : String.fromCharCode(byt);\r\n        }\r\n\r\n        result.push(line);\r\n    }\r\n\r\n    return \"\\n\" + result.join(\"\\n\");\r\n}\r\n\r\n/** @const */\r\nvar CDROM_SECTOR_SIZE = 2048;\r\n/** @const */\r\nvar HD_SECTOR_SIZE = 512;\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {boolean} is_cd\r\n * @param {number} nr\r\n * @param {BusConnector} bus\r\n * */\r\nfunction IDEDevice(cpu, master_buffer, slave_buffer, is_cd, nr, bus)\r\n{\r\n    this.master = new IDEInterface(this, cpu, master_buffer, is_cd, nr, 0, bus);\r\n    this.slave = new IDEInterface(this, cpu, slave_buffer, is_cd, nr, 1, bus);\r\n\r\n    this.current_interface = this.master;\r\n\r\n    this.cpu = cpu;\r\n\r\n    // gets set via PCI in seabios, likely doesn't matter\r\n    if(nr === 0)\r\n    {\r\n        this.ata_port = 0x1F0;\r\n        this.irq = 14;\r\n\r\n        this.pci_id = 0x1E << 3;\r\n    }\r\n    else if(nr === 1)\r\n    {\r\n        this.ata_port = 0x170;\r\n        this.irq = 15;\r\n\r\n        this.pci_id = 0x1F << 3;\r\n    }\r\n    else\r\n    {\r\n        dbg_assert(false, \"IDE device with nr \" + nr + \" ignored\", LOG_DISK);\r\n    }\r\n\r\n    // alternate status, starting at 3f4/374\r\n    /** @type {number} */\r\n    this.ata_port_high = this.ata_port | 0x204;\r\n\r\n    /** @type {number} */\r\n    this.master_port = 0xB400;\r\n\r\n    this.pci_space = [\r\n        0x86, 0x80, 0x10, 0x70, 0x05, 0x00, 0xA0, 0x02,\r\n        0x00, 0x80, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,\r\n        this.ata_port & 0xFF | 1,      this.ata_port >> 8, 0x00, 0x00,\r\n        this.ata_port_high & 0xFF | 1, this.ata_port_high >> 8, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, // second device\r\n        0x00, 0x00, 0x00, 0x00, // second device\r\n        this.master_port & 0xFF | 1,   this.master_port >> 8, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x43, 0x10, 0xD4, 0x82,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, this.irq, 0x01, 0x00, 0x00,\r\n\r\n        // 0x40\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        // 0x80\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n    ];\r\n    this.pci_bars = [\r\n        {\r\n            size: 8,\r\n        },\r\n        {\r\n            size: 4,\r\n        },\r\n        undefined,\r\n        undefined,\r\n        {\r\n            size: 0x10,\r\n        },\r\n    ];\r\n    this.name = \"ide\" + nr;\r\n\r\n    /** @type {number} */\r\n    this.device_control = 2;\r\n\r\n    // status\r\n    cpu.io.register_read(this.ata_port | 7, this, function() {\r\n        dbg_log(\"lower irq\", LOG_DISK);\r\n        this.cpu.device_lower_irq(this.irq);\r\n        return this.read_status();\r\n    });\r\n    cpu.io.register_read(this.ata_port_high | 2, this, this.read_status);\r\n\r\n    cpu.io.register_write(this.ata_port_high | 2, this, this.write_control);\r\n    cpu.io.register_read(this.ata_port | 0, this, function()\r\n    {\r\n        return this.current_interface.read_data(1);\r\n    }, function()\r\n    {\r\n        return this.current_interface.read_data(2);\r\n    }, function()\r\n    {\r\n        return this.current_interface.read_data(4);\r\n    });\r\n\r\n    cpu.io.register_read(this.ata_port | 1, this, function()\r\n    {\r\n        dbg_log(\"Read error: \" + h(this.current_interface.error & 0xFF) +\r\n                \" slave=\" + (this.current_interface === this.slave), LOG_DISK);\r\n        return this.current_interface.error;\r\n    });\r\n    cpu.io.register_read(this.ata_port | 2, this, function()\r\n    {\r\n        dbg_log(\"Read bytecount: \" + h(this.current_interface.bytecount & 0xFF), LOG_DISK);\r\n        return this.current_interface.bytecount & 0xFF;\r\n    });\r\n    cpu.io.register_read(this.ata_port | 3, this, function()\r\n    {\r\n        dbg_log(\"Read sector: \" + h(this.current_interface.sector & 0xFF), LOG_DISK);\r\n        return this.current_interface.sector & 0xFF;\r\n    });\r\n\r\n    cpu.io.register_read(this.ata_port | 4, this, function()\r\n    {\r\n        dbg_log(\"Read 1F4: \" + h(this.current_interface.cylinder_low & 0xFF), LOG_DISK);\r\n        return this.current_interface.cylinder_low & 0xFF;\r\n    });\r\n    cpu.io.register_read(this.ata_port | 5, this, function()\r\n    {\r\n        dbg_log(\"Read 1F5: \" + h(this.current_interface.cylinder_high & 0xFF), LOG_DISK);\r\n        return this.current_interface.cylinder_high & 0xFF;\r\n    });\r\n    cpu.io.register_read(this.ata_port | 6, this, function()\r\n    {\r\n        dbg_log(\"Read 1F6\", LOG_DISK);\r\n        return this.current_interface.drive_head;\r\n    });\r\n\r\n    cpu.io.register_write(this.ata_port | 0, this, function(data)\r\n    {\r\n        this.current_interface.write_data_port8(data);\r\n    }, function(data)\r\n    {\r\n        this.current_interface.write_data_port16(data);\r\n    }, function(data)\r\n    {\r\n        this.current_interface.write_data_port32(data);\r\n    });\r\n\r\n    cpu.io.register_write(this.ata_port | 1, this, function(data)\r\n    {\r\n        dbg_log(\"1F1/lba_count: \" + h(data), LOG_DISK);\r\n        this.master.lba_count = (this.master.lba_count << 8 | data) & 0xFFFF;\r\n        this.slave.lba_count = (this.slave.lba_count << 8 | data) & 0xFFFF;\r\n    });\r\n    cpu.io.register_write(this.ata_port | 2, this, function(data)\r\n    {\r\n        dbg_log(\"1F2/bytecount: \" + h(data), LOG_DISK);\r\n        this.master.bytecount = (this.master.bytecount << 8 | data) & 0xFFFF;\r\n        this.slave.bytecount = (this.slave.bytecount << 8 | data) & 0xFFFF;\r\n    });\r\n    cpu.io.register_write(this.ata_port | 3, this, function(data)\r\n    {\r\n        dbg_log(\"1F3/sector: \" + h(data), LOG_DISK);\r\n        this.master.sector = (this.master.sector << 8 | data) & 0xFFFF;\r\n        this.slave.sector = (this.slave.sector << 8 | data) & 0xFFFF;\r\n    });\r\n\r\n    cpu.io.register_write(this.ata_port | 4, this, function(data)\r\n    {\r\n        dbg_log(\"1F4/sector low: \" + h(data), LOG_DISK);\r\n        this.master.cylinder_low = (this.master.cylinder_low << 8 | data) & 0xFFFF;\r\n        this.slave.cylinder_low = (this.slave.cylinder_low << 8 | data) & 0xFFFF;\r\n    });\r\n    cpu.io.register_write(this.ata_port | 5, this, function(data)\r\n    {\r\n        dbg_log(\"1F5/sector high: \" + h(data), LOG_DISK);\r\n        this.master.cylinder_high = (this.master.cylinder_high << 8 | data) & 0xFFFF;\r\n        this.slave.cylinder_high = (this.slave.cylinder_high << 8 | data) & 0xFFFF;\r\n    });\r\n    cpu.io.register_write(this.ata_port | 6, this, function(data)\r\n    {\r\n        var slave = data & 0x10;\r\n        var mode = data & 0xE0;\r\n\r\n        dbg_log(\"1F6/drive: \" + h(data, 2), LOG_DISK);\r\n\r\n        if(slave)\r\n        {\r\n            dbg_log(\"Slave\", LOG_DISK);\r\n            this.current_interface = this.slave;\r\n        }\r\n        else\r\n        {\r\n            this.current_interface = this.master;\r\n        }\r\n\r\n        this.master.drive_head = data;\r\n        this.slave.drive_head = data;\r\n        this.master.is_lba = this.slave.is_lba = data >> 6 & 1;\r\n        this.master.head = this.slave.head = data & 0xF;\r\n    });\r\n\r\n    /** @type {number} */\r\n    this.prdt_addr = 0;\r\n\r\n    /** @type {number} */\r\n    this.dma_status = 0;\r\n\r\n    /** @type {number} */\r\n    this.dma_command = 0;\r\n\r\n    cpu.io.register_write(this.ata_port | 7, this, function(data)\r\n    {\r\n        dbg_log(\"lower irq\", LOG_DISK);\r\n        this.cpu.device_lower_irq(this.irq);\r\n        this.current_interface.ata_command(data);\r\n    });\r\n\r\n    cpu.io.register_read(this.master_port | 4, this, undefined, undefined, this.dma_read_addr);\r\n    cpu.io.register_write(this.master_port | 4, this, undefined, undefined, this.dma_set_addr);\r\n\r\n    cpu.io.register_read(this.master_port, this,\r\n                         this.dma_read_command8, undefined, this.dma_read_command);\r\n    cpu.io.register_write(this.master_port, this,\r\n                          this.dma_write_command8, undefined, this.dma_write_command);\r\n\r\n    cpu.io.register_read(this.master_port | 2, this, this.dma_read_status);\r\n    cpu.io.register_write(this.master_port | 2, this, this.dma_write_status);\r\n\r\n    cpu.io.register_read(this.master_port | 0x8, this, function() {\r\n        dbg_log(\"DMA read 0x8\", LOG_DISK); return 0;\r\n    });\r\n    cpu.io.register_read(this.master_port | 0xA, this, function() {\r\n        dbg_log(\"DMA read 0xA\", LOG_DISK); return 0;\r\n    });\r\n\r\n    cpu.devices.pci.register_device(this);\r\n\r\n    DEBUG && Object.seal(this);\r\n}\r\n\r\nIDEDevice.prototype.read_status = function()\r\n{\r\n    if(this.current_interface.buffer)\r\n    {\r\n        var ret = this.current_interface.status;\r\n        dbg_log(\"ATA read status: \" + h(ret, 2), LOG_DISK);\r\n        return ret;\r\n    }\r\n    else\r\n    {\r\n        return 0;\r\n    }\r\n};\r\n\r\nIDEDevice.prototype.write_control = function(data)\r\n{\r\n    dbg_log(\"set device control: \" + h(data, 2) + \" interrupts \" +\r\n            ((data & 2) ? \"disabled\" : \"enabled\"), LOG_DISK);\r\n\r\n    if(data & 4)\r\n    {\r\n        dbg_log(\"Reset via control port\", LOG_DISK);\r\n\r\n        this.cpu.device_lower_irq(this.irq);\r\n\r\n        this.master.device_reset();\r\n        this.slave.device_reset();\r\n    }\r\n\r\n    this.device_control = data;\r\n};\r\n\r\nIDEDevice.prototype.dma_read_addr = function()\r\n{\r\n    dbg_log(\"dma get address: \" + h(this.prdt_addr, 8), LOG_DISK);\r\n    return this.prdt_addr;\r\n};\r\n\r\nIDEDevice.prototype.dma_set_addr = function(data)\r\n{\r\n    dbg_log(\"dma set address: \" + h(data, 8), LOG_DISK);\r\n    this.prdt_addr = data;\r\n};\r\n\r\nIDEDevice.prototype.dma_read_status = function()\r\n{\r\n    dbg_log(\"DMA read status: \" + h(this.dma_status), LOG_DISK);\r\n    return this.dma_status;\r\n};\r\n\r\nIDEDevice.prototype.dma_write_status = function(value)\r\n{\r\n    dbg_log(\"DMA set status: \" + h(value), LOG_DISK);\r\n    this.dma_status &= ~(value & 6);\r\n};\r\n\r\nIDEDevice.prototype.dma_read_command = function()\r\n{\r\n    return this.dma_read_command8() | this.dma_read_status() << 16;\r\n};\r\n\r\nIDEDevice.prototype.dma_read_command8 = function()\r\n{\r\n    dbg_log(\"DMA read command: \" + h(this.dma_command), LOG_DISK);\r\n    return this.dma_command;\r\n};\r\n\r\nIDEDevice.prototype.dma_write_command = function(value)\r\n{\r\n    dbg_log(\"DMA write command: \" + h(value), LOG_DISK);\r\n\r\n    this.dma_write_command8(value & 0xFF);\r\n    this.dma_write_status(value >> 16 & 0xFF);\r\n};\r\n\r\nIDEDevice.prototype.dma_write_command8 = function(value)\r\n{\r\n    dbg_log(\"DMA write command8: \" + h(value), LOG_DISK);\r\n\r\n    let old_command = this.dma_command;\r\n    this.dma_command = value & 0x9;\r\n\r\n    if((old_command & 1) === (value & 1))\r\n    {\r\n        return;\r\n    }\r\n\r\n    if((value & 1) === 0)\r\n    {\r\n        this.dma_status &= ~1;\r\n        return;\r\n    }\r\n\r\n    this.dma_status |= 1;\r\n\r\n    switch(this.current_interface.current_command)\r\n    {\r\n        case 0x25:\r\n        case 0xC8:\r\n            this.current_interface.do_ata_read_sectors_dma();\r\n            break;\r\n\r\n        case 0xCA:\r\n        case 0x35:\r\n            this.current_interface.do_ata_write_sectors_dma();\r\n            break;\r\n\r\n        case 0xA0:\r\n            this.current_interface.do_atapi_dma();\r\n            break;\r\n\r\n        default:\r\n            dbg_log(\"Spurious dma command write, current command: \" +\r\n                    h(this.current_interface.current_command), LOG_DISK);\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nIDEDevice.prototype.push_irq = function()\r\n{\r\n    if((this.device_control & 2) === 0)\r\n    {\r\n        dbg_log(\"push irq\", LOG_DISK);\r\n        this.dma_status |= 4;\r\n        this.cpu.device_raise_irq(this.irq);\r\n    }\r\n};\r\n\r\nIDEDevice.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n    state[0] = this.master;\r\n    state[1] = this.slave;\r\n    state[2] = this.ata_port;\r\n    state[3] = this.irq;\r\n    state[4] = this.pci_id;\r\n    state[5] = this.ata_port_high;\r\n    state[6] = this.master_port;\r\n    state[7] = this.name;\r\n    state[8] = this.device_control;\r\n    state[9] = this.prdt_addr;\r\n    state[10] = this.dma_status;\r\n    state[11] = this.current_interface === this.master;\r\n    state[12] = this.dma_command;\r\n    return state;\r\n};\r\n\r\nIDEDevice.prototype.set_state = function(state)\r\n{\r\n    this.master = state[0];\r\n    this.slave = state[1];\r\n    this.ata_port = state[2];\r\n    this.irq = state[3];\r\n    this.pci_id = state[4];\r\n    this.ata_port_high = state[5];\r\n    this.master_port = state[6];\r\n    this.name = state[7];\r\n    this.device_control = state[8];\r\n    this.prdt_addr = state[9];\r\n    this.dma_status = state[10];\r\n    this.current_interface = state[11] ? this.master : this.slave;\r\n    this.dma_command = state[12];\r\n};\r\n\r\n\r\n/**\r\n * @constructor\r\n */\r\nfunction IDEInterface(device, cpu, buffer, is_cd, device_nr, interface_nr, bus)\r\n{\r\n    this.device = device;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.nr = device_nr;\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.buffer = buffer;\r\n\r\n    /** @type {number} */\r\n    this.sector_size = is_cd ? CDROM_SECTOR_SIZE : HD_SECTOR_SIZE;\r\n\r\n    /** @type {boolean} */\r\n    this.is_atapi = is_cd;\r\n\r\n    /** @type {number} */\r\n    this.sector_count = 0;\r\n\r\n    /** @type {number} */\r\n    this.head_count = 0;\r\n\r\n    /** @type {number} */\r\n    this.sectors_per_track = 0;\r\n\r\n    /** @type {number} */\r\n    this.cylinder_count = 0;\r\n\r\n    if(this.buffer)\r\n    {\r\n        this.sector_count = this.buffer.byteLength / this.sector_size;\r\n\r\n        if(this.sector_count !== (this.sector_count | 0))\r\n        {\r\n            dbg_log(\"Warning: Disk size not aligned with sector size\", LOG_DISK);\r\n            this.sector_count = Math.ceil(this.sector_count);\r\n        }\r\n\r\n        if(is_cd)\r\n        {\r\n            this.head_count = 1;\r\n            this.sectors_per_track = 0;\r\n        }\r\n        else\r\n        {\r\n            // \"default\" values: 16/63\r\n            // common: 255, 63\r\n            this.head_count = 16;\r\n            this.sectors_per_track = 63;\r\n        }\r\n\r\n\r\n        this.cylinder_count = this.sector_count / this.head_count / this.sectors_per_track;\r\n\r\n        if(this.cylinder_count !== (this.cylinder_count | 0))\r\n        {\r\n            dbg_log(\"Warning: Rounding up cylinder count. Choose different head number\", LOG_DISK);\r\n            this.cylinder_count = Math.floor(this.cylinder_count);\r\n            //this.sector_count = this.cylinder_count * this.head_count *\r\n            //                        this.sectors_per_track * this.sector_size;\r\n        }\r\n\r\n        //if(this.cylinder_count > 16383)\r\n        //{\r\n        //    this.cylinder_count = 16383;\r\n        //}\r\n\r\n        // disk translation: lba\r\n        var rtc = cpu.devices.rtc;\r\n\r\n        // master\r\n        rtc.cmos_write(CMOS_BIOS_DISKTRANSFLAG,\r\n            rtc.cmos_read(CMOS_BIOS_DISKTRANSFLAG) | 1 << this.nr * 4);\r\n        rtc.cmos_write(CMOS_DISK_DATA, rtc.cmos_read(CMOS_DISK_DATA) & 0x0F | 0xF0);\r\n\r\n        var reg = CMOS_DISK_DRIVE1_CYL;\r\n        rtc.cmos_write(reg + 0, this.cylinder_count & 0xFF);\r\n        rtc.cmos_write(reg + 1, this.cylinder_count >> 8 & 0xFF);\r\n        rtc.cmos_write(reg + 2, this.head_count & 0xFF);\r\n        rtc.cmos_write(reg + 3, 0xFF);\r\n        rtc.cmos_write(reg + 4, 0xFF);\r\n        rtc.cmos_write(reg + 5, 0xC8);\r\n        rtc.cmos_write(reg + 6, this.cylinder_count & 0xFF);\r\n        rtc.cmos_write(reg + 7, this.cylinder_count >> 8 & 0xFF);\r\n        rtc.cmos_write(reg + 8, this.sectors_per_track & 0xFF);\r\n\r\n        //rtc.cmos_write(CMOS_BIOS_DISKTRANSFLAG,\r\n        //    rtc.cmos_read(CMOS_BIOS_DISKTRANSFLAG) | 1 << (nr * 4 + 2)); // slave\r\n    }\r\n\r\n    /** @const */\r\n    this.stats = {\r\n        sectors_read: 0,\r\n        sectors_written: 0,\r\n        bytes_read: 0,\r\n        bytes_written: 0,\r\n        loading: false,\r\n    };\r\n\r\n\r\n    this.buffer = buffer;\r\n\r\n    /** @type {number} */\r\n    this.is_lba = 0;\r\n\r\n    /** @type {number} */\r\n    this.bytecount = 0;\r\n\r\n    /** @type {number} */\r\n    this.sector = 0;\r\n\r\n    /** @type {number} */\r\n    this.lba_count = 0;\r\n\r\n    /** @type {number} */\r\n    this.cylinder_low = 0;\r\n\r\n    /** @type {number} */\r\n    this.cylinder_high = 0;\r\n\r\n    /** @type {number} */\r\n    this.head = 0;\r\n\r\n    /** @type {number} */\r\n    this.drive_head = 0;\r\n\r\n    /** @type {number} */\r\n    this.status = 0x50;\r\n\r\n    /** @type {number} */\r\n    this.sectors_per_drq = 0x80;\r\n\r\n    /** @type {number} */\r\n    this.error = 0;\r\n\r\n    /** @type {number} */\r\n    this.data_pointer = 0;\r\n\r\n    this.data = new Uint8Array(64 * 1024);\r\n    this.data16 = new Uint16Array(this.data.buffer);\r\n    this.data32 = new Int32Array(this.data.buffer);\r\n\r\n    /** @type {number} */\r\n    this.data_length = 0;\r\n\r\n    /** @type {number} */\r\n    this.data_end = 0;\r\n\r\n    /** @type {number} */\r\n    this.current_command = -1;\r\n\r\n    /** @type {number} */\r\n    this.current_atapi_command = -1;\r\n\r\n    /** @type {number} */\r\n    this.write_dest = 0;\r\n\r\n    Object.seal(this);\r\n}\r\n\r\nIDEInterface.prototype.device_reset = function()\r\n{\r\n    if(this.is_atapi)\r\n    {\r\n        this.status = 0;\r\n        this.bytecount = 1;\r\n        this.error = 1;\r\n        this.sector = 1; // lba_low\r\n        this.cylinder_low = 0x14; // lba_mid\r\n        this.cylinder_high = 0xEB; // lba_high\r\n    }\r\n    else\r\n    {\r\n        this.status = 0x50 | 1;\r\n        this.bytecount = 1;\r\n        this.error = 1;\r\n        this.sector = 1; // lba_low\r\n\r\n        // 0, 0 needed by bochs bios\r\n        this.cylinder_low = 0; // lba_mid\r\n        this.cylinder_high = 0; // lba_high\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.push_irq = function()\r\n{\r\n    this.device.push_irq();\r\n};\r\n\r\nIDEInterface.prototype.ata_command = function(cmd)\r\n{\r\n    dbg_log(\"ATA Command: \" + h(cmd) + \" slave=\" + (this.drive_head >> 4 & 1), LOG_DISK);\r\n\r\n    if(!this.buffer)\r\n    {\r\n        dbg_log(\"abort: No buffer\", LOG_DISK);\r\n        this.error = 4;\r\n        this.status = 0x41;\r\n        this.push_irq();\r\n        return;\r\n    }\r\n\r\n    this.current_command = cmd;\r\n    this.error = 0;\r\n\r\n    switch(cmd)\r\n    {\r\n        case 0x08:\r\n            dbg_log(\"ATA device reset\", LOG_DISK);\r\n            this.data_pointer = 0;\r\n            this.data_end = 0;\r\n            this.data_length = 0;\r\n            this.device_reset();\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0x10:\r\n            // calibrate drive\r\n            this.status = 0x50;\r\n            this.cylinder_low = 0;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xF8:\r\n            // read native max address\r\n            this.status = 0x50;\r\n            var last_sector = this.sector_count - 1;\r\n            this.sector = last_sector & 0xFF;\r\n            this.cylinder_low = last_sector >> 8 & 0xFF;\r\n            this.cylinder_high = last_sector >> 16 & 0xFF;\r\n            this.drive_head = this.drive_head & 0xF0 | last_sector >> 24 & 0x0F;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0x27:\r\n            // read native max address ext\r\n            this.status = 0x50;\r\n            var last_sector = this.sector_count - 1;\r\n            this.sector = last_sector & 0xFF;\r\n            this.cylinder_low = last_sector >> 8 & 0xFF;\r\n            this.cylinder_high = last_sector >> 16 & 0xFF;\r\n            this.sector |= last_sector >> 24 << 8 & 0xFF00;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0x20:\r\n        case 0x24:\r\n        case 0x29:\r\n        case 0xC4:\r\n            // 0x20 read sectors\r\n            // 0x24 read sectors ext\r\n            // 0xC4 read multiple\r\n            // 0x29 read multiple ext\r\n            this.ata_read_sectors(cmd);\r\n            break;\r\n\r\n        case 0x30:\r\n        case 0x34:\r\n        case 0x39:\r\n        case 0xC5:\r\n            // 0x30 write sectors\r\n            // 0x34 write sectors ext\r\n            // 0xC5 write multiple\r\n            // 0x39 write multiple ext\r\n            this.ata_write_sectors(cmd);\r\n            break;\r\n\r\n        case 0x90:\r\n            // execute device diagnostic\r\n            this.push_irq();\r\n            this.error = 0x101;\r\n            this.status = 0x50;\r\n            break;\r\n\r\n        case 0x91:\r\n            // initialize device parameters\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xA0:\r\n            // ATA packet\r\n            if(this.is_atapi)\r\n            {\r\n                this.status = 0x58;\r\n                this.data_allocate(12);\r\n                this.data_end = 12;\r\n                this.bytecount = 1;\r\n                this.push_irq();\r\n            }\r\n            break;\r\n\r\n        case 0xA1:\r\n            dbg_log(\"ATA identify packet device\", LOG_DISK);\r\n\r\n            if(this.is_atapi)\r\n            {\r\n                this.create_identify_packet();\r\n                this.status = 0x58;\r\n\r\n                this.cylinder_low = 0x14;\r\n                this.cylinder_high = 0xEB;\r\n\r\n                this.push_irq();\r\n            }\r\n            else\r\n            {\r\n                this.status = 0x41;\r\n                this.push_irq();\r\n            }\r\n            break;\r\n\r\n        case 0xC6:\r\n            // set multiple mode\r\n            // Logical sectors per DRQ Block in word 1\r\n            dbg_log(\"Logical sectors per DRQ Block: \" + h(this.bytecount & 0xFF), LOG_DISK);\r\n            this.sectors_per_drq = this.bytecount & 0xFF;\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0x25: // read dma ext\r\n        case 0xC8: // read dma\r\n            this.ata_read_sectors_dma(cmd);\r\n            break;\r\n\r\n        case 0x35: // write dma ext\r\n        case 0xCA: // write dma\r\n            this.ata_write_sectors_dma(cmd);\r\n            break;\r\n\r\n        case 0x40:\r\n            dbg_log(\"read verify sectors\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xDA:\r\n            dbg_log(\"Unimplemented: get media status\", LOG_DISK);\r\n            this.status = 0x41;\r\n            this.error = 4;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xE0:\r\n            dbg_log(\"ATA standby immediate\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xE1:\r\n            dbg_log(\"ATA idle immediate\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xE7:\r\n            dbg_log(\"ATA flush cache\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xEC:\r\n            dbg_log(\"ATA identify device\", LOG_DISK);\r\n\r\n            if(this.is_atapi)\r\n            {\r\n                this.status = 0x41;\r\n                this.error = 4;\r\n                this.push_irq();\r\n                return;\r\n            }\r\n\r\n            this.create_identify_packet();\r\n            this.status = 0x58;\r\n\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xEA:\r\n            dbg_log(\"flush cache ext\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xEF:\r\n            dbg_log(\"set features: \" + h(this.bytecount & 0xFF), LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xF5:\r\n            dbg_log(\"security freeze lock\", LOG_DISK);\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n            break;\r\n\r\n        case 0xF9:\r\n            dbg_log(\"Unimplemented: set max address\", LOG_DISK);\r\n            this.status = 0x41;\r\n            this.error = 4;\r\n            break;\r\n\r\n        default:\r\n            dbg_assert(false, \"New ATA cmd on 1F7: \" + h(cmd), LOG_DISK);\r\n\r\n            this.status = 0x41;\r\n            // abort bit set\r\n            this.error = 4;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.atapi_handle = function()\r\n{\r\n    dbg_log(\"ATAPI Command: \" + h(this.data[0]) +\r\n            \" slave=\" + (this.drive_head >> 4 & 1), LOG_DISK);\r\n\r\n    this.data_pointer = 0;\r\n    this.current_atapi_command = this.data[0];\r\n\r\n    switch(this.current_atapi_command)\r\n    {\r\n        case 0x00:\r\n            dbg_log(\"test unit ready\", LOG_DISK);\r\n            // test unit ready\r\n            this.data_allocate(0);\r\n            this.data_end = this.data_length;\r\n            this.status = 0x50;\r\n            break;\r\n\r\n        case 0x03:\r\n            // request sense\r\n            this.data_allocate(this.data[4]);\r\n            this.data_end = this.data_length;\r\n            this.status = 0x58;\r\n\r\n            this.data[0] = 0x80 | 0x70;\r\n            this.data[2] = 5; // illegal request\r\n            this.data[7] = 8;\r\n            break;\r\n\r\n        case 0x12:\r\n            // inquiry\r\n            var length = this.data[4];\r\n            this.status = 0x58;\r\n\r\n            dbg_log(\"inquiry: \" + h(this.data[1], 2) + \" length=\" + length, LOG_DISK);\r\n\r\n            // http://www.t10.org/ftp/x3t9.2/document.87/87-106r0.txt\r\n            //this.data_allocate(36);\r\n            this.data.set([\r\n                0x05, 0x80, 0x01, 0x31,\r\n                // additional length\r\n                31,\r\n                0, 0, 0,\r\n\r\n                // 8\r\n                0x53, 0x4F, 0x4E, 0x59,\r\n                0x20, 0x20, 0x20, 0x20,\r\n\r\n                // 16\r\n                0x43, 0x44, 0x2D, 0x52,\r\n                0x4F, 0x4D, 0x20, 0x43,\r\n                0x44, 0x55, 0x2D, 0x31,\r\n                0x30, 0x30, 0x30, 0x20,\r\n\r\n                // 32\r\n                0x31, 0x2E, 0x31, 0x61,\r\n            ]);\r\n            this.data_end = this.data_length = Math.min(36, length);\r\n            break;\r\n\r\n        case 0x1A:\r\n            // mode sense (6)\r\n            this.data_allocate(this.data[4]);\r\n            this.data_end = this.data_length;\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x1E:\r\n            // prevent/allow medium removal\r\n            this.data_allocate(0);\r\n            this.data_end = this.data_length;\r\n            this.status = 0x50;\r\n            break;\r\n\r\n        case 0x25:\r\n            // read capacity\r\n            var count = this.sector_count - 1;\r\n            this.data_set(new Uint8Array([\r\n                count >> 24 & 0xFF,\r\n                count >> 16 & 0xFF,\r\n                count >> 8 & 0xFF,\r\n                count & 0xFF,\r\n                0,\r\n                0,\r\n                this.sector_size >> 8 & 0xFF,\r\n                this.sector_size & 0xFF,\r\n            ]));\r\n            this.data_end = this.data_length;\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x28:\r\n            // read\r\n            if(this.lba_count & 1)\r\n            {\r\n                this.atapi_read_dma(this.data);\r\n            }\r\n            else\r\n            {\r\n                this.atapi_read(this.data);\r\n            }\r\n            break;\r\n\r\n        case 0x42:\r\n            var length = this.data[8];\r\n            this.data_allocate(Math.min(8, length));\r\n            this.data_end = this.data_length;\r\n            dbg_log(\"read q subcode: length=\" + length, LOG_DISK);\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x43:\r\n            // read toc\r\n            var length = this.data[8] | this.data[7] << 8;\r\n            var format = this.data[9] >> 6;\r\n\r\n            this.data_allocate(length);\r\n            this.data_end = this.data_length;\r\n            dbg_log(\"read toc: \" + h(format, 2) +\r\n                    \" length=\" + length +\r\n                    \" \" + (this.data[1] & 2) +\r\n                    \" \" + h(this.data[6]), LOG_DISK);\r\n\r\n            if(format === 0)\r\n            {\r\n                var sector_count = this.sector_count;\r\n                this.data.set(new Uint8Array([\r\n                    0, 18, // length\r\n                    1, 1, // first and last session\r\n\r\n                    0,\r\n                    0x14,\r\n                    1, // track number\r\n                    0,\r\n                    0, 0, 0, 0,\r\n\r\n                    0,\r\n                    0x16,\r\n                    0xAA, // track number\r\n                    0,\r\n                    sector_count >> 24,\r\n                    sector_count >> 16 & 0xFF,\r\n                    sector_count >> 8 & 0xFF,\r\n                    sector_count & 0xFF,\r\n                ]));\r\n            }\r\n            else if(format === 1)\r\n            {\r\n                this.data.set(new Uint8Array([\r\n                    0, 10, // length\r\n                    1, 1, // first and last session\r\n                    0, 0,\r\n                    0, 0,\r\n                    0, 0,\r\n                    0, 0,\r\n                ]));\r\n            }\r\n            else\r\n            {\r\n                dbg_assert(false, \"Unimplemented format: \" + format);\r\n            }\r\n\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x46:\r\n            // get configuration\r\n            var length = this.data[8] | this.data[7] << 8;\r\n            length = Math.min(length, 32);\r\n            this.data_allocate(length);\r\n            this.data_end = this.data_length;\r\n            this.data[0] = length - 4 >> 24 & 0xFF;\r\n            this.data[1] = length - 4 >> 16 & 0xFF;\r\n            this.data[2] = length - 4 >> 8 & 0xFF;\r\n            this.data[3] = length - 4 & 0xFF;\r\n            this.data[6] = 0x08;\r\n            this.data[10] = 3;\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x51:\r\n            // read disk information\r\n            this.data_allocate(0);\r\n            this.data_end = this.data_length;\r\n            this.status = 0x50;\r\n            break;\r\n\r\n        case 0x52:\r\n            dbg_log(\"Unimplemented ATAPI command: \" + h(this.data[0]), LOG_DISK);\r\n            this.status = 0x51;\r\n            this.data_length = 0;\r\n            this.error = 5 << 4;\r\n            break;\r\n\r\n        case 0x5A:\r\n            // mode sense\r\n            var length = this.data[8] | this.data[7] << 8;\r\n            var page_code = this.data[2];\r\n            dbg_log(\"mode sense: \" + h(page_code) + \" length=\" + length, LOG_DISK);\r\n            if(page_code === 0x2A)\r\n            {\r\n                this.data_allocate(Math.min(30, length));\r\n            }\r\n            this.data_end = this.data_length;\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0xBD:\r\n            // mechanism status\r\n            this.data_allocate(this.data[9] | this.data[8] << 8);\r\n            this.data_end = this.data_length;\r\n            this.data[5] = 1;\r\n            this.status = 0x58;\r\n            break;\r\n\r\n        case 0x4A:\r\n            this.status = 0x51;\r\n            this.data_length = 0;\r\n            this.error = 5 << 4;\r\n            dbg_log(\"Unimplemented ATAPI command: \" + h(this.data[0]), LOG_DISK);\r\n            break;\r\n\r\n        default:\r\n            this.status = 0x51;\r\n            this.data_length = 0;\r\n            this.error = 5 << 4;\r\n            dbg_log(\"Unimplemented ATAPI command: \" + h(this.data[0]), LOG_DISK);\r\n            dbg_assert(false);\r\n    }\r\n\r\n    this.bytecount = this.bytecount & ~7 | 2;\r\n\r\n    if((this.status & 0x80) === 0)\r\n    {\r\n        this.push_irq();\r\n    }\r\n\r\n    if((this.status & 0x80) === 0 && this.data_length === 0)\r\n    {\r\n        this.bytecount |= 1;\r\n        this.status &= ~8;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.do_write = function()\r\n{\r\n    this.status = 0x50;\r\n\r\n    dbg_assert(this.data_length <= this.data.length);\r\n    var data = this.data.subarray(0, this.data_length);\r\n\r\n    //dbg_log(hex_dump(data), LOG_DISK);\r\n    dbg_assert(this.data_length % 512 === 0);\r\n    this.ata_advance(this.current_command, this.data_length / 512);\r\n    this.push_irq();\r\n\r\n    this.buffer.set(this.write_dest, data, function()\r\n    {\r\n    });\r\n\r\n    this.report_write(this.data_length);\r\n};\r\n\r\nIDEInterface.prototype.atapi_read = function(cmd)\r\n{\r\n    // Note: Big Endian\r\n    var lba = cmd[2] << 24 | cmd[3] << 16 | cmd[4] << 8 | cmd[5];\r\n    var count = cmd[7] << 8 | cmd[8];\r\n    var flags = cmd[1];\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"CD read lba=\" + h(lba) +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count) +\r\n            \" flags=\" + h(flags), LOG_DISK);\r\n\r\n    this.data_length = 0;\r\n    var req_length = this.cylinder_high << 8 & 0xFF00 | this.cylinder_low & 0xFF;\r\n    dbg_log(h(this.cylinder_high, 2) + \" \" + h(this.cylinder_low, 2), LOG_DISK);\r\n    this.cylinder_low = this.cylinder_high = 0; // oak technology driver (windows 3.0)\r\n\r\n    if(req_length === 0xFFFF)\r\n        req_length--;\r\n\r\n    if(req_length > byte_count)\r\n    {\r\n        req_length = byte_count;\r\n    }\r\n\r\n    if(start >= this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"CD read: Outside of disk  end=\" + h(start + byte_count) +\r\n                          \" size=\" + h(this.buffer.byteLength), LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n    }\r\n    else if(byte_count === 0)\r\n    {\r\n        this.status = 0x50;\r\n\r\n        this.data_pointer = 0;\r\n        //this.push_irq();\r\n    }\r\n    else\r\n    {\r\n        byte_count = Math.min(byte_count, this.buffer.byteLength - start);\r\n        this.status = 0x50 | 0x80;\r\n        this.report_read_start();\r\n\r\n        this.buffer.get(start, byte_count, (data) =>\r\n        {\r\n            //setTimeout(() => {\r\n            dbg_log(\"cd read: data arrived\", LOG_DISK);\r\n            this.data_set(data);\r\n            this.status = 0x58;\r\n            this.bytecount = this.bytecount & ~7 | 2;\r\n\r\n            this.push_irq();\r\n\r\n            req_length &= ~3;\r\n\r\n            this.data_end = req_length;\r\n            if(this.data_end > this.data_length)\r\n            {\r\n                this.data_end = this.data_length;\r\n            }\r\n            this.cylinder_low = this.data_end & 0xFF;\r\n            this.cylinder_high = this.data_end >> 8 & 0xFF;\r\n\r\n            this.report_read_end(byte_count);\r\n            //}, 10);\r\n        });\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.atapi_read_dma = function(cmd)\r\n{\r\n    // Note: Big Endian\r\n    var lba = cmd[2] << 24 | cmd[3] << 16 | cmd[4] << 8 | cmd[5];\r\n    var count = cmd[7] << 8 | cmd[8];\r\n    var flags = cmd[1];\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"CD read DMA lba=\" + h(lba) +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count) +\r\n            \" flags=\" + h(flags), LOG_DISK);\r\n\r\n    if(start >= this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"CD read: Outside of disk  end=\" + h(start + byte_count) +\r\n                          \" size=\" + h(this.buffer.byteLength), LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n    }\r\n    else\r\n    {\r\n        this.status = 0x50 | 0x80;\r\n        this.report_read_start();\r\n\r\n        this.buffer.get(start, byte_count, (data) =>\r\n        {\r\n            dbg_log(\"atapi_read_dma: Data arrived\");\r\n            this.report_read_end(byte_count);\r\n            this.status = 0x58;\r\n            this.bytecount = this.bytecount & ~7 | 2;\r\n            this.data_set(data);\r\n\r\n            this.do_atapi_dma();\r\n        });\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.do_atapi_dma = function()\r\n{\r\n    if((this.device.dma_status & 1) === 0)\r\n    {\r\n        dbg_log(\"do_atapi_dma: Status not set\", LOG_DISK);\r\n        return;\r\n    }\r\n\r\n    if((this.status & 0x8) === 0)\r\n    {\r\n        dbg_log(\"do_atapi_dma: DRQ not set\", LOG_DISK);\r\n        return;\r\n    }\r\n\r\n    dbg_log(\"atapi dma transfer len=\" + this.data_length, LOG_DISK);\r\n\r\n    var prdt_start = this.device.prdt_addr;\r\n    var offset = 0;\r\n\r\n    var data = this.data;\r\n\r\n    do {\r\n        var addr = this.cpu.read32s(prdt_start);\r\n        var count = this.cpu.read16(prdt_start + 4);\r\n        var end = this.cpu.read8(prdt_start + 7) & 0x80;\r\n\r\n        if(!count)\r\n        {\r\n            count = 0x10000;\r\n        }\r\n\r\n        dbg_log(\"dma read dest=\" + h(addr) + \" count=\" + h(count) + \" datalen=\" + h(this.data_length), LOG_DISK);\r\n        this.cpu.write_blob(data.subarray(offset,\r\n            Math.min(offset + count, this.data_length)), addr);\r\n\r\n        offset += count;\r\n        prdt_start += 8;\r\n\r\n        if(offset >= this.data_length && !end)\r\n        {\r\n            dbg_log(\"leave early end=\" + (+end) +\r\n                    \" offset=\" + h(offset) +\r\n                    \" data_length=\" + h(this.data_length) +\r\n                    \" cmd=\" + h(this.current_command), LOG_DISK);\r\n            break;\r\n        }\r\n    }\r\n    while(!end);\r\n\r\n    dbg_log(\"end offset=\" + offset, LOG_DISK);\r\n\r\n    this.status = 0x50;\r\n    this.device.dma_status &= ~1;\r\n    this.bytecount = this.bytecount & ~7 | 3;\r\n    this.push_irq();\r\n};\r\n\r\nIDEInterface.prototype.read_data = function(length)\r\n{\r\n    if(this.data_pointer < this.data_end)\r\n    {\r\n        dbg_assert(this.data_pointer + length - 1 < this.data_end);\r\n        dbg_assert(this.data_pointer % length === 0, h(this.data_pointer) + \" \" + length);\r\n\r\n        if(length === 1)\r\n        {\r\n            var result = this.data[this.data_pointer];\r\n        }\r\n        else if(length === 2)\r\n        {\r\n            var result = this.data16[this.data_pointer >>> 1];\r\n        }\r\n        else\r\n        {\r\n            var result = this.data32[this.data_pointer >>> 2];\r\n        }\r\n\r\n        this.data_pointer += length;\r\n\r\n        var align = (this.data_end & 0xFFF) === 0 ? 0xFFF : 0xFF;\r\n        if((this.data_pointer & align) === 0)\r\n        {\r\n            dbg_log(\"Read 1F0: \" + h(this.data[this.data_pointer], 2) +\r\n                        \" cur=\" + h(this.data_pointer) +\r\n                        \" cnt=\" + h(this.data_length), LOG_DISK);\r\n        }\r\n\r\n        if(this.data_pointer >= this.data_end)\r\n        {\r\n            this.read_end();\r\n        }\r\n\r\n        return result;\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"Read 1F0: empty\", LOG_DISK);\r\n\r\n        this.data_pointer += length;\r\n        return 0;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.read_end = function()\r\n{\r\n    dbg_log(\"read_end cmd=\" + h(this.current_command) + \" data_pointer=\" + h(this.data_pointer) +\r\n            \" end=\" + h(this.data_end) + \" length=\" + h(this.data_length), LOG_DISK);\r\n\r\n    if(this.current_command === 0xA0)\r\n    {\r\n        if(this.data_end === this.data_length)\r\n        {\r\n            this.status = 0x50;\r\n            this.bytecount = this.bytecount & ~7 | 3;\r\n            this.push_irq();\r\n        }\r\n        else\r\n        {\r\n            this.status = 0x58;\r\n            this.bytecount = this.bytecount & ~7 | 2;\r\n            this.push_irq();\r\n            var byte_count = this.cylinder_high << 8 & 0xFF00 | this.cylinder_low & 0xFF;\r\n\r\n            if(this.data_end + byte_count > this.data_length)\r\n            {\r\n                this.cylinder_low = (this.data_length - this.data_end) & 0xFF;\r\n                this.cylinder_high = (this.data_length - this.data_end) >> 8 & 0xFF;\r\n                this.data_end = this.data_length;\r\n            }\r\n            else\r\n            {\r\n                this.data_end += byte_count;\r\n            }\r\n            dbg_log(\"data_end=\" + h(this.data_end), LOG_DISK);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.error = 0;\r\n        if(this.data_pointer >= this.data_length)\r\n        {\r\n            this.status = 0x50;\r\n            this.push_irq();\r\n        }\r\n        else\r\n        {\r\n            if(this.current_command === 0xC4 || this.current_command === 0x29)\r\n            {\r\n                var sector_count = Math.min(this.sectors_per_drq,\r\n                    (this.data_length - this.data_end) / 512);\r\n                dbg_assert(sector_count % 1 === 0);\r\n            }\r\n            else\r\n            {\r\n                dbg_assert(this.current_command === 0x20 || this.current_command === 0x24);\r\n                var sector_count = 1;\r\n            }\r\n            this.ata_advance(this.current_command, sector_count);\r\n            this.data_end += 512 * sector_count;\r\n            this.status = 0x58;\r\n            this.push_irq();\r\n        }\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.write_data_port = function(data, length)\r\n{\r\n    dbg_assert(this.data_pointer % length === 0);\r\n\r\n    if(this.data_pointer >= this.data_end)\r\n    {\r\n        dbg_log(\"Redundant write to data port: \" + h(data) + \" count=\" + h(this.data_end) +\r\n                \" cur=\" + h(this.data_pointer), LOG_DISK);\r\n    }\r\n    else\r\n    {\r\n        var align = (this.data_end & 0xFFF) === 0 ? 0xFFF : 0xFF;\r\n        if((this.data_pointer + length & align) === 0 || this.data_end < 20)\r\n        {\r\n            dbg_log(\"Data port: \" + h(data >>> 0) + \" count=\" + h(this.data_end) +\r\n                    \" cur=\" + h(this.data_pointer), LOG_DISK);\r\n        }\r\n\r\n        if(length === 1)\r\n        {\r\n            this.data[this.data_pointer++] = data;\r\n        }\r\n        else if(length === 2)\r\n        {\r\n            this.data16[this.data_pointer >>> 1] = data;\r\n            this.data_pointer += 2;\r\n        }\r\n        else\r\n        {\r\n            this.data32[this.data_pointer >>> 2] = data;\r\n            this.data_pointer += 4;\r\n        }\r\n\r\n        dbg_assert(this.data_pointer <= this.data_end);\r\n        if(this.data_pointer === this.data_end)\r\n        {\r\n            this.write_end();\r\n        }\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.write_data_port8 = function(data)\r\n{\r\n    this.write_data_port(data, 1);\r\n};\r\n\r\nIDEInterface.prototype.write_data_port16 = function(data)\r\n{\r\n    this.write_data_port(data, 2);\r\n};\r\n\r\nIDEInterface.prototype.write_data_port32 = function(data)\r\n{\r\n    this.write_data_port(data, 4);\r\n};\r\n\r\nIDEInterface.prototype.write_end = function()\r\n{\r\n    if(this.current_command === 0xA0)\r\n    {\r\n        this.atapi_handle();\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"write_end data_pointer=\" + h(this.data_pointer) +\r\n                \" data_length=\" + h(this.data_length), LOG_DISK);\r\n\r\n        if(this.data_pointer >= this.data_length)\r\n        {\r\n            this.do_write();\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(this.current_command === 0x30 || this.current_command === 0x34);\r\n            // XXX: Should advance here, but do_write does all the advancing\r\n            //this.ata_advance(this.current_command, 1);\r\n            this.status = 0x58;\r\n            this.data_end += 512;\r\n            this.push_irq();\r\n        }\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.ata_advance = function(cmd, sectors)\r\n{\r\n    dbg_log(\"Advance sectors=\" + sectors + \" old_bytecount=\" + this.bytecount, LOG_DISK);\r\n    this.bytecount -= sectors;\r\n\r\n    if(cmd === 0x24 || cmd === 0x29 || cmd === 0x34 || cmd === 0x39 ||\r\n       cmd === 0x25 || cmd === 0x35)\r\n    {\r\n        var new_sector = sectors + this.get_lba48();\r\n        this.sector = new_sector & 0xFF | new_sector >> 16 & 0xFF00;\r\n        this.cylinder_low = new_sector >> 8 & 0xFF;\r\n        this.cylinder_high = new_sector >> 16 & 0xFF;\r\n    }\r\n    else if(this.is_lba)\r\n    {\r\n        var new_sector = sectors + this.get_lba28();\r\n        this.sector = new_sector & 0xFF;\r\n        this.cylinder_low = new_sector >> 8 & 0xFF;\r\n        this.cylinder_high = new_sector >> 16 & 0xFF;\r\n        this.head = this.head & ~0xF | new_sector & 0xF;\r\n    }\r\n    else // chs\r\n    {\r\n        var new_sector = sectors + this.get_chs();\r\n\r\n        var c = new_sector / (this.head_count * this.sectors_per_track) | 0;\r\n        this.cylinder_low = c & 0xFF;\r\n        this.cylinder_high = c >> 8 & 0xFF;\r\n        this.head = (new_sector / this.sectors_per_track | 0) % this.head_count & 0xF;\r\n        this.sector = (new_sector % this.sectors_per_track + 1) & 0xFF;\r\n\r\n        dbg_assert(new_sector === this.get_chs());\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.ata_read_sectors = function(cmd)\r\n{\r\n    var is_lba48 = cmd === 0x24 || cmd === 0x29;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var is_single = cmd === 0x20 || cmd === 0x24;\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"ATA read cmd=\" + h(cmd) +\r\n            \" mode=\" + (this.is_lba ? \"lba\" : \"chs\") +\r\n            \" lba=\" + h(lba) +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count), LOG_DISK);\r\n\r\n    if(start + byte_count > this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"ATA read: Outside of disk\", LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n    }\r\n    else\r\n    {\r\n        this.status = 0x80 | 0x40;\r\n        this.report_read_start();\r\n\r\n        this.buffer.get(start, byte_count, (data) =>\r\n        {\r\n            //setTimeout(() => {\r\n            dbg_log(\"ata_read: Data arrived\", LOG_DISK);\r\n\r\n            this.data_set(data);\r\n            this.status = 0x58;\r\n            this.data_end = is_single ? 512 : Math.min(byte_count, this.sectors_per_drq * 512);\r\n            this.ata_advance(cmd, is_single ? 1 : Math.min(count, this.sectors_per_track));\r\n\r\n            this.push_irq();\r\n            this.report_read_end(byte_count);\r\n            //}, 10);\r\n        });\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.ata_read_sectors_dma = function(cmd)\r\n{\r\n    var is_lba48 = cmd === 0x25;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"ATA DMA read lba=\" + h(lba) +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count), LOG_DISK);\r\n\r\n    if(start + byte_count > this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"ATA read: Outside of disk\", LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n        return;\r\n    }\r\n\r\n    this.status = 0x58;\r\n    this.device.dma_status |= 1;\r\n};\r\n\r\nIDEInterface.prototype.do_ata_read_sectors_dma = function()\r\n{\r\n    var cmd = this.current_command;\r\n\r\n    var is_lba48 = cmd === 0x25;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_assert(lba < this.buffer.byteLength);\r\n\r\n    this.report_read_start();\r\n\r\n    var orig_prdt_start = this.device.prdt_addr;\r\n\r\n    this.buffer.get(start, byte_count, (data) =>\r\n    {\r\n        //setTimeout(function() {\r\n        dbg_log(\"do_ata_read_sectors_dma: Data arrived\", LOG_DISK);\r\n        var prdt_start = this.device.prdt_addr;\r\n        var offset = 0;\r\n\r\n        dbg_assert(orig_prdt_start === prdt_start);\r\n\r\n        do {\r\n            var prd_addr = this.cpu.read32s(prdt_start);\r\n            var prd_count = this.cpu.read16(prdt_start + 4);\r\n            var end = this.cpu.read8(prdt_start + 7) & 0x80;\r\n\r\n            if(!prd_count)\r\n            {\r\n                prd_count = 0x10000;\r\n                dbg_log(\"dma: prd count was 0\", LOG_DISK);\r\n            }\r\n\r\n            dbg_log(\"dma read transfer dest=\" + h(prd_addr) +\r\n                    \" prd_count=\" + h(prd_count), LOG_DISK);\r\n            this.cpu.write_blob(data.subarray(offset, offset + prd_count), prd_addr);\r\n\r\n            offset += prd_count;\r\n            prdt_start += 8;\r\n        }\r\n        while(!end);\r\n\r\n        dbg_assert(offset === byte_count);\r\n\r\n        this.ata_advance(this.current_command, count);\r\n        this.status = 0x50;\r\n        this.device.dma_status &= ~1;\r\n        this.current_command = -1;\r\n\r\n        this.push_irq();\r\n\r\n        this.report_read_end(byte_count);\r\n        //}.bind(this), 10);\r\n    });\r\n};\r\n\r\nIDEInterface.prototype.ata_write_sectors = function(cmd)\r\n{\r\n    var is_lba48 = cmd === 0x34 || cmd === 0x39;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var is_single = cmd === 0x30 || cmd === 0x34;\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"ATA write lba=\" + h(lba) +\r\n            \" mode=\" + (this.is_lba ? \"lba\" : \"chs\") +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count), LOG_DISK);\r\n\r\n    if(start + byte_count > this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"ATA write: Outside of disk\", LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n    }\r\n    else\r\n    {\r\n        this.status = 0x58;\r\n        this.data_allocate_noclear(byte_count);\r\n        this.data_end = is_single ? 512 : Math.min(byte_count, this.sectors_per_drq * 512);\r\n        this.write_dest = start;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.ata_write_sectors_dma = function(cmd)\r\n{\r\n    var is_lba48 = cmd === 0x35;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    dbg_log(\"ATA DMA write lba=\" + h(lba) +\r\n            \" lbacount=\" + h(count) +\r\n            \" bytecount=\" + h(byte_count), LOG_DISK);\r\n\r\n    if(start + byte_count > this.buffer.byteLength)\r\n    {\r\n        dbg_assert(false, \"ATA DMA write: Outside of disk\", LOG_DISK);\r\n\r\n        this.status = 0xFF;\r\n        this.push_irq();\r\n        return;\r\n    }\r\n\r\n    this.status = 0x58;\r\n    this.device.dma_status |= 1;\r\n};\r\n\r\nIDEInterface.prototype.do_ata_write_sectors_dma = function()\r\n{\r\n    var cmd = this.current_command;\r\n\r\n    var is_lba48 = cmd === 0x35;\r\n    var count = this.get_count(is_lba48);\r\n    var lba = this.get_lba(is_lba48);\r\n\r\n    var byte_count = count * this.sector_size;\r\n    var start = lba * this.sector_size;\r\n\r\n    var prdt_start = this.device.prdt_addr;\r\n    var prdt_count = 0;\r\n    var prdt_write_count = 0;\r\n    var offset = 0;\r\n\r\n    dbg_log(\"prdt addr: \" + h(prdt_start, 8), LOG_DISK);\r\n\r\n    do {\r\n        var prd_addr = this.cpu.read32s(prdt_start);\r\n        var prd_count = this.cpu.read16(prdt_start + 4);\r\n        var end = this.cpu.read8(prdt_start + 7) & 0x80;\r\n\r\n        if(!prd_count)\r\n        {\r\n            prd_count = 0x10000;\r\n            dbg_log(\"dma: prd count was 0\", LOG_DISK);\r\n        }\r\n\r\n        dbg_log(\"dma write transfer dest=\" + h(prd_addr) + \" prd_count=\" + h(prd_count), LOG_DISK);\r\n\r\n        var slice = this.cpu.mem8.subarray(prd_addr, prd_addr + prd_count);\r\n        dbg_assert(slice.length === prd_count);\r\n\r\n        //if(DEBUG)\r\n        //{\r\n        //    dbg_log(hex_dump(slice), LOG_DISK);\r\n        //}\r\n\r\n        this.buffer.set(start + offset, slice, function()\r\n        {\r\n            prdt_write_count++;\r\n        });\r\n\r\n        offset += prd_count;\r\n        prdt_start += 8;\r\n        prdt_count++;\r\n    }\r\n    while(!end);\r\n\r\n    if(prdt_write_count === prdt_count)\r\n    {\r\n        //setTimeout(function() {\r\n        dbg_log(\"dma write completed\", LOG_DISK);\r\n        this.ata_advance(this.current_command, count);\r\n        this.status = 0x50;\r\n        this.push_irq();\r\n        this.device.dma_status &= ~1;\r\n        this.current_command = -1;\r\n        //}, 10);\r\n    }\r\n    else\r\n    {\r\n        // fails when writes don't happen synchronously, which isn't currently\r\n        // the case, but might be in the future\r\n        dbg_assert(false, \"dma write not completed\", LOG_DISK);\r\n    }\r\n\r\n    this.report_write(byte_count);\r\n};\r\n\r\nIDEInterface.prototype.get_chs = function()\r\n{\r\n    var c = this.cylinder_low & 0xFF | this.cylinder_high << 8 & 0xFF00;\r\n    var h = this.head;\r\n    var s = this.sector & 0xFF;\r\n\r\n    dbg_log(\"get_chs: c=\" + c + \" h=\" + h + \" s=\" + s, LOG_DISK);\r\n\r\n    return (c * this.head_count + h) * this.sectors_per_track + s - 1;\r\n};\r\n\r\nIDEInterface.prototype.get_lba28 = function()\r\n{\r\n    return this.sector & 0xFF |\r\n            this.cylinder_low << 8 & 0xFF00 |\r\n            this.cylinder_high << 16 & 0xFF0000 |\r\n            (this.head & 0xF) << 24;\r\n};\r\n\r\nIDEInterface.prototype.get_lba48 = function()\r\n{\r\n    // Note: Bits over 32 missing\r\n    return (this.sector & 0xFF |\r\n            this.cylinder_low << 8 & 0xFF00 |\r\n            this.cylinder_high << 16 & 0xFF0000 |\r\n            (this.sector >> 8) << 24 & 0xFF000000) >>> 0;\r\n};\r\n\r\nIDEInterface.prototype.get_lba = function(is_lba48)\r\n{\r\n    if(is_lba48)\r\n    {\r\n        return this.get_lba48();\r\n    }\r\n    else if(this.is_lba)\r\n    {\r\n        return this.get_lba28();\r\n    }\r\n    else\r\n    {\r\n        return this.get_chs();\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.get_count = function(is_lba48)\r\n{\r\n    if(is_lba48)\r\n    {\r\n        var count = this.bytecount;\r\n        if(count === 0) count = 0x10000;\r\n        return count;\r\n    }\r\n    else\r\n    {\r\n        var count = this.bytecount & 0xFF;\r\n        if(count === 0) count = 0x100;\r\n        return count;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.create_identify_packet = function()\r\n{\r\n    // http://bochs.sourceforge.net/cgi-bin/lxr/source/iodev/harddrv.cc#L2821\r\n\r\n    if(this.drive_head & 0x10)\r\n    {\r\n        // slave\r\n        this.data_allocate(0);\r\n        return;\r\n    }\r\n\r\n    for(var i = 0; i < 512; i++)\r\n    {\r\n        this.data[i] = 0;\r\n    }\r\n\r\n    var cylinder_count = Math.min(16383, this.cylinder_count);\r\n\r\n    this.data_set([\r\n        0x40, this.is_atapi ? 0x85 : 0,\r\n        // 1 cylinders\r\n        cylinder_count, cylinder_count >> 8,\r\n        0, 0,\r\n\r\n        // 3 heads\r\n        this.head_count, this.head_count >> 8,\r\n        this.sectors_per_track / 512, this.sectors_per_track / 512 >> 8,\r\n        // 5\r\n        0, 512 >> 8,\r\n        // sectors per track\r\n        this.sectors_per_track, this.sectors_per_track >> 8,\r\n        0, 0, 0, 0, 0, 0,\r\n        // 10-19 serial number\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        // 15\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        // 20\r\n        3, 0,\r\n        0, 2,\r\n        4, 0,\r\n        // 23-26 firmware revision\r\n        0, 0, 0, 0, 0, 0, 0, 0,\r\n\r\n        // 27 model number\r\n        56, 118, 32, 54, 68, 72, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\r\n        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\r\n\r\n        // 47 max value for set multiple mode\r\n        0x80, 0,\r\n        1, 0,\r\n        //0, 3,  // capabilities, 2: Only LBA / 3: LBA and DMA\r\n        0, 2,  // capabilities, 2: Only LBA / 3: LBA and DMA\r\n        // 50\r\n        0, 0,\r\n        0, 2,\r\n        0, 2,\r\n        7, 0,\r\n\r\n        // 54 cylinders\r\n        cylinder_count, cylinder_count >> 8,\r\n        // 55 heads\r\n        this.head_count, this.head_count >> 8,\r\n        // 56 sectors per track\r\n        this.sectors_per_track, 0,\r\n        // capacity in sectors\r\n        this.sector_count & 0xFF, this.sector_count >> 8 & 0xFF,\r\n        this.sector_count >> 16 & 0xFF, this.sector_count >> 24 & 0xFF,\r\n\r\n        0, 0,\r\n        // 60\r\n        this.sector_count & 0xFF, this.sector_count >> 8 & 0xFF,\r\n        this.sector_count >> 16 & 0xFF, this.sector_count >> 24 & 0xFF,\r\n\r\n        0, 0,\r\n        // 63, dma supported mode, dma selected mode\r\n        this.current_command === 0xA0 ? 0 : 7, this.current_command === 0xA0 ? 0 : 4,\r\n        //0, 0, // no DMA\r\n\r\n        0, 0,\r\n        // 65\r\n        30, 0, 30, 0, 30, 0, 30, 0, 0, 0,\r\n        // 70\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        // 75\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        // 80\r\n        0x7E, 0, 0, 0, 0, 0, 0, 0x74, 0, 0x40,\r\n        // 85\r\n        0, 0x40, 0, 0x74, 0, 0x40, 0, 0, 0, 0,\r\n        // 90\r\n        0, 0, 0, 0, 0, 0, 1, 0x60, 0, 0,\r\n        // 95\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        // 100\r\n        this.sector_count & 0xFF, this.sector_count >> 8 & 0xFF,\r\n        this.sector_count >> 16 & 0xFF, this.sector_count >> 24 & 0xFF,\r\n    ]);\r\n\r\n    this.data_length = 512;\r\n    this.data_end = 512;\r\n};\r\n\r\nIDEInterface.prototype.data_allocate = function(len)\r\n{\r\n    this.data_allocate_noclear(len);\r\n\r\n    for(var i = 0; i < (len + 3 >> 2); i++)\r\n    {\r\n        this.data32[i] = 0;\r\n    }\r\n};\r\n\r\nIDEInterface.prototype.data_allocate_noclear = function(len)\r\n{\r\n    if(this.data.length < len)\r\n    {\r\n        this.data = new Uint8Array(len + 3 & ~3);\r\n        this.data16 = new Uint16Array(this.data.buffer);\r\n        this.data32 = new Int32Array(this.data.buffer);\r\n    }\r\n\r\n    this.data_length = len;\r\n    this.data_pointer = 0;\r\n};\r\n\r\nIDEInterface.prototype.data_set = function(data)\r\n{\r\n    this.data_allocate_noclear(data.length);\r\n    this.data.set(data);\r\n};\r\n\r\nIDEInterface.prototype.report_read_start = function()\r\n{\r\n    this.stats.loading = true;\r\n    this.bus.send(\"ide-read-start\");\r\n};\r\n\r\nIDEInterface.prototype.report_read_end = function(byte_count)\r\n{\r\n    this.stats.loading = false;\r\n\r\n    var sector_count = byte_count / this.sector_size | 0;\r\n    this.stats.sectors_read += sector_count;\r\n    this.stats.bytes_read += byte_count;\r\n\r\n    this.bus.send(\"ide-read-end\", [this.nr, byte_count, sector_count]);\r\n};\r\n\r\nIDEInterface.prototype.report_write = function(byte_count)\r\n{\r\n    var sector_count = byte_count / this.sector_size | 0;\r\n    this.stats.sectors_written += sector_count;\r\n    this.stats.bytes_written += byte_count;\r\n\r\n    this.bus.send(\"ide-write-end\", [this.nr, byte_count, sector_count]);\r\n};\r\n\r\nIDEInterface.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n    state[0] = this.bytecount;\r\n    state[1] = this.cylinder_count;\r\n    state[2] = this.cylinder_high;\r\n    state[3] = this.cylinder_low;\r\n    state[4] = this.data_pointer;\r\n    state[5] = 0;\r\n    state[6] = 0;\r\n    state[7] = 0;\r\n    state[8] = 0;\r\n    state[9] = this.drive_head;\r\n    state[10] = this.error;\r\n    state[11] = this.head;\r\n    state[12] = this.head_count;\r\n    state[13] = this.is_atapi;\r\n    state[14] = this.is_lba;\r\n    state[15] = this.lba_count;\r\n    state[16] = this.data;\r\n    state[17] = this.data_length;\r\n    state[18] = this.sector;\r\n    state[19] = this.sector_count;\r\n    state[20] = this.sector_size;\r\n    state[21] = this.sectors_per_drq;\r\n    state[22] = this.sectors_per_track;\r\n    state[23] = this.status;\r\n    state[24] = this.write_dest;\r\n    state[25] = this.current_command;\r\n    state[26] = this.data_end;\r\n    state[27] = this.current_atapi_command;\r\n    return state;\r\n};\r\n\r\nIDEInterface.prototype.set_state = function(state)\r\n{\r\n    this.bytecount = state[0];\r\n    this.cylinder_count = state[1];\r\n    this.cylinder_high = state[2];\r\n    this.cylinder_low = state[3];\r\n    this.data_pointer = state[4];\r\n\r\n    this.drive_head = state[9];\r\n    this.error = state[10];\r\n    this.head = state[11];\r\n    this.head_count = state[12];\r\n    this.is_atapi = state[13];\r\n    this.is_lba = state[14];\r\n    this.lba_count = state[15];\r\n    this.data = state[16];\r\n    this.data_length = state[17];\r\n    this.sector = state[18];\r\n    this.sector_count = state[19];\r\n    this.sector_size = state[20];\r\n    this.sectors_per_drq = state[21];\r\n    this.sectors_per_track = state[22];\r\n    this.status = state[23];\r\n    this.write_dest = state[24];\r\n    this.current_command = state[25];\r\n\r\n    this.data_end = state[26];\r\n    this.current_atapi_command = state[27];\r\n\r\n    this.data16 = new Uint16Array(this.data.buffer);\r\n    this.data32 = new Int32Array(this.data.buffer);\r\n};\r\n","\"use strict\";\r\n\r\n// http://wiki.osdev.org/PCI\r\n\r\nvar\r\n/** @const */ PCI_CONFIG_ADDRESS = 0xCF8,\r\n/** @const */ PCI_CONFIG_DATA = 0xCFC;\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction PCI(cpu)\r\n{\r\n    this.pci_addr = new Uint8Array(4);\r\n    this.pci_value = new Uint8Array(4);\r\n    this.pci_response = new Uint8Array(4);\r\n    this.pci_status = new Uint8Array(4);\r\n\r\n    this.pci_addr32 = new Int32Array(this.pci_addr.buffer);\r\n    this.pci_value32 = new Int32Array(this.pci_value.buffer);\r\n    this.pci_response32 = new Int32Array(this.pci_response.buffer);\r\n    this.pci_status32 = new Int32Array(this.pci_status.buffer);\r\n\r\n    this.device_spaces = [];\r\n    this.devices = [];\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    for(var i = 0; i < 256; i++)\r\n    {\r\n        this.device_spaces[i] = undefined;\r\n        this.devices[i] = undefined;\r\n    }\r\n\r\n    this.io = cpu.io;\r\n\r\n    cpu.io.register_write(PCI_CONFIG_DATA, this,\r\n        function(value)\r\n        {\r\n            this.pci_write8(this.pci_addr32[0], value);\r\n        },\r\n        function(value)\r\n        {\r\n            this.pci_write16(this.pci_addr32[0], value);\r\n        },\r\n        function(value)\r\n        {\r\n            this.pci_write32(this.pci_addr32[0], value);\r\n        });\r\n\r\n    cpu.io.register_write(PCI_CONFIG_DATA + 1, this,\r\n        function(value)\r\n        {\r\n            this.pci_write8(this.pci_addr32[0] + 1 | 0, value);\r\n        });\r\n\r\n    cpu.io.register_write(PCI_CONFIG_DATA + 2, this,\r\n        function(value)\r\n        {\r\n            this.pci_write8(this.pci_addr32[0] + 2 | 0, value);\r\n        },\r\n        function(value)\r\n        {\r\n            this.pci_write16(this.pci_addr32[0] + 2 | 0, value);\r\n        });\r\n\r\n    cpu.io.register_write(PCI_CONFIG_DATA + 3, this,\r\n        function(value)\r\n        {\r\n            this.pci_write8(this.pci_addr32[0] + 3 | 0, value);\r\n        });\r\n\r\n    cpu.io.register_read_consecutive(PCI_CONFIG_DATA, this,\r\n        function()\r\n        {\r\n            return this.pci_response[0];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_response[1];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_response[2];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_response[3];\r\n        }\r\n    );\r\n\r\n    cpu.io.register_read_consecutive(PCI_CONFIG_ADDRESS, this,\r\n        function()\r\n        {\r\n            return this.pci_status[0];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_status[1];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_status[2];\r\n        },\r\n        function()\r\n        {\r\n            return this.pci_status[3];\r\n        }\r\n    );\r\n\r\n    cpu.io.register_write_consecutive(PCI_CONFIG_ADDRESS, this,\r\n        function(out_byte)\r\n        {\r\n            this.pci_addr[0] = out_byte & 0xFC;\r\n        },\r\n        function(out_byte)\r\n        {\r\n            if((this.pci_addr[1] & 0x06) === 0x02 && (out_byte & 0x06) === 0x06)\r\n            {\r\n                dbg_log(\"CPU reboot via PCI\");\r\n                cpu.reboot_internal();\r\n                return;\r\n            }\r\n\r\n            this.pci_addr[1] = out_byte;\r\n        },\r\n        function(out_byte)\r\n        {\r\n            this.pci_addr[2] = out_byte;\r\n        },\r\n        function(out_byte)\r\n        {\r\n            this.pci_addr[3] = out_byte;\r\n            this.pci_query();\r\n        }\r\n    );\r\n\r\n\r\n    // Some experimental PCI devices taken from my PC:\r\n\r\n    // 00:00.0 Host bridge: Intel Corporation 4 Series Chipset DRAM Controller (rev 02)\r\n    //var host_bridge = {\r\n    //    pci_id: 0,\r\n    //    pci_space: [\r\n    //        0x86, 0x80, 0x20, 0x2e, 0x06, 0x00, 0x90, 0x20, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,\r\n    //        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n    //        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x10, 0xd3, 0x82,\r\n    //        0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n    //    ],\r\n    //    pci_bars: [],\r\n    //};\r\n\r\n    // This needs to be set in order for seabios to not execute code outside of\r\n    // mapped memory. While we map the BIOS into high memory, we don't allow\r\n    // executing code there, which enables optimisations in read_imm8.\r\n    // See [make_bios_writable_intel] in src/fw/shadow.c in seabios for details\r\n    const PAM0 = 0x10;\r\n\r\n    var host_bridge = {\r\n        pci_id: 0,\r\n        pci_space: [\r\n            // 00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)\r\n            0x86, 0x80, 0x37, 0x12, 0x00, 0x00, 0x00, 0x00,  0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, PAM0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        ],\r\n        pci_bars: [],\r\n        name: \"82441FX PMC\",\r\n    };\r\n    this.register_device(host_bridge);\r\n\r\n    this.isa_bridge = {\r\n        pci_id: 1 << 3,\r\n        pci_space: [\r\n            // 00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]\r\n            0x86, 0x80, 0x00, 0x70, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x80, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        ],\r\n        pci_bars: [],\r\n        name: \"82371SB PIIX3 ISA\",\r\n    };\r\n    this.isa_bridge_space = this.register_device(this.isa_bridge);\r\n    this.isa_bridge_space8 = new Uint8Array(this.isa_bridge_space.buffer);\r\n\r\n    // 00:1e.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 90)\r\n    //this.register_device([\r\n    //    0x86, 0x80, 0x4e, 0x24, 0x07, 0x01, 0x10, 0x00, 0x90, 0x01, 0x04, 0x06, 0x00, 0x00, 0x01, 0x00,\r\n    //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x05, 0x20, 0xe0, 0xe0, 0x80, 0x22,\r\n    //    0xb0, 0xfe, 0xb0, 0xfe, 0xf1, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n    //    0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x02, 0x00,\r\n    //], 0x1e << 3);\r\n}\r\n\r\nPCI.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    for(var i = 0; i < 256; i++)\r\n    {\r\n        state[i] = this.device_spaces[i];\r\n    }\r\n\r\n    state[256] = this.pci_addr;\r\n    state[257] = this.pci_value;\r\n    state[258] = this.pci_response;\r\n    state[259] = this.pci_status;\r\n\r\n    return state;\r\n};\r\n\r\nPCI.prototype.set_state = function(state)\r\n{\r\n    for(var i = 0; i < 256; i++)\r\n    {\r\n        var device = this.devices[i];\r\n        var space = state[i];\r\n\r\n        if(!device || !space)\r\n        {\r\n            if(device)\r\n            {\r\n                dbg_log(\"Warning: While restoring PCI device: Device exists in current \" +\r\n                        \"configuration but not in snapshot (\" + device.name + \")\");\r\n            }\r\n            if(space)\r\n            {\r\n                dbg_log(\"Warning: While restoring PCI device: Device doesn't exist in current \" +\r\n                        \"configuration but does in snapshot (device \" + h(i, 2) + \")\");\r\n            }\r\n            continue;\r\n        }\r\n\r\n        for(var bar_nr = 0; bar_nr < device.pci_bars.length; bar_nr++)\r\n        {\r\n            var value = space[(0x10 >> 2) + bar_nr];\r\n\r\n            if(value & 1)\r\n            {\r\n                var bar = device.pci_bars[bar_nr];\r\n                var from = bar.original_bar & ~1 & 0xFFFF;\r\n                var to = value & ~1 & 0xFFFF;\r\n                this.set_io_bars(bar, from, to);\r\n            }\r\n            else\r\n            {\r\n                // memory, cannot be changed\r\n            }\r\n        }\r\n\r\n        this.device_spaces[i].set(space);\r\n    }\r\n\r\n    this.pci_addr.set(state[256]);\r\n    this.pci_value.set(state[257]);\r\n    this.pci_response.set(state[258]);\r\n    this.pci_status.set(state[259]);\r\n};\r\n\r\nPCI.prototype.pci_query = function()\r\n{\r\n    var dbg_line = \"query\";\r\n\r\n    // Bit | .31                     .0\r\n    // Fmt | EBBBBBBBBDDDDDFFFRRRRRR00\r\n\r\n    var bdf = this.pci_addr[2] << 8 | this.pci_addr[1],\r\n        addr = this.pci_addr[0] & 0xFC,\r\n        //devfn = bdf & 0xFF,\r\n        //bus = bdf >> 8,\r\n        dev = bdf >> 3 & 0x1F,\r\n        //fn = bdf & 7,\r\n        enabled = this.pci_addr[3] >> 7;\r\n\r\n    dbg_line += \" enabled=\" + enabled;\r\n    dbg_line += \" bdf=\" + h(bdf, 4);\r\n    dbg_line += \" dev=\" + h(dev, 2);\r\n    dbg_line += \" addr=\" + h(addr, 2);\r\n\r\n    var device = this.device_spaces[bdf];\r\n\r\n    if(device !== undefined)\r\n    {\r\n        this.pci_status32[0] = 0x80000000 | 0;\r\n\r\n        if(addr < device.byteLength)\r\n        {\r\n            this.pci_response32[0] = device[addr >> 2];\r\n        }\r\n        else\r\n        {\r\n            // required by freebsd-9.1\r\n            this.pci_response32[0] = 0;\r\n        }\r\n\r\n        dbg_line += \" \" + h(this.pci_addr32[0] >>> 0, 8) + \" -> \" + h(this.pci_response32[0] >>> 0, 8);\r\n\r\n        if(addr >= device.byteLength)\r\n        {\r\n            dbg_line += \" (undef)\";\r\n        }\r\n\r\n        dbg_line += \" (\" + this.devices[bdf].name + \")\";\r\n\r\n        dbg_log(dbg_line, LOG_PCI);\r\n    }\r\n    else\r\n    {\r\n        this.pci_response32[0] = -1;\r\n        this.pci_status32[0] = 0;\r\n    }\r\n};\r\n\r\nPCI.prototype.pci_write8 = function(address, written)\r\n{\r\n    var bdf = address >> 8 & 0xFFFF;\r\n    var addr = address & 0xFF;\r\n\r\n    var space = new Uint8Array(this.device_spaces[bdf].buffer);\r\n    var device = this.devices[bdf];\r\n\r\n    if(!space)\r\n    {\r\n        return;\r\n    }\r\n\r\n    dbg_assert(!(addr >= 0x10 && addr < 0x2C || addr >= 0x30 && addr < 0x34),\r\n               \"PCI: Expected 32-bit write, got 8-bit (addr: \" + h(addr) + \")\");\r\n\r\n    dbg_log(\"PCI write8 dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \") addr=\" + h(addr, 4) +\r\n            \" value=\" + h(written, 2), LOG_PCI);\r\n\r\n    space[addr] = written;\r\n};\r\n\r\nPCI.prototype.pci_write16 = function(address, written)\r\n{\r\n    dbg_assert((address & 1) === 0);\r\n\r\n    var bdf = address >> 8 & 0xFFFF;\r\n    var addr = address & 0xFF;\r\n\r\n    var space = new Uint16Array(this.device_spaces[bdf].buffer);\r\n    var device = this.devices[bdf];\r\n\r\n    if(!space)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(addr >= 0x10 && addr < 0x2C)\r\n    {\r\n        // Bochs bios\r\n        dbg_log(\"Warning: PCI: Expected 32-bit write, got 16-bit (addr: \" + h(addr) + \")\");\r\n        return;\r\n    }\r\n\r\n    dbg_assert(!(addr >= 0x30 && addr < 0x34),\r\n        \"PCI: Expected 32-bit write, got 16-bit (addr: \" + h(addr) + \")\");\r\n\r\n    dbg_log(\"PCI writ16 dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \") addr=\" + h(addr, 4) +\r\n            \" value=\" + h(written, 4), LOG_PCI);\r\n\r\n    space[addr >>> 1] = written;\r\n};\r\n\r\nPCI.prototype.pci_write32 = function(address, written)\r\n{\r\n    dbg_assert((address & 3) === 0);\r\n\r\n    var bdf = address >> 8 & 0xFFFF;\r\n    var addr = address & 0xFF;\r\n\r\n    var space = this.device_spaces[bdf];\r\n    var device = this.devices[bdf];\r\n\r\n    if(!space)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(addr >= 0x10 && addr < 0x28)\r\n    {\r\n        var bar_nr = addr - 0x10 >> 2;\r\n        var bar = device.pci_bars[bar_nr];\r\n\r\n        dbg_log(\"BAR\" + bar_nr + \" exists=\" + (bar ? \"y\" : \"n\") + \" changed to \" +\r\n                h(written >>> 0) + \" dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \") \", LOG_PCI);\r\n\r\n        if(bar)\r\n        {\r\n            dbg_assert(!(bar.size & bar.size - 1), \"bar size should be power of 2\");\r\n\r\n            var space_addr = addr >> 2;\r\n            var type = space[space_addr] & 1;\r\n\r\n            if((written | 3 | bar.size - 1)  === -1) // size check\r\n            {\r\n                written = ~(bar.size - 1) | type;\r\n\r\n                if(type === 0)\r\n                {\r\n                    space[space_addr] = written;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(type === 0)\r\n                {\r\n                    // memory\r\n                    var original_bar = bar.original_bar;\r\n\r\n                    if((written & ~0xF) !== (original_bar & ~0xF))\r\n                    {\r\n                        // seabios\r\n                        dbg_log(\"Warning: Changing memory bar not supported, ignored\", LOG_PCI);\r\n                    }\r\n\r\n                    // changing isn't supported yet, reset to default\r\n                    space[space_addr] = original_bar;\r\n                }\r\n            }\r\n\r\n            if(type === 1)\r\n            {\r\n                // io\r\n                dbg_assert(type === 1);\r\n\r\n                var from = space[space_addr] & ~1 & 0xFFFF;\r\n                var to = written & ~1 & 0xFFFF;\r\n                dbg_log(\"io bar changed from \" + h(from >>> 0, 8) +\r\n                        \" to \" + h(to >>> 0, 8) + \" size=\" + bar.size, LOG_PCI);\r\n                this.set_io_bars(bar, from, to);\r\n                space[space_addr] = written | 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            space[addr >> 2] = 0;\r\n        }\r\n\r\n        dbg_log(\"BAR effective value: \" + h(space[addr >> 2] >>> 0), LOG_PCI);\r\n    }\r\n    else if(addr === 0x30)\r\n    {\r\n        dbg_log(\"PCI write rom address dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \")\" +\r\n                \" value=\" + h(written >>> 0, 8), LOG_PCI);\r\n\r\n        if(device.pci_rom_size)\r\n        {\r\n            if((written | 0x7FF) === (0xFFFFFFFF|0))\r\n            {\r\n                space[addr >> 2] = -device.pci_rom_size | 0;\r\n            }\r\n            else\r\n            {\r\n                space[addr >> 2] = device.pci_rom_address | 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            space[addr >> 2] = 0;\r\n        }\r\n    }\r\n    else if(addr === 0x04)\r\n    {\r\n        dbg_log(\"PCI write dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \") addr=\" + h(addr, 4) +\r\n                \" value=\" + h(written >>> 0, 8), LOG_PCI);\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"PCI write dev=\" + h(bdf >> 3, 2) + \" (\" + device.name + \") addr=\" + h(addr, 4) +\r\n                \" value=\" + h(written >>> 0, 8), LOG_PCI);\r\n        space[addr >>> 2] = written;\r\n    }\r\n};\r\n\r\nPCI.prototype.register_device = function(device)\r\n{\r\n    dbg_assert(device.pci_id !== undefined);\r\n    dbg_assert(device.pci_space !== undefined);\r\n    dbg_assert(device.pci_bars !== undefined);\r\n\r\n    var device_id = device.pci_id;\r\n\r\n    dbg_log(\"PCI register bdf=\" + h(device_id) + \" (\" + device.name + \")\", LOG_PCI);\r\n\r\n    dbg_assert(!this.devices[device_id]);\r\n    dbg_assert(device.pci_space.length >= 64);\r\n    dbg_assert(device_id < this.devices.length);\r\n\r\n    // convert bytewise notation from lspci to double words\r\n    var space = new Int32Array(64);\r\n    space.set(new Int32Array(new Uint8Array(device.pci_space).buffer));\r\n    this.device_spaces[device_id] = space;\r\n    this.devices[device_id] = device;\r\n\r\n    var bar_space = space.slice(4, 10);\r\n\r\n    for(var i = 0; i < device.pci_bars.length; i++)\r\n    {\r\n        var bar = device.pci_bars[i];\r\n\r\n        if(!bar)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        var bar_base = bar_space[i];\r\n        var type = bar_base & 1;\r\n\r\n        bar.original_bar = bar_base;\r\n        bar.entries = [];\r\n\r\n        if(type === 0)\r\n        {\r\n            // memory, not needed currently\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(type === 1);\r\n            var port = bar_base & ~1;\r\n\r\n            for(var j = 0; j < bar.size; j++)\r\n            {\r\n                bar.entries[j] = this.io.ports[port + j];\r\n            }\r\n        }\r\n    }\r\n\r\n    return space;\r\n};\r\n\r\nPCI.prototype.set_io_bars = function(bar, from, to)\r\n{\r\n    var count = bar.size;\r\n    dbg_log(\"Move io bars: from=\" + h(from) + \" to=\" + h(to) + \" count=\" + count, LOG_PCI);\r\n\r\n    var ports = this.io.ports;\r\n\r\n    for(var i = 0; i < count; i++)\r\n    {\r\n        var old_entry = ports[from + i];\r\n        ports[from + i] = this.io.create_empty_entry();\r\n\r\n        if(old_entry.read8 === this.io.empty_port_read8 &&\r\n           old_entry.read16 === this.io.empty_port_read16 &&\r\n           old_entry.read32 === this.io.empty_port_read32 &&\r\n           old_entry.write8 === this.io.empty_port_write &&\r\n           old_entry.write16 === this.io.empty_port_write &&\r\n           old_entry.write32 === this.io.empty_port_write)\r\n        {\r\n            dbg_log(\"Warning: Bad IO bar: Source not mapped, port=\" + h(from + i, 4), LOG_PCI);\r\n        }\r\n\r\n        var entry = bar.entries[i];\r\n        var empty_entry = ports[to + i];\r\n        dbg_assert(entry && empty_entry);\r\n\r\n        ports[to + i] = entry;\r\n\r\n        if(empty_entry.read8 === this.io.empty_port_read8 ||\r\n            empty_entry.read16 === this.io.empty_port_read16 ||\r\n            empty_entry.read32 === this.io.empty_port_read32 ||\r\n            empty_entry.write8 === this.io.empty_port_write ||\r\n            empty_entry.write16 === this.io.empty_port_write ||\r\n            empty_entry.write32 === this.io.empty_port_write)\r\n        {\r\n            // These can fail if the os maps an io port in multiple bars (indicating a bug)\r\n            // XXX: Fails during restore_state\r\n            dbg_log(\"Warning: Bad IO bar: Target already mapped, port=\" + h(to + i, 4), LOG_PCI);\r\n        }\r\n    }\r\n};\r\n\r\nPCI.prototype.raise_irq = function(pci_id)\r\n{\r\n    var space = this.device_spaces[pci_id];\r\n    dbg_assert(space);\r\n\r\n    var pin = (space[0x3C >>> 2] >> 8 & 0xFF) - 1;\r\n    var device = (pci_id >> 3) - 1 & 0xFF;\r\n    var parent_pin = pin + device & 3;\r\n    var irq = this.isa_bridge_space8[0x60 + parent_pin];\r\n\r\n    //dbg_log(\"PCI raise irq \" + h(irq) + \" dev=\" + h(device, 2) +\r\n    //        \" (\" + this.devices[pci_id].name + \")\", LOG_PCI);\r\n    this.cpu.device_raise_irq(irq);\r\n};\r\n\r\nPCI.prototype.lower_irq = function(pci_id)\r\n{\r\n    var space = this.device_spaces[pci_id];\r\n    dbg_assert(space);\r\n\r\n    var pin = space[0x3C >>> 2] >> 8 & 0xFF;\r\n    var device = pci_id >> 3 & 0xFF;\r\n    var parent_pin = pin + device - 2 & 3;\r\n    var irq = this.isa_bridge_space8[0x60 + parent_pin];\r\n\r\n    //dbg_log(\"PCI lower irq \" + h(irq) + \" dev=\" + h(device, 2) +\r\n    //        \" (\" + this.devices[pci_id].name + \")\", LOG_PCI);\r\n    this.cpu.device_lower_irq(irq);\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * @constructor\r\n *\r\n * @param {CPU} cpu\r\n */\r\nfunction FloppyController(cpu, fda_image, fdb_image)\r\n{\r\n    /** @const @type {IO|undefined} */\r\n    this.io = cpu.io;\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    /** @const @type {DMA} */\r\n    this.dma = cpu.devices.dma;\r\n\r\n    this.bytes_expecting = 0;\r\n    this.receiving_command = new Uint8Array(10);\r\n    this.receiving_index = 0;\r\n    this.next_command = null;\r\n\r\n    this.response_data = new Uint8Array(10);\r\n    this.response_index = 0;\r\n    this.response_length = 0;\r\n\r\n    this.floppy_size = 0;\r\n\r\n    /* const */\r\n    this.fda_image = fda_image;\r\n\r\n    /* const */\r\n    this.fdb_image = fdb_image;\r\n\r\n\r\n    this.status_reg0 = 0;\r\n    this.status_reg1 = 0;\r\n    this.status_reg2 = 0;\r\n    this.drive = 0;\r\n\r\n    this.last_cylinder = 0;\r\n    this.last_head = 0;\r\n    this.last_sector = 1;\r\n\r\n    // this should actually be write-only ... but people read it anyway\r\n    this.dor = 0;\r\n\r\n    if(!fda_image)\r\n    {\r\n        // Needed for CD emulation provided by seabios\r\n        cpu.devices.rtc.cmos_write(CMOS_FLOPPY_DRIVE_TYPE, 4 << 4);\r\n\r\n        this.sectors_per_track = 0;\r\n        this.number_of_heads = 0;\r\n        this.number_of_cylinders = 0;\r\n\r\n        this.floppy_size = 0;\r\n    }\r\n    else\r\n    {\r\n        this.floppy_size = fda_image.byteLength;\r\n\r\n        var floppy_types = {\r\n            160  : { type: 1, tracks: 40, sectors: 8 , heads: 1 },\r\n            180  : { type: 1, tracks: 40, sectors: 9 , heads: 1 },\r\n            200  : { type: 1, tracks: 40, sectors: 10, heads: 1 },\r\n            320  : { type: 1, tracks: 40, sectors: 8 , heads: 2 },\r\n            360  : { type: 1, tracks: 40, sectors: 9 , heads: 2 },\r\n            400  : { type: 1, tracks: 40, sectors: 10, heads: 2 },\r\n            720  : { type: 3, tracks: 80, sectors: 9 , heads: 2 },\r\n            1200 : { type: 2, tracks: 80, sectors: 15, heads: 2 },\r\n            1440 : { type: 4, tracks: 80, sectors: 18, heads: 2 },\r\n            1722 : { type: 5, tracks: 82, sectors: 21, heads: 2 },\r\n            2880 : { type: 5, tracks: 80, sectors: 36, heads: 2 },\r\n        };\r\n\r\n        var number_of_cylinders,\r\n            sectors_per_track,\r\n            number_of_heads,\r\n            floppy_type = floppy_types[this.floppy_size >> 10];\r\n\r\n        if(floppy_type && (this.floppy_size & 0x3FF) === 0)\r\n        {\r\n            cpu.devices.rtc.cmos_write(CMOS_FLOPPY_DRIVE_TYPE, floppy_type.type << 4);\r\n\r\n            sectors_per_track = floppy_type.sectors;\r\n            number_of_heads = floppy_type.heads;\r\n            number_of_cylinders = floppy_type.tracks;\r\n        }\r\n        else\r\n        {\r\n            throw \"Unknown floppy size: \" + h(fda_image.byteLength);\r\n        }\r\n\r\n        this.sectors_per_track = sectors_per_track;\r\n        this.number_of_heads = number_of_heads;\r\n        this.number_of_cylinders = number_of_cylinders;\r\n    }\r\n\r\n    this.io.register_read(0x3F0, this, this.port3F0_read);\r\n    this.io.register_read(0x3F2, this, this.port3F2_read);\r\n    this.io.register_read(0x3F4, this, this.port3F4_read);\r\n    this.io.register_read(0x3F5, this, this.port3F5_read);\r\n    this.io.register_read(0x3F7, this, this.port3F7_read);\r\n\r\n    this.io.register_write(0x3F2, this, this.port3F2_write);\r\n    this.io.register_write(0x3F5, this, this.port3F5_write);\r\n}\r\n\r\nFloppyController.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.bytes_expecting;\r\n    state[1] = this.receiving_command;\r\n    state[2] = this.receiving_index;\r\n    //state[3] = this.next_command;\r\n    state[4] = this.response_data;\r\n    state[5] = this.response_index;\r\n    state[6] = this.response_length;\r\n    state[7] = this.floppy_size;\r\n    state[8] = this.status_reg0;\r\n    state[9] = this.status_reg1;\r\n    state[10] = this.status_reg2;\r\n    state[11] = this.drive;\r\n    state[12] = this.last_cylinder;\r\n    state[13] = this.last_head;\r\n    state[14] = this.last_sector;\r\n    state[15] = this.dor;\r\n    state[16] = this.sectors_per_track;\r\n    state[17] = this.number_of_heads;\r\n    state[18] = this.number_of_cylinders;\r\n\r\n    return state;\r\n};\r\n\r\nFloppyController.prototype.set_state = function(state)\r\n{\r\n    this.bytes_expecting = state[0];\r\n    this.receiving_command = state[1];\r\n    this.receiving_index = state[2];\r\n    this.next_command = state[3];\r\n    this.response_data = state[4];\r\n    this.response_index = state[5];\r\n    this.response_length = state[6];\r\n    this.floppy_size = state[7];\r\n    this.status_reg0 = state[8];\r\n    this.status_reg1 = state[9];\r\n    this.status_reg2 = state[10];\r\n    this.drive = state[11];\r\n    this.last_cylinder = state[12];\r\n    this.last_head = state[13];\r\n    this.last_sector = state[14];\r\n    this.dor = state[15];\r\n    this.sectors_per_track = state[16];\r\n    this.number_of_heads = state[17];\r\n    this.number_of_cylinders = state[18];\r\n};\r\n\r\nFloppyController.prototype.port3F0_read = function()\r\n{\r\n    dbg_log(\"3F0 read\", LOG_FLOPPY);\r\n\r\n    return 0;\r\n};\r\n\r\n\r\nFloppyController.prototype.port3F4_read = function()\r\n{\r\n    dbg_log(\"3F4 read\", LOG_FLOPPY);\r\n\r\n    var return_byte = 0x80;\r\n\r\n    if(this.response_index < this.response_length)\r\n    {\r\n        return_byte |= 0x40 | 0x10;\r\n    }\r\n\r\n    if((this.dor & 8) === 0)\r\n    {\r\n        return_byte |= 0x20;\r\n    }\r\n\r\n    return return_byte;\r\n};\r\n\r\nFloppyController.prototype.port3F7_read = function()\r\n{\r\n    dbg_log(\"3F7 read\", LOG_FLOPPY);\r\n    return 0x00;\r\n}\r\n\r\nFloppyController.prototype.port3F5_read = function()\r\n{\r\n    if(this.response_index < this.response_length)\r\n    {\r\n        dbg_log(\"3F5 read: \" + this.response_data[this.response_index], LOG_FLOPPY);\r\n        this.cpu.device_lower_irq(6);\r\n        return this.response_data[this.response_index++];\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"3F5 read, empty\", LOG_FLOPPY);\r\n        return 0xFF;\r\n    }\r\n};\r\n\r\nFloppyController.prototype.port3F5_write = function(reg_byte)\r\n{\r\n    if(!this.fda_image) return;\r\n\r\n    dbg_log(\"3F5 write \" + h(reg_byte), LOG_FLOPPY);\r\n\r\n    if(this.bytes_expecting > 0)\r\n    {\r\n        this.receiving_command[this.receiving_index++] = reg_byte;\r\n\r\n        this.bytes_expecting--;\r\n\r\n        if(this.bytes_expecting === 0)\r\n        {\r\n            if(DEBUG)\r\n            {\r\n                var log = \"3F5 command received: \";\r\n                for(var i = 0; i < this.receiving_index; i++)\r\n                    log += h(this.receiving_command[i]) + \" \";\r\n                dbg_log(log, LOG_FLOPPY);\r\n            }\r\n\r\n            this.next_command.call(this, this.receiving_command);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        switch(reg_byte)\r\n        {\r\n            // TODO\r\n            //case 2:\r\n                //this.next_command = read_complete_track;\r\n                //this.bytes_expecting = 8;\r\n                //break;\r\n            case 0x03:\r\n                this.next_command = this.fix_drive_data;\r\n                this.bytes_expecting = 2;\r\n                break;\r\n            case 0x04:\r\n                this.next_command = this.check_drive_status;\r\n                this.bytes_expecting = 1;\r\n                break;\r\n            case 0x05:\r\n            case 0xC5:\r\n                this.next_command = function(args) { this.do_sector(true, args); };\r\n                this.bytes_expecting = 8;\r\n                break;\r\n            case 0xE6:\r\n                this.next_command = function(args) { this.do_sector(false, args); };\r\n                this.bytes_expecting = 8;\r\n                break;\r\n            case 0x07:\r\n                this.next_command = this.calibrate;\r\n                this.bytes_expecting = 1;\r\n                break;\r\n            case 0x08:\r\n                this.check_interrupt_status();\r\n                break;\r\n            case 0x4A:\r\n                this.next_command = this.read_sector_id;\r\n                this.bytes_expecting = 1;\r\n                break;\r\n            case 0x0F:\r\n                this.bytes_expecting = 2;\r\n                this.next_command = this.seek;\r\n                break;\r\n            case 0x0E:\r\n                // dump regs\r\n                dbg_log(\"dump registers\", LOG_FLOPPY);\r\n                this.response_data[0] = 0x80;\r\n                this.response_index = 0;\r\n                this.response_length = 1;\r\n\r\n                this.bytes_expecting = 0;\r\n                break;\r\n\r\n            default:\r\n                dbg_assert(false, \"Unimplemented floppy command call \" + h(reg_byte));\r\n        }\r\n\r\n        this.receiving_index = 0;\r\n    }\r\n};\r\n\r\nFloppyController.prototype.port3F2_read = function()\r\n{\r\n    dbg_log(\"read 3F2: DOR\", LOG_FLOPPY);\r\n    return this.dor;\r\n}\r\n\r\nFloppyController.prototype.port3F2_write = function(value)\r\n{\r\n    if((value & 4) === 4 && (this.dor & 4) === 0)\r\n    {\r\n        // reset\r\n        this.cpu.device_raise_irq(6);\r\n    }\r\n\r\n    dbg_log(\"start motors: \" + h(value >> 4), LOG_FLOPPY);\r\n    dbg_log(\"enable dma: \" + !!(value & 8), LOG_FLOPPY);\r\n    dbg_log(\"reset fdc: \" + !!(value & 4), LOG_FLOPPY);\r\n    dbg_log(\"drive select: \" + (value & 3), LOG_FLOPPY);\r\n    dbg_log(\"DOR = \" + h(value), LOG_FLOPPY);\r\n\r\n    this.dor = value;\r\n}\r\n\r\nFloppyController.prototype.check_drive_status = function(args)\r\n{\r\n    dbg_log(\"check drive status\", LOG_FLOPPY);\r\n\r\n    this.response_index = 0;\r\n    this.response_length = 1;\r\n    this.response_data[0] = 1 << 5;\r\n}\r\n\r\nFloppyController.prototype.seek = function(args)\r\n{\r\n    dbg_log(\"seek\", LOG_FLOPPY);\r\n    dbg_assert((args[0] & 3) === 0, \"Unhandled seek drive\");\r\n\r\n    this.last_cylinder = args[1];\r\n    this.last_head = args[0] >> 2 & 1;\r\n\r\n    this.raise_irq();\r\n}\r\n\r\nFloppyController.prototype.calibrate = function(args)\r\n{\r\n    dbg_log(\"floppy calibrate\", LOG_FLOPPY);\r\n\r\n    this.raise_irq();\r\n}\r\n\r\nFloppyController.prototype.check_interrupt_status = function()\r\n{\r\n    // do not trigger an interrupt here\r\n    dbg_log(\"floppy check interrupt status\", LOG_FLOPPY);\r\n\r\n    this.response_index = 0;\r\n    this.response_length = 2;\r\n\r\n    this.response_data[0] = 1 << 5;\r\n    this.response_data[1] = this.last_cylinder;\r\n}\r\n\r\nFloppyController.prototype.do_sector = function(is_write, args)\r\n{\r\n    var head = args[2],\r\n        cylinder = args[1],\r\n        sector = args[3],\r\n        sector_size = 128 << args[4],\r\n        read_count = args[5] - args[3] + 1,\r\n\r\n        read_offset = ((head + this.number_of_heads * cylinder) * this.sectors_per_track + sector - 1) * sector_size;\r\n\r\n    dbg_log(\"Floppy \" + (is_write ? \"Write\" : \"Read\"), LOG_FLOPPY);\r\n    dbg_log(\"from \" + h(read_offset) + \" length \" + h(read_count * sector_size), LOG_FLOPPY);\r\n    dbg_log(cylinder + \" / \" + head + \" / \" + sector, LOG_FLOPPY);\r\n\r\n    if(!args[4])\r\n    {\r\n        dbg_log(\"FDC: sector count is zero, use data length instead\", LOG_FLOPPY);\r\n    }\r\n\r\n    if(!this.fda_image)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(is_write)\r\n    {\r\n        this.dma.do_write(this.fda_image, read_offset, read_count * sector_size, 2, this.done.bind(this, args, cylinder, head, sector));\r\n    }\r\n    else\r\n    {\r\n        this.dma.do_read(this.fda_image, read_offset, read_count * sector_size, 2, this.done.bind(this, args, cylinder, head, sector));\r\n    }\r\n};\r\n\r\nFloppyController.prototype.done = function(args, cylinder, head, sector, error)\r\n{\r\n    if(error)\r\n    {\r\n        // TODO: Set appropriate bits\r\n        return;\r\n    }\r\n\r\n    sector++;\r\n\r\n    if(sector > this.sectors_per_track)\r\n    {\r\n        sector = 1;\r\n        head++;\r\n\r\n        if(head >= this.number_of_heads)\r\n        {\r\n            head = 0;\r\n            cylinder++;\r\n        }\r\n    }\r\n\r\n    this.last_cylinder = cylinder;\r\n    this.last_head = head;\r\n    this.last_sector = sector;\r\n\r\n    this.response_index = 0;\r\n    this.response_length = 7;\r\n\r\n    this.response_data[0] = head << 2 | 0x20;\r\n    this.response_data[1] = 0;\r\n    this.response_data[2] = 0;\r\n    this.response_data[3] = cylinder;\r\n    this.response_data[4] = head;\r\n    this.response_data[5] = sector;\r\n    this.response_data[6] = args[4];\r\n\r\n    this.raise_irq();\r\n}\r\n\r\nFloppyController.prototype.fix_drive_data = function(args)\r\n{\r\n    dbg_log(\"floppy fix drive data \" + args, LOG_FLOPPY);\r\n}\r\n\r\nFloppyController.prototype.read_sector_id = function(args)\r\n{\r\n    dbg_log(\"floppy read sector id \" + args, LOG_FLOPPY);\r\n\r\n    this.response_index = 0;\r\n    this.response_length = 7;\r\n\r\n    this.response_data[0] = 0;\r\n    this.response_data[1] = 0;\r\n    this.response_data[2] = 0;\r\n    this.response_data[3] = 0;\r\n    this.response_data[4] = 0;\r\n    this.response_data[5] = 0;\r\n    this.response_data[6] = 0;\r\n\r\n    this.raise_irq();\r\n}\r\n\r\nFloppyController.prototype.raise_irq = function()\r\n{\r\n    if(this.dor & 8)\r\n    {\r\n        this.cpu.device_raise_irq(6);\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar A20_MASK = ~(1 << 20);\r\n/** @const */\r\nvar A20_MASK16 = ~(1 << 20 - 1);\r\n/** @const */\r\nvar A20_MASK32 = ~(1 << 20 - 2);\r\n\r\n/** @const */\r\nvar USE_A20 = false;\r\n\r\n\r\n// called by all memory writes\r\nCPU.prototype.debug_write = function(addr, size, value)\r\n{\r\n    if(!DEBUG)\r\n    {\r\n        return;\r\n    }\r\n\r\n    dbg_assert(typeof value === \"number\" && !isNaN(value));\r\n    dbg_assert(value >= -0x80000000 && addr < 0x80000000);\r\n\r\n    this.debug_read(addr, size, true);\r\n}\r\n\r\n/**\r\n * @param {boolean=} is_write\r\n */\r\nCPU.prototype.debug_read = function(addr, size, is_write)\r\n{\r\n    if(!DEBUG)\r\n    {\r\n        return;\r\n    }\r\n\r\n    dbg_assert(typeof addr === \"number\");\r\n    dbg_assert(!isNaN(addr));\r\n};\r\n\r\n\r\nCPU.prototype.mmap_read8 = function(addr)\r\n{\r\n    return this.memory_map_read8[addr >>> MMAP_BLOCK_BITS](addr);\r\n};\r\n\r\nCPU.prototype.mmap_write8 = function(addr, value)\r\n{\r\n    this.memory_map_write8[addr >>> MMAP_BLOCK_BITS](addr, value);\r\n};\r\n\r\nCPU.prototype.mmap_read16 = function(addr)\r\n{\r\n    var fn = this.memory_map_read8[addr >>> MMAP_BLOCK_BITS];\r\n\r\n    return fn(addr) | fn(addr + 1 | 0) << 8;\r\n};\r\n\r\nCPU.prototype.mmap_write16 = function(addr, value)\r\n{\r\n    var fn = this.memory_map_write8[addr >>> MMAP_BLOCK_BITS];\r\n\r\n    fn(addr, value & 0xFF);\r\n    fn(addr + 1 | 0, value >> 8 & 0xFF);\r\n};\r\n\r\nCPU.prototype.mmap_read32 = function(addr)\r\n{\r\n    var aligned_addr = addr >>> MMAP_BLOCK_BITS;\r\n\r\n    return this.memory_map_read32[aligned_addr](addr);\r\n}\r\n\r\nCPU.prototype.mmap_write32 = function(addr, value)\r\n{\r\n    var aligned_addr = addr >>> MMAP_BLOCK_BITS;\r\n\r\n    this.memory_map_write32[aligned_addr](addr, value);\r\n}\r\n\r\nCPU.prototype.in_mapped_range = function(addr)\r\n{\r\n    return (addr | 0) >= 0xA0000 && (addr | 0) < 0xC0000 || (addr >>> 0) >= (this.memory_size >>> 0);\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n */\r\nCPU.prototype.read8 = function(addr)\r\n{\r\n    this.debug_read(addr, 1);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        return this.mmap_read8(addr);\r\n    }\r\n    else\r\n    {\r\n        return this.mem8[addr];\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n */\r\nCPU.prototype.read16 = function(addr)\r\n{\r\n    this.debug_read(addr, 2);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        return this.mmap_read16(addr);\r\n    }\r\n    else\r\n    {\r\n        return this.mem8[addr] | this.mem8[addr + 1 | 0] << 8;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n */\r\nCPU.prototype.read_aligned16 = function(addr)\r\n{\r\n    dbg_assert(addr >= 0 && addr < 0x80000000);\r\n    this.debug_read(addr << 1, 2);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK16;\r\n\r\n    if(this.in_mapped_range(addr << 1))\r\n    {\r\n        return this.mmap_read16(addr << 1);\r\n    }\r\n    else\r\n    {\r\n        return this.mem16[addr];\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n */\r\nCPU.prototype.read32s = function(addr)\r\n{\r\n    this.debug_read(addr, 4);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        return this.mmap_read32(addr);\r\n    }\r\n    else\r\n    {\r\n        return this.mem8[addr] | this.mem8[addr + 1 | 0] << 8 |\r\n            this.mem8[addr + 2 | 0] << 16 | this.mem8[addr + 3 | 0] << 24;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n */\r\nCPU.prototype.read_aligned32 = function(addr)\r\n{\r\n    dbg_assert(addr >= 0 && addr < 0x40000000);\r\n    this.debug_read(addr << 2, 4);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK32;\r\n\r\n    if(this.in_mapped_range(addr << 2))\r\n    {\r\n        return this.mmap_read32(addr << 2);\r\n    }\r\n    else\r\n    {\r\n        return this.mem32s[addr];\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n * @param {number} value\r\n */\r\nCPU.prototype.write8 = function(addr, value)\r\n{\r\n    this.debug_write(addr, 1, value);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        this.mmap_write8(addr, value);\r\n    }\r\n    else\r\n    {\r\n        this.mem8[addr] = value;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n * @param {number} value\r\n */\r\nCPU.prototype.write16 = function(addr, value)\r\n{\r\n    this.debug_write(addr, 2, value);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        this.mmap_write16(addr, value);\r\n    }\r\n    else\r\n    {\r\n        this.mem8[addr] = value;\r\n        this.mem8[addr + 1 | 0] = value >> 8;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n * @param {number} value\r\n */\r\nCPU.prototype.write_aligned16 = function(addr, value)\r\n{\r\n    dbg_assert(addr >= 0 && addr < 0x80000000);\r\n    this.debug_write(addr << 1, 2, value);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK16;\r\n\r\n    if(this.in_mapped_range(addr << 1))\r\n    {\r\n        this.mmap_write16(addr << 1, value);\r\n    }\r\n    else\r\n    {\r\n        this.mem16[addr] = value;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} addr\r\n * @param {number} value\r\n */\r\nCPU.prototype.write32 = function(addr, value)\r\n{\r\n    this.debug_write(addr, 4, value);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK;\r\n\r\n    if(this.in_mapped_range(addr))\r\n    {\r\n        this.mmap_write32(addr, value);\r\n    }\r\n    else\r\n    {\r\n        this.mem8[addr] = value;\r\n        this.mem8[addr + 1 | 0] = value >> 8;\r\n        this.mem8[addr + 2 | 0] = value >> 16;\r\n        this.mem8[addr + 3 | 0] = value >> 24;\r\n    }\r\n};\r\n\r\nCPU.prototype.write_aligned32 = function(addr, value)\r\n{\r\n    dbg_assert(addr >= 0 && addr < 0x40000000);\r\n    this.debug_write(addr << 2, 4, value);\r\n    if(USE_A20 && !this.a20_enabled) addr &= A20_MASK32;\r\n\r\n    if(this.in_mapped_range(addr << 2))\r\n    {\r\n        this.mmap_write32(addr << 2, value);\r\n    }\r\n    else\r\n    {\r\n        this.mem32s[addr] = value;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Array.<number>|Uint8Array} blob\r\n * @param {number} offset\r\n */\r\nCPU.prototype.write_blob = function(blob, offset)\r\n{\r\n    this.debug_write(offset, blob.length, 0)\r\n    dbg_assert(blob && blob.length >= 0);\r\n\r\n    this.mem8.set(blob, offset);\r\n};\r\n\r\n/**\r\n * @param {Array.<number>|Int32Array} blob\r\n * @param {number} offset\r\n */\r\nCPU.prototype.write_blob32 = function(blob, offset)\r\n{\r\n    dbg_assert(blob && blob.length);\r\n    this.debug_write(offset, blob.length << 2, 0);\r\n    this.mem32s.set(blob, offset);\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction DMA(cpu)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.channel_page = new Uint8Array(8);\r\n    this.channel_pagehi = new Uint8Array(8);\r\n    this.channel_addr = new Uint16Array(8);\r\n    this.channel_addr_init = new Uint16Array(8);\r\n    this.channel_count = new Uint16Array(8);\r\n    this.channel_count_init = new Uint16Array(8);\r\n    this.channel_mask = new Uint8Array(8);\r\n    this.channel_mode = new Uint8Array(8);\r\n    this.unmask_listeners = [];\r\n\r\n    this.lsb_msb_flipflop = 0;\r\n\r\n    var io = cpu.io;\r\n\r\n    io.register_write(0x00, this, this.port_addr_write.bind(this, 0));\r\n    io.register_write(0x02, this, this.port_addr_write.bind(this, 1));\r\n    io.register_write(0x04, this, this.port_addr_write.bind(this, 2));\r\n    io.register_write(0x06, this, this.port_addr_write.bind(this, 3));\r\n    io.register_write(0x01, this, this.port_count_write.bind(this, 0));\r\n    io.register_write(0x03, this, this.port_count_write.bind(this, 1));\r\n    io.register_write(0x05, this, this.port_count_write.bind(this, 2));\r\n    io.register_write(0x07, this, this.port_count_write.bind(this, 3));\r\n\r\n    io.register_read(0x00, this, this.port_addr_read.bind(this, 0));\r\n    io.register_read(0x02, this, this.port_addr_read.bind(this, 1));\r\n    io.register_read(0x04, this, this.port_addr_read.bind(this, 2));\r\n    io.register_read(0x06, this, this.port_addr_read.bind(this, 3));\r\n    io.register_read(0x01, this, this.port_count_read.bind(this, 0));\r\n    io.register_read(0x03, this, this.port_count_read.bind(this, 1));\r\n    io.register_read(0x05, this, this.port_count_read.bind(this, 2));\r\n    io.register_read(0x07, this, this.port_count_read.bind(this, 3));\r\n\r\n    io.register_write(0xC0, this, this.port_addr_write.bind(this, 4));\r\n    io.register_write(0xC4, this, this.port_addr_write.bind(this, 5));\r\n    io.register_write(0xC8, this, this.port_addr_write.bind(this, 6));\r\n    io.register_write(0xCC, this, this.port_addr_write.bind(this, 7));\r\n    io.register_write(0xC2, this, this.port_count_write.bind(this, 4));\r\n    io.register_write(0xC6, this, this.port_count_write.bind(this, 5));\r\n    io.register_write(0xCA, this, this.port_count_write.bind(this, 6));\r\n    io.register_write(0xCE, this, this.port_count_write.bind(this, 7));\r\n\r\n    io.register_read(0xC0, this, this.port_addr_read.bind(this, 4));\r\n    io.register_read(0xC4, this, this.port_addr_read.bind(this, 5));\r\n    io.register_read(0xC8, this, this.port_addr_read.bind(this, 6));\r\n    io.register_read(0xCC, this, this.port_addr_read.bind(this, 7));\r\n    io.register_read(0xC2, this, this.port_count_read.bind(this, 4));\r\n    io.register_read(0xC6, this, this.port_count_read.bind(this, 5));\r\n    io.register_read(0xCA, this, this.port_count_read.bind(this, 6));\r\n    io.register_read(0xCE, this, this.port_count_read.bind(this, 7));\r\n\r\n    io.register_write(0x87, this, this.port_page_write.bind(this, 0));\r\n    io.register_write(0x83, this, this.port_page_write.bind(this, 1));\r\n    io.register_write(0x81, this, this.port_page_write.bind(this, 2));\r\n    io.register_write(0x82, this, this.port_page_write.bind(this, 3));\r\n    io.register_write(0x8F, this, this.port_page_write.bind(this, 4));\r\n    io.register_write(0x8B, this, this.port_page_write.bind(this, 5));\r\n    io.register_write(0x89, this, this.port_page_write.bind(this, 6));\r\n    io.register_write(0x8A, this, this.port_page_write.bind(this, 7));\r\n\r\n    io.register_read(0x87, this, this.port_page_read.bind(this, 0));\r\n    io.register_read(0x83, this, this.port_page_read.bind(this, 1));\r\n    io.register_read(0x81, this, this.port_page_read.bind(this, 2));\r\n    io.register_read(0x82, this, this.port_page_read.bind(this, 3));\r\n    io.register_read(0x8F, this, this.port_page_read.bind(this, 4));\r\n    io.register_read(0x8B, this, this.port_page_read.bind(this, 5));\r\n    io.register_read(0x89, this, this.port_page_read.bind(this, 6));\r\n    io.register_read(0x8A, this, this.port_page_read.bind(this, 7));\r\n\r\n    io.register_write(0x487, this, this.port_pagehi_write.bind(this, 0));\r\n    io.register_write(0x483, this, this.port_pagehi_write.bind(this, 1));\r\n    io.register_write(0x481, this, this.port_pagehi_write.bind(this, 2));\r\n    io.register_write(0x482, this, this.port_pagehi_write.bind(this, 3));\r\n    io.register_write(0x48B, this, this.port_pagehi_write.bind(this, 5));\r\n    io.register_write(0x489, this, this.port_pagehi_write.bind(this, 6));\r\n    io.register_write(0x48A, this, this.port_pagehi_write.bind(this, 7));\r\n\r\n    io.register_read(0x487, this, this.port_pagehi_read.bind(this, 0));\r\n    io.register_read(0x483, this, this.port_pagehi_read.bind(this, 1));\r\n    io.register_read(0x481, this, this.port_pagehi_read.bind(this, 2));\r\n    io.register_read(0x482, this, this.port_pagehi_read.bind(this, 3));\r\n    io.register_read(0x48B, this, this.port_pagehi_read.bind(this, 5));\r\n    io.register_read(0x489, this, this.port_pagehi_read.bind(this, 6));\r\n    io.register_read(0x48A, this, this.port_pagehi_read.bind(this, 7));\r\n\r\n    io.register_write(0x0A, this, this.port_singlemask_write.bind(this, 0));\r\n    io.register_write(0xD4, this, this.port_singlemask_write.bind(this, 4));\r\n    io.register_write(0x0F, this, this.port_multimask_write.bind(this, 0));\r\n    io.register_write(0xDE, this, this.port_multimask_write.bind(this, 4));\r\n\r\n    io.register_read(0x0F, this, this.port_multimask_read.bind(this, 0));\r\n    io.register_read(0xDE, this, this.port_multimask_read.bind(this, 4));\r\n\r\n    io.register_write(0x0B, this, this.port_mode_write.bind(this, 0));\r\n    io.register_write(0xD6, this, this.port_mode_write.bind(this, 4));\r\n\r\n    io.register_write(0x0C, this, this.portC_write);\r\n    io.register_write(0xD8, this, this.portC_write);\r\n}\r\n\r\nDMA.prototype.get_state = function()\r\n{\r\n    return [\r\n        this.channel_page,\r\n        this.channel_pagehi,\r\n        this.channel_addr,\r\n        this.channel_addr_init,\r\n        this.channel_count,\r\n        this.channel_count_init,\r\n        this.channel_mask,\r\n        this.channel_mode,\r\n        this.lsb_msb_flipflop,\r\n    ];\r\n};\r\n\r\nDMA.prototype.set_state = function(state)\r\n{\r\n    this.channel_page = state[0];\r\n    this.channel_pagehi = state[1];\r\n    this.channel_addr = state[2];\r\n    this.channel_addr_init = state[3];\r\n    this.channel_count = state[4];\r\n    this.channel_count_init = state[5];\r\n    this.channel_mask = state[6];\r\n    this.channel_mode = state[7];\r\n    this.lsb_msb_flipflop = state[8];\r\n};\r\n\r\nDMA.prototype.port_count_write = function(channel, data_byte)\r\n{\r\n    dbg_log(\"count write [\" + channel + \"] = \" + h(data_byte), LOG_DMA);\r\n\r\n    this.channel_count[channel] =\r\n        this.flipflop_get(this.channel_count[channel], data_byte, false);\r\n\r\n    this.channel_count_init[channel] =\r\n        this.flipflop_get(this.channel_count_init[channel], data_byte, true);\r\n};\r\n\r\nDMA.prototype.port_count_read = function(channel)\r\n{\r\n    dbg_log(\"count read [\" + channel + \"] -> \" + h(this.channel_count[channel]), LOG_DMA);\r\n    return this.flipflop_read(this.channel_count[channel]);\r\n};\r\n\r\nDMA.prototype.port_addr_write = function(channel, data_byte)\r\n{\r\n    dbg_log(\"addr write [\" + channel + \"] = \" + h(data_byte), LOG_DMA);\r\n\r\n    this.channel_addr[channel] =\r\n        this.flipflop_get(this.channel_addr[channel], data_byte, false);\r\n\r\n    this.channel_addr_init[channel] =\r\n        this.flipflop_get(this.channel_addr_init[channel], data_byte, true);\r\n};\r\n\r\nDMA.prototype.port_addr_read = function(channel)\r\n{\r\n    dbg_log(\"addr read [\" + channel + \"] -> \" + h(this.channel_addr[channel]), LOG_DMA);\r\n    return this.flipflop_read(this.channel_addr[channel]);\r\n};\r\n\r\nDMA.prototype.port_pagehi_write = function(channel, data_byte)\r\n{\r\n    dbg_log(\"pagehi write [\" + channel + \"] = \" + h(data_byte), LOG_DMA);\r\n    this.channel_pagehi[channel] = data_byte;\r\n};\r\n\r\nDMA.prototype.port_pagehi_read = function(channel)\r\n{\r\n    dbg_log(\"pagehi read [\" + channel + \"]\", LOG_DMA);\r\n    return this.channel_pagehi[channel];\r\n};\r\n\r\nDMA.prototype.port_page_write = function(channel, data_byte)\r\n{\r\n    dbg_log(\"page write [\" + channel + \"] = \" + h(data_byte), LOG_DMA);\r\n    this.channel_page[channel] = data_byte;\r\n};\r\n\r\nDMA.prototype.port_page_read = function(channel)\r\n{\r\n    dbg_log(\"page read [\" + channel + \"]\", LOG_DMA);\r\n    return this.channel_page[channel];\r\n};\r\n\r\nDMA.prototype.port_singlemask_write = function(channel_offset, data_byte)\r\n{\r\n    var channel = (data_byte & 0x3) + channel_offset;\r\n    var value = data_byte & 0x4 ? 1 : 0;\r\n    dbg_log(\"singlechannel mask write [\" + channel + \"] = \" + value, LOG_DMA);\r\n    this.update_mask(channel, value);\r\n};\r\n\r\nDMA.prototype.port_multimask_write = function(channel_offset, data_byte)\r\n{\r\n    dbg_log(\"multichannel mask write: \" + h(data_byte), LOG_DMA);\r\n    for(var i = 0; i < 4; i++)\r\n    {\r\n        this.update_mask(channel_offset + i, data_byte & (1 << i));\r\n    }\r\n};\r\n\r\nDMA.prototype.port_multimask_read = function(channel_offset)\r\n{\r\n    var value = 0;\r\n    value |= this.channel_mask[channel_offset + 0];\r\n    value |= this.channel_mask[channel_offset + 1] << 1;\r\n    value |= this.channel_mask[channel_offset + 2] << 2;\r\n    value |= this.channel_mask[channel_offset + 3] << 3;\r\n    dbg_log(\"multichannel mask read: \" + h(value), LOG_DMA);\r\n    return value;\r\n};\r\n\r\nDMA.prototype.port_mode_write = function(channel_offset, data_byte)\r\n{\r\n    var channel = (data_byte & 0x3) + channel_offset;\r\n    dbg_log(\"mode write [\" + channel + \"] = \" + h(data_byte), LOG_DMA);\r\n    this.channel_mode[channel] = data_byte;\r\n};\r\n\r\nDMA.prototype.portC_write = function(data_byte)\r\n{\r\n    dbg_log(\"flipflop reset\", LOG_DMA);\r\n    this.lsb_msb_flipflop = 0;\r\n};\r\n\r\nDMA.prototype.on_unmask = function(fn, this_value)\r\n{\r\n    this.unmask_listeners.push({\r\n        fn: fn,\r\n        this_value: this_value,\r\n    });\r\n};\r\n\r\nDMA.prototype.update_mask = function(channel, value)\r\n{\r\n    if(this.channel_mask[channel] !== value)\r\n    {\r\n        this.channel_mask[channel] = value;\r\n\r\n        if(!value)\r\n        {\r\n            dbg_log(\"firing on_unmask(\" + channel + \")\", LOG_DMA);\r\n            for(var i = 0; i < this.unmask_listeners.length; i++)\r\n            {\r\n                this.unmask_listeners[i].fn.call(\r\n                    this.unmask_listeners[i].this_value,\r\n                    channel\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// read data, write to memory\r\nDMA.prototype.do_read = function(buffer, start, len, channel, fn)\r\n{\r\n    var read_count = this.count_get_8bit(channel),\r\n        addr = this.address_get_8bit(channel);\r\n\r\n    dbg_log(\"DMA write channel \" + channel, LOG_DMA);\r\n    dbg_log(\"to \" + h(addr) + \" len \" + h(read_count), LOG_DMA);\r\n\r\n    if(len < read_count)\r\n    {\r\n        dbg_log(\"DMA should read more than provided: \" + h(len) + \" \" + h(read_count), LOG_DMA);\r\n    }\r\n\r\n    if(start + read_count > buffer.byteLength)\r\n    {\r\n        dbg_log(\"DMA read outside of buffer\", LOG_DMA);\r\n        fn(true);\r\n    }\r\n    else\r\n    {\r\n        var cpu = this.cpu;\r\n        this.channel_addr[channel] += read_count;\r\n\r\n        buffer.get(start, read_count, function(data)\r\n        {\r\n            cpu.write_blob(data, addr);\r\n            fn(false);\r\n        });\r\n    }\r\n};\r\n\r\n// write data, read memory\r\n// start and len in bytes\r\nDMA.prototype.do_write = function(buffer, start, len, channel, fn)\r\n{\r\n    var read_count = (this.channel_count[channel] + 1) & 0xFFFF,\r\n        bytes_per_count = channel >= 5 ? 2 : 1,\r\n        read_bytes = read_count * bytes_per_count,\r\n        addr = this.address_get_8bit(channel),\r\n        unfinished = false,\r\n        want_more = false,\r\n        autoinit = this.channel_mode[channel] & 0x10;\r\n\r\n    dbg_log(\"DMA write channel \" + channel, LOG_DMA);\r\n    dbg_log(\"to \" + h(addr) + \" len \" + h(read_bytes), LOG_DMA);\r\n\r\n    if(len < read_bytes)\r\n    {\r\n        dbg_log(\"DMA should read more than provided\", LOG_DMA);\r\n        read_count = Math.floor(len / bytes_per_count);\r\n        read_bytes = read_count * bytes_per_count;\r\n        unfinished = true;\r\n    }\r\n    else if(len > read_bytes)\r\n    {\r\n        dbg_log(\"DMA attempted to read more than provided\", LOG_DMA);\r\n        want_more = true;\r\n    }\r\n\r\n    if(start + read_bytes > buffer.byteLength)\r\n    {\r\n        dbg_log(\"DMA write outside of buffer\", LOG_DMA);\r\n        fn(true);\r\n    }\r\n    else\r\n    {\r\n        this.channel_addr[channel] += read_count;\r\n        this.channel_count[channel] -= read_count;\r\n        // when complete, counter should underflow to 0xFFFF\r\n\r\n        if(!unfinished && autoinit)\r\n        {\r\n            dbg_log(\"DMA autoinit\", LOG_DMA);\r\n            this.channel_addr[channel] = this.channel_addr_init[channel];\r\n            this.channel_count[channel] = this.channel_count_init[channel];\r\n        }\r\n\r\n        buffer.set(start,\r\n                this.cpu.mem8.subarray(addr, addr + read_bytes),\r\n                () =>\r\n                {\r\n                    if(want_more && autoinit)\r\n                    {\r\n                        dbg_log(\"DMA continuing from start\", LOG_DMA);\r\n                        this.do_write(buffer, start + read_bytes, len - read_bytes, channel, fn);\r\n                    }\r\n                    else\r\n                    {\r\n                        fn(false);\r\n                    }\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\nDMA.prototype.address_get_8bit = function(channel)\r\n{\r\n    var addr = this.channel_addr[channel];\r\n\r\n    // http://wiki.osdev.org/ISA_DMA#16_bit_issues\r\n    if(channel >= 5)\r\n    {\r\n        addr = (addr << 1);\r\n    }\r\n\r\n    addr &= 0xFFFF;\r\n    addr |= this.channel_page[channel] << 16;\r\n    addr |= this.channel_pagehi[channel] << 24;\r\n\r\n    return addr;\r\n};\r\n\r\nDMA.prototype.count_get_8bit = function(channel)\r\n{\r\n    var count = this.channel_count[channel] + 1;\r\n\r\n    if(channel >= 5)\r\n    {\r\n        count *= 2;\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\nDMA.prototype.flipflop_get = function(old_dword, new_byte, continuing)\r\n{\r\n    if(!continuing)\r\n    {\r\n        this.lsb_msb_flipflop ^= 1;\r\n    }\r\n\r\n    if(this.lsb_msb_flipflop)\r\n    {\r\n        // low byte\r\n        return old_dword & ~0xFF | new_byte;\r\n    }\r\n    else\r\n    {\r\n        // high byte\r\n        return old_dword & ~0xFF00 | new_byte << 8;\r\n    }\r\n};\r\n\r\nDMA.prototype.flipflop_read = function(dword)\r\n{\r\n    this.lsb_msb_flipflop ^= 1;\r\n\r\n    if(this.lsb_msb_flipflop)\r\n    {\r\n        // low byte\r\n        return dword & 0xFF;\r\n    }\r\n    else\r\n    {\r\n        // high byte\r\n        return (dword >> 8) & 0xFF;\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * @const\r\n * In kHz\r\n */\r\nvar OSCILLATOR_FREQ = 1193.1816666; // 1.193182 MHz\r\n\r\n/**\r\n * @constructor\r\n *\r\n * Programmable Interval Timer\r\n */\r\nfunction PIT(cpu, bus)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.bus = bus;\r\n\r\n    this.counter_start_time = new Float64Array(3);\r\n    this.counter_start_value = new Uint16Array(3);\r\n\r\n    this.counter_next_low = new Uint8Array(4);\r\n    this.counter_enabled = new Uint8Array(4);\r\n    this.counter_mode = new Uint8Array(4);\r\n    this.counter_read_mode = new Uint8Array(4);\r\n\r\n    // 2 = latch low, 1 = latch high, 0 = no latch\r\n    this.counter_latch = new Uint8Array(4);\r\n    this.counter_latch_value = new Uint16Array(3);\r\n\r\n    this.counter_reload = new Uint16Array(3);\r\n\r\n    // TODO:\r\n    // - counter2 can be controlled by an input\r\n\r\n    cpu.io.register_read(0x61, this, function()\r\n    {\r\n        var now = v86.microtick();\r\n\r\n        var ref_toggle = (now * (1000 * 1000 / 15000)) & 1;\r\n        var counter2_out = this.did_rollover(2, now);\r\n\r\n        return ref_toggle << 4 | counter2_out << 5;\r\n    });\r\n    cpu.io.register_write(0x61, this, function(data)\r\n    {\r\n        if(data & 1)\r\n        {\r\n            this.bus.send(\"pcspeaker-enable\");\r\n        }\r\n        else\r\n        {\r\n            this.bus.send(\"pcspeaker-disable\");\r\n        }\r\n    });\r\n\r\n    cpu.io.register_read(0x40, this, function() { return this.counter_read(0); });\r\n    cpu.io.register_read(0x41, this, function() { return this.counter_read(1); });\r\n    cpu.io.register_read(0x42, this, function() { return this.counter_read(2); });\r\n\r\n    cpu.io.register_write(0x40, this, function(data) { this.counter_write(0, data); });\r\n    cpu.io.register_write(0x41, this, function(data) { this.counter_write(1, data); });\r\n    cpu.io.register_write(0x42, this, function(data) { this.counter_write(2, data); });\r\n\r\n    cpu.io.register_write(0x43, this, this.port43_write);\r\n}\r\n\r\nPIT.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.counter_next_low;\r\n    state[1] = this.counter_enabled;\r\n    state[2] = this.counter_mode;\r\n    state[3] = this.counter_read_mode;\r\n    state[4] = this.counter_latch;\r\n    state[5] = this.counter_latch_value;\r\n    state[6] = this.counter_reload;\r\n    state[7] = this.counter_start_time;\r\n    state[8] = this.counter_start_value;\r\n\r\n    return state;\r\n};\r\n\r\nPIT.prototype.set_state = function(state)\r\n{\r\n    this.counter_next_low = state[0];\r\n    this.counter_enabled = state[1];\r\n    this.counter_mode = state[2];\r\n    this.counter_read_mode = state[3];\r\n    this.counter_latch = state[4];\r\n    this.counter_latch_value = state[5];\r\n    this.counter_reload = state[6];\r\n    this.counter_start_time = state[7];\r\n    this.counter_start_value = state[8];\r\n};\r\n\r\nPIT.prototype.timer = function(now, no_irq)\r\n{\r\n    var time_to_next_interrupt = 100;\r\n\r\n    // counter 0 produces interrupts\r\n    if(!no_irq)\r\n    {\r\n        if(this.counter_enabled[0] && this.did_rollover(0, now))\r\n        {\r\n            time_to_next_interrupt = 0;\r\n\r\n            this.counter_start_value[0] = this.get_counter_value(0, now);\r\n            this.counter_start_time[0] = now;\r\n\r\n            dbg_log(\"pit interrupt. new value: \" + this.counter_start_value[0], LOG_PIT);\r\n\r\n            this.cpu.device_raise_irq(0);\r\n            var mode = this.counter_mode[0];\r\n\r\n            if(mode === 0)\r\n            {\r\n                this.counter_enabled[0] = 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.cpu.device_lower_irq(0);\r\n        }\r\n    }\r\n    time_to_next_interrupt = 0;\r\n\r\n    return time_to_next_interrupt;\r\n};\r\n\r\nPIT.prototype.get_counter_value = function(i, now)\r\n{\r\n    if(!this.counter_enabled[i])\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    var diff = now - this.counter_start_time[i];\r\n    var diff_in_ticks = Math.floor(diff * OSCILLATOR_FREQ);\r\n\r\n    var value = this.counter_start_value[i] - diff_in_ticks;\r\n\r\n    dbg_log(\"diff=\" + diff + \" dticks=\" + diff_in_ticks + \" value=\" + value + \" reload=\" + this.counter_reload[i], LOG_PIT);\r\n\r\n    var reload = this.counter_reload[i];\r\n\r\n    if(value >= reload)\r\n    {\r\n        dbg_log(\"Warning: Counter\" + i + \" value \" + value  + \" is larger than reload \" + reload, LOG_PIT);\r\n        value %= reload;\r\n    }\r\n    else if(value < 0)\r\n    {\r\n        value = value % reload + reload;\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nPIT.prototype.did_rollover = function(i, now)\r\n{\r\n    var diff = now - this.counter_start_time[i];\r\n\r\n    if(diff < 0)\r\n    {\r\n        // should only happen after restore_state\r\n        dbg_log(\"Warning: PIT timer difference is negative, resetting\");\r\n        return true;\r\n    }\r\n    var diff_in_ticks = Math.floor(diff * OSCILLATOR_FREQ);\r\n    //dbg_log(i + \": diff=\" + diff + \" start_time=\" + this.counter_start_time[i] + \" diff_in_ticks=\" + diff_in_ticks + \" (\" + diff * OSCILLATOR_FREQ + \") start_value=\" + this.counter_start_value[i] + \" did_rollover=\" + (this.counter_start_value[i] < diff_in_ticks), LOG_PIT);\r\n\r\n    return this.counter_start_value[i] < diff_in_ticks;\r\n};\r\n\r\nPIT.prototype.counter_read = function(i)\r\n{\r\n    var latch = this.counter_latch[i];\r\n\r\n    if(latch)\r\n    {\r\n        this.counter_latch[i]--;\r\n\r\n        if(latch === 2)\r\n        {\r\n            return this.counter_latch_value[i] & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            return this.counter_latch_value[i] >> 8;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        var next_low = this.counter_next_low[i];\r\n\r\n        if(this.counter_mode[i] === 3)\r\n        {\r\n            this.counter_next_low[i] ^= 1;\r\n        }\r\n\r\n        var value = this.get_counter_value(i, v86.microtick());\r\n\r\n        if(next_low)\r\n        {\r\n            return value & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            return value >> 8;\r\n        }\r\n    }\r\n};\r\n\r\nPIT.prototype.counter_write = function(i, value)\r\n{\r\n    if(this.counter_next_low[i])\r\n    {\r\n        this.counter_reload[i] = this.counter_reload[i] & ~0xFF | value;\r\n    }\r\n    else\r\n    {\r\n        this.counter_reload[i] = this.counter_reload[i] & 0xFF | value << 8;\r\n    }\r\n\r\n    if(this.counter_read_mode[i] !== 3 || !this.counter_next_low[i])\r\n    {\r\n        if(!this.counter_reload[i])\r\n        {\r\n            this.counter_reload[i] = 0xFFFF;\r\n        }\r\n\r\n        // depends on the mode, should actually\r\n        // happen on the first tick\r\n        this.counter_start_value[i] = this.counter_reload[i];\r\n\r\n        this.counter_enabled[i] = true;\r\n\r\n        this.counter_start_time[i] = v86.microtick();\r\n\r\n        dbg_log(\"counter\" + i + \" reload=\" + h(this.counter_reload[i]) +\r\n                \" tick=\" + (this.counter_reload[i] || 0x10000) / OSCILLATOR_FREQ + \"ms\", LOG_PIT);\r\n    }\r\n\r\n    if(this.counter_read_mode[i] === 3)\r\n    {\r\n        this.counter_next_low[i] ^= 1;\r\n    }\r\n\r\n    this.bus.send(\"pcspeaker-update\", [this.counter_mode[2], this.counter_reload[2]]);\r\n};\r\n\r\nPIT.prototype.port43_write = function(reg_byte)\r\n{\r\n    var mode = reg_byte >> 1 & 7,\r\n        binary_mode = reg_byte & 1,\r\n        i = reg_byte >> 6 & 3,\r\n        read_mode = reg_byte >> 4 & 3;\r\n\r\n    if(i === 1)\r\n    {\r\n        dbg_log(\"Unimplemented timer1\", LOG_PIT);\r\n    }\r\n\r\n    if(i === 3)\r\n    {\r\n        dbg_log(\"Unimplemented read back\", LOG_PIT);\r\n        return;\r\n    }\r\n\r\n    if(read_mode === 0)\r\n    {\r\n        // latch\r\n        this.counter_latch[i] = 2;\r\n        var value = this.get_counter_value(i, v86.microtick());\r\n        dbg_log(\"latch: \" + value, LOG_PIT);\r\n        this.counter_latch_value[i] = value ? value - 1 : 0\r\n\r\n        return;\r\n    }\r\n\r\n    if(mode >= 6)\r\n    {\r\n        // 6 and 7 are aliased to 2 and 3\r\n        mode &= ~4;\r\n    }\r\n\r\n    dbg_log(\"Control: mode=\" + mode + \" ctr=\" + i +\r\n            \" read_mode=\" + read_mode + \" bcd=\" + binary_mode, LOG_PIT);\r\n\r\n    if(read_mode === 1)\r\n    {\r\n        // msb\r\n        this.counter_next_low[i] = 0;\r\n    }\r\n    else if(read_mode === 2)\r\n    {\r\n        // lsb\r\n        this.counter_next_low[i] = 1;\r\n    }\r\n    else\r\n    {\r\n        // first lsb then msb\r\n        this.counter_next_low[i] = 1;\r\n    }\r\n\r\n    if(i === 0)\r\n    {\r\n        this.cpu.device_lower_irq(0);\r\n    }\r\n\r\n    if(mode === 0)\r\n    {\r\n    }\r\n    else if(mode === 3 || mode === 2)\r\n    {\r\n        // what is the difference\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"Unimplemented counter mode: \" + h(mode), LOG_PIT);\r\n    }\r\n\r\n    this.counter_mode[i] = mode;\r\n    this.counter_read_mode[i] = read_mode;\r\n\r\n    this.bus.send(\"pcspeaker-update\", [this.counter_mode[2], this.counter_reload[2]]);\r\n};\r\n","\"use strict\";\r\n\r\n\r\nvar\r\n    /**\r\n     * Always 64k\r\n     * @const\r\n     */\r\n    VGA_BANK_SIZE = 64 * 1024,\r\n\r\n    /** @const */\r\n    MAX_XRES = 2560,\r\n\r\n    /** @const */\r\n    MAX_YRES = 1600,\r\n\r\n    /** @const */\r\n    MAX_BPP = 32;\r\n\r\n/** @const */\r\n//var VGA_LFB_ADDRESS = 0xFE000000; // set by seabios\r\nvar VGA_LFB_ADDRESS = 0xE0000000;\r\n\r\n/** @const */\r\nvar VGA_PIXEL_BUFFER_START = 4 * VGA_BANK_SIZE;\r\n\r\n/**\r\n * @const\r\n * Equals the maximum number of pixels for non svga.\r\n * 8 pixels per byte.\r\n */\r\nvar VGA_PIXEL_BUFFER_SIZE = 8 * VGA_BANK_SIZE;\r\n\r\n/** @const */\r\nvar VGA_MIN_MEMORY_SIZE = VGA_PIXEL_BUFFER_START + VGA_PIXEL_BUFFER_SIZE;\r\n\r\n/**\r\n * @const\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#06}\r\n */\r\nvar VGA_HOST_MEMORY_SPACE_START = Uint32Array.from([\r\n    0xA0000,\r\n    0xA0000,\r\n    0xB0000,\r\n    0xB8000,\r\n]);\r\n\r\n/**\r\n * @const\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#06}\r\n */\r\nvar VGA_HOST_MEMORY_SPACE_SIZE = Uint32Array.from([\r\n    0x20000, // 128K\r\n    0x10000, // 64K\r\n    0x8000, // 32K\r\n    0x8000, // 32K\r\n]);\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {BusConnector} bus\r\n * @param {number} vga_memory_size\r\n */\r\nfunction VGAScreen(cpu, bus, vga_memory_size)\r\n{\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    this.vga_memory_size = vga_memory_size;\r\n\r\n    /** @type {number} */\r\n    this.cursor_address = 0;\r\n\r\n    /** @type {number} */\r\n    this.cursor_scanline_start = 0xE;\r\n\r\n    /** @type {number} */\r\n    this.cursor_scanline_end = 0xF;\r\n\r\n    /**\r\n     * Number of columns in text mode\r\n     * @type {number}\r\n     */\r\n    this.max_cols = 80;\r\n\r\n    /**\r\n     * Number of rows in text mode\r\n     * @type {number}\r\n     */\r\n    this.max_rows = 25;\r\n\r\n    /**\r\n     * Width in pixels in graphical mode\r\n     * @type {number}\r\n     */\r\n    this.screen_width = 0;\r\n\r\n    /**\r\n     * Height in pixels in graphical mode\r\n     * @type {number}\r\n     */\r\n    this.screen_height = 0;\r\n\r\n    /**\r\n     * Logical width in pixels of virtual buffer available for panning\r\n     * @type {number}\r\n     */\r\n    this.virtual_width = 0;\r\n\r\n    /**\r\n     * Logical height in pixels of virtual buffer available for panning\r\n     * @type {number}\r\n     */\r\n    this.virtual_height = 0;\r\n\r\n    /**\r\n     * The rectangular fragments of the image buffer, and their destination\r\n     * locations, to be drawn every screen_fill_buffer during VGA modes.\r\n     * @type {Array<Object<string, number>>}\r\n     */\r\n    this.layers = [];\r\n\r\n    /**\r\n     * video memory start address\r\n     * @type {number}\r\n     */\r\n    this.start_address = 0;\r\n\r\n    /**\r\n     * Start address - a copy of start_address that only gets updated\r\n     * during VSync, used for panning and page flipping\r\n     * @type {number}\r\n     */\r\n    this.start_address_latched = 0;\r\n\r\n    /**\r\n     * Unimplemented CRTC registers go here\r\n     */\r\n    this.crtc = new Uint8Array(0x19);\r\n\r\n    // Implemented CRTC registers:\r\n\r\n    /** @type {number} */\r\n    this.crtc_mode = 0;\r\n\r\n    /** @type {number} */\r\n    this.horizontal_display_enable_end = 0;\r\n\r\n    /** @type {number} */\r\n    this.horizontal_blank_start = 0;\r\n\r\n    /** @type {number} */\r\n    this.vertical_display_enable_end = 0;\r\n\r\n    /** @type {number} */\r\n    this.vertical_blank_start = 0;\r\n\r\n    /** @type {number} */\r\n    this.underline_location_register = 0;\r\n\r\n    /** @type {number} */\r\n    this.preset_row_scan = 0;\r\n\r\n    /** @type {number} */\r\n    this.offset_register = 0;\r\n\r\n    /** @type {number} */\r\n    this.line_compare = 0;\r\n\r\n    // End of CRTC registers\r\n\t\r\n\tthis.text_char_width = 9;\r\n\tthis.text_char_height = 16;\r\n\tthis.text_char_wide = false;\r\n\r\n\tthis.character_map_value = 0;\r\n\tthis.character_map = new Uint32Array(2);\r\n\r\n    /**\r\n     * Used for svga, e.g. banked modes\r\n     * @type{boolean}\r\n     */\r\n    this.graphical_mode_is_linear = true;\r\n\r\n    /** @type {boolean} */\r\n    this.graphical_mode = false;\r\n    setTimeout(() => { bus.send(\"screen-set-mode\", this.graphical_mode); }, 0);\r\n\r\n    /*\r\n     * VGA palette containing 256 colors for video mode 13, svga 8bpp, etc.\r\n     * Needs to be initialised by the BIOS\r\n     */\r\n    this.vga256_palette = new Int32Array(256);\r\n\r\n    /**\r\n     * VGA read latches\r\n     * @type{number}\r\n     */\r\n    this.latch_dword = 0;\r\n\r\n    /** @type {number} */\r\n    this.svga_width = 0;\r\n\r\n    /** @type {number} */\r\n    this.svga_height = 0;\r\n\r\n    this.svga_enabled = false;\r\n\r\n    /** @type {number} */\r\n    this.svga_bpp = 32;\r\n\r\n    /** @type {number} */\r\n    this.svga_bank_offset = 0;\r\n\r\n    /**\r\n     * The video buffer offset created by VBE_DISPI_INDEX_Y_OFFSET\r\n     * In bytes\r\n     * @type {number}\r\n     */\r\n    this.svga_offset = 0;\r\n\r\n    // Experimental, could probably need some changes\r\n    // 01:00.0 VGA compatible controller: NVIDIA Corporation GT216 [GeForce GT 220] (rev a2)\r\n    this.pci_space = [\r\n        0xde, 0x10, 0x20, 0x0a, 0x07, 0x00, 0x00, 0x00,  0xa2, 0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x00,\r\n        0x08, VGA_LFB_ADDRESS >>> 8, VGA_LFB_ADDRESS >>> 16, VGA_LFB_ADDRESS >>> 24,\r\n                                0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00,\r\n    ];\r\n    this.pci_id = 0x12 << 3;\r\n    this.pci_bars = [\r\n        {\r\n            size: vga_memory_size,\r\n        },\r\n    ];\r\n\r\n    // TODO: Should be matched with vga bios size and mapping address\r\n    // Seabios config for this device:\r\n    // CONFIG_VGA_PCI=y\r\n    // CONFIG_OVERRIDE_PCI_ID=y\r\n    // CONFIG_VGA_VID=0x10de\r\n    // CONFIG_VGA_DID=0x0a20\r\n\r\n    this.pci_rom_size = 0x10000;\r\n    this.pci_rom_address = 0xFEB00000;\r\n\r\n    this.name = \"vga\";\r\n\r\n    this.stats = {\r\n        is_graphical: false,\r\n        res_x: 0,\r\n        res_y: 0,\r\n        bpp: 0,\r\n    };\r\n\r\n    this.index_crtc = 0;\r\n\r\n    // index for setting colors through port 3C9h\r\n    this.dac_color_index_write = 0;\r\n    this.dac_color_index_read = 0;\r\n    this.dac_state = 0;\r\n\r\n    this.dac_mask = 0xFF;\r\n\r\n    this.dac_map = new Uint8Array(0x10);\r\n\r\n    this.attribute_controller_index = -1;\r\n    this.palette_source = 0x20;\r\n    this.attribute_mode = 0;\r\n    this.color_plane_enable = 0;\r\n    this.horizontal_panning = 0;\r\n    this.color_select = 0;\r\n\r\n    this.sequencer_index = -1;\r\n\r\n    // bitmap of planes 0-3\r\n    this.plane_write_bm = 0xF;\r\n    this.sequencer_memory_mode = 0;\r\n    this.clocking_mode = 0;\r\n    this.graphics_index = -1;\r\n\r\n    this.plane_read = 0, // value 0-3, which plane to read\r\n    this.planar_mode = 0;\r\n    this.planar_rotate_reg = 0;\r\n    this.planar_bitmap = 0xFF;\r\n    this.planar_setreset = 0;\r\n    this.planar_setreset_enable = 0;\r\n    this.miscellaneous_graphics_register = 0;\r\n\r\n    this.color_compare = 0;\r\n    this.color_dont_care = 0;\r\n\r\n    this.max_scan_line = 0;\r\n\r\n    this.miscellaneous_output_register = 0xff;\r\n    this.port_3DA_value = 0xFF;\r\n\r\n\r\n    var io = cpu.io;\r\n\r\n    io.register_write(0x3C0, this, this.port3C0_write);\r\n    io.register_read(0x3C0, this, this.port3C0_read, this.port3C0_read16);\r\n\r\n    io.register_read(0x3C1, this, this.port3C1_read);\r\n    io.register_write(0x3C2, this, this.port3C2_write);\r\n\r\n    io.register_write_consecutive(0x3C4, this, this.port3C4_write, this.port3C5_write);\r\n\r\n    io.register_read(0x3C4, this, this.port3C4_read);\r\n    io.register_read(0x3C5, this, this.port3C5_read);\r\n\r\n    io.register_write_consecutive(0x3CE, this, this.port3CE_write, this.port3CF_write);\r\n\r\n    io.register_read(0x3CE, this, this.port3CE_read);\r\n    io.register_read(0x3CF, this, this.port3CF_read);\r\n\r\n    io.register_read(0x3C6, this, this.port3C6_read);\r\n    io.register_write(0x3C6, this, this.port3C6_write);\r\n    io.register_write(0x3C7, this, this.port3C7_write);\r\n    io.register_read(0x3C7, this, this.port3C7_read);\r\n    io.register_write(0x3C8, this, this.port3C8_write);\r\n    io.register_read(0x3C8, this, this.port3C8_read);\r\n    io.register_write(0x3C9, this, this.port3C9_write);\r\n    io.register_read(0x3C9, this, this.port3C9_read);\r\n\r\n    io.register_read(0x3CC, this, this.port3CC_read);\r\n\r\n    io.register_write_consecutive(0x3D4, this, this.port3D4_write, this.port3D5_write);\r\n    io.register_read(0x3D4, this, this.port3D4_read);\r\n    io.register_read(0x3D5, this, this.port3D5_read);\r\n\r\n    io.register_read(0x3CA, this, function() { dbg_log(\"3CA read\", LOG_VGA); return 0; });\r\n\r\n    io.register_read(0x3DA, this, this.port3DA_read);\r\n    io.register_read(0x3BA, this, this.port3DA_read);\r\n\r\n\r\n    // Bochs VBE Extensions\r\n    // http://wiki.osdev.org/Bochs_VBE_Extensions\r\n    this.dispi_index = -1;\r\n    this.dispi_enable_value = 0;\r\n\r\n    io.register_write(0x1CE, this, undefined, this.port1CE_write);\r\n\r\n    io.register_write(0x1CF, this, undefined, this.port1CF_write);\r\n    io.register_read(0x1CF, this, undefined, this.port1CF_read);\r\n\r\n    if(this.vga_memory_size === undefined || this.vga_memory_size < VGA_MIN_MEMORY_SIZE)\r\n    {\r\n        this.vga_memory_size = VGA_MIN_MEMORY_SIZE;\r\n        dbg_log(\"vga memory size rounded up to \" + this.vga_memory_size, LOG_VGA);\r\n    }\r\n    else if(this.vga_memory_size & (VGA_BANK_SIZE - 1))\r\n    {\r\n        // round up to next 64k\r\n        this.vga_memory_size |= VGA_BANK_SIZE - 1;\r\n        this.vga_memory_size++;\r\n    }\r\n\r\n    this.svga_memory = new Uint8Array(this.vga_memory_size);\r\n\r\n    this.diff_addr_min = this.vga_memory_size;\r\n    this.diff_addr_max = 0;\r\n    this.diff_plot_min = this.vga_memory_size;\r\n    this.diff_plot_max = 0;\r\n\r\n    this.dest_buffer = undefined;\r\n\r\n    bus.register(\"screen-tell-buffer\", function(data)\r\n    {\r\n        if(this.dest_buffer && data[0])\r\n        {\r\n            data[0].set(this.dest_buffer.subarray(0, data[0].length));\r\n        }\r\n        this.dest_buffer = data[0];\r\n    }, this);\r\n\r\n    bus.register(\"screen-fill-buffer\", function()\r\n    {\r\n        this.screen_fill_buffer();\r\n    }, this);\r\n\r\n\r\n    this.svga_memory16 = new Uint16Array(this.svga_memory.buffer);\r\n    this.svga_memory32 = new Int32Array(this.svga_memory.buffer);\r\n    this.vga_memory = new Uint8Array(this.svga_memory.buffer, 0, 4 * VGA_BANK_SIZE);\r\n    this.plane0 = new Uint8Array(this.svga_memory.buffer, 0 * VGA_BANK_SIZE, VGA_BANK_SIZE);\r\n    this.plane1 = new Uint8Array(this.svga_memory.buffer, 1 * VGA_BANK_SIZE, VGA_BANK_SIZE);\r\n    this.plane2 = new Uint8Array(this.svga_memory.buffer, 2 * VGA_BANK_SIZE, VGA_BANK_SIZE);\r\n    this.plane3 = new Uint8Array(this.svga_memory.buffer, 3 * VGA_BANK_SIZE, VGA_BANK_SIZE);\r\n    this.pixel_buffer = new Uint8Array(this.svga_memory.buffer,\r\n        VGA_PIXEL_BUFFER_START, VGA_PIXEL_BUFFER_SIZE);\r\n\r\n    var me = this;\r\n    io.mmap_register(0xA0000, 0x20000,\r\n        function(addr) { return me.vga_memory_read(addr); },\r\n        function(addr, value) { me.vga_memory_write(addr, value); }\r\n    );\r\n    io.mmap_register(VGA_LFB_ADDRESS, this.vga_memory_size,\r\n        function(addr) { return me.svga_memory_read8(addr); },\r\n        function(addr, value) { me.svga_memory_write8(addr, value); },\r\n        function(addr) { return me.svga_memory_read32(addr); },\r\n        function(addr, value) { me.svga_memory_write32(addr, value); }\r\n    );\r\n\r\n    cpu.devices.pci.register_device(this);\r\n}\r\n\r\nVGAScreen.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.vga_memory_size;\r\n    state[1] = this.cursor_address;\r\n    state[2] = this.cursor_scanline_start;\r\n    state[3] = this.cursor_scanline_end;\r\n    state[4] = this.max_cols;\r\n    state[5] = this.max_rows;\r\n    state[6] = this.layers;\r\n    state[7] = this.dac_state;\r\n    state[8] = this.start_address;\r\n    state[9] = this.graphical_mode;\r\n    state[10] = this.vga256_palette;\r\n    state[11] = this.latch_dword;\r\n    state[12] = this.color_compare;\r\n    state[13] = this.color_dont_care;\r\n    state[14] = this.miscellaneous_graphics_register;\r\n    state[15] = this.svga_width;\r\n    state[16] = this.svga_height;\r\n    state[17] = this.crtc_mode;\r\n    state[18] = this.svga_enabled;\r\n    state[19] = this.svga_bpp;\r\n    state[20] = this.svga_bank_offset;\r\n    state[21] = this.svga_offset;\r\n    state[22] = this.index_crtc;\r\n    state[23] = this.dac_color_index_write;\r\n    state[24] = this.dac_color_index_read;\r\n    state[25] = this.dac_map;\r\n    state[26] = this.sequencer_index;\r\n    state[27] = this.plane_write_bm;\r\n    state[28] = this.sequencer_memory_mode;\r\n    state[29] = this.graphics_index;\r\n    state[30] = this.plane_read;\r\n    state[31] = this.planar_mode;\r\n    state[32] = this.planar_rotate_reg;\r\n    state[33] = this.planar_bitmap;\r\n    state[34] = this.max_scan_line;\r\n    state[35] = this.miscellaneous_output_register;\r\n    state[36] = this.port_3DA_value;\r\n    state[37] = this.dispi_index;\r\n    state[38] = this.dispi_enable_value;\r\n    state[39] = this.svga_memory;\r\n    state[40] = this.graphical_mode_is_linear;\r\n    state[41] = this.attribute_controller_index;\r\n    state[42] = this.offset_register;\r\n    state[43] = this.planar_setreset;\r\n    state[44] = this.planar_setreset_enable;\r\n    state[45] = this.start_address_latched;\r\n    state[46] = this.crtc;\r\n    state[47] = this.horizontal_display_enable_end;\r\n    state[48] = this.horizontal_blank_start;\r\n    state[49] = this.vertical_display_enable_end;\r\n    state[50] = this.vertical_blank_start;\r\n    state[51] = this.underline_location_register;\r\n    state[52] = this.preset_row_scan;\r\n    state[53] = this.offset_register;\r\n    state[54] = this.palette_source;\r\n    state[55] = this.attribute_mode;\r\n    state[56] = this.color_plane_enable;\r\n    state[57] = this.horizontal_panning;\r\n    state[58] = this.color_select;\r\n    state[59] = this.clocking_mode;\r\n    state[60] = this.line_compare;\r\n    state[61] = this.dac_mask;\r\n\tstate[62] = this.text_char_width;\r\n    state[63] = this.text_char_height;\r\n    state[64] = this.text_char_wide;\r\n    state[65] = this.character_map;\r\n\r\n    return state;\r\n};\r\n\r\nVGAScreen.prototype.set_state = function(state)\r\n{\r\n    this.vga_memory_size = state[0];\r\n    this.cursor_address = state[1];\r\n    this.cursor_scanline_start = state[2];\r\n    this.cursor_scanline_end = state[3];\r\n    this.max_cols = state[4];\r\n    this.max_rows = state[5];\r\n    this.layers = state[6];\r\n    this.dac_state = state[7];\r\n    this.start_address = state[8];\r\n    this.graphical_mode = state[9];\r\n    this.vga256_palette = state[10];\r\n    this.latch_dword = state[11];\r\n    this.color_compare = state[12];\r\n    this.color_dont_care = state[13];\r\n    this.miscellaneous_graphics_register = state[14];\r\n    this.svga_width = state[15];\r\n    this.svga_height = state[16];\r\n    this.crtc_mode = state[17];\r\n    this.svga_enabled = state[18];\r\n    this.svga_bpp = state[19];\r\n    this.svga_bank_offset = state[20];\r\n    this.svga_offset = state[21];\r\n    this.index_crtc = state[22];\r\n    this.dac_color_index_write = state[23];\r\n    this.dac_color_index_read = state[24];\r\n    this.dac_map = state[25];\r\n    this.sequencer_index = state[26];\r\n    this.plane_write_bm = state[27];\r\n    this.sequencer_memory_mode = state[28];\r\n    this.graphics_index = state[29];\r\n    this.plane_read = state[30];\r\n    this.planar_mode = state[31];\r\n    this.planar_rotate_reg = state[32];\r\n    this.planar_bitmap = state[33];\r\n    this.max_scan_line = state[34];\r\n    this.miscellaneous_output_register = state[35];\r\n    this.port_3DA_value = state[36];\r\n    this.dispi_index = state[37];\r\n    this.dispi_enable_value = state[38];\r\n    this.svga_memory.set(state[39]);\r\n    this.graphical_mode_is_linear = state[40];\r\n    this.attribute_controller_index = state[41];\r\n    this.offset_register = state[42];\r\n    this.planar_setreset = state[43];\r\n    this.planar_setreset_enable = state[44];\r\n    this.start_address_latched = state[45];\r\n    this.crtc.set(state[46]);\r\n    this.horizontal_display_enable_end = state[47];\r\n    this.horizontal_blank_start = state[48];\r\n    this.vertical_display_enable_end = state[49];\r\n    this.vertical_blank_start = state[50];\r\n    this.underline_location_register = state[51];\r\n    this.preset_row_scan = state[52];\r\n    this.offset_register = state[53];\r\n    this.palette_source = state[54];\r\n    this.attribute_mode = state[55];\r\n    this.color_plane_enable = state[56];\r\n    this.horizontal_panning = state[57];\r\n    this.color_select = state[58];\r\n    this.clocking_mode = state[59];\r\n    this.line_compare = state[60];\r\n    this.dac_mask = state[61];\r\n\tthis.text_char_width = state[62];\r\n\tthis.text_char_height = state[63];\r\n\tthis.text_char_wide = state[64];\r\n\tthis.character_map = state[65];\r\n\r\n    this.bus.send(\"screen-set-mode\", this.graphical_mode);\r\n\r\n    if(this.graphical_mode)\r\n    {\r\n        // Ensure set_size_graphical will update\r\n        this.screen_width = 0;\r\n        this.screen_height = 0;\r\n\r\n        if(this.svga_enabled)\r\n        {\r\n            this.set_size_graphical(this.svga_width, this.svga_height,\r\n                this.svga_bpp, this.svga_width, this.svga_height);\r\n            this.update_layers();\r\n        }\r\n        else\r\n        {\r\n            this.update_vga_size();\r\n            this.complete_replot();\r\n        }\r\n    }\r\n    else\r\n    {\r\n\t\tif (this.text_char_width !== 9 || this.text_char_height !== 16 || this.text_char_wide) {\r\n\t\t\tthis.bus.send(\"screen-set-size-char\", [this.text_char_width, this.text_char_height, this.text_char_wide]);\r\n\t\t}\r\n        this.set_size_text(this.max_cols, this.max_rows);\r\n        this.update_cursor_scanline();\r\n        this.update_cursor();\r\n    }\r\n    this.complete_redraw();\r\n};\r\n\r\nVGAScreen.prototype.vga_memory_read = function(addr)\r\n{\r\n    if(this.svga_enabled && this.graphical_mode_is_linear)\r\n    {\r\n        addr -= 0xA0000;\r\n        addr |= this.svga_bank_offset;\r\n\r\n        return this.svga_memory[addr];\r\n    }\r\n\r\n    var memory_space_select = this.miscellaneous_graphics_register >> 2 & 0x3;\r\n    addr -= VGA_HOST_MEMORY_SPACE_START[memory_space_select];\r\n\r\n    // VGA chip only decodes addresses within the selected memory space.\r\n    if(addr < 0 || addr >= VGA_HOST_MEMORY_SPACE_SIZE[memory_space_select])\r\n    {\r\n        dbg_log(\"vga read outside memory space: addr:\" + h(addr), LOG_VGA);\r\n        return 0;\r\n    }\r\n\r\n    this.latch_dword = this.plane0[addr];\r\n    this.latch_dword |= this.plane1[addr] << 8;\r\n    this.latch_dword |= this.plane2[addr] << 16;\r\n    this.latch_dword |= this.plane3[addr] << 24;\r\n\r\n    if(this.planar_mode & 0x08)\r\n    {\r\n        // read mode 1\r\n        var reading = 0xFF;\r\n\r\n        if(this.color_dont_care & 0x1)\r\n        {\r\n            reading &= this.plane0[addr] ^ ~(this.color_compare & 0x1 ? 0xFF : 0x00);\r\n        }\r\n        if(this.color_dont_care & 0x2)\r\n        {\r\n            reading &= this.plane1[addr] ^ ~(this.color_compare & 0x2 ? 0xFF : 0x00);\r\n        }\r\n        if(this.color_dont_care & 0x4)\r\n        {\r\n            reading &= this.plane2[addr] ^ ~(this.color_compare & 0x4 ? 0xFF : 0x00);\r\n        }\r\n        if(this.color_dont_care & 0x8)\r\n        {\r\n            reading &= this.plane3[addr] ^ ~(this.color_compare & 0x8 ? 0xFF : 0x00);\r\n        }\r\n\r\n        return reading;\r\n    }\r\n    else\r\n    {\r\n        // read mode 0\r\n\r\n        var plane = this.plane_read;\r\n        if(!this.graphical_mode)\r\n        {\r\n            // We currently put all text data linearly\r\n            plane = 0;\r\n        }\r\n        else if(this.sequencer_memory_mode & 0x8)\r\n        {\r\n            // Chain 4\r\n            plane = addr & 0x3;\r\n            addr &= ~0x3;\r\n        }\r\n        else if(this.planar_mode & 0x10)\r\n        {\r\n            // Odd/Even host read\r\n            plane = addr & 0x1;\r\n            addr &= ~0x1;\r\n        }\r\n        return this.vga_memory[plane << 16 | addr];\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.vga_memory_write = function(addr, value)\r\n{\r\n    if(this.svga_enabled && this.graphical_mode && this.graphical_mode_is_linear)\r\n    {\r\n        // vbe banked mode\r\n        addr -= 0xA0000;\r\n        this.vga_memory_write_graphical_linear(addr, value);\r\n        return;\r\n    }\r\n\r\n    var memory_space_select = this.miscellaneous_graphics_register >> 2 & 0x3;\r\n    addr -= VGA_HOST_MEMORY_SPACE_START[memory_space_select];\r\n\r\n    if(addr < 0 || addr >= VGA_HOST_MEMORY_SPACE_SIZE[memory_space_select])\r\n    {\r\n        dbg_log(\"vga write outside memory space: addr:\" + h(addr) + \", value:\" + h(value), LOG_VGA);\r\n        return;\r\n    }\r\n\r\n    if(this.graphical_mode)\r\n    {\r\n        this.vga_memory_write_graphical(addr, value);\r\n    }\r\n    else\r\n    {\r\n        if(!(this.plane_write_bm & 0x3))\r\n        {\r\n            // Ignore writes to font planes.\r\n            return;\r\n        }\r\n        this.vga_memory_write_text_mode(addr, value);\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.vga_memory_write_graphical_linear = function(addr, value)\r\n{\r\n    addr |= this.svga_bank_offset;\r\n\r\n    this.diff_addr_min = addr < this.diff_addr_min ? addr : this.diff_addr_min;\r\n    this.diff_addr_max = addr > this.diff_addr_max ? addr : this.diff_addr_max;\r\n\r\n    this.svga_memory[addr] = value;\r\n};\r\n\r\nVGAScreen.prototype.vga_memory_write_graphical = function(addr, value)\r\n{\r\n    var plane_dword;\r\n    var write_mode = this.planar_mode & 3;\r\n    var bitmask = this.apply_feed(this.planar_bitmap);\r\n    var setreset_dword = this.apply_expand(this.planar_setreset);\r\n    var setreset_enable_dword = this.apply_expand(this.planar_setreset_enable);\r\n\r\n    // Write modes - see http://www.osdever.net/FreeVGA/vga/graphreg.htm#05\r\n    switch(write_mode)\r\n    {\r\n        case 0:\r\n            value = this.apply_rotate(value);\r\n            plane_dword = this.apply_feed(value);\r\n            plane_dword = this.apply_setreset(plane_dword, setreset_enable_dword);\r\n            plane_dword = this.apply_logical(plane_dword, this.latch_dword);\r\n            plane_dword = this.apply_bitmask(plane_dword, bitmask);\r\n            break;\r\n        case 1:\r\n            plane_dword = this.latch_dword;\r\n            break;\r\n        case 2:\r\n            plane_dword = this.apply_expand(value);\r\n            plane_dword = this.apply_logical(plane_dword, this.latch_dword);\r\n            plane_dword = this.apply_bitmask(plane_dword, bitmask);\r\n            break;\r\n        case 3:\r\n            value = this.apply_rotate(value);\r\n            bitmask &= this.apply_feed(value);\r\n            plane_dword = setreset_dword;\r\n            plane_dword = this.apply_bitmask(plane_dword, bitmask);\r\n            break;\r\n    }\r\n\r\n    var plane_select = 0xF;\r\n\r\n    switch(this.sequencer_memory_mode & 0xC)\r\n    {\r\n        // Odd/Even (aka chain 2)\r\n        case 0x0:\r\n            plane_select = 0x5 << (addr & 0x1);\r\n            addr &= ~0x1;\r\n            break;\r\n\r\n        // Chain 4\r\n        // Note: FreeVGA may have mistakenly stated that this bit field is\r\n        // for system read only, yet the IBM Open Source Graphics Programmer's\r\n        // Reference Manual explicitly states \"both read and write\".\r\n        case 0x8:\r\n        case 0xC:\r\n            plane_select = 1 << (addr & 0x3);\r\n            addr &= ~0x3;\r\n            break;\r\n    }\r\n\r\n    // Plane masks take precedence\r\n    // See: http://www.osdever.net/FreeVGA/vga/seqreg.htm#02\r\n    plane_select &= this.plane_write_bm;\r\n\r\n    if(plane_select & 0x1) this.plane0[addr] = (plane_dword >> 0) & 0xFF;\r\n    if(plane_select & 0x2) this.plane1[addr] = (plane_dword >> 8) & 0xFF;\r\n    if(plane_select & 0x4) this.plane2[addr] = (plane_dword >> 16) & 0xFF;\r\n    if(plane_select & 0x8) this.plane3[addr] = (plane_dword >> 24) & 0xFF;\r\n\r\n    var pixel_addr = this.vga_addr_to_pixel(addr);\r\n    this.partial_replot(pixel_addr, pixel_addr + 7);\r\n};\r\n\r\n/**\r\n * Copies data_byte into the four planes, with each plane\r\n * represented by an 8-bit field inside the dword.\r\n * @param {number} data_byte\r\n * @return {number} 32-bit number representing the bytes for each plane.\r\n */\r\nVGAScreen.prototype.apply_feed = function(data_byte)\r\n{\r\n    var dword = data_byte;\r\n    dword |= data_byte << 8;\r\n    dword |= data_byte << 16;\r\n    dword |= data_byte << 24;\r\n    return dword;\r\n};\r\n\r\n/**\r\n * Expands bits 0 to 3 to ocupy bits 0 to 31. Each\r\n * bit is expanded to 0xFF if set or 0x00 if clear.\r\n * @param {number} data_byte\r\n * @return {number} 32-bit number representing the bytes for each plane.\r\n */\r\nVGAScreen.prototype.apply_expand = function(data_byte)\r\n{\r\n    var dword = data_byte & 0x1 ? 0xFF : 0x00;\r\n    dword |= (data_byte & 0x2 ? 0xFF : 0x00) << 8;\r\n    dword |= (data_byte & 0x4 ? 0xFF : 0x00) << 16;\r\n    dword |= (data_byte & 0x8 ? 0xFF : 0x00) << 24;\r\n    return dword;\r\n};\r\n\r\n/**\r\n * Planar Write - Barrel Shifter\r\n * @param {number} data_byte\r\n * @return {number}\r\n * @see {@link http://www.phatcode.net/res/224/files/html/ch25/25-01.html#Heading3}\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#03}\r\n */\r\nVGAScreen.prototype.apply_rotate = function(data_byte)\r\n{\r\n    var wrapped = data_byte | (data_byte << 8);\r\n    var count = this.planar_rotate_reg & 0x7;\r\n    var shifted = wrapped >>> count;\r\n    return shifted & 0xFF;\r\n};\r\n\r\n/**\r\n * Planar Write - Set / Reset Circuitry\r\n * @param {number} data_dword\r\n * @param {number} enable_dword\r\n * @return {number}\r\n * @see {@link http://www.phatcode.net/res/224/files/html/ch25/25-03.html#Heading5}\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#00}\r\n */\r\nVGAScreen.prototype.apply_setreset = function(data_dword, enable_dword)\r\n{\r\n    var setreset_dword = this.apply_expand(this.planar_setreset);\r\n    data_dword |= enable_dword & setreset_dword;\r\n    data_dword &= ~enable_dword | setreset_dword;\r\n    return data_dword;\r\n};\r\n\r\n/**\r\n * Planar Write - ALU Unit\r\n * @param {number} data_dword\r\n * @param {number} latch_dword\r\n * @return {number}\r\n * @see {@link http://www.phatcode.net/res/224/files/html/ch24/24-01.html#Heading3}\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#03}\r\n */\r\nVGAScreen.prototype.apply_logical = function(data_dword, latch_dword)\r\n{\r\n    switch(this.planar_rotate_reg & 0x18)\r\n    {\r\n        case 0x08:\r\n            return data_dword & latch_dword;\r\n        case 0x10:\r\n            return data_dword | latch_dword;\r\n        case 0x18:\r\n            return data_dword ^ latch_dword;\r\n    }\r\n    return data_dword;\r\n};\r\n\r\n/**\r\n * Planar Write - Bitmask Unit\r\n * @param {number} data_dword\r\n * @param {number} bitmask_dword\r\n * @return {number}\r\n * @see {@link http://www.phatcode.net/res/224/files/html/ch25/25-01.html#Heading2}\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm#08}\r\n */\r\nVGAScreen.prototype.apply_bitmask = function(data_dword, bitmask_dword)\r\n{\r\n    var plane_dword = bitmask_dword & data_dword;\r\n    plane_dword |= ~bitmask_dword & this.latch_dword;\r\n    return plane_dword;\r\n};\r\n\r\nVGAScreen.prototype.text_mode_redraw = function()\r\n{\r\n    var addr = this.start_address << 1,\r\n        chr,\r\n        color;\r\n\r\n    for(var row = 0; row < this.max_rows; row++)\r\n    {\r\n        for(var col = 0; col < this.max_cols; col++)\r\n        {\r\n            chr = this.vga_memory[addr];\r\n            color = this.vga_memory[addr | 1];\r\n\r\n            this.bus.send(\"screen-put-char\", [row, col, chr,\r\n                this.vga256_palette[this.dac_mask & this.dac_map[color >> 4 & 0xF]],\r\n                this.vga256_palette[this.dac_mask & this.dac_map[color & 0xF]]]);\r\n\r\n            addr += 2;\r\n        }\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.vga_memory_write_text_mode = function(addr, value)\r\n{\r\n    var memory_start = (addr >> 1) - this.start_address,\r\n        row = memory_start / this.max_cols | 0,\r\n        col = memory_start % this.max_cols,\r\n        chr,\r\n        color;\r\n\r\n    // XXX: Should handle 16 bit write if possible\r\n    if(addr & 1)\r\n    {\r\n        color = value;\r\n        chr = this.vga_memory[addr & ~1];\r\n    }\r\n    else\r\n    {\r\n        chr = value;\r\n        color = this.vga_memory[addr | 1];\r\n    }\r\n\r\n    this.bus.send(\"screen-put-char\", [row, col, chr,\r\n        this.vga256_palette[this.dac_mask & this.dac_map[color >> 4 & 0xF]],\r\n        this.vga256_palette[this.dac_mask & this.dac_map[color & 0xF]]]);\r\n\r\n    this.vga_memory[addr] = value;\r\n};\r\n\r\nVGAScreen.prototype.update_cursor = function()\r\n{\r\n    var row = (this.cursor_address - this.start_address) / this.max_cols | 0,\r\n        col = (this.cursor_address - this.start_address) % this.max_cols;\r\n\r\n    row = Math.min(this.max_rows - 1, row);\r\n\r\n    this.bus.send(\"screen-update-cursor\", [row, col]);\r\n};\r\n\r\nVGAScreen.prototype.svga_memory_read8 = function(addr)\r\n{\r\n    return this.svga_memory[addr & 0xFFFFFFF];\r\n};\r\n\r\nVGAScreen.prototype.svga_memory_read32 = function(addr)\r\n{\r\n    addr &= 0xFFFFFFF;\r\n\r\n    if(addr & 3)\r\n    {\r\n        return this.svga_memory[addr] | this.svga_memory[addr + 1] << 8 |\r\n               this.svga_memory[addr + 2] << 16 | this.svga_memory[addr + 3] << 24;\r\n    }\r\n    else\r\n    {\r\n        return this.svga_memory32[addr >> 2];\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.svga_memory_write8 = function(addr, value)\r\n{\r\n    addr &= 0xFFFFFFF;\r\n    this.svga_memory[addr] = value;\r\n\r\n    this.diff_addr_min = addr < this.diff_addr_min ? addr : this.diff_addr_min;\r\n    this.diff_addr_max = addr > this.diff_addr_max ? addr : this.diff_addr_max;\r\n};\r\n\r\nVGAScreen.prototype.svga_memory_write32 = function(addr, value)\r\n{\r\n    addr &= 0xFFFFFFF;\r\n\r\n    this.diff_addr_min = addr < this.diff_addr_min ? addr : this.diff_addr_min;\r\n    this.diff_addr_max = addr + 3 > this.diff_addr_max ? addr + 3 : this.diff_addr_max;\r\n\r\n    this.svga_memory[addr] = value;\r\n    this.svga_memory[addr + 1] = value >> 8;\r\n    this.svga_memory[addr + 2] = value >> 16;\r\n    this.svga_memory[addr + 3] = value >> 24;\r\n};\r\n\r\nVGAScreen.prototype.complete_redraw = function()\r\n{\r\n    dbg_log(\"complete redraw\", LOG_VGA);\r\n\r\n    if(this.graphical_mode)\r\n    {\r\n        this.diff_addr_min = 0;\r\n\r\n        if(this.svga_enabled)\r\n        {\r\n            this.diff_addr_max = this.vga_memory_size;\r\n        }\r\n        else\r\n        {\r\n            this.diff_addr_max = VGA_PIXEL_BUFFER_SIZE;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.text_mode_redraw();\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.complete_replot = function()\r\n{\r\n    dbg_log(\"complete replot\", LOG_VGA);\r\n\r\n    if(!this.graphical_mode || this.svga_enabled)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.diff_plot_min = 0;\r\n    this.diff_plot_max = VGA_PIXEL_BUFFER_SIZE;\r\n\r\n    this.complete_redraw();\r\n};\r\n\r\nVGAScreen.prototype.partial_redraw = function(min, max)\r\n{\r\n    if(min < this.diff_addr_min) this.diff_addr_min = min;\r\n    if(max > this.diff_addr_max) this.diff_addr_max = max;\r\n};\r\n\r\nVGAScreen.prototype.partial_replot = function(min, max)\r\n{\r\n    if(min < this.diff_plot_min) this.diff_plot_min = min;\r\n    if(max > this.diff_plot_max) this.diff_plot_max = max;\r\n\r\n    this.partial_redraw(min, max);\r\n};\r\n\r\nVGAScreen.prototype.reset_diffs = function()\r\n{\r\n    this.diff_addr_min = this.vga_memory_size;\r\n    this.diff_addr_max = 0;\r\n    this.diff_plot_min = this.vga_memory_size;\r\n    this.diff_plot_max = 0;\r\n};\r\n\r\nVGAScreen.prototype.destroy = function()\r\n{\r\n\r\n};\r\n\r\nVGAScreen.prototype.vga_bytes_per_line = function()\r\n{\r\n    var bytes_per_line = this.offset_register << 2;\r\n    if(this.underline_location_register & 0x40) bytes_per_line <<= 1;\r\n    else if(this.crtc_mode & 0x40) bytes_per_line >>>= 1;\r\n    return bytes_per_line;\r\n};\r\n\r\nVGAScreen.prototype.vga_addr_shift_count = function()\r\n{\r\n    // Count in multiples of 0x40 for convenience\r\n    // Left shift 2 for word mode - 2 bytes per dot clock\r\n    var shift_count = 0x80;\r\n\r\n    // Left shift 3 for byte mode - 1 byte per dot clock\r\n    shift_count += ~this.underline_location_register & this.crtc_mode & 0x40;\r\n\r\n    // Left shift 1 for doubleword mode - 4 bytes per dot clock\r\n    shift_count -= this.underline_location_register & 0x40;\r\n\r\n    // But shift one less if PEL width mode - 2 dot clocks per pixel\r\n    shift_count -= this.attribute_mode & 0x40;\r\n\r\n    return shift_count >>> 6;\r\n};\r\n\r\nVGAScreen.prototype.vga_addr_to_pixel = function(addr)\r\n{\r\n    var shift_count = this.vga_addr_shift_count();\r\n\r\n    // Undo effects of substituted bits 13 and 14\r\n    // Assumptions:\r\n    //  - max_scan_line register is set to the values shown below\r\n    //  - Each scan line stays within the offset alignment\r\n    //  - No panning and no page flipping after drawing\r\n    if(~this.crtc_mode & 0x3)\r\n    {\r\n        var pixel_addr = addr - this.start_address;\r\n\r\n        // Remove substituted bits\r\n        pixel_addr &= this.crtc_mode << 13 | ~0x6000;\r\n\r\n        // Convert to 1 pixel per address\r\n        pixel_addr <<= shift_count;\r\n\r\n        // Decompose address\r\n        var row = pixel_addr / this.virtual_width | 0;\r\n        var col = pixel_addr % this.virtual_width;\r\n\r\n        switch(this.crtc_mode & 0x3)\r\n        {\r\n            case 0x2:\r\n                // Alternating rows using bit 13\r\n                // Assumes max scan line = 1\r\n                row = row << 1 | (addr >> 13 & 0x1);\r\n                break;\r\n            case 0x1:\r\n                // Alternating rows using bit 14\r\n                // Assumes max scan line = 3\r\n                row = row << 1 | (addr >> 14 & 0x1);\r\n                break;\r\n            case 0x0:\r\n                // Cycling through rows using bit 13 and 14\r\n                // Assumes max scan line = 3\r\n                row = row << 2 | (addr >> 13 & 0x3);\r\n                break;\r\n        }\r\n\r\n        // Reassemble address\r\n        return row * this.virtual_width + col + (this.start_address << shift_count);\r\n    }\r\n    else\r\n    {\r\n        // Convert to 1 pixel per address\r\n        return addr << shift_count;\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.scan_line_to_screen_row = function(scan_line)\r\n{\r\n    // Double scanning. The clock to the row scan counter is halved\r\n    // so it is not affected by the memory address bit substitutions below\r\n    if(this.max_scan_line & 0x80)\r\n    {\r\n        scan_line >>>= 1;\r\n    }\r\n\r\n    // Maximum scan line, aka scan lines per character row\r\n    // This is the number of repeats - 1 for graphic modes\r\n    var repeat_factor = 1 + (this.max_scan_line & 0x1F);\r\n    scan_line = Math.ceil(scan_line / repeat_factor);\r\n\r\n    // Odd and Even Row Scan Counter\r\n    // Despite repeated address counter values, because bit 13 of the shifted\r\n    // address is substituted with bit 0 of the row scan counter, a different\r\n    // display buffer address is generated instead of repeated\r\n    // Assumes maximum scan line register is set to 2 or 4.\r\n    // Note: can't assert this as register values may not be fully programmed.\r\n    if(!(this.crtc_mode & 0x1))\r\n    {\r\n        scan_line <<= 1;\r\n    }\r\n\r\n    // Undo effects of substituted bit 14\r\n    // Assumes maximum scan line register is set to 2 or 4\r\n    // Note: can't assert this as register values may not be fully programmed.\r\n    // Other maximum scan line register values would result in weird addressing\r\n    // anyway\r\n    if(!(this.crtc_mode & 0x2))\r\n    {\r\n        scan_line <<= 1;\r\n    }\r\n\r\n    return scan_line;\r\n};\r\n\r\n/**\r\n * @param {number} cols_count\r\n * @param {number} rows_count\r\n */\r\nVGAScreen.prototype.set_size_text = function(cols_count, rows_count)\r\n{\r\n    this.max_cols = cols_count;\r\n    this.max_rows = rows_count;\r\n\r\n    this.bus.send(\"screen-set-size-text\", [cols_count, rows_count]);\r\n};\r\n\r\nVGAScreen.prototype.set_size_graphical = function(width, height, bpp, virtual_width, virtual_height)\r\n{\r\n    var needs_update = !this.stats.is_graphical ||\r\n        this.stats.bpp !== bpp ||\r\n        this.screen_width !== width ||\r\n        this.screen_height !== height ||\r\n        this.virtual_width !== virtual_width ||\r\n        this.virtual_height !== virtual_height;\r\n\r\n    if(needs_update)\r\n    {\r\n        this.screen_width = width;\r\n        this.screen_height = height;\r\n        this.virtual_width = virtual_width;\r\n        this.virtual_height = virtual_height;\r\n\r\n        this.stats.bpp = bpp;\r\n        this.stats.is_graphical = true;\r\n        this.stats.res_x = width;\r\n        this.stats.res_y = height;\r\n\r\n        this.bus.send(\"screen-set-size-graphical\", [width, height, virtual_width, virtual_height, bpp]);\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.update_vga_size = function()\r\n{\r\n    if(this.svga_enabled)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var horizontal_characters = Math.min(1 + this.horizontal_display_enable_end,\r\n        this.horizontal_blank_start);\r\n    var vertical_scans = Math.min(1 + this.vertical_display_enable_end,\r\n        this.vertical_blank_start);\r\n\r\n    if(!horizontal_characters || !vertical_scans)\r\n    {\r\n        // Don't update if width or height is zero.\r\n        // These happen when registers are not fully configured yet.\r\n        return;\r\n    }\r\n\r\n    if(this.graphical_mode)\r\n    {\r\n        var screen_width = horizontal_characters << 3;\r\n\r\n        // Offset is half the number of bytes/words/dwords (depending on clocking mode)\r\n        // of display memory that each logical line occupies.\r\n        // However, the number of pixels latched, regardless of addressing mode,\r\n        // should always 8 pixels per character clock (except for 8 bit PEL width, in which\r\n        // case 4 pixels).\r\n        var virtual_width = this.offset_register << 4;\r\n\r\n        // Pixel Width / PEL Width / Clock Select\r\n        if(this.attribute_mode & 0x40)\r\n        {\r\n            screen_width >>>= 1;\r\n            virtual_width >>>= 1;\r\n        }\r\n\r\n        var screen_height = this.scan_line_to_screen_row(vertical_scans);\r\n\r\n        // The virtual buffer height is however many rows of data that can fit.\r\n        // Previously drawn graphics outside of current memory address space can\r\n        // still be drawn by setting start_address. The address at\r\n        // VGA_HOST_MEMORY_SPACE_START[memory_space_select] is mapped to the first\r\n        // byte of the frame buffer. Verified on some hardware.\r\n        // Depended on by: Windows 98 start screen\r\n        var available_bytes = VGA_HOST_MEMORY_SPACE_SIZE[0];\r\n\r\n        var virtual_height = Math.ceil(available_bytes / this.vga_bytes_per_line());\r\n\r\n        this.set_size_graphical(screen_width, screen_height, 8,\r\n            virtual_width, virtual_height);\r\n\r\n        this.update_vertical_retrace();\r\n        this.update_layers();\r\n    }\r\n    else\r\n    {\r\n        if(this.max_scan_line & 0x80)\r\n        {\r\n            // Double scanning means that half of those scan lines\r\n            // are just repeats\r\n            vertical_scans >>>= 1;\r\n        }\r\n\r\n        var height = vertical_scans / (1 + (this.max_scan_line & 0x1F)) | 0;\r\n\r\n        if(horizontal_characters && height)\r\n        {\r\n            this.set_size_text(horizontal_characters, height);\r\n        }\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.update_layers = function()\r\n{\r\n    if(!this.graphical_mode)\r\n    {\r\n        this.text_mode_redraw();\r\n    }\r\n\r\n    if(this.svga_enabled)\r\n    {\r\n        this.layers = [];\r\n        return;\r\n    }\r\n\r\n    if(!this.virtual_width || !this.screen_width)\r\n    {\r\n        // Avoid division by zero\r\n        return;\r\n    }\r\n\r\n    if(!this.palette_source || (this.clocking_mode & 0x20))\r\n    {\r\n        // Palette source and screen disable bits = draw nothing\r\n        // See http://www.phatcode.net/res/224/files/html/ch29/29-05.html#Heading6\r\n        // and http://www.osdever.net/FreeVGA/vga/seqreg.htm#01\r\n        this.layers = [];\r\n        this.bus.send(\"screen-clear\");\r\n        return;\r\n    }\r\n\r\n    var start_addr = this.start_address_latched;\r\n\r\n    var pixel_panning = this.horizontal_panning;\r\n    if(this.attribute_mode & 0x40)\r\n    {\r\n        pixel_panning >>>= 1;\r\n    }\r\n\r\n    var byte_panning = this.preset_row_scan >> 5 & 0x3;\r\n    var pixel_addr_start = this.vga_addr_to_pixel(start_addr + byte_panning);\r\n\r\n    var start_buffer_row = pixel_addr_start / this.virtual_width | 0;\r\n    var start_buffer_col = pixel_addr_start % this.virtual_width + pixel_panning;\r\n\r\n    var split_screen_row = this.scan_line_to_screen_row(1 + this.line_compare);\r\n    split_screen_row = Math.min(split_screen_row, this.screen_height);\r\n\r\n    var split_buffer_height = this.screen_height - split_screen_row;\r\n\r\n    this.layers = [];\r\n\r\n    for(var x = -start_buffer_col, y = 0; x < this.screen_width; x += this.virtual_width, y++)\r\n    {\r\n        this.layers.push({\r\n            screen_x: x,\r\n            screen_y: 0,\r\n            buffer_x: 0,\r\n            buffer_y: start_buffer_row + y,\r\n            buffer_width: this.virtual_width,\r\n            buffer_height: split_screen_row,\r\n        });\r\n    }\r\n\r\n    var start_split_col = 0;\r\n    if(!(this.attribute_mode & 0x20))\r\n    {\r\n        // Pixel panning mode. Allow panning for the lower split screen\r\n        start_split_col = this.vga_addr_to_pixel(byte_panning) + pixel_panning;\r\n    }\r\n\r\n    for(var x = -start_split_col, y = 0; x < this.screen_width; x += this.virtual_width, y++)\r\n    {\r\n        this.layers.push({\r\n            screen_x: x,\r\n            screen_y: split_screen_row,\r\n            buffer_x: 0,\r\n            buffer_y: y,\r\n            buffer_width: this.virtual_width,\r\n            buffer_height: split_buffer_height,\r\n        });\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.update_vertical_retrace = function()\r\n{\r\n    // Emulate behaviour during VSync/VRetrace\r\n    this.port_3DA_value |= 0x8;\r\n    if(this.start_address_latched !== this.start_address)\r\n    {\r\n        this.start_address_latched = this.start_address;\r\n        this.update_layers();\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.update_cursor_scanline = function()\r\n{\r\n    this.bus.send(\"screen-update-cursor-scanline\", [this.cursor_scanline_start, this.cursor_scanline_end]);\r\n};\r\n\r\n/**\r\n * Attribute controller register / index write\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/attrreg.htm}\r\n * @see {@link http://www.mcamafia.de/pdf/ibm_vgaxga_trm2.pdf} page 89\r\n * @see {@link https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-hsw-display_0.pdf} page 48\r\n */\r\nVGAScreen.prototype.port3C0_write = function(value)\r\n{\r\n    if(this.attribute_controller_index === -1)\r\n    {\r\n        dbg_log(\"attribute controller index register: \" + h(value), LOG_VGA);\r\n        this.attribute_controller_index = value & 0x1F;\r\n        dbg_log(\"attribute actual index: \" + h(this.attribute_controller_index), LOG_VGA);\r\n\r\n        if(this.palette_source !== (value & 0x20))\r\n        {\r\n            // A method of blanking the screen.\r\n            // See http://www.phatcode.net/res/224/files/html/ch29/29-05.html#Heading6\r\n            this.palette_source = value & 0x20;\r\n            this.update_layers();\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(this.attribute_controller_index < 0x10)\r\n        {\r\n            dbg_log(\"internal palette: \" + h(this.attribute_controller_index) + \" -> \" + h(value), LOG_VGA);\r\n            this.dac_map[this.attribute_controller_index] = value;\r\n\r\n            if(!(this.attribute_mode & 0x40))\r\n            {\r\n                this.complete_redraw();\r\n            }\r\n        }\r\n        else\r\n        switch(this.attribute_controller_index)\r\n        {\r\n            case 0x10:\r\n                dbg_log(\"3C0 / attribute mode control: \" + h(value), LOG_VGA);\r\n                if(this.attribute_mode !== value)\r\n                {\r\n                    var previous_mode = this.attribute_mode;\r\n                    this.attribute_mode = value;\r\n\r\n                    var is_graphical = (value & 0x1) > 0;\r\n                    if(!this.svga_enabled && this.graphical_mode !== is_graphical)\r\n                    {\r\n                        this.graphical_mode = is_graphical;\r\n                        this.bus.send(\"screen-set-mode\", this.graphical_mode);\r\n                    }\r\n\r\n                    if((previous_mode ^ value) & 0x40)\r\n                    {\r\n                        // PEL width changed. Pixel Buffer now invalidated\r\n                        this.complete_replot();\r\n                    }\r\n\r\n                    this.update_vga_size();\r\n\r\n                    // Data stored in image buffer are invalidated\r\n                    this.complete_redraw();\r\n                }\r\n                break;\r\n            case 0x12:\r\n                dbg_log(\"3C0 / color plane enable: \" + h(value), LOG_VGA);\r\n                if(this.color_plane_enable !== value)\r\n                {\r\n                    this.color_plane_enable = value;\r\n\r\n                    // Data stored in image buffer are invalidated\r\n                    this.complete_redraw();\r\n                }\r\n                break;\r\n            case 0x13:\r\n                dbg_log(\"3C0 / horizontal panning: \" + h(value), LOG_VGA);\r\n                if(this.horizontal_panning !== value)\r\n                {\r\n                    this.horizontal_panning = value & 0xF;\r\n                    this.update_layers();\r\n                }\r\n                break;\r\n            case 0x14:\r\n                dbg_log(\"3C0 / color select: \" + h(value), LOG_VGA);\r\n                if(this.color_select !== value)\r\n                {\r\n                    this.color_select = value;\r\n\r\n                    // Data stored in image buffer are invalidated\r\n                    this.complete_redraw();\r\n                }\r\n                break;\r\n            default:\r\n                dbg_log(\"3C0 / attribute controller write \" + h(this.attribute_controller_index) + \": \" + h(value), LOG_VGA);\r\n        }\r\n\r\n        this.attribute_controller_index = -1;\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.port3C0_read = function()\r\n{\r\n    dbg_log(\"3C0 read\", LOG_VGA);\r\n    var result = this.attribute_controller_index | this.palette_source;\r\n    return result;\r\n};\r\n\r\nVGAScreen.prototype.port3C0_read16 = function()\r\n{\r\n    dbg_log(\"3C0 read16\", LOG_VGA);\r\n    return this.port3C0_read() & 0xFF | this.port3C1_read() << 8 & 0xFF00;\r\n};\r\n\r\nVGAScreen.prototype.port3C1_read = function()\r\n{\r\n    if(this.attribute_controller_index < 0x10)\r\n    {\r\n        dbg_log(\"3C1 / internal palette read: \" + h(this.attribute_controller_index) +\r\n            \" -> \" + h(this.dac_map[this.attribute_controller_index]), LOG_VGA);\r\n        return this.dac_map[this.attribute_controller_index];\r\n    }\r\n\r\n    switch(this.attribute_controller_index)\r\n    {\r\n        case 0x10:\r\n            dbg_log(\"3C1 / attribute mode read: \" + h(this.attribute_mode), LOG_VGA);\r\n            return this.attribute_mode;\r\n        case 0x12:\r\n            dbg_log(\"3C1 / color plane enable read: \" + h(this.color_plane_enable), LOG_VGA);\r\n            return this.color_plane_enable;\r\n        case 0x13:\r\n            dbg_log(\"3C1 / horizontal panning read: \" + h(this.horizontal_panning), LOG_VGA);\r\n            return this.horizontal_panning;\r\n        case 0x14:\r\n            dbg_log(\"3C1 / color select read: \" + h(this.color_select), LOG_VGA);\r\n            return this.color_select;\r\n        default:\r\n            dbg_log(\"3C1 / attribute controller read \" + h(this.attribute_controller_index), LOG_VGA);\r\n    }\r\n    return -1;\r\n\r\n};\r\n\r\nVGAScreen.prototype.port3C2_write = function(value)\r\n{\r\n    dbg_log(\"3C2 / miscellaneous output register = \" + h(value), LOG_VGA);\r\n    this.miscellaneous_output_register = value;\r\n};\r\n\r\nVGAScreen.prototype.port3C4_write = function(value)\r\n{\r\n    this.sequencer_index = value;\r\n};\r\n\r\nVGAScreen.prototype.port3C4_read = function()\r\n{\r\n    return this.sequencer_index;\r\n};\r\n\r\n/**\r\n * Sequencer register writes\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/seqreg.htm}\r\n * @see {@link http://www.mcamafia.de/pdf/ibm_vgaxga_trm2.pdf} page 47\r\n * @see {@link https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-hsw-display_0.pdf} page 19\r\n */\r\nVGAScreen.prototype.port3C5_write = function(value)\r\n{\r\n    switch(this.sequencer_index)\r\n    {\r\n        case 0x01:\r\n            dbg_log(\"clocking mode: \" + h(value), LOG_VGA);\r\n            var previous_clocking_mode = this.clocking_mode;\r\n            this.clocking_mode = value;\r\n            if((previous_clocking_mode ^ value) & 0x20)\r\n            {\r\n                // Screen disable bit modified\r\n                this.update_layers();\r\n            }\r\n\t\t\tif((previous_clocking_mode ^ value) & 0x08)\r\n            {\r\n\t\t\t\t// Each column should be duplicated\r\n\t\t\t\t// We will just scale text 2 times by x\r\n\t\t\t\tthis.text_char_wide = (value & 0x08) !== 0;\r\n\t\t\t\tthis.bus.send(\"screen-set-size-char\", [this.text_char_width, this.text_char_height, this.text_char_wide]);\r\n            }\r\n            if((previous_clocking_mode ^ value) & 0x01)\r\n            {\r\n\t\t\t\t// Char width can be 8 or 9\r\n\t\t\t\tthis.text_char_width = 9 ^ (value & 0x01);\r\n\t\t\t\tthis.bus.send(\"screen-set-size-char\", [this.text_char_width, this.text_char_height, this.text_char_wide]);\r\n            }\r\n            break;\r\n        case 0x02:\r\n            dbg_log(\"plane write mask: \" + h(value), LOG_VGA);\r\n            this.plane_write_bm = value;\r\n            break;\r\n        case 0x03:\r\n            dbg_log(\"character map: \" + h(value), LOG_VGA);\r\n\t\t\tthis.character_map_value = value;\r\n\t\t\tthis.character_map[0] = ((value >> 5 & 1) | (value >> 1 & 6)) << 13;\r\n\t\t\tthis.character_map[1] = ((value >> 4 & 1) | (value << 1 & 6)) << 13;\r\n            break;\r\n        case 0x04:\r\n            dbg_log(\"sequencer memory mode: \" + h(value), LOG_VGA);\r\n            this.sequencer_memory_mode = value;\r\n            break;\r\n        default:\r\n            dbg_log(\"3C5 / sequencer write \" + h(this.sequencer_index) + \": \" + h(value), LOG_VGA);\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.port3C5_read = function()\r\n{\r\n    dbg_log(\"3C5 / sequencer read \" + h(this.sequencer_index), LOG_VGA);\r\n\r\n    switch(this.sequencer_index)\r\n    {\r\n        case 0x01:\r\n            return this.clocking_mode;\r\n        case 0x02:\r\n            return this.plane_write_bm;\r\n        case 0x03:\r\n            return this.character_map_value;\r\n        case 0x04:\r\n            return this.sequencer_memory_mode;\r\n        case 0x06:\r\n            return 0x12;\r\n        default:\r\n    }\r\n    return 0;\r\n};\r\n\r\nVGAScreen.prototype.port3C6_write = function(data)\r\n{\r\n    this.dac_mask = data;\r\n};\r\n\r\nVGAScreen.prototype.port3C6_read = function()\r\n{\r\n    return this.dac_mask;\r\n};\r\n\r\nVGAScreen.prototype.port3C7_write = function(index)\r\n{\r\n    // index for reading the DAC\r\n    dbg_log(\"3C7 write: \" + h(index), LOG_VGA);\r\n    this.dac_color_index_read = index * 3;\r\n    this.dac_state &= 0x0;\r\n};\r\n\r\nVGAScreen.prototype.port3C7_read = function()\r\n{\r\n    // prepared to accept reads or writes\r\n    return this.dac_state;\r\n};\r\n\r\nVGAScreen.prototype.port3C8_write = function(index)\r\n{\r\n    this.dac_color_index_write = index * 3;\r\n    this.dac_state |= 0x3;\r\n};\r\n\r\nVGAScreen.prototype.port3C8_read = function()\r\n{\r\n    return this.dac_color_index_write / 3 | 0;\r\n};\r\n\r\n/**\r\n * DAC color palette register writes\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/colorreg.htm}\r\n * @see {@link http://www.mcamafia.de/pdf/ibm_vgaxga_trm2.pdf} page 104\r\n * @see {@link https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-hsw-display_0.pdf} page 57\r\n */\r\nVGAScreen.prototype.port3C9_write = function(color_byte)\r\n{\r\n    var index = this.dac_color_index_write / 3 | 0,\r\n        offset = this.dac_color_index_write % 3,\r\n        color = this.vga256_palette[index];\r\n\r\n    if((this.dispi_enable_value & 0x20) === 0)\r\n    {\r\n        color_byte &= 0x3F;\r\n        const b = color_byte & 1;\r\n        color_byte = color_byte << 2 | b << 1 | b;\r\n    }\r\n\r\n    if(offset === 0)\r\n    {\r\n        color = color & ~0xFF0000 | color_byte << 16;\r\n    }\r\n    else if(offset === 1)\r\n    {\r\n        color = color & ~0xFF00 | color_byte << 8;\r\n    }\r\n    else\r\n    {\r\n        color = color & ~0xFF | color_byte;\r\n        dbg_log(\"dac set color, index=\" + h(index) + \" value=\" + h(color), LOG_VGA);\r\n    }\r\n\r\n    if(this.vga256_palette[index] !== color)\r\n    {\r\n        this.vga256_palette[index] = color;\r\n        this.complete_redraw();\r\n    }\r\n    this.dac_color_index_write++;\r\n};\r\n\r\nVGAScreen.prototype.port3C9_read = function()\r\n{\r\n    dbg_log(\"3C9 read\", LOG_VGA);\r\n\r\n    var index = this.dac_color_index_read / 3 | 0;\r\n    var offset = this.dac_color_index_read % 3;\r\n    var color = this.vga256_palette[index];\r\n    var color8 = color >> (2 - offset) * 8 & 0xFF;\r\n\r\n    this.dac_color_index_read++;\r\n\r\n    if(this.dispi_enable_value & 0x20)\r\n    {\r\n        return color8;\r\n    }\r\n    else\r\n    {\r\n        return color8 >> 2;\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.port3CC_read = function()\r\n{\r\n    dbg_log(\"3CC read\", LOG_VGA);\r\n    return this.miscellaneous_output_register;\r\n};\r\n\r\nVGAScreen.prototype.port3CE_write = function(value)\r\n{\r\n    this.graphics_index = value;\r\n};\r\n\r\nVGAScreen.prototype.port3CE_read = function()\r\n{\r\n    return this.graphics_index;\r\n};\r\n\r\n/**\r\n * Graphics controller register writes\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/graphreg.htm}\r\n * @see {@link http://www.mcamafia.de/pdf/ibm_vgaxga_trm2.pdf} page 78\r\n * @see {@link https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-hsw-display_0.pdf} page 29\r\n */\r\nVGAScreen.prototype.port3CF_write = function(value)\r\n{\r\n    switch(this.graphics_index)\r\n    {\r\n        case 0:\r\n            this.planar_setreset = value;\r\n            dbg_log(\"plane set/reset: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 1:\r\n            this.planar_setreset_enable = value;\r\n            dbg_log(\"plane set/reset enable: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 2:\r\n            this.color_compare = value;\r\n            dbg_log(\"color compare: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 3:\r\n            this.planar_rotate_reg = value;\r\n            dbg_log(\"plane rotate: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 4:\r\n            this.plane_read = value;\r\n            dbg_log(\"plane read: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 5:\r\n            var previous_planar_mode = this.planar_mode;\r\n            this.planar_mode = value;\r\n            dbg_log(\"planar mode: \" + h(value), LOG_VGA);\r\n            if((previous_planar_mode ^ value) & 0x60)\r\n            {\r\n                // Shift mode modified. Pixel buffer invalidated\r\n                this.complete_replot();\r\n            }\r\n            break;\r\n        case 6:\r\n            dbg_log(\"miscellaneous graphics register: \" + h(value), LOG_VGA);\r\n            if(this.miscellaneous_graphics_register !== value)\r\n            {\r\n                this.miscellaneous_graphics_register = value;\r\n                this.update_vga_size();\r\n            }\r\n            break;\r\n        case 7:\r\n            this.color_dont_care = value;\r\n            dbg_log(\"color don't care: \" + h(value), LOG_VGA);\r\n            break;\r\n        case 8:\r\n            this.planar_bitmap = value;\r\n            dbg_log(\"planar bitmap: \" + h(value), LOG_VGA);\r\n            break;\r\n        default:\r\n            dbg_log(\"3CF / graphics write \" + h(this.graphics_index) + \": \" + h(value), LOG_VGA);\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.port3CF_read = function()\r\n{\r\n    dbg_log(\"3CF / graphics read \" + h(this.graphics_index), LOG_VGA);\r\n\r\n    switch(this.graphics_index)\r\n    {\r\n        case 0:\r\n            return this.planar_setreset;\r\n        case 1:\r\n            return this.planar_setreset_enable;\r\n        case 2:\r\n            return this.color_compare;\r\n        case 3:\r\n            return this.planar_rotate_reg;\r\n        case 4:\r\n            return this.plane_read;\r\n        case 5:\r\n            return this.planar_mode;\r\n        case 6:\r\n            return this.miscellaneous_graphics_register;\r\n        case 7:\r\n            return this.color_dont_care;\r\n        case 8:\r\n            return this.planar_bitmap;\r\n        default:\r\n    }\r\n    return 0;\r\n};\r\n\r\nVGAScreen.prototype.port3D4_write = function(register)\r\n{\r\n    dbg_log(\"3D4 / crtc index: \" + register, LOG_VGA);\r\n    this.index_crtc = register;\r\n};\r\n\r\nVGAScreen.prototype.port3D4_read = function()\r\n{\r\n    dbg_log(\"3D4 read / crtc index: \" + this.index_crtc, LOG_VGA);\r\n    return this.index_crtc;\r\n};\r\n\r\n/**\r\n * CRT controller register writes\r\n * @see {@link http://www.osdever.net/FreeVGA/vga/crtcreg.htm}\r\n * @see {@link http://www.mcamafia.de/pdf/ibm_vgaxga_trm2.pdf} page 55\r\n * @see {@link https://01.org/sites/default/files/documentation/intel-gfx-prm-osrc-hsw-display_0.pdf} page 63\r\n */\r\nVGAScreen.prototype.port3D5_write = function(value)\r\n{\r\n    switch(this.index_crtc)\r\n    {\r\n        case 0x1:\r\n            dbg_log(\"3D5 / hdisp enable end write: \" + h(value), LOG_VGA);\r\n            if(this.horizontal_display_enable_end !== value)\r\n            {\r\n                this.horizontal_display_enable_end = value;\r\n                this.update_vga_size();\r\n            }\r\n            break;\r\n        case 0x2:\r\n            if(this.horizontal_blank_start !== value)\r\n            {\r\n                this.horizontal_blank_start = value;\r\n                this.update_vga_size();\r\n            }\r\n            break;\r\n        case 0x7:\r\n            dbg_log(\"3D5 / overflow register write: \" + h(value), LOG_VGA);\r\n            var previous_vertical_display_enable_end = this.vertical_display_enable_end;\r\n            this.vertical_display_enable_end &= 0xFF;\r\n            this.vertical_display_enable_end |= (value << 3 & 0x200) | (value << 7 & 0x100);\r\n            if(previous_vertical_display_enable_end != this.vertical_display_enable_end)\r\n            {\r\n                this.update_vga_size();\r\n            }\r\n            this.line_compare = (this.line_compare & 0x2FF) | (value << 4 & 0x100);\r\n\r\n            var previous_vertical_blank_start = this.vertical_blank_start;\r\n            this.vertical_blank_start = (this.vertical_blank_start & 0x2FF) | (value << 5 & 0x100);\r\n            if(previous_vertical_blank_start !== this.vertical_blank_start)\r\n            {\r\n                this.update_vga_size();\r\n            }\r\n            this.update_layers();\r\n            break;\r\n        case 0x8:\r\n            dbg_log(\"3D5 / preset row scan write: \" + h(value), LOG_VGA);\r\n            this.preset_row_scan = value;\r\n            this.update_layers();\r\n            break;\r\n        case 0x9:\r\n            dbg_log(\"3D5 / max scan line write: \" + h(value), LOG_VGA);\r\n            this.max_scan_line = value;\r\n            this.line_compare = (this.line_compare & 0x1FF) | (value << 3 & 0x200);\r\n\r\n\t\t\tvar text_char_height = (this.max_scan_line & 0x1f) + 1;\r\n\t\t\tif (text_char_height !== this.text_char_height) {\r\n\t\t\t\tthis.text_char_height = (this.max_scan_line & 0x1f) + 1;\r\n\t\t\t\tthis.bus.send(\"screen-set-size-char\", [this.text_char_width, this.text_char_height, this.text_char_wide]);\r\n\t\t\t}\r\n\r\n            var previous_vertical_blank_start = this.vertical_blank_start;\r\n            this.vertical_blank_start = (this.vertical_blank_start & 0x1FF) | (value << 4 & 0x200);\r\n            if(previous_vertical_blank_start !== this.vertical_blank_start)\r\n            {\r\n                this.update_vga_size();\r\n            }\r\n\r\n            this.update_layers();\r\n            break;\r\n        case 0xA:\r\n            dbg_log(\"3D5 / cursor scanline start write: \" + h(value), LOG_VGA);\r\n            this.cursor_scanline_start = value;\r\n            this.update_cursor_scanline();\r\n            break;\r\n        case 0xB:\r\n            dbg_log(\"3D5 / cursor scanline end write: \" + h(value), LOG_VGA);\r\n            this.cursor_scanline_end = value;\r\n            this.update_cursor_scanline();\r\n            break;\r\n        case 0xC:\r\n            if((this.start_address >> 8 & 0xFF) !== value)\r\n            {\r\n                this.start_address = this.start_address & 0xff | value << 8;\r\n                this.update_layers();\r\n                if(~this.crtc_mode &  0x3)\r\n                {\r\n                    // Address substitution implementation depends on the\r\n                    // starting row and column, so the pixel buffer is invalidated.\r\n                    this.complete_replot();\r\n                }\r\n            }\r\n            dbg_log(\"3D5 / start addr hi write: \" + h(value) + \" -> \" + h(this.start_address, 4), LOG_VGA);\r\n            break;\r\n        case 0xD:\r\n            if((this.start_address & 0xFF) !== value)\r\n            {\r\n                this.start_address = this.start_address & 0xff00 | value;\r\n                this.update_layers();\r\n                if(~this.crtc_mode &  0x3)\r\n                {\r\n                    // Address substitution implementation depends on the\r\n                    // starting row and column, so the pixel buffer is invalidated.\r\n                    this.complete_replot();\r\n                }\r\n            }\r\n            dbg_log(\"3D5 / start addr lo write: \" + h(value) + \" -> \" + h(this.start_address, 4), LOG_VGA);\r\n            break;\r\n        case 0xE:\r\n            dbg_log(\"3D5 / cursor address hi write: \" + h(value), LOG_VGA);\r\n            this.cursor_address = this.cursor_address & 0xFF | value << 8;\r\n            this.update_cursor();\r\n            break;\r\n        case 0xF:\r\n            dbg_log(\"3D5 / cursor address lo write: \" + h(value), LOG_VGA);\r\n            this.cursor_address = this.cursor_address & 0xFF00 | value;\r\n            this.update_cursor();\r\n            break;\r\n        case 0x12:\r\n            dbg_log(\"3D5 / vdisp enable end write: \" + h(value), LOG_VGA);\r\n            if((this.vertical_display_enable_end & 0xFF) !== value)\r\n            {\r\n                this.vertical_display_enable_end = (this.vertical_display_enable_end & 0x300) | value;\r\n                this.update_vga_size();\r\n            }\r\n            break;\r\n        case 0x13:\r\n            dbg_log(\"3D5 / offset register write: \" + h(value), LOG_VGA);\r\n            if(this.offset_register !== value)\r\n            {\r\n                this.offset_register = value;\r\n                this.update_vga_size();\r\n\r\n                if(~this.crtc_mode & 0x3)\r\n                {\r\n                    // Address substitution implementation depends on the\r\n                    // virtual width, so the pixel buffer is invalidated.\r\n                    this.complete_replot();\r\n                }\r\n            }\r\n            break;\r\n        case 0x14:\r\n            dbg_log(\"3D5 / underline location write: \" + h(value), LOG_VGA);\r\n            if(this.underline_location_register !== value)\r\n            {\r\n                var previous_underline = this.underline_location_register;\r\n\r\n                this.underline_location_register = value;\r\n                this.update_vga_size();\r\n\r\n                if((previous_underline ^ value) & 0x40)\r\n                {\r\n                    // Doubleword addressing changed. Pixel buffer invalidated.\r\n                    this.complete_replot();\r\n                }\r\n            }\r\n            break;\r\n        case 0x15:\r\n            dbg_log(\"3D5 / vertical blank start write: \" + h(value), LOG_VGA);\r\n            if((this.vertical_blank_start & 0xFF) !== value)\r\n            {\r\n                this.vertical_blank_start = (this.vertical_blank_start & 0x300) | value;\r\n                this.update_vga_size();\r\n            }\r\n            break;\r\n        case 0x17:\r\n            dbg_log(\"3D5 / crtc mode write: \" + h(value), LOG_VGA);\r\n            if(this.crtc_mode !== value)\r\n            {\r\n                var previous_mode = this.crtc_mode;\r\n\r\n                this.crtc_mode = value;\r\n                this.update_vga_size();\r\n\r\n                if((previous_mode ^ value) & 0x43)\r\n                {\r\n                    // Word/byte addressing changed or address substitution changed.\r\n                    // Pixel buffer invalidated.\r\n                    this.complete_replot();\r\n                }\r\n            }\r\n            break;\r\n        case 0x18:\r\n            dbg_log(\"3D5 / line compare write: \" + h(value), LOG_VGA);\r\n            this.line_compare = (this.line_compare & 0x300) | value;\r\n            this.update_layers();\r\n            break;\r\n        default:\r\n            if(this.index_crtc < this.crtc.length)\r\n            {\r\n                this.crtc[this.index_crtc] = value;\r\n            }\r\n            dbg_log(\"3D5 / CRTC write \" + h(this.index_crtc) + \": \" + h(value), LOG_VGA);\r\n    }\r\n\r\n};\r\n\r\nVGAScreen.prototype.port3D5_read = function()\r\n{\r\n    dbg_log(\"3D5 read \" + h(this.index_crtc), LOG_VGA);\r\n\r\n    switch(this.index_crtc)\r\n    {\r\n        case 0x1:\r\n            return this.horizontal_display_enable_end;\r\n        case 0x2:\r\n            return this.horizontal_blank_start;\r\n        case 0x7:\r\n            return (this.vertical_display_enable_end >> 7 & 0x2) |\r\n                (this.vertical_blank_start >> 5 & 0x8) |\r\n                (this.line_compare >> 4 & 0x10) |\r\n                (this.vertical_display_enable_end >> 3 & 0x40);\r\n        case 0x8:\r\n            return this.preset_row_scan;\r\n        case 0x9:\r\n            return this.max_scan_line;\r\n        case 0xA:\r\n            return this.cursor_scanline_start;\r\n        case 0xB:\r\n            return this.cursor_scanline_end;\r\n        case 0xC:\r\n            return this.start_address & 0xFF;\r\n        case 0xD:\r\n            return this.start_address >> 8;\r\n        case 0xE:\r\n            return this.cursor_address >> 8;\r\n        case 0xF:\r\n            return this.cursor_address & 0xFF;\r\n        case 0x12:\r\n            return this.vertical_display_enable_end & 0xFF;\r\n        case 0x13:\r\n            return this.offset_register;\r\n        case 0x14:\r\n            return this.underline_location_register;\r\n        case 0x15:\r\n            return this.vertical_blank_start & 0xFF;\r\n        case 0x17:\r\n            return this.crtc_mode;\r\n        case 0x18:\r\n            return this.line_compare & 0xFF;\r\n    }\r\n\r\n    if(this.index_crtc < this.crtc.length)\r\n    {\r\n        return this.crtc[this.index_crtc];\r\n    }\r\n    else\r\n    {\r\n        return 0;\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.port3DA_read = function()\r\n{\r\n    dbg_log(\"3DA read - status 1 and clear attr index\", LOG_VGA);\r\n\r\n    var value = this.port_3DA_value;\r\n\r\n    // Status register, bit 3 set by update_vertical_retrace\r\n    // during screen-fill-buffer\r\n    if(!this.graphical_mode)\r\n    {\r\n        // But screen-fill-buffer may not get triggered in text mode\r\n        // so toggle it manually here\r\n        if(this.port_3DA_value & 1)\r\n        {\r\n            this.port_3DA_value ^= 8;\r\n        }\r\n        this.port_3DA_value ^= 1;\r\n    }\r\n    else\r\n    {\r\n        this.port_3DA_value ^= 1;\r\n        this.port_3DA_value &= 1;\r\n    }\r\n    this.attribute_controller_index = -1;\r\n    return value;\r\n};\r\n\r\nVGAScreen.prototype.svga_bytes_per_line = function()\r\n{\r\n    var bits = this.svga_bpp === 15 ? 16 : this.svga_bpp;\r\n\r\n    return this.svga_width * bits / 8;\r\n};\r\n\r\nVGAScreen.prototype.port1CE_write = function(value)\r\n{\r\n    this.dispi_index = value;\r\n};\r\n\r\nVGAScreen.prototype.port1CF_write = function(value)\r\n{\r\n    dbg_log(\"1CF / dispi write \" + h(this.dispi_index) + \": \" + h(value), LOG_VGA);\r\n\r\n    switch(this.dispi_index)\r\n    {\r\n        case 1:\r\n            this.svga_width = value;\r\n            if(this.svga_width > MAX_XRES)\r\n            {\r\n                dbg_log(\"svga_width reduced from \" + this.svga_width + \" to \" + MAX_XRES, LOG_VGA);\r\n                this.svga_width = MAX_XRES;\r\n            }\r\n            break;\r\n        case 2:\r\n            this.svga_height = value;\r\n            if(this.svga_height > MAX_YRES)\r\n            {\r\n                dbg_log(\"svga_height reduced from \" + this.svga_height + \" to \" + MAX_YRES, LOG_VGA);\r\n                this.svga_height = MAX_YRES;\r\n            }\r\n            break;\r\n        case 3:\r\n            this.svga_bpp = value;\r\n            break;\r\n        case 4:\r\n            // enable, options\r\n            this.svga_enabled = (value & 1) === 1;\r\n            this.dispi_enable_value = value;\r\n            break;\r\n        case 5:\r\n            this.svga_bank_offset = value << 16;\r\n            break;\r\n        case 9:\r\n            // y offset\r\n            this.svga_offset = value * this.svga_bytes_per_line();\r\n            dbg_log(\"SVGA offset: \" + h(this.svga_offset) + \" y=\" + h(value), LOG_VGA);\r\n            this.complete_redraw();\r\n            break;\r\n        default:\r\n    }\r\n\r\n    if(this.svga_enabled && (!this.svga_width || !this.svga_height))\r\n    {\r\n        dbg_log(\"SVGA: disabled because of invalid width/height: \" + this.svga_width + \"x\" + this.svga_height, LOG_VGA);\r\n        this.svga_enabled = false;\r\n    }\r\n\r\n    dbg_assert(this.svga_bpp !== 4, \"unimplemented svga bpp: 4\");\r\n    dbg_assert(this.svga_bpp !== 15, \"unimplemented svga bpp: 15\");\r\n    dbg_assert(this.svga_bpp === 4 || this.svga_bpp === 8 ||\r\n               this.svga_bpp === 15 || this.svga_bpp === 16 ||\r\n               this.svga_bpp === 24 || this.svga_bpp === 32,\r\n               \"unexpected svga bpp: \" + this.svga_bpp);\r\n\r\n    dbg_log(\"SVGA: enabled=\" + this.svga_enabled + \", \" + this.svga_width + \"x\" + this.svga_height + \"x\" + this.svga_bpp, LOG_VGA);\r\n\r\n    if(this.svga_enabled && this.dispi_index === 4)\r\n    {\r\n        this.set_size_graphical(this.svga_width, this.svga_height, this.svga_bpp, this.svga_width, this.svga_height);\r\n        this.bus.send(\"screen-set-mode\", true);\r\n        this.graphical_mode = true;\r\n        this.graphical_mode_is_linear = true;\r\n    }\r\n\r\n    if(!this.svga_enabled)\r\n    {\r\n        this.svga_bank_offset = 0;\r\n    }\r\n\r\n    this.update_layers();\r\n};\r\n\r\nVGAScreen.prototype.port1CF_read = function()\r\n{\r\n    dbg_log(\"1CF / dispi read \" + h(this.dispi_index), LOG_VGA);\r\n    return this.svga_register_read(this.dispi_index);\r\n};\r\n\r\nVGAScreen.prototype.svga_register_read = function(n)\r\n{\r\n    switch(n)\r\n    {\r\n        case 0:\r\n            // id\r\n            return 0xB0C0;\r\n        case 1:\r\n            return this.dispi_enable_value & 2 ? MAX_XRES : this.svga_width;\r\n        case 2:\r\n            return this.dispi_enable_value & 2 ? MAX_YRES : this.svga_height;\r\n        case 3:\r\n            return this.dispi_enable_value & 2 ? MAX_BPP : this.svga_bpp;\r\n        case 4:\r\n            return this.dispi_enable_value;\r\n        case 5:\r\n            return this.svga_bank_offset >>> 16;\r\n        case 6:\r\n            // virtual width\r\n            if(this.screen_width)\r\n            {\r\n                return this.screen_width;\r\n            }\r\n            else\r\n            {\r\n                return 1; // seabios/windows98 divide exception\r\n            }\r\n            break;\r\n\r\n        case 8:\r\n            // x offset\r\n            return 0;\r\n        case 0x0A:\r\n            // memory size in 64 kilobyte banks\r\n            return this.vga_memory_size / VGA_BANK_SIZE | 0;\r\n    }\r\n\r\n    return 0xFF;\r\n};\r\n\r\n/**\r\n * Transfers graphics from VGA Planes to the Pixel Buffer\r\n * VGA Planes represent data stored on actual hardware.\r\n * Pixel Buffer caches the 4-bit or 8-bit color indices for each pixel.\r\n */\r\nVGAScreen.prototype.vga_replot = function()\r\n{\r\n    // Round to multiple of 8 towards extreme\r\n    var start = this.diff_plot_min & ~0xF;\r\n    var end = Math.min((this.diff_plot_max | 0xF), VGA_PIXEL_BUFFER_SIZE - 1);\r\n\r\n    var addr_shift = this.vga_addr_shift_count();\r\n    var addr_substitution = ~this.crtc_mode & 0x3;\r\n\r\n    var shift_mode = this.planar_mode & 0x60\r\n    var pel_width = this.attribute_mode & 0x40;\r\n\r\n    for(var pixel_addr = start; pixel_addr <= end;)\r\n    {\r\n        var addr = pixel_addr >>> addr_shift;\r\n        if(addr_substitution)\r\n        {\r\n            var row = pixel_addr / this.virtual_width | 0;\r\n            var col = pixel_addr - this.virtual_width * row;\r\n\r\n            switch(addr_substitution)\r\n            {\r\n                case 0x1:\r\n                    // Alternating rows using bit 13\r\n                    // Assumes max scan line = 1\r\n                    addr = (row & 0x1) << 13;\r\n                    row >>>= 1;\r\n                    break;\r\n                case 0x2:\r\n                    // Alternating rows using bit 14\r\n                    // Assumes max scan line = 3\r\n                    addr = (row & 0x1) << 14;\r\n                    row >>>= 1;\r\n                    break;\r\n                case 0x3:\r\n                    // Cycling through rows using bit 13 and 14\r\n                    // Assumes max scan line = 3\r\n                    addr = (row & 0x3) << 13;\r\n                    row >>>= 2;\r\n                    break;\r\n            }\r\n\r\n            addr |= (row * this.virtual_width + col >>> addr_shift) + this.start_address;\r\n        }\r\n\r\n        var byte0 = this.plane0[addr];\r\n        var byte1 = this.plane1[addr];\r\n        var byte2 = this.plane2[addr];\r\n        var byte3 = this.plane3[addr];\r\n\r\n        var shift_loads = new Uint8Array(8);\r\n        switch(shift_mode)\r\n        {\r\n            // Planar Shift Mode\r\n            // See http://www.osdever.net/FreeVGA/vga/vgaseq.htm\r\n            case 0x00:\r\n                // Shift these, so that the bits for the color are in\r\n                // the correct position in the for loop\r\n                byte0 <<= 0;\r\n                byte1 <<= 1;\r\n                byte2 <<= 2;\r\n                byte3 <<= 3;\r\n\r\n                for(var i = 7; i >= 0; i--)\r\n                {\r\n                    shift_loads[7 - i] =\r\n                            byte0 >> i & 1 |\r\n                            byte1 >> i & 2 |\r\n                            byte2 >> i & 4 |\r\n                            byte3 >> i & 8;\r\n                }\r\n                break;\r\n\r\n            // Packed Shift Mode, aka Interleaved Shift Mode\r\n            // Video Modes 4h and 5h\r\n            case 0x20:\r\n                shift_loads[0] = (byte0 >> 6 & 0x3) | (byte2 >> 4 & 0xC);\r\n                shift_loads[1] = (byte0 >> 4 & 0x3) | (byte2 >> 2 & 0xC);\r\n                shift_loads[2] = (byte0 >> 2 & 0x3) | (byte2 >> 0 & 0xC);\r\n                shift_loads[3] = (byte0 >> 0 & 0x3) | (byte2 << 2 & 0xC);\r\n\r\n                shift_loads[4] = (byte1 >> 6 & 0x3) | (byte3 >> 4 & 0xC);\r\n                shift_loads[5] = (byte1 >> 4 & 0x3) | (byte3 >> 2 & 0xC);\r\n                shift_loads[6] = (byte1 >> 2 & 0x3) | (byte3 >> 0 & 0xC);\r\n                shift_loads[7] = (byte1 >> 0 & 0x3) | (byte3 << 2 & 0xC);\r\n                break;\r\n\r\n            // 256-Color Shift Mode\r\n            // Video Modes 13h and unchained 256 color\r\n            case 0x40:\r\n            case 0x60:\r\n                shift_loads[0] = byte0 >> 4 & 0xF;\r\n                shift_loads[1] = byte0 >> 0 & 0xF;\r\n                shift_loads[2] = byte1 >> 4 & 0xF;\r\n                shift_loads[3] = byte1 >> 0 & 0xF;\r\n                shift_loads[4] = byte2 >> 4 & 0xF;\r\n                shift_loads[5] = byte2 >> 0 & 0xF;\r\n                shift_loads[6] = byte3 >> 4 & 0xF;\r\n                shift_loads[7] = byte3 >> 0 & 0xF;\r\n                break;\r\n        }\r\n\r\n        if(pel_width)\r\n        {\r\n            // Assemble from two sets of 4 bits.\r\n            for(var i = 0, j = 0; i < 4; i++, pixel_addr++, j += 2)\r\n            {\r\n                this.pixel_buffer[pixel_addr] = (shift_loads[j] << 4) | shift_loads[j + 1];\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for(var i = 0; i < 8; i++, pixel_addr++)\r\n            {\r\n                this.pixel_buffer[pixel_addr] = shift_loads[i];\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Transfers graphics from Pixel Buffer to Destination Image Buffer.\r\n * The 4-bit/8-bit color indices in the Pixel Buffer are passed through\r\n * the internal palette (dac_map) and the DAC palette (vga256_palette) to\r\n * obtain the final 32 bit color that the Canvas API uses.\r\n */\r\nVGAScreen.prototype.vga_redraw = function()\r\n{\r\n    var start = this.diff_addr_min;\r\n    var end = Math.min(this.diff_addr_max, VGA_PIXEL_BUFFER_SIZE - 1);\r\n    var buffer = this.dest_buffer;\r\n\r\n    // Closure compiler\r\n    if(!buffer) return;\r\n\r\n    var mask = 0xFF;\r\n    var colorset = 0x00;\r\n    if(this.attribute_mode & 0x80)\r\n    {\r\n        // Palette bits 5/4 select\r\n        mask &= 0xCF;\r\n        colorset |= this.color_select << 4 & 0x30;\r\n    }\r\n\r\n    if(this.attribute_mode & 0x40)\r\n    {\r\n        // 8 bit mode\r\n\r\n        for(var pixel_addr = start; pixel_addr <= end; pixel_addr++)\r\n        {\r\n            var color256 = (this.pixel_buffer[pixel_addr] & mask) | colorset;\r\n            var color = this.vga256_palette[color256];\r\n\r\n            buffer[pixel_addr] = color & 0xFF00 | color << 16 | color >> 16 | 0xFF000000;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // 4 bit mode\r\n\r\n        // Palette bits 7/6 select\r\n        mask &= 0x3F;\r\n        colorset |= this.color_select << 4 & 0xC0;\r\n\r\n        for(var pixel_addr = start; pixel_addr <= end; pixel_addr++)\r\n        {\r\n            var color16 = this.pixel_buffer[pixel_addr] & this.color_plane_enable;\r\n            var color256 = (this.dac_map[color16] & mask) | colorset;\r\n            var color = this.vga256_palette[color256];\r\n\r\n            buffer[pixel_addr] = color & 0xFF00 | color << 16 | color >> 16 | 0xFF000000;\r\n        }\r\n    }\r\n};\r\n\r\nVGAScreen.prototype.screen_fill_buffer = function()\r\n{\r\n    if(!this.graphical_mode)\r\n    {\r\n        // text mode\r\n        // Update retrace behaviour anyway - programs waiting for signal before\r\n        // changing to graphical mode\r\n        this.update_vertical_retrace();\r\n        return;\r\n    }\r\n\r\n    if(!this.dest_buffer)\r\n    {\r\n        dbg_log(\"Cannot fill buffer: No destination buffer\", LOG_VGA);\r\n        // Update retrace behaviour anyway\r\n        this.update_vertical_retrace();\r\n        return;\r\n    }\r\n\r\n    if(this.diff_addr_max < this.diff_addr_min && this.diff_plot_max < this.diff_plot_min)\r\n    {\r\n        // No pixels to update\r\n        this.bus.send(\"screen-fill-buffer-end\", this.layers);\r\n        this.update_vertical_retrace();\r\n        return;\r\n    }\r\n\r\n    if(this.svga_enabled)\r\n    {\r\n        var bpp = this.svga_bpp;\r\n\r\n        var buffer = this.dest_buffer;\r\n\r\n        var start = this.diff_addr_min;\r\n        var end = this.diff_addr_max;\r\n\r\n        switch(bpp)\r\n        {\r\n            case 32:\r\n                var start_pixel = start >> 2;\r\n                var end_pixel = (end >> 2) + 1;\r\n\r\n                for(var i = start_pixel; i < end_pixel; i++)\r\n                {\r\n                    var dword = this.svga_memory32[i];\r\n\r\n                    buffer[i] = dword << 16 | dword >> 16 & 0xFF | dword & 0xFF00 | 0xFF000000;\r\n                }\r\n                break;\r\n\r\n            case 24:\r\n                var start_pixel = start / 3 | 0;\r\n                var end_pixel = (end / 3 | 0) + 1;\r\n                var addr = start_pixel * 3;\r\n\r\n                for(var i = start_pixel; addr < end; i++)\r\n                {\r\n                    var red = this.svga_memory[addr++];\r\n                    var green = this.svga_memory[addr++];\r\n                    var blue = this.svga_memory[addr++];\r\n\r\n                    buffer[i] = red << 16 | green << 8 | blue | 0xFF000000;\r\n                }\r\n                break;\r\n\r\n            case 16:\r\n                var start_pixel = start >> 1;\r\n                var end_pixel = (end >> 1) + 1;\r\n\r\n                for(var i = start_pixel; i < end_pixel; i++)\r\n                {\r\n                    var word = this.svga_memory16[i];\r\n\r\n                    var blue = (word >> 11) * 0xFF / 0x1F | 0;\r\n                    var green = (word >> 5 & 0x3F) * 0xFF / 0x3F | 0;\r\n                    var red = (word & 0x1F) * 0xFF / 0x1F | 0;\r\n\r\n                    buffer[i] = red << 16 | green << 8 | blue | 0xFF000000;\r\n                }\r\n                break;\r\n\r\n            case 8:\r\n                var start_pixel = start;\r\n                var end_pixel = end + 1;\r\n\r\n                for(var i = start; i <= end; i++)\r\n                {\r\n                    var color = this.vga256_palette[this.svga_memory[i]];\r\n                    buffer[i] = color & 0xFF00 | color << 16 | color >> 16 | 0xFF000000;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                dbg_assert(false, \"Unsupported BPP: \" + bpp);\r\n        }\r\n\r\n        var min_y = start_pixel / this.svga_width | 0;\r\n        var max_y = end_pixel / this.svga_width | 0;\r\n\r\n        this.bus.send(\"screen-fill-buffer-end\", [{\r\n            screen_x: 0, screen_y: min_y,\r\n            buffer_x: 0, buffer_y: min_y,\r\n            buffer_width: this.svga_width,\r\n            buffer_height: max_y - min_y + 1,\r\n        }]);\r\n    }\r\n    else\r\n    {\r\n        this.vga_replot();\r\n        this.vga_redraw();\r\n        this.bus.send(\"screen-fill-buffer-end\", this.layers);\r\n    }\r\n\r\n    this.reset_diffs();\r\n    this.update_vertical_retrace();\r\n};\r\n","\"use strict\";\r\n\r\n/** @const */\r\nlet PS2_LOG_VERBOSE = false;\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {BusConnector} bus\r\n */\r\nfunction PS2(cpu, bus)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    /** @type {boolean} */\r\n    this.enable_mouse_stream = false;\r\n\r\n    /** @type {boolean} */\r\n    this.use_mouse = false;\r\n\r\n    /** @type {boolean} */\r\n    this.have_mouse = true;\r\n\r\n    /** @type {number} */\r\n    this.mouse_delta_x = 0;\r\n    /** @type {number} */\r\n    this.mouse_delta_y = 0;\r\n    /** @type {number} */\r\n    this.mouse_clicks = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.have_keyboard = true;\r\n\r\n    /** @type {boolean} */\r\n    this.enable_keyboard_stream = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_is_mouse_command = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_read_sample = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_read_led = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_handle_scan_code_set = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_read_rate = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_read_resolution = false;\r\n\r\n    /**\r\n     * @type {ByteQueue}\r\n     */\r\n    this.kbd_buffer = new ByteQueue(1024);\r\n\r\n    this.last_port60_byte = 0;\r\n\r\n    /** @type {number} */\r\n    this.sample_rate = 100;\r\n\r\n    /** @type {number} */\r\n    this.mouse_detect_state = 0;\r\n\r\n    /** @type {number} */\r\n    this.mouse_id = 0x00;\r\n\r\n    /** @type {boolean} */\r\n    this.mouse_reset_workaround = false;\r\n\r\n    /** @type {number} */\r\n    this.wheel_movement = 0;\r\n\r\n    /** @type {number} */\r\n    this.resolution = 4;\r\n\r\n    /** @type {boolean} */\r\n    this.scaling2 = false;\r\n\r\n    /** @type {number} */\r\n    this.last_mouse_packet = -1;\r\n\r\n    /**\r\n     * @type {ByteQueue}\r\n     */\r\n    this.mouse_buffer = new ByteQueue(1024);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * Also known as DBBOUT OBF - Output Buffer Full flag\r\n     */\r\n    this.next_byte_is_ready = false;\r\n\r\n    /** @type {boolean} */\r\n    this.next_byte_is_aux = false;\r\n\r\n    this.bus.register(\"keyboard-code\", function(code)\r\n    {\r\n        this.kbd_send_code(code);\r\n    }, this);\r\n\r\n    this.bus.register(\"mouse-click\", function(data)\r\n    {\r\n        this.mouse_send_click(data[0], data[1], data[2]);\r\n    }, this);\r\n\r\n    this.bus.register(\"mouse-delta\", function(data)\r\n    {\r\n        this.mouse_send_delta(data[0], data[1]);\r\n    }, this);\r\n\r\n    this.bus.register(\"mouse-wheel\", function(data)\r\n    {\r\n        this.wheel_movement -= data[0];\r\n        this.wheel_movement -= data[1] * 2; // X Wheel Movement\r\n        this.wheel_movement = Math.min(7, Math.max(-8, this.wheel_movement));\r\n        this.send_mouse_packet(0, 0);\r\n    }, this);\r\n\r\n    this.command_register = 1 | 4;\r\n    // TODO: What should be the initial value?\r\n    this.controller_output_port = 0;\r\n    this.read_output_register = false;\r\n    this.read_command_register = false;\r\n    this.read_controller_output_port = false;\r\n\r\n    cpu.io.register_read(0x60, this, this.port60_read);\r\n    cpu.io.register_read(0x64, this, this.port64_read);\r\n\r\n    cpu.io.register_write(0x60, this, this.port60_write);\r\n    cpu.io.register_write(0x64, this, this.port64_write);\r\n}\r\n\r\nPS2.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.enable_mouse_stream;\r\n    state[1] = this.use_mouse;\r\n    state[2] = this.have_mouse;\r\n    state[3] = this.mouse_delta_x;\r\n    state[4] = this.mouse_delta_y;\r\n    state[5] = this.mouse_clicks;\r\n    state[6] = this.have_keyboard;\r\n    state[7] = this.enable_keyboard_stream;\r\n    state[8] = this.next_is_mouse_command;\r\n    state[9] = this.next_read_sample;\r\n    state[10] = this.next_read_led;\r\n    state[11] = this.next_handle_scan_code_set;\r\n    state[12] = this.next_read_rate;\r\n    state[13] = this.next_read_resolution;\r\n    //state[14] = this.kbd_buffer;\r\n    state[15] = this.last_port60_byte;\r\n    state[16] = this.sample_rate;\r\n    state[17] = this.resolution;\r\n    state[18] = this.scaling2;\r\n    //state[19] = this.mouse_buffer;\r\n    state[20] = this.command_register;\r\n    state[21] = this.read_output_register;\r\n    state[22] = this.read_command_register;\r\n    state[23] = this.controller_output_port;\r\n    state[24] = this.read_controller_output_port;\r\n    state[25] = this.mouse_id;\r\n    state[26] = this.mouse_detect_state;\r\n    state[27] = this.mouse_reset_workaround;\r\n\r\n    return state;\r\n};\r\n\r\nPS2.prototype.set_state = function(state)\r\n{\r\n    this.enable_mouse_stream = state[0];\r\n    this.use_mouse = state[1];\r\n    this.have_mouse = state[2];\r\n    this.mouse_delta_x = state[3];\r\n    this.mouse_delta_y = state[4];\r\n    this.mouse_clicks = state[5];\r\n    this.have_keyboard = state[6];\r\n    this.enable_keyboard_stream = state[7];\r\n    this.next_is_mouse_command = state[8];\r\n    this.next_read_sample = state[9];\r\n    this.next_read_led = state[10];\r\n    this.next_handle_scan_code_set = state[11];\r\n    this.next_read_rate = state[12];\r\n    this.next_read_resolution = state[13];\r\n    //this.kbd_buffer = state[14];\r\n    this.last_port60_byte = state[15];\r\n    this.sample_rate = state[16];\r\n    this.resolution = state[17];\r\n    this.scaling2 = state[18];\r\n    //this.mouse_buffer = state[19];\r\n    this.command_register = state[20];\r\n    this.read_output_register = state[21];\r\n    this.read_command_register = state[22];\r\n    this.controller_output_port = state[23];\r\n    this.read_controller_output_port = state[24];\r\n    this.mouse_id = state[25] || 0;\r\n    this.mouse_detect_state = state[26] || 0;\r\n    this.mouse_reset_workaround = state[27] || false;\r\n\r\n    this.next_byte_is_ready = false;\r\n    this.next_byte_is_aux = false;\r\n    this.kbd_buffer.clear();\r\n    this.mouse_buffer.clear();\r\n\r\n    this.bus.send(\"mouse-enable\", this.use_mouse);\r\n};\r\n\r\nPS2.prototype.raise_irq = function()\r\n{\r\n    if(this.next_byte_is_ready)\r\n    {\r\n        // Wait until previous byte is read\r\n        // http://halicery.com/Hardware/8042/8042_1503033_TXT.htm\r\n        return;\r\n    }\r\n\r\n    // Kbd has priority over aux\r\n    if(this.kbd_buffer.length)\r\n    {\r\n        this.kbd_irq();\r\n    }\r\n    else if(this.mouse_buffer.length)\r\n    {\r\n        this.mouse_irq();\r\n    }\r\n};\r\n\r\nPS2.prototype.mouse_irq = function()\r\n{\r\n    this.next_byte_is_ready = true;\r\n    this.next_byte_is_aux = true;\r\n\r\n    if(this.command_register & 2)\r\n    {\r\n        dbg_log(\"Mouse irq\", LOG_PS2);\r\n\r\n        // Pulse the irq line\r\n        // Note: can't lower immediately after rising, so lower before rising\r\n        // http://www.os2museum.com/wp/ibm-ps2-model-50-keyboard-controller/\r\n        this.cpu.device_lower_irq(12);\r\n        this.cpu.device_raise_irq(12);\r\n    }\r\n};\r\n\r\nPS2.prototype.kbd_irq = function()\r\n{\r\n    this.next_byte_is_ready = true;\r\n    this.next_byte_is_aux = false;\r\n\r\n    if(this.command_register & 1)\r\n    {\r\n        dbg_log(\"Keyboard irq\", LOG_PS2);\r\n\r\n        // Pulse the irq line\r\n        // Note: can't lower immediately after rising, so lower before rising\r\n        // http://www.os2museum.com/wp/ibm-ps2-model-50-keyboard-controller/\r\n        this.cpu.device_lower_irq(1);\r\n        this.cpu.device_raise_irq(1);\r\n    }\r\n};\r\n\r\nPS2.prototype.kbd_send_code = function(code)\r\n{\r\n    if(this.enable_keyboard_stream)\r\n    {\r\n        dbg_log(\"adding kbd code: \" + h(code), LOG_PS2);\r\n        this.kbd_buffer.push(code);\r\n        this.raise_irq();\r\n    }\r\n};\r\n\r\nPS2.prototype.mouse_send_delta = function(delta_x, delta_y)\r\n{\r\n    if(!this.have_mouse || !this.use_mouse)\r\n    {\r\n        return;\r\n    }\r\n\r\n    // note: delta_x or delta_y can be floating point numbers\r\n\r\n    var factor = this.resolution * this.sample_rate / 80;\r\n\r\n    this.mouse_delta_x += delta_x * factor;\r\n    this.mouse_delta_y += delta_y * factor;\r\n\r\n    if(this.enable_mouse_stream)\r\n    {\r\n        var change_x = this.mouse_delta_x | 0,\r\n            change_y = this.mouse_delta_y | 0;\r\n\r\n        if(change_x || change_y)\r\n        {\r\n            var now = Date.now();\r\n\r\n            //if(now - this.last_mouse_packet < 1000 / this.sample_rate)\r\n            //{\r\n            //    // TODO: set timeout\r\n            //    return;\r\n            //}\r\n\r\n            this.mouse_delta_x -= change_x;\r\n            this.mouse_delta_y -= change_y;\r\n\r\n            this.send_mouse_packet(change_x, change_y);\r\n        }\r\n    }\r\n};\r\n\r\nPS2.prototype.mouse_send_click = function(left, middle, right)\r\n{\r\n    if(!this.have_mouse || !this.use_mouse)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.mouse_clicks = left | right << 1 | middle << 2;\r\n\r\n    if(this.enable_mouse_stream)\r\n    {\r\n        this.send_mouse_packet(0, 0);\r\n    }\r\n};\r\n\r\nPS2.prototype.send_mouse_packet = function(dx, dy)\r\n{\r\n    var info_byte =\r\n            (dy < 0) << 5 |\r\n            (dx < 0) << 4 |\r\n            1 << 3 |\r\n            this.mouse_clicks,\r\n        delta_x = dx,\r\n        delta_y = dy;\r\n\r\n    this.last_mouse_packet = Date.now();\r\n\r\n    //if(this.scaling2)\r\n    //{\r\n    //    // only in automatic packets, not 0xEB requests\r\n    //    delta_x = this.apply_scaling2(delta_x);\r\n    //    delta_y = this.apply_scaling2(delta_y);\r\n    //}\r\n\r\n    this.mouse_buffer.push(info_byte);\r\n    this.mouse_buffer.push(delta_x);\r\n    this.mouse_buffer.push(delta_y);\r\n\r\n    if(this.mouse_id === 0x04)\r\n    {\r\n        this.mouse_buffer.push(\r\n            0 << 5 | // TODO: 5th button\r\n            0 << 4 | // TODO: 4th button\r\n            this.wheel_movement & 0x0F\r\n        );\r\n        this.wheel_movement = 0;\r\n    }\r\n    else if(this.mouse_id === 0x03)\r\n    {\r\n        this.mouse_buffer.push(this.wheel_movement & 0xFF); // Byte 4 - Z Movement\r\n        this.wheel_movement = 0;\r\n    }\r\n\r\n    if(PS2_LOG_VERBOSE)\r\n    {\r\n        dbg_log(\"adding mouse packets: \" + [info_byte, dx, dy], LOG_PS2);\r\n    }\r\n\r\n    this.raise_irq();\r\n};\r\n\r\nPS2.prototype.apply_scaling2 = function(n)\r\n{\r\n    // http://www.computer-engineering.org/ps2mouse/#Inputs.2C_Resolution.2C_and_Scaling\r\n    var abs = Math.abs(n),\r\n        sign = n >> 31;\r\n\r\n    switch(abs)\r\n    {\r\n        case 0:\r\n        case 1:\r\n        case 3:\r\n            return n;\r\n        case 2:\r\n            return sign;\r\n        case 4:\r\n            return 6 * sign;\r\n        case 5:\r\n            return 9 * sign;\r\n        default:\r\n            return n << 1;\r\n    }\r\n};\r\n\r\nPS2.prototype.port60_read = function()\r\n{\r\n    //dbg_log(\"port 60 read: \" + (buffer[0] || \"(none)\"));\r\n\r\n    this.next_byte_is_ready = false;\r\n\r\n    if(!this.kbd_buffer.length && !this.mouse_buffer.length)\r\n    {\r\n        // should not happen\r\n        dbg_log(\"Port 60 read: Empty\", LOG_PS2);\r\n        return this.last_port60_byte;\r\n    }\r\n\r\n    if(this.next_byte_is_aux)\r\n    {\r\n        this.cpu.device_lower_irq(12);\r\n        this.last_port60_byte = this.mouse_buffer.shift();\r\n        dbg_log(\"Port 60 read (mouse): \" + h(this.last_port60_byte), LOG_PS2);\r\n    }\r\n    else\r\n    {\r\n        this.cpu.device_lower_irq(1);\r\n        this.last_port60_byte = this.kbd_buffer.shift();\r\n        dbg_log(\"Port 60 read (kbd)  : \" + h(this.last_port60_byte), LOG_PS2);\r\n    }\r\n\r\n    if(this.kbd_buffer.length || this.mouse_buffer.length)\r\n    {\r\n        this.raise_irq();\r\n    }\r\n\r\n    return this.last_port60_byte;\r\n};\r\n\r\nPS2.prototype.port64_read = function()\r\n{\r\n    // status port\r\n\r\n    var status_byte = 0x10;\r\n\r\n    if(this.next_byte_is_ready)\r\n    {\r\n        status_byte |= 0x1;\r\n    }\r\n    if(this.next_byte_is_aux)\r\n    {\r\n        status_byte |= 0x20;\r\n    }\r\n\r\n    dbg_log(\"port 64 read: \" + h(status_byte), LOG_PS2);\r\n\r\n    return status_byte;\r\n};\r\n\r\nPS2.prototype.port60_write = function(write_byte)\r\n{\r\n    dbg_log(\"port 60 write: \" + h(write_byte), LOG_PS2);\r\n\r\n    if(this.read_command_register)\r\n    {\r\n        this.command_register = write_byte;\r\n        this.read_command_register = false;\r\n\r\n        // not sure, causes \"spurious ack\" in Linux\r\n        //this.kbd_buffer.push(0xFA);\r\n        //this.kbd_irq();\r\n\r\n        dbg_log(\"Keyboard command register = \" + h(this.command_register), LOG_PS2);\r\n    }\r\n    else if(this.read_output_register)\r\n    {\r\n        this.read_output_register = false;\r\n\r\n        this.mouse_buffer.clear();\r\n        this.mouse_buffer.push(write_byte);\r\n        this.mouse_irq();\r\n    }\r\n    else if(this.next_read_sample)\r\n    {\r\n        this.next_read_sample = false;\r\n        this.mouse_buffer.clear();\r\n        this.mouse_buffer.push(0xFA);\r\n\r\n        this.sample_rate = write_byte;\r\n\r\n        switch(this.mouse_detect_state)\r\n        {\r\n            case -1:\r\n                if(write_byte === 60)\r\n                {\r\n                    // Detect Windows NT and turn on workaround the bug\r\n                    // 200->100->80->60\r\n                    this.mouse_reset_workaround = true;\r\n                    this.mouse_detect_state = 0;\r\n                }\r\n                else\r\n                {\r\n                    this.mouse_reset_workaround = false;\r\n                    this.mouse_detect_state = (write_byte === 200) ? 1 : 0;\r\n                }\r\n                break;\r\n            case 0:\r\n                if(write_byte === 200) this.mouse_detect_state = 1;\r\n                break;\r\n            case 1:\r\n                if(write_byte === 100) this.mouse_detect_state = 2;\r\n                else if(write_byte === 200) this.mouse_detect_state = 3;\r\n                else this.mouse_detect_state = 0;\r\n                break;\r\n            case 2:\r\n                // Host sends sample rate 200->100->80 to activate Intellimouse wheel\r\n                if(write_byte === 80) this.mouse_id = 0x03;\r\n                this.mouse_detect_state = -1;\r\n                break;\r\n            case 3:\r\n                // Host sends sample rate 200->200->80 to activate Intellimouse 4th, 5th buttons\r\n                if(write_byte === 80) this.mouse_id = 0x04;\r\n                this.mouse_detect_state = -1;\r\n                break;\r\n        }\r\n\r\n        dbg_log(\"mouse sample rate: \" + h(write_byte) + \", mouse id: \" + h(this.mouse_id), LOG_PS2);\r\n\r\n        if(!this.sample_rate)\r\n        {\r\n            dbg_log(\"invalid sample rate, reset to 100\", LOG_PS2);\r\n            this.sample_rate = 100;\r\n        }\r\n\r\n        this.mouse_irq();\r\n    }\r\n    else if(this.next_read_resolution)\r\n    {\r\n        this.next_read_resolution = false;\r\n        this.mouse_buffer.clear();\r\n        this.mouse_buffer.push(0xFA);\r\n\r\n        if(write_byte > 3)\r\n        {\r\n            this.resolution = 4;\r\n            dbg_log(\"invalid resolution, resetting to 4\", LOG_PS2);\r\n        }\r\n        else\r\n        {\r\n            this.resolution = 1 << write_byte;\r\n            dbg_log(\"resolution: \" + this.resolution, LOG_PS2);\r\n        }\r\n        this.mouse_irq();\r\n    }\r\n    else if(this.next_read_led)\r\n    {\r\n        // nope\r\n        this.next_read_led = false;\r\n        this.kbd_buffer.push(0xFA);\r\n        this.kbd_irq();\r\n    }\r\n    else if(this.next_handle_scan_code_set)\r\n    {\r\n        this.next_handle_scan_code_set = false;\r\n\r\n        this.kbd_buffer.push(0xFA);\r\n        this.kbd_irq();\r\n\r\n        if(write_byte)\r\n        {\r\n            // set scan code set\r\n        }\r\n        else\r\n        {\r\n            this.kbd_buffer.push(2);\r\n        }\r\n    }\r\n    else if(this.next_read_rate)\r\n    {\r\n        // nope\r\n        this.next_read_rate = false;\r\n        this.kbd_buffer.push(0xFA);\r\n        this.kbd_irq();\r\n    }\r\n    else if(this.next_is_mouse_command)\r\n    {\r\n        this.next_is_mouse_command = false;\r\n        dbg_log(\"Port 60 data register write: \" + h(write_byte), LOG_PS2);\r\n\r\n        if(!this.have_mouse)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // send ack\r\n        this.kbd_buffer.clear();\r\n        this.mouse_buffer.clear();\r\n        this.mouse_buffer.push(0xFA);\r\n\r\n        switch(write_byte)\r\n        {\r\n        case 0xE6:\r\n            // set scaling to 1:1\r\n            dbg_log(\"Scaling 1:1\", LOG_PS2);\r\n            this.scaling2 = false;\r\n            break;\r\n        case 0xE7:\r\n            // set scaling to 2:1\r\n            dbg_log(\"Scaling 2:1\", LOG_PS2);\r\n            this.scaling2 = true;\r\n            break;\r\n        case 0xE8:\r\n            // set mouse resolution\r\n            this.next_read_resolution = true;\r\n            break;\r\n        case 0xE9:\r\n            // status request - send one packet\r\n            this.send_mouse_packet(0, 0);\r\n            break;\r\n        case 0xEB:\r\n            // request single packet\r\n            dbg_log(\"unimplemented request single packet\", LOG_PS2);\r\n            this.send_mouse_packet(0, 0);\r\n            break;\r\n        case 0xF2:\r\n            //  MouseID Byte\r\n            dbg_log(\"required id: \" + h(this.mouse_id), LOG_PS2);\r\n            this.mouse_buffer.push(this.mouse_id);\r\n\r\n            this.mouse_clicks = this.mouse_delta_x = this.mouse_delta_y = 0;\r\n            // this.send_mouse_packet(0, 0);\r\n            this.raise_irq();\r\n            break;\r\n        case 0xF3:\r\n            // sample rate\r\n            this.next_read_sample = true;\r\n            break;\r\n        case 0xF4:\r\n            // enable streaming\r\n            this.enable_mouse_stream = true;\r\n            this.use_mouse = true;\r\n            this.bus.send(\"mouse-enable\", true);\r\n\r\n            this.mouse_clicks = this.mouse_delta_x = this.mouse_delta_y = 0;\r\n            break;\r\n        case 0xF5:\r\n            // disable streaming\r\n            this.enable_mouse_stream = false;\r\n            break;\r\n        case 0xF6:\r\n            // set defaults\r\n            this.enable_mouse_stream = false;\r\n            this.sample_rate = 100;\r\n            this.scaling2 = false;\r\n            this.resolution = 4;\r\n            break;\r\n        case 0xFF:\r\n            // reset, send completion code\r\n            dbg_log(\"Mouse reset\", LOG_PS2);\r\n            this.mouse_buffer.push(0xAA);\r\n            this.mouse_buffer.push(0);\r\n\r\n            this.use_mouse = true;\r\n            this.bus.send(\"mouse-enable\", true);\r\n\r\n            this.enable_mouse_stream = false;\r\n            this.sample_rate = 100;\r\n            this.scaling2 = false;\r\n            this.resolution = 4;\r\n\r\n            if(!this.mouse_reset_workaround)\r\n            {\r\n                this.mouse_id = 0x00;\r\n            }\r\n\r\n            this.mouse_clicks = this.mouse_delta_x = this.mouse_delta_y = 0;\r\n            break;\r\n\r\n        default:\r\n            dbg_log(\"Unimplemented mouse command: \" + h(write_byte), LOG_PS2);\r\n        }\r\n\r\n        this.mouse_irq();\r\n    }\r\n    else if(this.read_controller_output_port)\r\n    {\r\n        this.read_controller_output_port = false;\r\n        this.controller_output_port = write_byte;\r\n        // If we ever want to implement A20 masking, here is where\r\n        // we should turn the masking off if the second bit is on\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"Port 60 data register write: \" + h(write_byte), LOG_PS2);\r\n\r\n        // send ack\r\n        this.mouse_buffer.clear();\r\n        this.kbd_buffer.clear();\r\n        this.kbd_buffer.push(0xFA);\r\n\r\n        switch(write_byte)\r\n        {\r\n        case 0xED:\r\n            this.next_read_led = true;\r\n            break;\r\n        case 0xF0:\r\n            // get/set scan code set\r\n            this.next_handle_scan_code_set = true;\r\n            break;\r\n        case 0xF2:\r\n            // identify\r\n            this.kbd_buffer.push(0xAB);\r\n            this.kbd_buffer.push(83);\r\n            break;\r\n        case 0xF3:\r\n            //  Set typematic rate and delay\r\n            this.next_read_rate = true;\r\n            break;\r\n        case 0xF4:\r\n            // enable scanning\r\n            dbg_log(\"kbd enable scanning\", LOG_PS2);\r\n            this.enable_keyboard_stream = true;\r\n            break;\r\n        case 0xF5:\r\n            // disable scanning\r\n            dbg_log(\"kbd disable scanning\", LOG_PS2);\r\n            this.enable_keyboard_stream = false;\r\n            break;\r\n        case 0xF6:\r\n            // reset defaults\r\n            //this.enable_keyboard_stream = false;\r\n            break;\r\n        case 0xFF:\r\n            this.kbd_buffer.clear();\r\n            this.kbd_buffer.push(0xFA);\r\n            this.kbd_buffer.push(0xAA);\r\n            this.kbd_buffer.push(0);\r\n            break;\r\n        default:\r\n            dbg_log(\"Unimplemented keyboard command: \" + h(write_byte), LOG_PS2);\r\n        }\r\n\r\n        this.kbd_irq();\r\n    }\r\n};\r\n\r\nPS2.prototype.port64_write = function(write_byte)\r\n{\r\n    dbg_log(\"port 64 write: \" + h(write_byte), LOG_PS2);\r\n\r\n    switch(write_byte)\r\n    {\r\n    case 0x20:\r\n        this.kbd_buffer.clear();\r\n        this.mouse_buffer.clear();\r\n        this.kbd_buffer.push(this.command_register);\r\n        this.kbd_irq();\r\n        break;\r\n    case 0x60:\r\n        this.read_command_register = true;\r\n        break;\r\n    case 0xD1:\r\n        this.read_controller_output_port = true;\r\n        break;\r\n    case 0xD3:\r\n        this.read_output_register = true;\r\n        break;\r\n    case 0xD4:\r\n        this.next_is_mouse_command = true;\r\n        break;\r\n    case 0xA7:\r\n        // Disable second port\r\n        dbg_log(\"Disable second port\", LOG_PS2);\r\n        this.command_register |= 0x20;\r\n        break;\r\n    case 0xA8:\r\n        // Enable second port\r\n        dbg_log(\"Enable second port\", LOG_PS2);\r\n        this.command_register &= ~0x20;\r\n        break;\r\n    case 0xA9:\r\n        // test second ps/2 port\r\n        this.kbd_buffer.clear();\r\n        this.mouse_buffer.clear();\r\n        this.kbd_buffer.push(0);\r\n        this.kbd_irq();\r\n        break;\r\n    case 0xAA:\r\n        this.kbd_buffer.clear();\r\n        this.mouse_buffer.clear();\r\n        this.kbd_buffer.push(0x55);\r\n        this.kbd_irq();\r\n        break;\r\n    case 0xAB:\r\n        // Test first PS/2 port\r\n        this.kbd_buffer.clear();\r\n        this.mouse_buffer.clear();\r\n        this.kbd_buffer.push(0);\r\n        this.kbd_irq();\r\n        break;\r\n    case 0xAD:\r\n        // Disable Keyboard\r\n        dbg_log(\"Disable Keyboard\", LOG_PS2);\r\n        this.command_register |= 0x10;\r\n        break;\r\n    case 0xAE:\r\n        // Enable Keyboard\r\n        dbg_log(\"Enable Keyboard\", LOG_PS2);\r\n        this.command_register &= ~0x10;\r\n        break;\r\n    case 0xFE:\r\n        dbg_log(\"CPU reboot via PS2\");\r\n        this.cpu.reboot_internal();\r\n        break;\r\n    default:\r\n        dbg_log(\"port 64: Unimplemented command byte: \" + h(write_byte), LOG_PS2);\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar PIC_LOG_VERBOSE = false;\r\n\r\n/**\r\n * Programmable Interrupt Controller\r\n * http://stanislavs.org/helppc/8259.html\r\n *\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {PIC=} master\r\n */\r\nfunction PIC(cpu, master)\r\n{\r\n    /**\r\n     * all irqs off\r\n     * @type {number}\r\n     */\r\n    this.irq_mask = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     *\r\n     * Bogus default value (both master and slave mapped to 0).\r\n     * Will be initialized by the BIOS\r\n     */\r\n    this.irq_map = 0;\r\n\r\n    /**\r\n     * in-service register\r\n     * Holds interrupts that are currently being serviced\r\n     * @type {number}\r\n     */\r\n    this.isr = 0;\r\n\r\n    /**\r\n     * interrupt request register\r\n     * Holds interrupts that have been requested\r\n     * @type {number}\r\n     */\r\n    this.irr = 0;\r\n\r\n    this.irq_value = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.requested_irq = -1;\r\n\r\n    this.master = master;\r\n    this.is_master = this.master === undefined;\r\n    this.slave = undefined;\r\n\r\n    this.name = this.is_master ? \"master\" : \"slave \";\r\n\r\n    this.expect_icw4 = false;\r\n    this.state = 0;\r\n    this.read_isr = 0;\r\n    this.auto_eoi = 1;\r\n    this.special_mask_mode = 0;\r\n\r\n    this.elcr = 0;\r\n\r\n    this.cpu = cpu;\r\n\r\n    // Checking for callable interrupts:\r\n    // (cpu changes interrupt flag) -> cpu.handle_irqs -> pic.check_irqs -> cpu.pic_call_irq\r\n    // (pic changes isr/irr) -> cpu.handle_irqs -> ...\r\n\r\n    // triggering irqs:\r\n    // (io device has irq) -> cpu.device_raise_irq -> pic.set_irq -> cpu.handle_irqs -> (see above)\r\n\r\n\r\n    if(this.is_master)\r\n    {\r\n        this.slave = new PIC(this.cpu, this);\r\n\r\n        this.check_irqs = function()\r\n        {\r\n            if(this.requested_irq >= 0)\r\n            {\r\n                PIC_LOG_VERBOSE && dbg_log(\"master> Already requested irq: \" + this.requested_irq, LOG_PIC);\r\n                this.cpu.handle_irqs();\r\n                return;\r\n            }\r\n\r\n            var enabled_irr = this.irr & this.irq_mask;\r\n\r\n            if(!enabled_irr)\r\n            {\r\n                if(PIC_LOG_VERBOSE)\r\n                {\r\n                    dbg_log(\"master> no unmasked irrs. irr=\" + h(this.irr, 2) +\r\n                            \" mask=\" + h(this.irq_mask & 0xff, 2) + \" isr=\" + h(this.isr, 2), LOG_PIC);\r\n                }\r\n                return;\r\n            }\r\n\r\n            var irq_mask = enabled_irr & -enabled_irr;\r\n            var special_mask = this.special_mask_mode ? this.irq_mask : -1;\r\n\r\n            if(this.isr && (this.isr & -this.isr & special_mask) <= irq_mask)\r\n            {\r\n                // wait for eoi of higher or same priority interrupt\r\n                dbg_log(\"master> higher prio: isr=\" + h(this.isr, 2) +\r\n                        \" mask=\" + h(this.irq_mask & 0xff, 2) + \" irq=\" + h(irq_mask, 2), LOG_PIC);\r\n                return;\r\n            }\r\n\r\n            dbg_assert(irq_mask !== 0);\r\n            var irq_number = v86util.int_log2_byte(irq_mask);\r\n            dbg_assert(irq_mask === (1 << irq_number));\r\n\r\n            PIC_LOG_VERBOSE && dbg_log(\"master> request irq \" + irq_number, LOG_PIC);\r\n\r\n            this.requested_irq = irq_number;\r\n            this.cpu.handle_irqs();\r\n        };\r\n\r\n        this.acknowledge_irq = function()\r\n        {\r\n            if(this.requested_irq === -1)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(this.irr === 0)\r\n            {\r\n                PIC_LOG_VERBOSE && dbg_log(\"master> spurious requested=\" + this.requested_irq, LOG_PIC);\r\n                this.requested_irq = -1;\r\n                this.cpu.pic_call_irq(this.irq_map | 7);\r\n                return;\r\n            }\r\n            dbg_assert(this.irr); // spurious\r\n            dbg_assert(this.requested_irq >= 0);\r\n\r\n            var irq_mask = 1 << this.requested_irq;\r\n\r\n            if((this.elcr & irq_mask) === 0) // not in level mode\r\n            {\r\n                this.irr &= ~irq_mask;\r\n            }\r\n\r\n            if(!this.auto_eoi)\r\n            {\r\n                this.isr |= irq_mask;\r\n            }\r\n\r\n            PIC_LOG_VERBOSE && dbg_log(\"master> acknowledge \" + this.requested_irq, LOG_PIC);\r\n            if(this.requested_irq === 2)\r\n            {\r\n                this.slave.acknowledge_irq();\r\n            }\r\n            else\r\n            {\r\n                this.cpu.pic_call_irq(this.irq_map | this.requested_irq);\r\n            }\r\n\r\n            this.requested_irq = -1;\r\n            this.check_irqs();\r\n        };\r\n    }\r\n    else\r\n    {\r\n        // is slave\r\n        this.check_irqs = function()\r\n        {\r\n            if(this.requested_irq >= 0)\r\n            {\r\n                PIC_LOG_VERBOSE && dbg_log(\"slave > Already requested irq: \" + this.requested_irq, LOG_PIC);\r\n                this.cpu.handle_irqs();\r\n                return;\r\n            }\r\n\r\n            var enabled_irr = this.irr & this.irq_mask;\r\n\r\n            if(!enabled_irr)\r\n            {\r\n                if(PIC_LOG_VERBOSE)\r\n                {\r\n                    dbg_log(\"slave > no unmasked irrs. irr=\" + h(this.irr, 2) +\r\n                            \" mask=\" + h(this.irq_mask & 0xff, 2) + \" isr=\" + h(this.isr, 2), LOG_PIC);\r\n                }\r\n                return;\r\n            }\r\n\r\n            var irq_mask = enabled_irr & -enabled_irr;\r\n            var special_mask = this.special_mask_mode ? this.irq_mask : -1;\r\n\r\n            if(this.isr && (this.isr & -this.isr & special_mask) <= irq_mask)\r\n            {\r\n                // wait for eoi of higher or same priority interrupt\r\n                PIC_LOG_VERBOSE && dbg_log(\"slave > higher prio: isr=\" + h(this.isr, 2) + \" irq=\" + h(irq_mask, 2), LOG_PIC);\r\n                return;\r\n            }\r\n\r\n            dbg_assert(irq_mask !== 0);\r\n            var irq_number = v86util.int_log2_byte(irq_mask);\r\n            dbg_assert(irq_mask === (1 << irq_number));\r\n\r\n            PIC_LOG_VERBOSE && dbg_log(\"slave > request irq \" + irq_number, LOG_PIC);\r\n            this.requested_irq = irq_number;\r\n            this.master.set_irq(2);\r\n        };\r\n\r\n        this.acknowledge_irq = function()\r\n        {\r\n            if(this.requested_irq === -1)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(this.irr === 0)\r\n            {\r\n                PIC_LOG_VERBOSE && dbg_log(\"slave > spurious requested=\" + this.requested_irq, LOG_PIC);\r\n                this.requested_irq = -1;\r\n                this.master.irq_value &= ~(1 << 2);\r\n                this.cpu.pic_call_irq(this.irq_map | 7);\r\n                return;\r\n            }\r\n\r\n            dbg_assert(this.irr); // spurious\r\n            dbg_assert(this.requested_irq >= 0);\r\n\r\n            var irq_mask = 1 << this.requested_irq;\r\n\r\n            if((this.elcr & irq_mask) === 0) // not in level mode\r\n            {\r\n                this.irr &= ~irq_mask;\r\n            }\r\n\r\n            if(!this.auto_eoi)\r\n            {\r\n                this.isr |= irq_mask;\r\n            }\r\n\r\n            this.master.irq_value &= ~(1 << 2);\r\n            PIC_LOG_VERBOSE && dbg_log(\"slave > acknowledge \" + this.requested_irq, LOG_PIC);\r\n            this.cpu.pic_call_irq(this.irq_map | this.requested_irq);\r\n\r\n            this.requested_irq = -1;\r\n            this.check_irqs();\r\n        };\r\n    }\r\n\r\n    this.dump = function()\r\n    {\r\n        dbg_log(\"mask: \" + h(this.irq_mask & 0xFF), LOG_PIC);\r\n        dbg_log(\"base: \" + h(this.irq_map), LOG_PIC);\r\n        dbg_log(\"requested: \" + h(this.irr), LOG_PIC);\r\n        dbg_log(\"serviced: \" + h(this.isr), LOG_PIC);\r\n\r\n        if(this.is_master)\r\n        {\r\n            this.slave.dump();\r\n        }\r\n    };\r\n\r\n    var io_base;\r\n    var iobase_high;\r\n    if(this.is_master)\r\n    {\r\n        io_base = 0x20;\r\n        iobase_high = 0x4D0;\r\n    }\r\n    else\r\n    {\r\n        io_base = 0xA0;\r\n        iobase_high = 0x4D1;\r\n    }\r\n\r\n    this.cpu.io.register_write(io_base, this, this.port20_write);\r\n    this.cpu.io.register_read(io_base, this, this.port20_read);\r\n\r\n    this.cpu.io.register_write(io_base | 1, this, this.port21_write);\r\n    this.cpu.io.register_read(io_base | 1, this, this.port21_read);\r\n\r\n    this.cpu.io.register_write(iobase_high, this, this.port4D0_write);\r\n    this.cpu.io.register_read(iobase_high, this, this.port4D0_read);\r\n\r\n\r\n    if(this.is_master)\r\n    {\r\n        this.set_irq = function(irq_number)\r\n        {\r\n            dbg_assert(irq_number >= 0 && irq_number < 16);\r\n\r\n            if(irq_number >= 8)\r\n            {\r\n                this.slave.set_irq(irq_number - 8);\r\n                return;\r\n            }\r\n\r\n            if(PIC_LOG_VERBOSE)\r\n            {\r\n                dbg_log(\"master> set irq \" + irq_number, LOG_PIC);\r\n            }\r\n\r\n            var irq_mask = 1 << irq_number;\r\n            if((this.irq_value & irq_mask) === 0)\r\n            {\r\n                this.irr |= irq_mask;\r\n                this.irq_value |= irq_mask;\r\n                this.check_irqs();\r\n            }\r\n        };\r\n\r\n        this.clear_irq = function(irq_number)\r\n        {\r\n            dbg_assert(irq_number >= 0 && irq_number < 16);\r\n            if(PIC_LOG_VERBOSE)\r\n            {\r\n                dbg_log(\"master> clear irq \" + irq_number, LOG_PIC);\r\n            }\r\n\r\n            if(irq_number >= 8)\r\n            {\r\n                this.slave.clear_irq(irq_number - 8);\r\n                return;\r\n            }\r\n\r\n            var irq_mask = 1 << irq_number;\r\n            if(this.irq_value & irq_mask)\r\n            {\r\n                this.irq_value &= ~irq_mask;\r\n                this.irr &= ~irq_mask;\r\n                this.check_irqs();\r\n            }\r\n        };\r\n    }\r\n    else\r\n    {\r\n        this.set_irq = function(irq_number)\r\n        {\r\n            dbg_assert(irq_number >= 0 && irq_number < 8);\r\n            if(PIC_LOG_VERBOSE)\r\n            {\r\n                dbg_log(\"slave > set irq \" + irq_number, LOG_PIC);\r\n            }\r\n\r\n            var irq_mask = 1 << irq_number;\r\n            if((this.irq_value & irq_mask) === 0)\r\n            {\r\n                this.irr |= irq_mask;\r\n                this.irq_value |= irq_mask;\r\n                this.check_irqs();\r\n            }\r\n        };\r\n\r\n        this.clear_irq = function(irq_number)\r\n        {\r\n            dbg_assert(irq_number >= 0 && irq_number < 8);\r\n            if(PIC_LOG_VERBOSE)\r\n            {\r\n                dbg_log(\"slave > clear irq \" + irq_number, LOG_PIC);\r\n            }\r\n\r\n            var irq_mask = 1 << irq_number;\r\n            if(this.irq_value & irq_mask)\r\n            {\r\n                this.irq_value &= ~irq_mask;\r\n                this.irr &= ~irq_mask;\r\n                this.check_irqs();\r\n            }\r\n        };\r\n    }\r\n\r\n    this.get_isr = function()\r\n    {\r\n        return this.isr;\r\n    };\r\n}\r\n\r\nPIC.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.irq_mask;\r\n    state[1] = this.irq_map;\r\n    state[2] = this.isr;\r\n    state[3] = this.irr;\r\n    state[4] = this.is_master;\r\n    state[5] = this.slave;\r\n    state[6] = this.expect_icw4;\r\n    state[7] = this.state;\r\n    state[8] = this.read_isr;\r\n    state[9] = this.auto_eoi;\r\n    state[10] = this.elcr;\r\n\r\n    return state;\r\n};\r\n\r\nPIC.prototype.set_state = function(state)\r\n{\r\n    this.irq_mask = state[0];\r\n    this.irq_map = state[1];\r\n    this.isr = state[2];\r\n    this.irr = state[3];\r\n    this.is_master = state[4];\r\n    this.slave = state[5];\r\n    this.expect_icw4 = state[6];\r\n    this.state = state[7];\r\n    this.read_isr = state[8];\r\n    this.auto_eoi = state[9];\r\n    this.elcr = state[10];\r\n};\r\n\r\nPIC.prototype.port20_write = function(data_byte)\r\n{\r\n    //dbg_log(\"20 write: \" + h(data_byte), LOG_PIC);\r\n    if(data_byte & 0x10) // xxxx1xxx\r\n    {\r\n        // icw1\r\n        dbg_log(\"icw1 = \" + h(data_byte), LOG_PIC);\r\n        this.isr = 0;\r\n        this.irr = 0;\r\n        this.irq_mask = 0;\r\n        this.irq_value = 0;\r\n        this.auto_eoi = 1;\r\n        this.requested_irq = -1;\r\n\r\n        this.expect_icw4 = data_byte & 1;\r\n        this.state = 1;\r\n    }\r\n    else if(data_byte & 8) // xxx01xxx\r\n    {\r\n        // ocw3\r\n        dbg_log(\"ocw3: \" + h(data_byte), LOG_PIC);\r\n        if(data_byte & 2)\r\n        {\r\n            this.read_isr = data_byte & 1;\r\n        }\r\n        if(data_byte & 4)\r\n        {\r\n            dbg_assert(false, \"unimplemented: polling\", LOG_PIC);\r\n        }\r\n        if(data_byte & 0x40)\r\n        {\r\n            this.special_mask_mode = (data_byte & 0x20) === 0x20;\r\n            dbg_log(\"special mask mode: \" + this.special_mask_mode, LOG_PIC);\r\n        }\r\n    }\r\n    else // xxx00xxx\r\n    {\r\n        // ocw2\r\n        // end of interrupt\r\n        dbg_log(\"eoi: \" + h(data_byte) + \" (\" + this.name + \")\", LOG_PIC);\r\n\r\n        var eoi_type = data_byte >> 5;\r\n\r\n        if(eoi_type === 1)\r\n        {\r\n            // non-specific eoi\r\n            this.isr &= this.isr - 1;\r\n            dbg_log(\"new isr: \" + h(this.isr, 2), LOG_PIC);\r\n        }\r\n        else if(eoi_type === 3)\r\n        {\r\n            // specific eoi\r\n            this.isr &= ~(1 << (data_byte & 7));\r\n        }\r\n        else if((data_byte & 0xC8) === 0xC0)\r\n        {\r\n            // os2 v4\r\n            let priority = data_byte & 7;\r\n            dbg_log(\"lowest priority: \" + h(priority), LOG_PIC);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unknown eoi: \" + h(data_byte), LOG_PIC);\r\n            dbg_assert(false);\r\n            this.isr &= this.isr - 1;\r\n        }\r\n\r\n        this.check_irqs();\r\n    }\r\n};\r\n\r\nPIC.prototype.port20_read = function()\r\n{\r\n    if(this.read_isr)\r\n    {\r\n        dbg_log(\"read port 20h (isr): \" + h(this.isr), LOG_PIC);\r\n        return this.isr;\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"read port 20h (irr): \" + h(this.irr), LOG_PIC);\r\n        return this.irr;\r\n    }\r\n};\r\n\r\nPIC.prototype.port21_write = function(data_byte)\r\n{\r\n    //dbg_log(\"21 write: \" + h(data_byte), LOG_PIC);\r\n    if(this.state === 0)\r\n    {\r\n        if(this.expect_icw4)\r\n        {\r\n            // icw4\r\n            this.expect_icw4 = false;\r\n            this.auto_eoi = data_byte & 2;\r\n            dbg_log(\"icw4: \" + h(data_byte) + \" autoeoi=\" + this.auto_eoi, LOG_PIC);\r\n\r\n            if((data_byte & 1) === 0)\r\n            {\r\n                dbg_assert(false, \"unimplemented: not 8086 mode\", LOG_PIC);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // ocw1\r\n            this.irq_mask = ~data_byte;\r\n\r\n            if(PIC_LOG_VERBOSE)\r\n            {\r\n                dbg_log(\"interrupt mask: \" + (this.irq_mask & 0xFF).toString(2) +\r\n                        \" (\" + this.name + \")\", LOG_PIC);\r\n            }\r\n\r\n            this.check_irqs();\r\n        }\r\n    }\r\n    else if(this.state === 1)\r\n    {\r\n        // icw2\r\n        this.irq_map = data_byte;\r\n        dbg_log(\"interrupts are mapped to \" + h(this.irq_map) +\r\n                \" (\" + this.name + \")\", LOG_PIC);\r\n        this.state++;\r\n    }\r\n    else if(this.state === 2)\r\n    {\r\n        // icw3\r\n        this.state = 0;\r\n        dbg_log(\"icw3: \" + h(data_byte), LOG_PIC);\r\n    }\r\n};\r\n\r\nPIC.prototype.port21_read = function()\r\n{\r\n    dbg_log(\"21h read \" + h(~this.irq_mask & 0xff), LOG_PIC);\r\n    return ~this.irq_mask & 0xFF;\r\n};\r\n\r\nPIC.prototype.port4D0_read = function()\r\n{\r\n    dbg_log(\"elcr read: \" + h(this.elcr, 2), LOG_PIC);\r\n    return this.elcr;\r\n};\r\n\r\nPIC.prototype.port4D0_write = function(value)\r\n{\r\n    dbg_log(\"elcr write: \" + h(value, 2), LOG_PIC);\r\n    // set by seabios to 00 0C (only set for pci interrupts)\r\n    this.elcr = value;\r\n};\r\n\r\n","\"use strict\";\r\n\r\n/** @const */ var CMOS_RTC_SECONDS = 0x00;\r\n/** @const */ var CMOS_RTC_SECONDS_ALARM = 0x01;\r\n/** @const */ var CMOS_RTC_MINUTES = 0x02;\r\n/** @const */ var CMOS_RTC_MINUTES_ALARM = 0x03;\r\n/** @const */ var CMOS_RTC_HOURS = 0x04;\r\n/** @const */ var CMOS_RTC_HOURS_ALARM = 0x05;\r\n/** @const */ var CMOS_RTC_DAY_WEEK = 0x06;\r\n/** @const */ var CMOS_RTC_DAY_MONTH = 0x07;\r\n/** @const */ var CMOS_RTC_MONTH = 0x08;\r\n/** @const */ var CMOS_RTC_YEAR = 0x09;\r\n/** @const */ var CMOS_STATUS_A = 0x0a;\r\n/** @const */ var CMOS_STATUS_B = 0x0b;\r\n/** @const */ var CMOS_STATUS_C = 0x0c;\r\n/** @const */ var CMOS_STATUS_D = 0x0d;\r\n/** @const */ var CMOS_RESET_CODE = 0x0f;\r\n\r\n/** @const */ var CMOS_FLOPPY_DRIVE_TYPE = 0x10;\r\n/** @const */ var CMOS_DISK_DATA = 0x12;\r\n/** @const */ var CMOS_EQUIPMENT_INFO = 0x14;\r\n/** @const */ var CMOS_MEM_BASE_LOW = 0x15;\r\n/** @const */ var CMOS_MEM_BASE_HIGH = 0x16;\r\n/** @const */ var CMOS_MEM_OLD_EXT_LOW = 0x17;\r\n/** @const */ var CMOS_MEM_OLD_EXT_HIGH = 0x18;\r\n/** @const */ var CMOS_DISK_DRIVE1_TYPE = 0x19;\r\n/** @const */ var CMOS_DISK_DRIVE2_TYPE = 0x1a;\r\n/** @const */ var CMOS_DISK_DRIVE1_CYL = 0x1b;\r\n/** @const */ var CMOS_DISK_DRIVE2_CYL = 0x24;\r\n/** @const */ var CMOS_MEM_EXTMEM_LOW = 0x30;\r\n/** @const */ var CMOS_MEM_EXTMEM_HIGH = 0x31;\r\n/** @const */ var CMOS_CENTURY = 0x32;\r\n/** @const */ var CMOS_MEM_EXTMEM2_LOW = 0x34;\r\n/** @const */ var CMOS_MEM_EXTMEM2_HIGH = 0x35;\r\n/** @const */ var CMOS_CENTURY_PS2 = 0x37;\r\n/** @const */ var CMOS_BIOS_BOOTFLAG1 = 0x38;\r\n/** @const */ var CMOS_BIOS_DISKTRANSFLAG = 0x39;\r\n/** @const */ var CMOS_BIOS_BOOTFLAG2 = 0x3d;\r\n/** @const */ var CMOS_MEM_HIGHMEM_LOW = 0x5b;\r\n/** @const */ var CMOS_MEM_HIGHMEM_MID = 0x5c;\r\n/** @const */ var CMOS_MEM_HIGHMEM_HIGH = 0x5d;\r\n/** @const */ var CMOS_BIOS_SMP_COUNT = 0x5f;\r\n\r\n\r\n/**\r\n * RTC (real time clock) and CMOS\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction RTC(cpu)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.cmos_index = 0;\r\n    this.cmos_data = new Uint8Array(128);\r\n\r\n    // used for cmos entries\r\n    this.rtc_time = Date.now();\r\n    this.last_update = this.rtc_time;\r\n\r\n    // used for periodic interrupt\r\n    this.next_interrupt = 0;\r\n\r\n    // next alarm interrupt\r\n    this.next_interrupt_alarm = 0;\r\n\r\n    this.periodic_interrupt = false;\r\n\r\n    // corresponds to default value for cmos_a\r\n    this.periodic_interrupt_time = 1000 / 1024;\r\n\r\n    this.cmos_a = 0x26;\r\n    this.cmos_b = 2;\r\n    this.cmos_c = 0;\r\n\r\n    this.nmi_disabled = 0;\r\n\r\n    cpu.io.register_write(0x70, this, function(out_byte)\r\n    {\r\n        this.cmos_index = out_byte & 0x7F;\r\n        this.nmi_disabled = out_byte >> 7;\r\n    });\r\n    cpu.io.register_read(0x70, this, function()\r\n\t{\r\n\t\treturn 0xFF;\r\n\t});\r\n\r\n    cpu.io.register_write(0x71, this, this.cmos_port_write);\r\n    cpu.io.register_read(0x71, this, this.cmos_port_read);\r\n}\r\n\r\nRTC.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.cmos_index;\r\n    state[1] = this.cmos_data;\r\n    state[2] = this.rtc_time;\r\n    state[3] = this.last_update;\r\n    state[4] = this.next_interrupt;\r\n    state[5] = this.next_interrupt_alarm;\r\n    state[6] = this.periodic_interrupt;\r\n    state[7] = this.periodic_interrupt_time;\r\n    state[8] = this.cmos_a;\r\n    state[9] = this.cmos_b;\r\n    state[10] = this.cmos_c;\r\n    state[11] = this.nmi_disabled;\r\n\r\n    return state;\r\n};\r\n\r\nRTC.prototype.set_state = function(state)\r\n{\r\n    this.cmos_index = state[0];\r\n    this.cmos_data = state[1];\r\n    this.rtc_time = state[2];\r\n    this.last_update = state[3];\r\n    this.next_interrupt = state[4];\r\n    this.next_interrupt_alarm = state[5];\r\n    this.periodic_interrupt = state[6];\r\n    this.periodic_interrupt_time = state[7];\r\n    this.cmos_a = state[8];\r\n    this.cmos_b = state[9];\r\n    this.cmos_c = state[10];\r\n    this.nmi_disabled = state[11];\r\n};\r\n\r\nRTC.prototype.timer = function(time, legacy_mode)\r\n{\r\n    time = Date.now(); // XXX\r\n    this.rtc_time += time - this.last_update;\r\n    this.last_update = time;\r\n\r\n    if(this.periodic_interrupt && this.next_interrupt < time)\r\n    {\r\n        this.cpu.device_raise_irq(8);\r\n        this.cmos_c |= 1 << 6 | 1 << 7;\r\n\r\n        this.next_interrupt += this.periodic_interrupt_time *\r\n                Math.ceil((time - this.next_interrupt) / this.periodic_interrupt_time);\r\n    }\r\n    else if(this.next_interrupt_alarm && this.next_interrupt_alarm < time)\r\n    {\r\n        this.cpu.device_raise_irq(8);\r\n        this.cmos_c |= 1 << 5 | 1 << 7;\r\n\r\n        this.next_interrupt_alarm = 0;\r\n    }\r\n\r\n    let t = 100;\r\n\r\n    if(this.periodic_interrupt && this.next_interrupt)\r\n    {\r\n        t = Math.min(t, Math.max(0, this.next_interrupt - time));\r\n    }\r\n    if(this.next_interrupt_alarm)\r\n    {\r\n        t = Math.min(t, Math.max(0, this.next_interrupt_alarm - time));\r\n    }\r\n\r\n    return t;\r\n};\r\n\r\nRTC.prototype.bcd_pack = function(n)\r\n{\r\n    var i = 0,\r\n        result = 0,\r\n        digit;\r\n\r\n    while(n)\r\n    {\r\n        digit = n % 10;\r\n\r\n        result |= digit << (4 * i);\r\n        i++;\r\n        n = (n - digit) / 10;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nRTC.prototype.bcd_unpack = function(n)\r\n{\r\n    const low = n & 0xF;\r\n    const high = n >> 4 & 0xF;\r\n\r\n    dbg_assert(n < 0x100);\r\n    dbg_assert(low < 10);\r\n    dbg_assert(high < 10);\r\n\r\n    return low + 10 * high;\r\n};\r\n\r\nRTC.prototype.encode_time = function(t)\r\n{\r\n    if(this.cmos_b & 4)\r\n    {\r\n        // binary mode\r\n        return t;\r\n    }\r\n    else\r\n    {\r\n        return this.bcd_pack(t);\r\n    }\r\n};\r\n\r\nRTC.prototype.decode_time = function(t)\r\n{\r\n    if(this.cmos_b & 4)\r\n    {\r\n        // binary mode\r\n        return t;\r\n    }\r\n    else\r\n    {\r\n        return this.bcd_unpack(t);\r\n    }\r\n};\r\n\r\n// TODO\r\n// - interrupt on update\r\n// - countdown\r\n// - letting bios/os set values\r\n// (none of these are used by seabios or the OSes we're\r\n// currently testing)\r\nRTC.prototype.cmos_port_read = function()\r\n{\r\n    var index = this.cmos_index;\r\n\r\n    //this.cmos_index = 0xD;\r\n\r\n    switch(index)\r\n    {\r\n        case CMOS_RTC_SECONDS:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCSeconds());\r\n        case CMOS_RTC_MINUTES:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCMinutes());\r\n        case CMOS_RTC_HOURS:\r\n            // TODO: 12 hour mode\r\n            return this.encode_time(new Date(this.rtc_time).getUTCHours());\r\n        case CMOS_RTC_DAY_MONTH:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCDate());\r\n        case CMOS_RTC_MONTH:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCMonth() + 1);\r\n        case CMOS_RTC_YEAR:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCFullYear() % 100);\r\n\r\n        case CMOS_STATUS_A:\r\n            return this.cmos_a;\r\n        case CMOS_STATUS_B:\r\n            //dbg_log(\"cmos read from index \" + h(index));\r\n            return this.cmos_b;\r\n\r\n        case CMOS_STATUS_C:\r\n            // It is important to know that upon a IRQ 8, Status Register C\r\n            // will contain a bitmask telling which interrupt happened.\r\n            // What is important is that if register C is not read after an\r\n            // IRQ 8, then the interrupt will not happen again.\r\n            this.cpu.device_lower_irq(8);\r\n\r\n            dbg_log(\"cmos reg C read\", LOG_RTC);\r\n            // Missing IRQF flag\r\n            //return cmos_b & 0x70;\r\n            var c = this.cmos_c;\r\n\r\n            this.cmos_c &= ~0xF0;\r\n\r\n            return c;\r\n\r\n        case CMOS_STATUS_D:\r\n            return 0;\r\n\r\n        case CMOS_CENTURY:\r\n            return this.encode_time(new Date(this.rtc_time).getUTCFullYear() / 100 | 0);\r\n\r\n        default:\r\n            dbg_log(\"cmos read from index \" + h(index), LOG_RTC);\r\n            return this.cmos_data[this.cmos_index];\r\n    }\r\n};\r\n\r\nRTC.prototype.cmos_port_write = function(data_byte)\r\n{\r\n    switch(this.cmos_index)\r\n    {\r\n        case 0xA:\r\n            this.cmos_a = data_byte & 0x7F;\r\n            this.periodic_interrupt_time = 1000 / (32768 >> (this.cmos_a & 0xF) - 1);\r\n\r\n            dbg_log(\"Periodic interrupt, a=\" + h(this.cmos_a, 2) + \" t=\" + this.periodic_interrupt_time , LOG_RTC);\r\n            break;\r\n        case 0xB:\r\n            this.cmos_b = data_byte;\r\n            if(this.cmos_b & 0x40)\r\n            {\r\n                this.next_interrupt = Date.now();\r\n            }\r\n\r\n            if(this.cmos_b & 0x20)\r\n            {\r\n                const now = new Date();\r\n\r\n                const seconds = this.decode_time(this.cmos_data[CMOS_RTC_SECONDS_ALARM]);\r\n                const minutes = this.decode_time(this.cmos_data[CMOS_RTC_MINUTES_ALARM]);\r\n                const hours = this.decode_time(this.cmos_data[CMOS_RTC_HOURS_ALARM]);\r\n\r\n                const alarm_date = new Date(Date.UTC(\r\n                    now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(),\r\n                    hours, minutes, seconds\r\n                ));\r\n\r\n                const ms_from_now = alarm_date - now;\r\n                dbg_log(\"RTC alarm scheduled for \" + alarm_date +\r\n                        \" hh:mm:ss=\" + hours + \":\" + minutes + \":\" + seconds +\r\n                        \" ms_from_now=\" + ms_from_now, LOG_RTC);\r\n\r\n                this.next_interrupt_alarm = +alarm_date;\r\n            }\r\n\r\n            if(this.cmos_b & 0x10) dbg_log(\"Unimplemented: updated interrupt\", LOG_RTC);\r\n\r\n            dbg_log(\"cmos b=\" + h(this.cmos_b, 2), LOG_RTC);\r\n            break;\r\n\r\n        case CMOS_RTC_SECONDS_ALARM:\r\n        case CMOS_RTC_MINUTES_ALARM:\r\n        case CMOS_RTC_HOURS_ALARM:\r\n            this.cmos_write(this.cmos_index, data_byte);\r\n            break;\r\n\r\n        default:\r\n            dbg_log(\"cmos write index \" + h(this.cmos_index) + \": \" + h(data_byte), LOG_RTC);\r\n    }\r\n\r\n    this.periodic_interrupt = (this.cmos_b & 0x40) === 0x40 && (this.cmos_a & 0xF) > 0;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n */\r\nRTC.prototype.cmos_read = function(index)\r\n{\r\n    dbg_assert(index < 128);\r\n    return this.cmos_data[index];\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {number} value\r\n */\r\nRTC.prototype.cmos_write = function(index, value)\r\n{\r\n    dbg_log(\"cmos \" + h(index) + \" <- \" + h(value), LOG_RTC);\r\n    dbg_assert(index < 128);\r\n    this.cmos_data[index] = value;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {number} value\r\n */\r\nRTC.prototype.cmos_write_lowhi = function(index, value)\r\n{\r\n    if (value > 0xFFFF)\r\n        value = 0xFFFF;\r\n    this.cmos_write(index, value & 0xFF);\r\n    this.cmos_write(index + 1, value >> 8);\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {number} value\r\n */\r\nRTC.prototype.cmos_write_hilow = function(index, value)\r\n{\r\n    if (value > 0xFFFF)\r\n        value = 0xFFFF;\r\n    this.cmos_write(index, value >> 8);\r\n    this.cmos_write(index + 1, value & 0xFF);\r\n};\r\n","\"use strict\";\r\n\r\n/*\r\n * Serial ports\r\n * http://wiki.osdev.org/UART\r\n * https://github.com/s-macke/jor1k/blob/master/js/worker/dev/uart.js\r\n * https://www.freebsd.org/doc/en/articles/serial-uart/\r\n */\r\n\r\n/** @const */\r\nvar DLAB = 0x80;\r\n\r\n\r\n/** @const */ var UART_IER_MSI  = 0x08; /* Modem Status Changed int. */\r\n/** @const */ var UART_IER_THRI = 0x02; /* Enable Transmitter holding register int. */\r\n/** @const */ var UART_IER_RDI = 0x01; /* Enable receiver data interrupt */\r\n\r\n/** @const */var UART_IIR_MSI = 0x00; /* Modem status interrupt (Low priority) */\r\n/** @const */var UART_IIR_NO_INT = 0x01;\r\n/** @const */var UART_IIR_THRI = 0x02; /* Transmitter holding register empty */\r\n/** @const */var UART_IIR_RDI = 0x04; /* Receiver data interrupt */\r\n/** @const */var UART_IIR_RLSI = 0x06; /* Receiver line status interrupt (High p.) */\r\n/** @const */var UART_IIR_CTI = 0x0c; /* Character timeout */\r\n\r\n/** @const */ var UART_LSR_DATA_READY        = 0x1;  // data available\r\n/** @const */ var UART_LSR_TX_EMPTY        = 0x20; // TX (THR) buffer is empty\r\n/** @const */ var UART_LSR_TRANSMITTER_EMPTY = 0x40; // TX empty and line is idle\r\n\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {number} port\r\n * @param {BusConnector} bus\r\n */\r\nfunction UART(cpu, port, bus)\r\n{\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.ints = 1 << UART_IIR_THRI;\r\n\r\n    this.baud_rate = 0;\r\n\r\n    this.line_control = 0;\r\n\r\n    // line status register\r\n    this.lsr = UART_LSR_TRANSMITTER_EMPTY | UART_LSR_TX_EMPTY;\r\n\r\n    this.fifo_control = 0;\r\n\r\n    // interrupts enable\r\n    this.ier = 0;\r\n\r\n    // interrupt identification register\r\n    this.iir = UART_IIR_NO_INT;\r\n\r\n    this.modem_control = 0;\r\n    this.modem_status = 0;\r\n\r\n    this.scratch_register = 0;\r\n\r\n    this.irq = 0;\r\n\r\n    this.input = new ByteQueue(4096);\r\n\r\n    this.current_line = [];\r\n\r\n    switch(port)\r\n    {\r\n        case 0x3F8:\r\n            this.com = 0;\r\n            this.irq = 4;\r\n            break;\r\n        case 0x2F8:\r\n            this.com = 1;\r\n            this.irq = 3;\r\n            break;\r\n        case 0x3E8:\r\n            this.com = 2;\r\n            this.irq = 4;\r\n            break;\r\n        case 0x2E8:\r\n            this.com = 3;\r\n            this.irq = 3;\r\n            break;\r\n        default:\r\n            dbg_log(\"Invalid serial port: \" + h(port), LOG_SERIAL);\r\n            this.com = 0;\r\n            this.irq = 4;\r\n    }\r\n\r\n    this.bus.register(\"serial\" + this.com + \"-input\", function(data)\r\n    {\r\n        this.data_received(data);\r\n    }, this);\r\n\r\n    var io = cpu.io;\r\n\r\n    io.register_write(port, this, function(out_byte)\r\n    {\r\n        this.write_data(out_byte);\r\n    }, function(out_word)\r\n    {\r\n        this.write_data(out_word & 0xFF);\r\n        this.write_data(out_word >> 8);\r\n    });\r\n\r\n    io.register_write(port | 1, this, function(out_byte)\r\n    {\r\n        if(this.line_control & DLAB)\r\n        {\r\n            this.baud_rate = this.baud_rate & 0xFF | out_byte << 8;\r\n            dbg_log(\"baud rate: \" + h(this.baud_rate), LOG_SERIAL);\r\n        }\r\n        else\r\n        {\r\n            this.ier = out_byte & 0xF;\r\n            dbg_log(\"interrupt enable: \" + h(out_byte), LOG_SERIAL);\r\n            this.CheckInterrupt();\r\n        }\r\n    });\r\n\r\n    io.register_read(port, this, function()\r\n    {\r\n        if(this.line_control & DLAB)\r\n        {\r\n            return this.baud_rate & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            var data = this.input.shift();\r\n\r\n            if(data === -1)\r\n            {\r\n                dbg_log(\"Read input empty\", LOG_SERIAL);\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"Read input: \" + h(data), LOG_SERIAL);\r\n            }\r\n\r\n            if(this.input.length === 0)\r\n            {\r\n                this.lsr &= ~UART_LSR_DATA_READY;\r\n                this.ClearInterrupt(UART_IIR_CTI);\r\n            }\r\n\r\n            return data;\r\n        }\r\n    });\r\n\r\n    io.register_read(port | 1, this, function()\r\n    {\r\n        if(this.line_control & DLAB)\r\n        {\r\n            return this.baud_rate >> 8;\r\n        }\r\n        else\r\n        {\r\n            return this.ier & 0xF;\r\n        }\r\n    });\r\n\r\n    io.register_read(port | 2, this, function()\r\n    {\r\n        var ret = this.iir & 0xF | 0xC0;\r\n        dbg_log(\"read interrupt identification: \" + h(this.iir), LOG_SERIAL);\r\n\r\n        if (this.iir == UART_IIR_THRI) {\r\n            this.ClearInterrupt(UART_IIR_THRI);\r\n        }\r\n\r\n        return ret;\r\n    });\r\n    io.register_write(port | 2, this, function(out_byte)\r\n    {\r\n        dbg_log(\"fifo control: \" + h(out_byte), LOG_SERIAL);\r\n        this.fifo_control = out_byte;\r\n    });\r\n\r\n    io.register_read(port | 3, this, function()\r\n    {\r\n        dbg_log(\"read line control: \" + h(this.line_control), LOG_SERIAL);\r\n        return this.line_control;\r\n    });\r\n    io.register_write(port | 3, this, function(out_byte)\r\n    {\r\n        dbg_log(\"line control: \" + h(out_byte), LOG_SERIAL);\r\n        this.line_control = out_byte;\r\n    });\r\n\r\n\r\n    io.register_read(port | 4, this, function()\r\n    {\r\n        return this.modem_control;\r\n    });\r\n    io.register_write(port | 4, this, function(out_byte)\r\n    {\r\n        dbg_log(\"modem control: \" + h(out_byte), LOG_SERIAL);\r\n        this.modem_control = out_byte;\r\n    });\r\n\r\n    io.register_read(port | 5, this, function()\r\n    {\r\n        dbg_log(\"read line status: \" + h(this.lsr), LOG_SERIAL);\r\n        return this.lsr;\r\n    });\r\n    io.register_write(port | 5, this, function(out_byte)\r\n    {\r\n        dbg_log(\"Factory test write\", LOG_SERIAL);\r\n    });\r\n\r\n    io.register_read(port | 6, this, function()\r\n    {\r\n        dbg_log(\"read modem status: \" + h(this.modem_status), LOG_SERIAL);\r\n        return this.modem_status;\r\n    });\r\n    io.register_write(port | 6, this, function(out_byte)\r\n    {\r\n        dbg_log(\"Unkown register write (base+6)\", LOG_SERIAL);\r\n    });\r\n\r\n    io.register_read(port | 7, this, function()\r\n    {\r\n        return this.scratch_register;\r\n    });\r\n    io.register_write(port | 7, this, function(out_byte)\r\n    {\r\n        this.scratch_register = out_byte;\r\n    });\r\n}\r\n\r\nUART.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.ints;\r\n    state[1] = this.baud_rate;\r\n    state[2] = this.line_control;\r\n    state[3] = this.lsr;\r\n    state[4] = this.fifo_control;\r\n    state[5] = this.ier;\r\n    state[6] = this.iir;\r\n    state[7] = this.modem_control;\r\n    state[8] = this.modem_status;\r\n    state[9] = this.scratch_register;\r\n    state[10] = this.irq;\r\n\r\n    return state;\r\n};\r\n\r\nUART.prototype.set_state = function(state)\r\n{\r\n    this.ints = state[0];\r\n    this.baud_rate = state[1];\r\n    this.line_control = state[2];\r\n    this.lsr = state[3];\r\n    this.fifo_control = state[4];\r\n    this.ier = state[5];\r\n    this.iir = state[6];\r\n    this.modem_control = state[7];\r\n    this.modem_status = state[8];\r\n    this.scratch_register = state[9];\r\n    this.irq = state[10];\r\n};\r\n\r\nUART.prototype.CheckInterrupt = function() {\r\n    if ((this.ints & (1 << UART_IIR_CTI))  && (this.ier & UART_IER_RDI)) {\r\n        this.iir = UART_IIR_CTI;\r\n        this.cpu.device_raise_irq(this.irq);\r\n    } else\r\n    if ((this.ints & (1 << UART_IIR_THRI)) && (this.ier & UART_IER_THRI)) {\r\n        this.iir = UART_IIR_THRI;\r\n        this.cpu.device_raise_irq(this.irq);\r\n    } else\r\n    if ((this.ints & (1 << UART_IIR_MSI))  && (this.ier & UART_IER_MSI)) {\r\n        this.iir = UART_IIR_MSI;\r\n        this.cpu.device_raise_irq(this.irq);\r\n    } else {\r\n        this.iir = UART_IIR_NO_INT;\r\n        this.cpu.device_lower_irq(this.irq);\r\n    }\r\n};\r\n\r\nUART.prototype.ThrowInterrupt = function(line) {\r\n    this.ints |= (1 << line);\r\n    this.CheckInterrupt();\r\n};\r\n\r\nUART.prototype.ClearInterrupt = function(line) {\r\n    this.ints &= ~(1 << line);\r\n    this.CheckInterrupt();\r\n};\r\n\r\n/**\r\n * @param {number} data\r\n */\r\nUART.prototype.data_received = function(data)\r\n{\r\n    dbg_log(\"input: \" + h(data), LOG_SERIAL);\r\n    this.input.push(data);\r\n\r\n    this.lsr |= UART_LSR_DATA_READY;\r\n    this.ThrowInterrupt(UART_IIR_CTI);\r\n};\r\n\r\nUART.prototype.write_data = function(out_byte)\r\n{\r\n    if(this.line_control & DLAB)\r\n    {\r\n        this.baud_rate = this.baud_rate & ~0xFF | out_byte;\r\n        return;\r\n    }\r\n\r\n    dbg_log(\"data: \" + h(out_byte), LOG_SERIAL);\r\n\r\n    this.ThrowInterrupt(UART_IIR_THRI);\r\n\r\n    this.bus.send(\"serial\" + this.com + \"-output-byte\", out_byte);\r\n\r\n    if(out_byte === 0xFF)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var char = String.fromCharCode(out_byte);\r\n\r\n    this.bus.send(\"serial\" + this.com + \"-output-char\", char);\r\n\r\n    this.current_line.push(out_byte);\r\n\r\n    if(char === \"\\n\")\r\n    {\r\n        dbg_log(\"SERIAL: \" + String.fromCharCode.apply(\"\", this.current_line).trimRight());\r\n        this.bus.send(\"serial\" + this.com + \"-output-line\", String.fromCharCode.apply(\"\", this.current_line));\r\n        this.current_line = [];\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n\r\nvar HPET_ADDR = 0xFED00000,\r\n    HPET_PERIOD = 0x05F5E100, // in nano seconds\r\n    HPET_FREQ_MS = 1e12 / HPET_PERIOD, // in kHZ\r\n    HPET_SUPPORT_64 = 0,\r\n    HPET_COUNTER_CONFIG = 1 << 4 | HPET_SUPPORT_64 << 5,\r\n    HPET_COUNTER_CONFIG_MASK = 1 << 4 | 1 << 5 | 1 << 15,\r\n    HPET_NUM_COUNTERS = 4;\r\n\r\n/**\r\n * HPET - High Precision Event Timer\r\n * http://wiki.osdev.org/HPET\r\n *\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction HPET(cpu)\r\n{\r\n    var me = this,\r\n\r\n        hpet_enabled = false,\r\n        hpet_start = Date.now(),\r\n\r\n        hpet_offset_low = 0,\r\n        hpet_offset_high = 0,\r\n\r\n        counter_read_acc_next = false,\r\n        interrupt_status = 0,\r\n\r\n        counter_config = new Int32Array(HPET_NUM_COUNTERS << 1),\r\n        counter_comparator = new Int32Array(HPET_NUM_COUNTERS << 1),\r\n        counter_accumulator = new Int32Array(HPET_NUM_COUNTERS << 1);\r\n\r\n    //var counter_last_irq = new Int32Array(HPET_NUM_COUNTERS << 1);\r\n\r\n\r\n    var last_check = 0;\r\n\r\n\r\n    this.legacy_mode = false;\r\n\r\n    this.timer = function(now)\r\n    {\r\n        if(!hpet_enabled)\r\n        {\r\n            return 100;\r\n        }\r\n\r\n        var\r\n            counter_value = get_counter() >>> 0,\r\n            config,\r\n            //last_irq,\r\n            comparator,\r\n            do_irq;\r\n\r\n        for(var i = 0; i < HPET_NUM_COUNTERS; i++)\r\n        {\r\n            config = counter_config[i << 1];\r\n            //last_irq = counter_last_irq[i << 1] >>> 0;\r\n            comparator = counter_comparator[i << 1] >>> 0;\r\n\r\n            if(last_check <= counter_value ?\r\n                    comparator > last_check && comparator <= counter_value :\r\n                    comparator > last_check || comparator <= counter_value\r\n            ) {\r\n                do_irq = config & 4;\r\n                //counter_last_irq[i << 1] = comparator;\r\n\r\n                if(config & 2)\r\n                {\r\n                    // level triggered\r\n                    do_irq = do_irq && !(interrupt_status & 1 << i);\r\n                    interrupt_status |= 1 << i;\r\n                }\r\n                else\r\n                {\r\n                    // edge-triggered\r\n                    interrupt_status &= ~(1 << i);\r\n                }\r\n\r\n                if(config & 1 << 3)\r\n                {\r\n                    // periodic mode\r\n                    counter_comparator[i << 1] += counter_accumulator[i << 1];\r\n                }\r\n\r\n                //dbg_log(\"do_irq=\" + do_irq, LOG_HPET);\r\n                if(do_irq)\r\n                {\r\n                    if(me.legacy_mode && i === 0)\r\n                    {\r\n                        cpu.device_raise_irq(0);\r\n                    }\r\n                    else if(me.legacy_mode && i === 1)\r\n                    {\r\n                        cpu.device_raise_irq(0);\r\n                    }\r\n                    else\r\n                    {\r\n                        // TODO\r\n                        cpu.device_raise_irq(0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        last_check = counter_value;\r\n\r\n        return 100; // TODO\r\n    };\r\n\r\n    function get_counter()\r\n    {\r\n        if(hpet_enabled)\r\n        {\r\n            return (Date.now() - hpet_start) * HPET_FREQ_MS + hpet_offset_low | 0;\r\n        }\r\n        else\r\n        {\r\n            return hpet_offset_low;\r\n        }\r\n    }\r\n\r\n    function get_counter_high()\r\n    {\r\n        if(HPET_SUPPORT_64)\r\n        {\r\n            if(hpet_enabled)\r\n            {\r\n                return (Date.now() - hpet_start) * (HPET_FREQ_MS / 0x100000000) + hpet_offset_high | 0;\r\n            }\r\n            else\r\n            {\r\n                return hpet_offset_high;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cpu.io.mmap_register(HPET_ADDR, 0x4000, mmio_read, mmio_write);\r\n\r\n\r\n\r\n    function mmio_read(addr)\r\n    {\r\n        dbg_log(\"Read \" + h(addr, 4) + \" (ctr=\" + h(get_counter() >>> 0) + \")\", LOG_HPET);\r\n\r\n        switch(addr)\r\n        {\r\n            case 0:\r\n                return 1 << 16 | HPET_NUM_COUNTERS - 1 << 8 | 0x8000 | 0x01 | HPET_SUPPORT_64 << 13;\r\n            case 4:\r\n                return HPET_PERIOD;\r\n\r\n            case 0x10:\r\n                return me.legacy_mode << 1 | hpet_enabled;\r\n\r\n            case 0xF0:\r\n                return get_counter();\r\n\r\n            case 0xF4:\r\n                return get_counter_high();\r\n        }\r\n\r\n        // read from counter register\r\n        var register = addr >> 2 & 7,\r\n            counter = addr - 0x100 >> 5;\r\n\r\n        if(addr < 0x100 || counter >= HPET_NUM_COUNTERS || register > 5)\r\n        {\r\n            dbg_log(\"Read reserved address: \" + h(addr), LOG_HPET);\r\n            return 0;\r\n        }\r\n\r\n        dbg_log(\"Read counter: addr=\" + h(addr) + \" counter=\" + h(counter, 2) +\r\n                \" reg=\" + h(register), LOG_HPET);\r\n\r\n        switch(register)\r\n        {\r\n            case 0:\r\n                return counter_config[counter << 1] & ~HPET_COUNTER_CONFIG_MASK | HPET_COUNTER_CONFIG;\r\n            case 1:\r\n                return counter_config[counter << 1 | 1];\r\n\r\n            case 2:\r\n                return counter_comparator[counter << 1];\r\n            case 3:\r\n                return counter_comparator[counter << 1 | 1];\r\n\r\n            case 4:\r\n            case 5:\r\n                // TODO interrupt route register\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    function mmio_write(addr, data)\r\n    {\r\n        dbg_log(\"Write \" + h(addr, 4) + \": \" + h(data, 2), LOG_HPET);\r\n\r\n        switch(addr)\r\n        {\r\n            case 0x10:\r\n                dbg_log(\"conf: enabled=\" + (data & 1) + \" legacy=\" + (data >> 1 & 1), LOG_HPET);\r\n\r\n                if((hpet_enabled ^ data) & 1)\r\n                {\r\n                    if(data & 1)\r\n                    {\r\n                        // counter is enabled now, start counting now\r\n                        hpet_start = Date.now();\r\n                    }\r\n                    else\r\n                    {\r\n                        // counter is disabled now, save current count\r\n                        hpet_offset_low = get_counter();\r\n                        hpet_offset_high = get_counter_high();\r\n                    }\r\n                }\r\n\r\n                hpet_enabled = (data & 1) === 1;\r\n                me.legacy_mode = (data & 2) === 2;\r\n\r\n                return;\r\n\r\n            case 0x20:\r\n                // writing a 1 clears bits\r\n                interrupt_status &= ~data;\r\n                return;\r\n\r\n            case 0xF0:\r\n                hpet_offset_low = data;\r\n                return;\r\n\r\n            case 0xF4:\r\n                hpet_offset_high = data;\r\n                return;\r\n        }\r\n\r\n        // read from counter register\r\n        var register = addr >> 2 & 7,\r\n            counter = addr - 0x100 >> 5;\r\n\r\n        if(addr < 0x100 || counter >= HPET_NUM_COUNTERS || register > 2)\r\n        {\r\n            dbg_log(\"Write reserved address: \" + h(addr) + \" data=\" + h(data), LOG_HPET);\r\n            return;\r\n        }\r\n\r\n        dbg_log(\"Write counter: addr=\" + h(addr) + \" counter=\" + h(counter, 2) +\r\n                \" reg=\" + h(register) + \" data=\" + h(data, 2), LOG_HPET);\r\n\r\n        switch(register)\r\n        {\r\n            case 0:\r\n                counter_config[counter << 1] = data;\r\n                break;\r\n            case 1:\r\n                //counter_config[counter << 1 | 1] = data;\r\n                break;\r\n\r\n            case 2:\r\n                if(counter_read_acc_next)\r\n                {\r\n                    counter_accumulator[counter << 1] = data;\r\n                    counter_read_acc_next = false;\r\n                    dbg_log(\"Accumulator acc=\" + h(data >>> 0, 8) + \" ctr=\" + h(counter, 2), LOG_HPET);\r\n                }\r\n                else\r\n                {\r\n                    counter_comparator[counter << 1] = data;\r\n\r\n                    if(counter_config[counter << 1] & 1 << 6)\r\n                    {\r\n                        counter_read_acc_next = true;\r\n                        counter_config[counter << 1] &= ~(1 << 6);\r\n                    }\r\n                }\r\n                break;\r\n            case 3:\r\n                counter_comparator[counter << 1 | 1] = data;\r\n                break;\r\n\r\n            case 4:\r\n            case 5:\r\n                // TODO interrupt route register\r\n\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\n// http://www.uefi.org/sites/default/files/resources/ACPI_6_1.pdf\r\n\r\n/** @const */\r\nvar PMTIMER_FREQ_SECONDS = 3579545;\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction ACPI(cpu)\r\n{\r\n    /** @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    var io = cpu.io;\r\n\r\n    var acpi = {\r\n        pci_id: 0x07 << 3,\r\n        pci_space: [\r\n            0x86, 0x80, 0x13, 0x71, 0x07, 0x00, 0x80, 0x02, 0x08, 0x00, 0x80, 0x06, 0x00, 0x00, 0x80, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,\r\n        ],\r\n        pci_bars: [],\r\n        name: \"acpi\",\r\n    };\r\n\r\n    // 00:07.0 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 08)\r\n    cpu.devices.pci.register_device(acpi);\r\n\r\n    this.timer_last_value = 0;\r\n    this.timer_imprecision_offset = 0;\r\n\r\n    this.status = 1;\r\n    this.pm1_status = 0;\r\n    this.pm1_enable = 0;\r\n    this.last_timer = this.get_timer(v86.microtick());\r\n\r\n    this.gpe = new Uint8Array(4);\r\n\r\n    io.register_read(0xB000, this, undefined, function()\r\n    {\r\n        dbg_log(\"ACPI pm1_status read\", LOG_ACPI);\r\n        return this.pm1_status;\r\n    });\r\n    io.register_write(0xB000, this, undefined, function(value)\r\n    {\r\n        dbg_log(\"ACPI pm1_status write: \" + h(value, 4), LOG_ACPI);\r\n        this.pm1_status &= ~value;\r\n    });\r\n\r\n    io.register_read(0xB002, this, undefined, function()\r\n    {\r\n        dbg_log(\"ACPI pm1_enable read\", LOG_ACPI);\r\n        return this.pm1_enable;\r\n    });\r\n    io.register_write(0xB002, this, undefined, function(value)\r\n    {\r\n        dbg_log(\"ACPI pm1_enable write: \" + h(value), LOG_ACPI);\r\n        this.pm1_enable = value;\r\n    });\r\n\r\n    // ACPI status\r\n    io.register_read(0xB004, this, undefined, function()\r\n    {\r\n        dbg_log(\"ACPI status read\", LOG_ACPI);\r\n        return this.status;\r\n    });\r\n    io.register_write(0xB004, this, undefined, function(value)\r\n    {\r\n        dbg_log(\"ACPI status write: \" + h(value), LOG_ACPI);\r\n        this.status = value;\r\n    });\r\n\r\n    // ACPI, pmtimer\r\n    io.register_read(0xB008, this, undefined, undefined, function()\r\n    {\r\n        var value = this.get_timer(v86.microtick()) & 0xFFFFFF;\r\n        //dbg_log(\"pmtimer read: \" + h(value >>> 0), LOG_ACPI);\r\n        return value;\r\n    });\r\n\r\n    // ACPI, gpe\r\n    io.register_read(0xAFE0, this, function()\r\n    {\r\n        dbg_log(\"Read gpe#0\", LOG_ACPI);\r\n        return this.gpe[0];\r\n    });\r\n    io.register_read(0xAFE1, this, function()\r\n    {\r\n        dbg_log(\"Read gpe#1\", LOG_ACPI);\r\n        return this.gpe[1];\r\n    });\r\n    io.register_read(0xAFE2, this, function()\r\n    {\r\n        dbg_log(\"Read gpe#2\", LOG_ACPI);\r\n        return this.gpe[2];\r\n    });\r\n    io.register_read(0xAFE3, this, function()\r\n    {\r\n        dbg_log(\"Read gpe#3\", LOG_ACPI);\r\n        return this.gpe[3];\r\n    });\r\n\r\n    io.register_write(0xAFE0, this, function(value)\r\n    {\r\n        dbg_log(\"Write gpe#0: \" + h(value), LOG_ACPI);\r\n        this.gpe[0] = value;\r\n    });\r\n    io.register_write(0xAFE1, this, function(value)\r\n    {\r\n        dbg_log(\"Write gpe#1: \" + h(value), LOG_ACPI);\r\n        this.gpe[1] = value;\r\n    });\r\n    io.register_write(0xAFE2, this, function(value)\r\n    {\r\n        dbg_log(\"Write gpe#2: \" + h(value), LOG_ACPI);\r\n        this.gpe[2] = value;\r\n    });\r\n    io.register_write(0xAFE3, this, function(value)\r\n    {\r\n        dbg_log(\"Write gpe#3: \" + h(value), LOG_ACPI);\r\n        this.gpe[3] = value;\r\n    });\r\n}\r\n\r\nACPI.prototype.timer = function(now)\r\n{\r\n    var timer = this.get_timer(now);\r\n    var highest_bit_changed = ((timer ^ this.last_timer) & (1 << 23)) !== 0;\r\n\r\n    if((this.pm1_enable & 1) && highest_bit_changed)\r\n    {\r\n        dbg_log(\"ACPI raise irq\", LOG_ACPI);\r\n        this.pm1_status |= 1;\r\n        this.cpu.device_raise_irq(9);\r\n    }\r\n    else\r\n    {\r\n        this.cpu.device_lower_irq(9);\r\n    }\r\n\r\n    this.last_timer = timer;\r\n    return 100; // TODO\r\n};\r\n\r\nACPI.prototype.get_timer = function(now)\r\n{\r\n    const t = Math.round(now * (PMTIMER_FREQ_SECONDS / 1000));\r\n\r\n    // Due to the low precision of JavaScript's time functions we increment the\r\n    // returned timer value every time it is read\r\n\r\n    if(t === this.timer_last_value)\r\n    {\r\n        // don't go past 1ms\r\n\r\n        if(this.timer_imprecision_offset < PMTIMER_FREQ_SECONDS / 1000)\r\n        {\r\n            this.timer_imprecision_offset++;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        dbg_assert(t > this.timer_last_value);\r\n\r\n        const previous_timer = this.timer_last_value + this.timer_imprecision_offset;\r\n\r\n        // don't go back in time\r\n\r\n        if(previous_timer <= t)\r\n        {\r\n            this.timer_imprecision_offset = 0;\r\n            this.timer_last_value = t;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Warning: Overshot pmtimer, waiting;\" +\r\n                    \" current=\" + t +\r\n                    \" last=\" + this.timer_last_value +\r\n                    \" offset=\" + this.timer_imprecision_offset, LOG_ACPI);\r\n        }\r\n    }\r\n\r\n    return this.timer_last_value + this.timer_imprecision_offset;\r\n};\r\n\r\nACPI.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n    state[0] = this.status;\r\n    state[1] = this.pm1_status;\r\n    state[2] = this.pm1_enable;\r\n    state[3] = this.gpe;\r\n    return state;\r\n};\r\n\r\nACPI.prototype.set_state = function(state)\r\n{\r\n    this.status = state[0];\r\n    this.pm1_status = state[1];\r\n    this.pm1_enable = state[2];\r\n    this.gpe = state[3];\r\n};\r\n","\"use strict\";\r\n\r\n// See Intel's System Programming Guide\r\n\r\n\r\n/** @const */\r\nvar APIC_LOG_VERBOSE = false;\r\n\r\n/** @const */\r\nvar APIC_ADDRESS = 0xFEE00000;\r\n\r\n/** @const */\r\nvar APIC_TIMER_MODE_MASK = 3 << 17;\r\n\r\n/** @const */\r\nvar APIC_TIMER_MODE_ONE_SHOT = 0;\r\n\r\n/** @const */\r\nvar APIC_TIMER_MODE_PERIODIC = 1 << 17;\r\n\r\n/** @const */\r\nvar APIC_TIMER_MODE_TSC = 2 << 17;\r\n\r\n\r\n/** @const */\r\nvar DELIVERY_MODES = [\r\n    \"Fixed (0)\",\r\n    \"Lowest Prio (1)\",\r\n    \"SMI (2)\",\r\n    \"Reserved (3)\",\r\n    \"NMI (4)\",\r\n    \"INIT (5)\",\r\n    \"Reserved (6)\",\r\n    \"ExtINT (7)\",\r\n];\r\n\r\n/** @const */\r\nvar DESTINATION_MODES = [\"physical\", \"logical\"];\r\n\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction APIC(cpu)\r\n{\r\n    /** @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.apic_id = 0;\r\n\r\n    this.timer_divider = 0;\r\n    this.timer_divider_shift = 1;\r\n    this.timer_initial_count = 0;\r\n    this.timer_current_count = 0;\r\n\r\n    this.next_tick = v86.microtick();\r\n\r\n    this.lvt_timer = IOAPIC_CONFIG_MASKED;\r\n    this.lvt_perf_counter = IOAPIC_CONFIG_MASKED;\r\n    this.lvt_int0 = IOAPIC_CONFIG_MASKED;\r\n    this.lvt_int1 = IOAPIC_CONFIG_MASKED;\r\n    this.lvt_error = IOAPIC_CONFIG_MASKED;\r\n\r\n    this.tpr = 0;\r\n    this.icr0 = 0;\r\n    this.icr1 = 0;\r\n\r\n    this.irr = new Int32Array(8);\r\n    this.isr = new Int32Array(8);\r\n    this.tmr = new Int32Array(8);\r\n\r\n    this.spurious_vector = 0xFE;\r\n    this.destination_format = -1;\r\n    this.local_destination = 0;\r\n\r\n    this.error = 0;\r\n    this.read_error = 0;\r\n\r\n    cpu.io.mmap_register(APIC_ADDRESS, 0x100000,\r\n        (addr) =>\r\n        {\r\n            dbg_log(\"Unsupported read8 from apic: \" + h(addr >>> 0), LOG_APIC);\r\n            var off = addr & 3;\r\n            addr &= ~3;\r\n            return this.read32(addr) >> (off * 8) & 0xFF;\r\n        },\r\n        (addr, value) =>\r\n        {\r\n            dbg_log(\"Unsupported write8 from apic: \" + h(addr) + \" <- \" + h(value), LOG_APIC);\r\n            dbg_trace();\r\n            dbg_assert(false);\r\n        },\r\n        (addr) => this.read32(addr),\r\n        (addr, value) => this.write32(addr, value)\r\n    );\r\n}\r\n\r\nAPIC.prototype.read32 = function(addr)\r\n{\r\n    addr = addr - APIC_ADDRESS | 0;\r\n\r\n    switch(addr)\r\n    {\r\n        case 0x20:\r\n            dbg_log(\"APIC read id\", LOG_APIC);\r\n            return this.apic_id;\r\n\r\n        case 0x30:\r\n            // version\r\n            dbg_log(\"APIC read version\", LOG_APIC);\r\n            return 0x50014;\r\n\r\n        case 0x80:\r\n            APIC_LOG_VERBOSE && dbg_log(\"APIC read tpr\", LOG_APIC);\r\n            return this.tpr;\r\n\r\n        case 0xD0:\r\n            dbg_log(\"Read local destination\", LOG_APIC);\r\n            return this.local_destination;\r\n\r\n        case 0xE0:\r\n            dbg_log(\"Read destination format\", LOG_APIC);\r\n            return this.destination_format;\r\n\r\n        case 0xF0:\r\n            return this.spurious_vector;\r\n\r\n        case 0x100:\r\n        case 0x110:\r\n        case 0x120:\r\n        case 0x130:\r\n        case 0x140:\r\n        case 0x150:\r\n        case 0x160:\r\n        case 0x170:\r\n            var index = addr - 0x100 >> 4;\r\n            dbg_log(\"Read isr \" + index + \": \" + h(this.isr[index] >>> 0, 8), LOG_APIC);\r\n            return this.isr[index];\r\n\r\n        case 0x180:\r\n        case 0x190:\r\n        case 0x1A0:\r\n        case 0x1B0:\r\n        case 0x1C0:\r\n        case 0x1D0:\r\n        case 0x1E0:\r\n        case 0x1F0:\r\n            var index = addr - 0x180 >> 4;\r\n            dbg_log(\"Read tmr \" + index + \": \" + h(this.tmr[index] >>> 0, 8), LOG_APIC);\r\n            return this.tmr[index];\r\n\r\n        case 0x200:\r\n        case 0x210:\r\n        case 0x220:\r\n        case 0x230:\r\n        case 0x240:\r\n        case 0x250:\r\n        case 0x260:\r\n        case 0x270:\r\n            var index = addr - 0x200 >> 4;\r\n            dbg_log(\"Read irr \" + index + \": \" + h(this.irr[index] >>> 0, 8), LOG_APIC);\r\n            return this.irr[index];\r\n\r\n        case 0x280:\r\n            dbg_log(\"Read error: \" + h(this.read_error >>> 0, 8), LOG_APIC);\r\n            return this.read_error;\r\n\r\n        case 0x300:\r\n            APIC_LOG_VERBOSE && dbg_log(\"APIC read icr0\", LOG_APIC);\r\n            return this.icr0;\r\n\r\n        case 0x310:\r\n            dbg_log(\"APIC read icr1\", LOG_APIC);\r\n            return this.icr1;\r\n\r\n        case 0x320:\r\n            dbg_log(\"read timer lvt\", LOG_APIC);\r\n            return this.lvt_timer;\r\n\r\n        case 0x340:\r\n            dbg_log(\"read lvt perf counter\", LOG_APIC);\r\n            return this.lvt_perf_counter;\r\n\r\n        case 0x350:\r\n            dbg_log(\"read lvt int0\", LOG_APIC);\r\n            return this.lvt_int0;\r\n\r\n        case 0x360:\r\n            dbg_log(\"read lvt int1\", LOG_APIC);\r\n            return this.lvt_int1;\r\n\r\n        case 0x370:\r\n            dbg_log(\"read lvt error\", LOG_APIC);\r\n            return this.lvt_error;\r\n\r\n        case 0x3E0:\r\n            // divider\r\n            dbg_log(\"read timer divider\", LOG_APIC);\r\n            return this.timer_divider;\r\n\r\n        case 0x380:\r\n            dbg_log(\"read timer initial count\", LOG_APIC);\r\n            return this.timer_initial_count;\r\n\r\n        case 0x390:\r\n            dbg_log(\"read timer current count: \" + h(this.timer_current_count >>> 0, 8), LOG_APIC);\r\n            return this.timer_current_count;\r\n\r\n        default:\r\n            dbg_log(\"APIC read \" + h(addr), LOG_APIC);\r\n            dbg_assert(false);\r\n            return 0;\r\n    }\r\n};\r\n\r\nAPIC.prototype.write32 = function(addr, value)\r\n{\r\n    addr = addr - APIC_ADDRESS | 0;\r\n\r\n    switch(addr)\r\n    {\r\n        case 0x30:\r\n            // version\r\n            dbg_log(\"APIC write version: \" + h(value >>> 0, 8) + \", ignored\", LOG_APIC);\r\n            break;\r\n\r\n        case 0x80:\r\n            APIC_LOG_VERBOSE && dbg_log(\"Set tpr: \" + h(value & 0xFF, 2), LOG_APIC);\r\n            this.tpr = value & 0xFF;\r\n            this.check_vector();\r\n            break;\r\n\r\n        case 0xB0:\r\n            var highest_isr = this.highest_isr();\r\n            if(highest_isr !== -1)\r\n            {\r\n                APIC_LOG_VERBOSE && dbg_log(\"eoi: \" + h(value >>> 0, 8) + \" for vector \" + h(highest_isr), LOG_APIC);\r\n                this.register_clear_bit(this.isr, highest_isr);\r\n                if(this.register_get_bit(this.tmr, highest_isr))\r\n                {\r\n                    // Send eoi to all IO APICs\r\n                    this.cpu.devices.ioapic.remote_eoi(highest_isr);\r\n                }\r\n                this.check_vector();\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"Bad eoi: No isr set\", LOG_APIC);\r\n            }\r\n            break;\r\n\r\n        case 0xD0:\r\n            dbg_log(\"Set local destination: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.local_destination = value & 0xFF000000;\r\n            break;\r\n\r\n        case 0xE0:\r\n            dbg_log(\"Set destination format: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.destination_format = value | 0xFFFFFF;\r\n            break;\r\n\r\n        case 0xF0:\r\n            dbg_log(\"Set spurious vector: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.spurious_vector = value;\r\n            break;\r\n\r\n        case 0x280:\r\n            // updated readable error register with real error\r\n            dbg_log(\"Write error: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.read_error = this.error;\r\n            this.error = 0;\r\n            break;\r\n\r\n        case 0x300:\r\n            var vector = value & 0xFF;\r\n            var delivery_mode = value >> 8 & 7;\r\n            var destination_mode = value >> 11 & 1;\r\n            var is_level = value >> 15 & 1;\r\n            var destination_shorthand = value >> 18 & 3;\r\n            var destination = this.icr1 >>> 24;\r\n            dbg_log(\"APIC write icr0: \" + h(value, 8) + \" vector=\" + h(vector, 2) + \" \" +\r\n                    \"destination_mode=\" + DESTINATION_MODES[destination_mode] + \" delivery_mode=\" + DELIVERY_MODES[delivery_mode] + \" \" +\r\n                    \"destination_shorthand=\" + [\"no\", \"self\", \"all with self\", \"all without self\"][destination_shorthand], LOG_APIC);\r\n\r\n            value &= ~(1 << 12);\r\n            this.icr0 = value;\r\n\r\n            if(destination_shorthand === 0)\r\n            {\r\n                // no shorthand\r\n                this.route(vector, delivery_mode, is_level, destination, destination_mode);\r\n            }\r\n            else if(destination_shorthand === 1)\r\n            {\r\n                // self\r\n                this.deliver(vector, IOAPIC_DELIVERY_FIXED, is_level);\r\n            }\r\n            else if(destination_shorthand === 2)\r\n            {\r\n                // all including self\r\n                this.deliver(vector, delivery_mode, is_level);\r\n            }\r\n            else if(destination_shorthand === 3)\r\n            {\r\n                // all but self\r\n            }\r\n            else\r\n            {\r\n                dbg_assert(false);\r\n            }\r\n            break;\r\n\r\n        case 0x310:\r\n            dbg_log(\"APIC write icr1: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.icr1 = value;\r\n            break;\r\n\r\n        case 0x320:\r\n            dbg_log(\"timer lvt: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.lvt_timer = value;\r\n            break;\r\n\r\n        case 0x340:\r\n            dbg_log(\"lvt perf counter: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.lvt_perf_counter = value;\r\n            break;\r\n\r\n        case 0x350:\r\n            dbg_log(\"lvt int0: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.lvt_int0 = value;\r\n            break;\r\n\r\n        case 0x360:\r\n            dbg_log(\"lvt int1: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.lvt_int1 = value;\r\n            break;\r\n\r\n        case 0x370:\r\n            dbg_log(\"lvt error: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.lvt_error = value;\r\n            break;\r\n\r\n        case 0x3E0:\r\n            dbg_log(\"timer divider: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.timer_divider = value;\r\n\r\n            var divide_shift = value & 0b11 | (value & 0b1000) >> 1;\r\n            this.timer_divider_shift = divide_shift === 0b111 ? 0 : divide_shift + 1;\r\n            break;\r\n\r\n        case 0x380:\r\n            dbg_log(\"timer initial: \" + h(value >>> 0, 8), LOG_APIC);\r\n            this.timer_initial_count = value >>> 0;\r\n            this.timer_current_count = value >>> 0;\r\n\r\n            this.next_tick = v86.microtick();\r\n            this.timer_active = true;\r\n            break;\r\n\r\n        case 0x390:\r\n            dbg_log(\"timer current: \" + h(value >>> 0, 8), LOG_APIC);\r\n            dbg_assert(false, \"read-only register\");\r\n            break;\r\n\r\n        default:\r\n            dbg_log(\"APIC write32 \" + h(addr) + \" <- \" + h(value >>> 0, 8), LOG_APIC);\r\n            dbg_assert(false);\r\n    }\r\n};\r\n\r\nAPIC.prototype.timer = function(now)\r\n{\r\n    if(this.timer_current_count === 0)\r\n    {\r\n        return 100;\r\n    }\r\n\r\n    const freq = APIC_TIMER_FREQ / (1 << this.timer_divider_shift);\r\n\r\n    const steps = (now - this.next_tick) * freq >>> 0;\r\n\r\n    this.next_tick += steps / freq;\r\n    this.timer_current_count -= steps;\r\n\r\n    if(this.timer_current_count <= 0)\r\n    {\r\n        var mode = this.lvt_timer & APIC_TIMER_MODE_MASK;\r\n\r\n        if(mode === APIC_TIMER_MODE_PERIODIC)\r\n        {\r\n            this.timer_current_count = this.timer_current_count % this.timer_initial_count;\r\n\r\n            if(this.timer_current_count <= 0)\r\n            {\r\n                this.timer_current_count += this.timer_initial_count;\r\n            }\r\n            dbg_assert(this.timer_current_count !== 0);\r\n\r\n            if((this.lvt_timer & IOAPIC_CONFIG_MASKED) === 0)\r\n            {\r\n                this.deliver(this.lvt_timer & 0xFF, IOAPIC_DELIVERY_FIXED, false);\r\n            }\r\n        }\r\n        else if(mode === APIC_TIMER_MODE_ONE_SHOT)\r\n        {\r\n            this.timer_current_count = 0;\r\n            dbg_log(\"APIC timer one shot end\", LOG_APIC);\r\n\r\n            if((this.lvt_timer & IOAPIC_CONFIG_MASKED) === 0)\r\n            {\r\n                this.deliver(this.lvt_timer & 0xFF, IOAPIC_DELIVERY_FIXED, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return Math.max(0, this.timer_current_count / freq);\r\n};\r\n\r\nAPIC.prototype.route = function(vector, mode, is_level, destination, destination_mode)\r\n{\r\n    // TODO\r\n    this.deliver(vector, mode, is_level);\r\n};\r\n\r\nAPIC.prototype.deliver = function(vector, mode, is_level)\r\n{\r\n    APIC_LOG_VERBOSE && dbg_log(\"Deliver \" + h(vector, 2) + \" mode=\" + mode + \" level=\" + is_level, LOG_APIC);\r\n\r\n    if(mode === IOAPIC_DELIVERY_INIT)\r\n    {\r\n        // TODO\r\n        return;\r\n    }\r\n\r\n    if(mode === IOAPIC_DELIVERY_NMI)\r\n    {\r\n        // TODO\r\n        return;\r\n    }\r\n\r\n    if(vector < 0x10 || vector === 0xFF)\r\n    {\r\n        dbg_assert(false, \"TODO: Invalid vector\");\r\n    }\r\n\r\n    if(this.register_get_bit(this.irr, vector))\r\n    {\r\n        dbg_log(\"Not delivered: irr already set, vector=\" + h(vector, 2), LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    this.register_set_bit(this.irr, vector);\r\n\r\n    if(is_level)\r\n    {\r\n        this.register_set_bit(this.tmr, vector);\r\n    }\r\n    else\r\n    {\r\n        this.register_clear_bit(this.tmr, vector);\r\n    }\r\n\r\n    this.check_vector();\r\n};\r\n\r\nAPIC.prototype.highest_irr = function()\r\n{\r\n    var highest = this.register_get_highest_bit(this.irr);\r\n    dbg_assert(highest !== 0xFF);\r\n    dbg_assert(highest >= 0x10 || highest === -1);\r\n    return highest;\r\n};\r\n\r\nAPIC.prototype.highest_isr = function()\r\n{\r\n    var highest = this.register_get_highest_bit(this.isr);\r\n    dbg_assert(highest !== 0xFF);\r\n    dbg_assert(highest >= 0x10 || highest === -1);\r\n    return highest;\r\n};\r\n\r\nAPIC.prototype.check_vector = function()\r\n{\r\n    var highest_irr = this.highest_irr();\r\n\r\n    if(highest_irr === -1)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var highest_isr = this.highest_isr();\r\n\r\n    if(highest_isr >= highest_irr)\r\n    {\r\n        APIC_LOG_VERBOSE && dbg_log(\"Higher isr, isr=\" + h(highest_isr) + \" irr=\" + h(highest_irr), LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    if((highest_irr & 0xF0) <= (this.tpr & 0xF0))\r\n    {\r\n        APIC_LOG_VERBOSE && dbg_log(\"Higher tpr, tpr=\" + h(this.tpr & 0xF0) + \" irr=\" + h(highest_irr), LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    this.cpu.handle_irqs();\r\n};\r\n\r\nAPIC.prototype.acknowledge_irq = function()\r\n{\r\n    var highest_irr = this.highest_irr();\r\n\r\n    if(highest_irr === -1)\r\n    {\r\n        //dbg_log(\"Spurious\", LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    var highest_isr = this.highest_isr();\r\n\r\n    if(highest_isr >= highest_irr)\r\n    {\r\n        APIC_LOG_VERBOSE && dbg_log(\"Higher isr, isr=\" + h(highest_isr) + \" irr=\" + h(highest_irr), LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    if((highest_irr & 0xF0) <= (this.tpr & 0xF0))\r\n    {\r\n        APIC_LOG_VERBOSE && dbg_log(\"Higher tpr, tpr=\" + h(this.tpr & 0xF0) + \" irr=\" + h(highest_irr), LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    this.register_clear_bit(this.irr, highest_irr);\r\n    this.register_set_bit(this.isr, highest_irr);\r\n\r\n    APIC_LOG_VERBOSE && dbg_log(\"Calling vector \" + h(highest_irr), LOG_APIC);\r\n    this.cpu.pic_call_irq(highest_irr);\r\n\r\n    this.check_vector();\r\n};\r\n\r\nAPIC.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.apic_id;\r\n    state[1] = this.timer_divider;\r\n    state[2] = this.timer_divider_shift;\r\n    state[3] = this.timer_initial_count;\r\n    state[4] = this.timer_current_count;\r\n    state[5] = this.next_tick;\r\n    state[6] = this.lvt_timer;\r\n    state[7] = this.lvt_perf_counter;\r\n    state[8] = this.lvt_int0;\r\n    state[9] = this.lvt_int1;\r\n    state[10] = this.lvt_error;\r\n    state[11] = this.tpr;\r\n    state[12] = this.icr0;\r\n    state[13] = this.icr1;\r\n    state[14] = this.irr;\r\n    state[15] = this.isr;\r\n    state[16] = this.tmr;\r\n    state[17] = this.spurious_vector;\r\n    state[18] = this.destination_format;\r\n    state[19] = this.local_destination;\r\n    state[20] = this.error;\r\n    state[21] = this.read_error;\r\n\r\n    return state;\r\n};\r\n\r\nAPIC.prototype.set_state = function(state)\r\n{\r\n    this.apic_id = state[0];\r\n    this.timer_divider = state[1];\r\n    this.timer_divider_shift = state[2];\r\n    this.timer_initial_count = state[3];\r\n    this.timer_current_count = state[4];\r\n    this.next_tick = state[5];\r\n    this.lvt_timer = state[6];\r\n    this.lvt_perf_counter = state[7];\r\n    this.lvt_int0 = state[8];\r\n    this.lvt_int1 = state[9];\r\n    this.lvt_error = state[10];\r\n    this.tpr = state[11];\r\n    this.icr0 = state[12];\r\n    this.icr1 = state[13];\r\n    this.irr = state[14];\r\n    this.isr = state[15];\r\n    this.tmr = state[16];\r\n    this.spurious_vector = state[17];\r\n    this.destination_format = state[18];\r\n    this.local_destination = state[19];\r\n    this.error = state[20];\r\n    this.read_error = state[21];\r\n};\r\n\r\n// functions operating on 256-bit registers (for irr, isr, tmr)\r\nAPIC.prototype.register_get_bit = function(v, bit)\r\n{\r\n    dbg_assert(bit >= 0 && bit < 256);\r\n    return v[bit >> 5] >> (bit & 31) & 1;\r\n};\r\n\r\nAPIC.prototype.register_set_bit = function(v, bit)\r\n{\r\n    dbg_assert(bit >= 0 && bit < 256);\r\n    v[bit >> 5] |= 1 << (bit & 31);\r\n};\r\n\r\nAPIC.prototype.register_clear_bit = function(v, bit)\r\n{\r\n    dbg_assert(bit >= 0 && bit < 256);\r\n    v[bit >> 5] &= ~(1 << (bit & 31));\r\n};\r\n\r\nAPIC.prototype.register_get_highest_bit = function(v)\r\n{\r\n    for(var i = 7; i >= 0; i--)\r\n    {\r\n        var word = v[i];\r\n\r\n        if(word)\r\n        {\r\n            return v86util.int_log2(word >>> 0) | i << 5;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n};\r\n","\"use strict\";\r\n\r\n// http://download.intel.com/design/chipsets/datashts/29056601.pdf\r\n\r\n/** @const */\r\nvar IOAPIC_ADDRESS = 0xFEC00000;\r\n\r\n/** @const */\r\nvar IOREGSEL = 0;\r\n\r\n/** @const */\r\nvar IOWIN = 0x10;\r\n\r\n/** @const */\r\nvar IOAPIC_IRQ_COUNT = 24;\r\n\r\n/** @const */\r\nvar IOAPIC_ID = 0; // must match value in seabios\r\n\r\n\r\n/** @const */\r\nvar IOAPIC_CONFIG_TRIGGER_MODE_LEVEL = 1 << 15;\r\n\r\n/** @const */\r\nvar IOAPIC_CONFIG_MASKED = 1 << 16;\r\n\r\n/** @const */\r\nvar IOAPIC_CONFIG_DELIVS = 1 << 12;\r\n\r\n/** @const */\r\nvar IOAPIC_CONFIG_REMOTE_IRR = 1 << 14;\r\n\r\n/** @const */\r\nvar IOAPIC_CONFIG_READONLY_MASK = IOAPIC_CONFIG_REMOTE_IRR | IOAPIC_CONFIG_DELIVS | 0xFFFE0000;\r\n\r\n/** @const */\r\nvar IOAPIC_DELIVERY_FIXED = 0;\r\n\r\n/** @const */\r\nvar IOAPIC_DELIVERY_LOWEST_PRIORITY = 1;\r\n\r\n/** @const */\r\nvar IOAPIC_DELIVERY_NMI = 4;\r\n\r\n/** @const */\r\nvar IOAPIC_DELIVERY_INIT = 5;\r\n\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n */\r\nfunction IOAPIC(cpu)\r\n{\r\n    /** @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    this.ioredtbl_config = new Int32Array(IOAPIC_IRQ_COUNT);\r\n    this.ioredtbl_destination = new Int32Array(IOAPIC_IRQ_COUNT);\r\n\r\n    for(var i = 0; i < this.ioredtbl_config.length; i++)\r\n    {\r\n        // disable interrupts\r\n        this.ioredtbl_config[i] = IOAPIC_CONFIG_MASKED;\r\n    }\r\n\r\n    // IOAPIC register selection\r\n    this.ioregsel = 0;\r\n\r\n    this.ioapic_id = IOAPIC_ID;\r\n\r\n    this.irr = 0;\r\n    this.irq_value = 0;\r\n\r\n    dbg_assert(MMAP_BLOCK_SIZE >= 0x20);\r\n    cpu.io.mmap_register(IOAPIC_ADDRESS, MMAP_BLOCK_SIZE,\r\n        (addr) =>\r\n        {\r\n            addr = addr - IOAPIC_ADDRESS | 0;\r\n\r\n            if(addr >= IOWIN && addr < IOWIN + 4)\r\n            {\r\n                const byte = addr - IOWIN;\r\n                dbg_log(\"ioapic read8 byte \" + byte + \" \" + h(this.ioregsel), LOG_APIC);\r\n                return this.read(this.ioregsel) >> (8 * byte) & 0xFF;\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"Unexpected IOAPIC register read: \" + h(addr >>> 0), LOG_APIC);\r\n                dbg_assert(false);\r\n                return 0;\r\n            }\r\n        },\r\n        (addr, value) =>\r\n        {\r\n            dbg_assert(false, \"unsupported write8 from ioapic: \" + h(addr >>> 0));\r\n        },\r\n        (addr) =>\r\n        {\r\n            addr = addr - IOAPIC_ADDRESS | 0;\r\n\r\n            if(addr === IOREGSEL)\r\n            {\r\n                return this.ioregsel;\r\n            }\r\n            else if(addr === IOWIN)\r\n            {\r\n                return this.read(this.ioregsel);\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"Unexpected IOAPIC register read: \" + h(addr >>> 0), LOG_APIC);\r\n                dbg_assert(false);\r\n                return 0;\r\n            }\r\n        },\r\n        (addr, value) =>\r\n        {\r\n            addr = addr - IOAPIC_ADDRESS | 0;\r\n\r\n            if(addr === IOREGSEL)\r\n            {\r\n                this.ioregsel = value;\r\n            }\r\n            else if(addr === IOWIN)\r\n            {\r\n                this.write(this.ioregsel, value);\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"Unexpected IOAPIC register write: \" + h(addr >>> 0) + \" <- \" + h(value >>> 0, 8), LOG_APIC);\r\n                dbg_assert(false);\r\n            }\r\n        });\r\n}\r\n\r\nIOAPIC.prototype.remote_eoi = function(vector)\r\n{\r\n    for(var i = 0; i < IOAPIC_IRQ_COUNT; i++)\r\n    {\r\n        var config = this.ioredtbl_config[i];\r\n\r\n        if((config & 0xFF) === vector && (config & IOAPIC_CONFIG_REMOTE_IRR))\r\n        {\r\n            dbg_log(\"Clear remote IRR for irq=\" + h(i), LOG_APIC);\r\n            this.ioredtbl_config[i] &= ~IOAPIC_CONFIG_REMOTE_IRR;\r\n            this.check_irq(i);\r\n        }\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.check_irq = function(irq)\r\n{\r\n    var mask = 1 << irq;\r\n\r\n    if((this.irr & mask) === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var config = this.ioredtbl_config[irq];\r\n\r\n    if((config & IOAPIC_CONFIG_MASKED) === 0)\r\n    {\r\n        var delivery_mode = config >> 8 & 7;\r\n        var destination_mode = config >> 11 & 1;\r\n        var vector = config & 0xFF;\r\n        var destination = this.ioredtbl_destination[irq] >>> 24;\r\n        var is_level = (config & IOAPIC_CONFIG_TRIGGER_MODE_LEVEL) === IOAPIC_CONFIG_TRIGGER_MODE_LEVEL;\r\n\r\n        if((config & IOAPIC_CONFIG_TRIGGER_MODE_LEVEL) === 0)\r\n        {\r\n            this.irr &= ~mask;\r\n        }\r\n        else\r\n        {\r\n            this.ioredtbl_config[irq] |= IOAPIC_CONFIG_REMOTE_IRR;\r\n\r\n            if(config & IOAPIC_CONFIG_REMOTE_IRR)\r\n            {\r\n                dbg_log(\"No route: level interrupt and remote IRR still set\", LOG_APIC);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(delivery_mode === IOAPIC_DELIVERY_FIXED || delivery_mode === IOAPIC_DELIVERY_LOWEST_PRIORITY)\r\n        {\r\n            this.cpu.devices.apic.route(vector, delivery_mode, is_level, destination, destination_mode);\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false, \"TODO\");\r\n        }\r\n\r\n        this.ioredtbl_config[irq] &= ~IOAPIC_CONFIG_DELIVS;\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.set_irq = function(i)\r\n{\r\n    if(i >= IOAPIC_IRQ_COUNT)\r\n    {\r\n        dbg_assert(false, \"Bad irq: \" + i, LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    var mask = 1 << i;\r\n\r\n    if((this.irq_value & mask) === 0)\r\n    {\r\n        APIC_LOG_VERBOSE && dbg_log(\"apic set irq \" + i, LOG_APIC);\r\n\r\n        this.irq_value |= mask;\r\n\r\n        var config = this.ioredtbl_config[i];\r\n        if((config & (IOAPIC_CONFIG_TRIGGER_MODE_LEVEL|IOAPIC_CONFIG_MASKED)) ===\r\n                        IOAPIC_CONFIG_MASKED)\r\n        {\r\n            // edge triggered and masked\r\n            return;\r\n        }\r\n\r\n        this.irr |= mask;\r\n\r\n        this.check_irq(i);\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.clear_irq = function(i)\r\n{\r\n    if(i >= IOAPIC_IRQ_COUNT)\r\n    {\r\n        dbg_assert(false, \"Bad irq: \" + i, LOG_APIC);\r\n        return;\r\n    }\r\n\r\n    var mask = 1 << i;\r\n\r\n    if((this.irq_value & mask) === mask)\r\n    {\r\n        this.irq_value &= ~mask;\r\n\r\n        var config = this.ioredtbl_config[i];\r\n        if(config & IOAPIC_CONFIG_TRIGGER_MODE_LEVEL)\r\n        {\r\n            this.irr &= ~mask;\r\n        }\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.read = function(reg)\r\n{\r\n    if(reg === 0)\r\n    {\r\n        dbg_log(\"IOAPIC Read id\", LOG_APIC);\r\n        return this.ioapic_id << 24;\r\n    }\r\n    else if(reg === 1)\r\n    {\r\n        dbg_log(\"IOAPIC Read version\", LOG_APIC);\r\n        return 0x11 | IOAPIC_IRQ_COUNT - 1 << 16;\r\n    }\r\n    else if(reg === 2)\r\n    {\r\n        dbg_log(\"IOAPIC Read arbitration id\", LOG_APIC);\r\n        return this.ioapic_id << 24;\r\n    }\r\n    else if(reg >= 0x10 && reg < 0x10 + 2 * IOAPIC_IRQ_COUNT)\r\n    {\r\n        var irq = reg - 0x10 >> 1;\r\n        var index = reg & 1;\r\n\r\n        if(index)\r\n        {\r\n            var value = this.ioredtbl_destination[irq];\r\n            dbg_log(\"IOAPIC Read destination irq=\" + h(irq) + \" -> \" + h(value, 8), LOG_APIC);\r\n        }\r\n        else\r\n        {\r\n            var value = this.ioredtbl_config[irq];\r\n            dbg_log(\"IOAPIC Read config irq=\" + h(irq) + \" -> \" + h(value, 8), LOG_APIC);\r\n        }\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"IOAPIC register read outside of range \" + h(reg), LOG_APIC);\r\n        dbg_assert(false);\r\n        return 0;\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.write = function(reg, value)\r\n{\r\n    //dbg_log(\"IOAPIC write \" + h(reg) + \" <- \" + h(value, 8), LOG_APIC);\r\n\r\n    if(reg === 0)\r\n    {\r\n        this.ioapic_id = value >>> 24 & 0x0F;\r\n    }\r\n    else if(reg === 1 || reg === 2)\r\n    {\r\n        dbg_log(\"Invalid write: \" + reg, LOG_APIC);\r\n    }\r\n    else if(reg >= 0x10 && reg < 0x10 + 2 * IOAPIC_IRQ_COUNT)\r\n    {\r\n        var irq = reg - 0x10 >> 1;\r\n        var index = reg & 1;\r\n\r\n        if(index)\r\n        {\r\n            this.ioredtbl_destination[irq] = value & 0xFF000000;\r\n            dbg_log(\"Write destination \" + h(value >>> 0, 8) + \" irq=\" + h(irq) + \" dest=\" + h(value >>> 24, 2), LOG_APIC);\r\n        }\r\n        else\r\n        {\r\n            var old_value = this.ioredtbl_config[irq];\r\n            this.ioredtbl_config[irq] = value & ~IOAPIC_CONFIG_READONLY_MASK | old_value & IOAPIC_CONFIG_READONLY_MASK;\r\n\r\n            var vector = value & 0xFF;\r\n            var delivery_mode = value >> 8 & 7;\r\n            var destination_mode = value >> 11 & 1;\r\n            var is_level = value >> 15 & 1;\r\n            var disabled = value >> 16 & 1;\r\n\r\n            dbg_log(\"Write config \" + h(value >>> 0, 8) +\r\n                    \" irq=\" + h(irq) +\r\n                    \" vector=\" + h(vector, 2) +\r\n                    \" deliverymode=\" + DELIVERY_MODES[delivery_mode] +\r\n                    \" destmode=\" + DESTINATION_MODES[destination_mode] +\r\n                    \" is_level=\" + is_level +\r\n                    \" disabled=\" + disabled, LOG_APIC);\r\n\r\n            this.check_irq(irq);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"IOAPIC register write outside of range \" + h(reg) + \": \" + h(value >>> 0, 8), LOG_APIC);\r\n        dbg_assert(false);\r\n    }\r\n};\r\n\r\nIOAPIC.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n    state[0] = this.ioredtbl_config;\r\n    state[1] = this.ioredtbl_destination;\r\n    state[2] = this.ioregsel;\r\n    state[3] = this.ioapic_id;\r\n    state[4] = this.irr;\r\n    state[5] = this.irq_value;\r\n    return state;\r\n};\r\n\r\nIOAPIC.prototype.set_state = function(state)\r\n{\r\n    this.ioredtbl_config = state[0];\r\n    this.ioredtbl_destination = state[1];\r\n    this.ioregsel = state[2];\r\n    this.ioapic_id = state[3];\r\n    this.irr = state[4];\r\n    this.irq_value = state[5];\r\n};\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar STATE_VERSION = 5;\r\n\r\n/** @const */\r\nvar STATE_MAGIC = 0x86768676|0;\r\n\r\n/** @const */\r\nvar STATE_INDEX_MAGIC = 0;\r\n\r\n/** @const */\r\nvar STATE_INDEX_VERSION = 1;\r\n\r\n/** @const */\r\nvar STATE_INDEX_TOTAL_LEN = 2;\r\n\r\n/** @const */\r\nvar STATE_INDEX_INFO_LEN = 3;\r\n\r\n/** @const */\r\nvar STATE_INFO_BLOCK_START = 16;\r\n\r\n\r\n/** @constructor */\r\nfunction StateLoadError(msg)\r\n{\r\n    this.message = msg;\r\n}\r\nStateLoadError.prototype = new Error;\r\n\r\n\r\nfunction save_object(obj, saved_buffers)\r\n{\r\n    if(typeof obj !== \"object\" || obj === null || obj instanceof Array)\r\n    {\r\n        return obj;\r\n    }\r\n\r\n    dbg_assert(obj.constructor !== Object);\r\n\r\n    if(obj.BYTES_PER_ELEMENT)\r\n    {\r\n        // Uint8Array, etc.\r\n        var buffer = new Uint8Array(obj.buffer, obj.byteOffset, obj.length * obj.BYTES_PER_ELEMENT);\r\n\r\n        return {\r\n            \"__state_type__\": obj.constructor.name,\r\n            \"buffer_id\": saved_buffers.push(buffer) - 1,\r\n        };\r\n    }\r\n\r\n    if(DEBUG && !obj.get_state)\r\n    {\r\n        console.log(\"Object without get_state: \", obj);\r\n    }\r\n\r\n    var state = obj.get_state();\r\n    var result = [];\r\n\r\n    for(var i = 0; i < state.length; i++)\r\n    {\r\n        var value = state[i];\r\n\r\n        dbg_assert(typeof value !== \"function\");\r\n\r\n        result[i] = save_object(value, saved_buffers);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction restore_object(base, obj, buffers)\r\n{\r\n    // recursively restore obj into base\r\n\r\n    if(typeof obj !== \"object\" || obj === null)\r\n    {\r\n        return obj;\r\n    }\r\n\r\n    if(base instanceof Array)\r\n    {\r\n        return obj;\r\n    }\r\n\r\n    var type = obj[\"__state_type__\"];\r\n\r\n    if(type === undefined)\r\n    {\r\n        if(DEBUG && base === undefined)\r\n        {\r\n            console.log(\"Cannot restore (base doesn't exist)\", obj);\r\n            dbg_assert(false);\r\n        }\r\n\r\n        if(DEBUG && !base.get_state)\r\n        {\r\n            console.log(\"No get_state:\", base);\r\n        }\r\n\r\n        var current = base.get_state();\r\n\r\n        dbg_assert(current.length === obj.length, \"Cannot restore: Different number of properties\");\r\n\r\n        for(var i = 0; i < obj.length; i++)\r\n        {\r\n            obj[i] = restore_object(current[i], obj[i], buffers);\r\n        }\r\n\r\n        base.set_state(obj);\r\n\r\n        return base;\r\n    }\r\n    else\r\n    {\r\n        var table = {\r\n            \"Uint8Array\": Uint8Array,\r\n            \"Int8Array\": Int8Array,\r\n            \"Uint16Array\": Uint16Array,\r\n            \"Int16Array\": Int16Array,\r\n            \"Uint32Array\": Uint32Array,\r\n            \"Int32Array\": Int32Array,\r\n            \"Float32Array\": Float32Array,\r\n            \"Float64Array\": Float64Array,\r\n        };\r\n\r\n        var constructor = table[type];\r\n        dbg_assert(constructor, \"Unkown type: \" + type);\r\n\r\n        var info = buffers.infos[obj[\"buffer_id\"]];\r\n\r\n        dbg_assert(base);\r\n        dbg_assert(base.constructor === constructor);\r\n\r\n        // restore large buffers by just returning a view on the state blob\r\n        if(info.length >= 1024 * 1024 && constructor === Uint8Array)\r\n        {\r\n            return new Uint8Array(buffers.full, info.offset, info.length);\r\n        }\r\n        // XXX: Disabled, unpredictable since it updates in-place, breaks pci\r\n        //      and possibly also breaks restore -> save -> restore again\r\n        // avoid a new allocation if possible\r\n        //else if(base &&\r\n        //        base.constructor === constructor &&\r\n        //        base.byteOffset === 0 &&\r\n        //        base.byteLength === info.length)\r\n        //{\r\n        //    new Uint8Array(base.buffer).set(\r\n        //        new Uint8Array(buffers.full, info.offset, info.length),\r\n        //        base.byteOffset\r\n        //    );\r\n        //    return base;\r\n        //}\r\n        else\r\n        {\r\n            var buf = buffers.full.slice(info.offset, info.offset + info.length);\r\n            return new constructor(buf);\r\n        }\r\n    }\r\n}\r\n\r\nCPU.prototype.save_state = function()\r\n{\r\n    var saved_buffers = [];\r\n    var state = save_object(this, saved_buffers);\r\n\r\n    var buffer_infos = [];\r\n    var total_buffer_size = 0;\r\n\r\n    for(var i = 0; i < saved_buffers.length; i++)\r\n    {\r\n        var len = saved_buffers[i].byteLength;\r\n\r\n        buffer_infos[i] = {\r\n            offset: total_buffer_size,\r\n            length: len,\r\n        };\r\n\r\n        total_buffer_size += len;\r\n\r\n        // align\r\n        total_buffer_size = total_buffer_size + 3 & ~3;\r\n    }\r\n\r\n    var info_object = JSON.stringify({\r\n        \"buffer_infos\": buffer_infos,\r\n        \"state\": state,\r\n    });\r\n\r\n    var buffer_block_start = STATE_INFO_BLOCK_START + 2 * info_object.length;\r\n    buffer_block_start = buffer_block_start + 3 & ~3;\r\n    var total_size = buffer_block_start + total_buffer_size;\r\n\r\n    //console.log(\"State: json_size=\" + Math.ceil(buffer_block_start / 1024 / 1024) + \"MB \" +\r\n    //               \"buffer_size=\" + Math.ceil(total_buffer_size / 1024 / 1024) + \"MB\");\r\n\r\n    var result = new ArrayBuffer(total_size);\r\n\r\n    var header_block = new Int32Array(\r\n        result,\r\n        0,\r\n        STATE_INFO_BLOCK_START / 4\r\n    );\r\n    var info_block = new Uint16Array(\r\n        result,\r\n        STATE_INFO_BLOCK_START,\r\n        info_object.length\r\n    );\r\n    var buffer_block = new Uint8Array(\r\n        result,\r\n        buffer_block_start\r\n    );\r\n\r\n    header_block[STATE_INDEX_MAGIC] = STATE_MAGIC;\r\n    header_block[STATE_INDEX_VERSION] = STATE_VERSION;\r\n    header_block[STATE_INDEX_TOTAL_LEN] = total_size;\r\n    header_block[STATE_INDEX_INFO_LEN] = info_object.length * 2;\r\n\r\n    for(var i = 0; i < info_object.length; i++)\r\n    {\r\n        info_block[i] = info_object.charCodeAt(i);\r\n    }\r\n\r\n    for(var i = 0; i < saved_buffers.length; i++)\r\n    {\r\n        var buffer = saved_buffers[i];\r\n        dbg_assert(buffer.constructor === Uint8Array);\r\n        buffer_block.set(buffer, buffer_infos[i].offset);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nCPU.prototype.restore_state = function(state)\r\n{\r\n    var len = state.byteLength;\r\n\r\n    if(len < STATE_INFO_BLOCK_START)\r\n    {\r\n        throw new StateLoadError(\"Invalid length: \" + len);\r\n    }\r\n\r\n    var header_block = new Int32Array(state, 0, 4);\r\n\r\n    if(header_block[STATE_INDEX_MAGIC] !== STATE_MAGIC)\r\n    {\r\n        throw new StateLoadError(\"Invalid header: \" + h(header_block[STATE_INDEX_MAGIC] >>> 0));\r\n    }\r\n\r\n    if(header_block[STATE_INDEX_VERSION] !== STATE_VERSION)\r\n    {\r\n        throw new StateLoadError(\r\n                \"Version mismatch: dump=\" + header_block[STATE_INDEX_VERSION] +\r\n                \" we=\" + STATE_VERSION);\r\n    }\r\n\r\n    if(header_block[STATE_INDEX_TOTAL_LEN] !== len)\r\n    {\r\n        throw new StateLoadError(\r\n                \"Length doesn't match header: \" +\r\n                \"real=\" + len + \" header=\" + header_block[STATE_INDEX_TOTAL_LEN]);\r\n    }\r\n\r\n    var info_block_len = header_block[STATE_INDEX_INFO_LEN];\r\n\r\n    if(info_block_len < 0 ||\r\n       info_block_len + 12 >= len ||\r\n       info_block_len % 2)\r\n    {\r\n        throw new StateLoadError(\"Invalid info block length: \" + info_block_len);\r\n    }\r\n\r\n    var info_block_str_len = info_block_len / 2;\r\n    var info_block_buffer = new Uint16Array(state, STATE_INFO_BLOCK_START, info_block_str_len);\r\n    var info_block = \"\";\r\n\r\n    for(var i = 0; i < info_block_str_len - 8; )\r\n    {\r\n        info_block += String.fromCharCode(\r\n            info_block_buffer[i++], info_block_buffer[i++],\r\n            info_block_buffer[i++], info_block_buffer[i++],\r\n            info_block_buffer[i++], info_block_buffer[i++],\r\n            info_block_buffer[i++], info_block_buffer[i++]\r\n        );\r\n    }\r\n\r\n    for(; i < info_block_str_len; )\r\n    {\r\n        info_block += String.fromCharCode(info_block_buffer[i++]);\r\n    }\r\n\r\n    var info_block_obj = JSON.parse(info_block);\r\n    var state_object = info_block_obj[\"state\"];\r\n    var buffer_infos = info_block_obj[\"buffer_infos\"];\r\n    var buffer_block_start = STATE_INFO_BLOCK_START + info_block_len;\r\n    buffer_block_start = buffer_block_start + 3 & ~3;\r\n\r\n    for(var i = 0; i < buffer_infos.length; i++)\r\n    {\r\n        buffer_infos[i].offset += buffer_block_start;\r\n    }\r\n\r\n    var buffers = {\r\n        full: state,\r\n        infos: buffer_infos,\r\n    };\r\n\r\n    restore_object(this, state_object, buffers);\r\n};\r\n","\"use strict\";\r\n\r\n// http://www.ethernut.de/pdf/8019asds.pdf\r\n\r\nconst NE2K_LOG_VERBOSE = false;\r\n\r\n/** @const */ var E8390_CMD = 0x00; /* The command register (for all pages) */\r\n\r\n/* Page 0 register offsets. */\r\n/** @const */ var EN0_CLDALO = 0x01; /* Low byte of current local dma addr RD */\r\n/** @const */ var EN0_STARTPG = 0x01; /* Starting page of ring bfr WR */\r\n/** @const */ var EN0_CLDAHI = 0x02; /* High byte of current local dma addr RD */\r\n/** @const */ var EN0_STOPPG = 0x02; /* Ending page +1 of ring bfr WR */\r\n/** @const */ var EN0_BOUNDARY = 0x03; /* Boundary page of ring bfr RD WR */\r\n/** @const */ var EN0_TSR = 0x04; /* Transmit status reg RD */\r\n/** @const */ var EN0_TPSR = 0x04; /* Transmit starting page WR */\r\n/** @const */ var EN0_NCR = 0x05; /* Number of collision reg RD */\r\n/** @const */ var EN0_TCNTLO = 0x05; /* Low byte of tx byte count WR */\r\n/** @const */ var EN0_FIFO = 0x06; /* FIFO RD */\r\n/** @const */ var EN0_TCNTHI = 0x06; /* High byte of tx byte count WR */\r\n/** @const */ var EN0_ISR = 0x07; /* Interrupt status reg RD WR */\r\n/** @const */ var EN0_CRDALO = 0x08; /* low byte of current remote dma address RD */\r\n/** @const */ var EN0_RSARLO = 0x08; /* Remote start address reg 0 */\r\n/** @const */ var EN0_CRDAHI = 0x09; /* high byte, current remote dma address RD */\r\n/** @const */ var EN0_RSARHI = 0x09; /* Remote start address reg 1 */\r\n/** @const */ var EN0_RCNTLO = 0x0a; /* Remote byte count reg WR */\r\n/** @const */ var EN0_RCNTHI = 0x0b; /* Remote byte count reg WR */\r\n/** @const */ var EN0_RSR = 0x0c; /* rx status reg RD */\r\n/** @const */ var EN0_RXCR = 0x0c; /* RX configuration reg WR */\r\n/** @const */ var EN0_TXCR = 0x0d; /* TX configuration reg WR */\r\n/** @const */ var EN0_COUNTER0 = 0x0d; /* Rcv alignment error counter RD */\r\n/** @const */ var EN0_DCFG = 0x0e; /* Data configuration reg WR */\r\n/** @const */ var EN0_COUNTER1 = 0x0e; /* Rcv CRC error counter RD */\r\n/** @const */ var EN0_IMR = 0x0f; /* Interrupt mask reg WR */\r\n/** @const */ var EN0_COUNTER2 = 0x0f; /* Rcv missed frame error counter RD */\r\n\r\n/** @const */ var NE_DATAPORT = 0x10; /* NatSemi-defined port window offset. */\r\n/** @const */ var NE_RESET = 0x1f; /* Issue a read to reset, a write to clear. */\r\n\r\n/* Bits in EN0_ISR - Interrupt status register */\r\n/** @const */ var ENISR_RX = 0x01; /* Receiver, no error */\r\n/** @const */ var ENISR_TX = 0x02; /* Transmitter, no error */\r\n/** @const */ var ENISR_RX_ERR = 0x04; /* Receiver, with error */\r\n/** @const */ var ENISR_TX_ERR = 0x08; /* Transmitter, with error */\r\n/** @const */ var ENISR_OVER = 0x10; /* Receiver overwrote the ring */\r\n/** @const */ var ENISR_COUNTERS = 0x20; /* Counters need emptying */\r\n/** @const */ var ENISR_RDC = 0x40; /* remote dma complete */\r\n/** @const */ var ENISR_RESET = 0x80; /* Reset completed */\r\n/** @const */ var ENISR_ALL = 0x3f; /* Interrupts we will enable */\r\n\r\n/** @const */ var ENRSR_RXOK = 0x01; /* Received a good packet */\r\n\r\n/** @const */ var START_PAGE = 0x40;\r\n/** @const */ var START_RX_PAGE = 0x40 + 12;\r\n/** @const */ var STOP_PAGE = 0x80;\r\n\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {BusConnector} bus\r\n * @param {Boolean} preserve_mac_from_state_image\r\n */\r\nfunction Ne2k(cpu, bus, preserve_mac_from_state_image)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    /** @const @type {PCI} */\r\n    this.pci = cpu.devices.pci;\r\n\r\n    this.preserve_mac_from_state_image = preserve_mac_from_state_image;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n    this.bus.register(\"net0-receive\", function(data)\r\n    {\r\n        this.receive(data);\r\n    }, this);\r\n\r\n    this.port = 0x300;\r\n\r\n    this.name = \"ne2k\";\r\n\r\n    /** @const */\r\n    var use_pci = true;\r\n\r\n    if(use_pci)\r\n    {\r\n        this.pci_space = [\r\n            0xec, 0x10, 0x29, 0x80, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,\r\n            this.port & 0xFF | 1, this.port >> 8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x1a, 0x00, 0x11,\r\n            0x00, 0x00, 0xb8, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,\r\n        ];\r\n        this.pci_id = 0x05 << 3;\r\n        this.pci_bars = [\r\n            {\r\n                size: 32,\r\n            },\r\n        ];\r\n    }\r\n\r\n    this.isr = 0;\r\n    this.imr = 0; // interrupt mask register\r\n\r\n    this.cr = 1;\r\n\r\n    this.dcfg = 0;\r\n\r\n    this.rcnt = 0;\r\n\r\n    this.tcnt = 0;\r\n    this.tpsr = 0;\r\n    this.memory = new Uint8Array(256 * 0x80);\r\n\r\n    this.rxcr = 0;\r\n    this.txcr = 0;\r\n    this.tsr = 1;\r\n\r\n    // mac address\r\n    this.mac = new Uint8Array([\r\n        0x00, 0x22, 0x15,\r\n        Math.random() * 255 | 0,\r\n        Math.random() * 255 | 0,\r\n        Math.random() * 255 | 0,\r\n    ]);\r\n\r\n    for(var i = 0; i < 6; i++)\r\n    {\r\n        this.memory[i << 1] = this.memory[i << 1 | 1] = this.mac[i];\r\n    }\r\n\r\n    // the PROM signature of 0x57, 0x57 is also doubled\r\n    // resulting in setting the 4 bytes at the end, 28, 29, 30 and 31 to 0x57\r\n    this.memory[14 << 1] = this.memory[14 << 1 | 1] = 0x57;\r\n    this.memory[15 << 1] = this.memory[15 << 1 | 1] = 0x57;\r\n\r\n    dbg_log(\"Mac: \" + h(this.mac[0], 2) + \":\" +\r\n                      h(this.mac[1], 2) + \":\" +\r\n                      h(this.mac[2], 2) + \":\" +\r\n                      h(this.mac[3], 2) + \":\" +\r\n                      h(this.mac[4], 2) + \":\" +\r\n                      h(this.mac[5], 2), LOG_NET);\r\n\r\n    this.rsar = 0;\r\n\r\n    this.pstart = START_PAGE;\r\n    this.pstop = STOP_PAGE;\r\n\r\n    this.curpg = START_RX_PAGE;\r\n    this.boundary = START_RX_PAGE;\r\n\r\n    var io = cpu.io;\r\n\r\n    io.register_read(this.port | E8390_CMD, this, function()\r\n    {\r\n        dbg_log(\"Read cmd\", LOG_NET);\r\n        return this.cr;\r\n    });\r\n\r\n    io.register_write(this.port | E8390_CMD, this, function(data_byte)\r\n    {\r\n        this.cr = data_byte;\r\n        dbg_log(\"Write command: \" + h(data_byte, 2) + \" newpg=\" + (this.cr >> 6) + \" txcr=\" + h(this.txcr, 2), LOG_NET);\r\n\r\n        if(this.cr & 1)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if((data_byte & 0x18) && this.rcnt === 0)\r\n        {\r\n            this.do_interrupt(ENISR_RDC);\r\n        }\r\n\r\n        if(data_byte & 4)\r\n        {\r\n            var start = this.tpsr << 8;\r\n            var data = this.memory.subarray(start, start + this.tcnt);\r\n            this.bus.send(\"net0-send\", data);\r\n            this.bus.send(\"eth-transmit-end\", [data.length]);\r\n            this.cr &= ~4;\r\n            this.do_interrupt(ENISR_TX);\r\n\r\n            dbg_log(\"Command: Transfer. length=\" + h(data.byteLength), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_COUNTER0, this, function()\r\n    {\r\n        dbg_log(\"Read counter0\", LOG_NET);\r\n        return 0;\r\n    });\r\n\r\n    io.register_read(this.port | EN0_COUNTER1, this, function()\r\n    {\r\n        dbg_log(\"Read counter1\", LOG_NET);\r\n        return 0;\r\n    });\r\n\r\n    io.register_read(this.port | EN0_COUNTER2, this, function()\r\n    {\r\n        dbg_log(\"Read counter2\", LOG_NET);\r\n        return 0;\r\n    });\r\n\r\n    io.register_read(this.port | NE_RESET, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read reset\", LOG_NET);\r\n            this.do_interrupt(ENISR_RESET);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/1f\", LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n        return 0;\r\n    });\r\n\r\n    io.register_write(this.port | NE_RESET, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write reset: \" + h(data_byte, 2), LOG_NET);\r\n            //this.isr &= ~ENISR_RESET;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/1f: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_STARTPG, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            return this.pstart;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/01 (mac[0])\", LOG_NET);\r\n            return this.mac[0];\r\n        }\r\n        else if(pg === 2)\r\n        {\r\n            return this.pstart;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/01\");\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_STARTPG, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"start page: \" + h(data_byte, 2), LOG_NET);\r\n            this.pstart = data_byte;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[0] = \" + h(data_byte), LOG_NET);\r\n            this.mac[0] = data_byte;\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg3/01 (9346CR): \" + h(data_byte), LOG_NET);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/01: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n\r\n    io.register_read(this.port | EN0_STOPPG, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            return this.pstop;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/02 (mac[1])\", LOG_NET);\r\n            return this.mac[1];\r\n        }\r\n        else if(pg === 2)\r\n        {\r\n            return this.pstop;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/02\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_STOPPG, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"stop page: \" + h(data_byte, 2), LOG_NET);\r\n            if(data_byte > (this.memory.length >> 8))\r\n            {\r\n                data_byte = this.memory.length >> 8;\r\n                dbg_log(\"XXX: Adjusting stop page to \" + h(data_byte), LOG_NET);\r\n            }\r\n            this.pstop = data_byte;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[1] = \" + h(data_byte), LOG_NET);\r\n            this.mac[1] = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/02: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_ISR, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read isr: \" + h(this.isr, 2), LOG_NET);\r\n            return this.isr;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read curpg: \" + h(this.curpg, 2), LOG_NET);\r\n            return this.curpg;\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_ISR, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            // acknowledge interrupts where bit is set\r\n            dbg_log(\"Write isr: \" + h(data_byte, 2), LOG_NET);\r\n            this.isr &= ~data_byte;\r\n            this.update_irq();\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Write curpg: \" + h(data_byte, 2), LOG_NET);\r\n            this.curpg = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_TXCR, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            this.txcr = data_byte;\r\n            dbg_log(\"Write tx config: \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0d \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_DCFG, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write data configuration: \" + h(data_byte, 2), LOG_NET);\r\n            this.dcfg = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0e \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_RCNTLO, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read pg0/0a\", LOG_NET);\r\n            return 0x50;\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false, \"TODO\");\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_RCNTLO, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write remote byte count low: \" + h(data_byte, 2), LOG_NET);\r\n            this.rcnt = this.rcnt & 0xFF00 | data_byte & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0a \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_RCNTHI, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read pg0/0b\", LOG_NET);\r\n            return 0x43;\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false, \"TODO\");\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_RCNTHI, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write remote byte count high: \" + h(data_byte, 2), LOG_NET);\r\n            this.rcnt = this.rcnt & 0xFF | data_byte << 8 & 0xFF00;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0b \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_RSARLO, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read remote start address low\", LOG_NET);\r\n            return this.rsar & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg\" + pg + \"/08\", LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_RSARLO, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write remote start address low: \" + h(data_byte, 2), LOG_NET);\r\n            this.rsar = this.rsar & 0xFF00 | data_byte & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/08 \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_RSARHI, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read remote start address high\", LOG_NET);\r\n            return this.rsar >> 8 & 0xFF;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg\" + pg + \"/09\", LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_RSARHI, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write remote start address low: \" + h(data_byte, 2), LOG_NET);\r\n            this.rsar = this.rsar & 0xFF | data_byte << 8 & 0xFF00;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/09 \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_IMR, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write interrupt mask register: \" + h(data_byte, 2) + \" isr=\" + h(this.isr, 2), LOG_NET);\r\n            this.imr = data_byte;\r\n            this.update_irq();\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0f \" + h(data_byte, 2), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_BOUNDARY, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Read boundary: \" + h(this.boundary, 2), LOG_NET);\r\n            return this.boundary;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/03 (mac[2])\", LOG_NET);\r\n            return this.mac[2];\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg3/03 (CONFIG0)\", LOG_NET);\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/03\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_BOUNDARY, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write boundary: \" + h(data_byte, 2), LOG_NET);\r\n            this.boundary = data_byte;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[2] = \" + h(data_byte), LOG_NET);\r\n            this.mac[2] = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/03: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_TSR, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            return this.tsr;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/04 (mac[3])\", LOG_NET);\r\n            return this.mac[3];\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/04\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_TPSR, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write tpsr: \" + h(data_byte, 2), LOG_NET);\r\n            this.tpsr = data_byte;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[3] = \" + h(data_byte), LOG_NET);\r\n            this.mac[3] = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/04: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_TCNTLO, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg0/05 (NCR: Number of Collisions Register)\", LOG_NET);\r\n            return 0;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/05 (mac[4])\", LOG_NET);\r\n            return this.mac[4];\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg3/05 (CONFIG2)\", LOG_NET);\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/05\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_TCNTLO, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write tcnt low: \" + h(data_byte, 2), LOG_NET);\r\n            this.tcnt = this.tcnt & ~0xFF | data_byte;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[4] = \" + h(data_byte), LOG_NET);\r\n            this.mac[4] = data_byte;\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg3/05 (CONFIG2): \" + h(data_byte), LOG_NET);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/05: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_TCNTHI, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_assert(false, \"TODO\");\r\n            return 0;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"Read pg1/06 (mac[5])\", LOG_NET);\r\n            return this.mac[5];\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg3/06 (CONFIG3)\", LOG_NET);\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Read pg\" + pg + \"/06\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_TCNTHI, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"Write tcnt high: \" + h(data_byte, 2), LOG_NET);\r\n            this.tcnt = this.tcnt & 0xFF | data_byte << 8;\r\n        }\r\n        else if(pg === 1)\r\n        {\r\n            dbg_log(\"mac[5] = \" + h(data_byte), LOG_NET);\r\n            this.mac[5] = data_byte;\r\n        }\r\n        else if(pg === 3)\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg3/06 (CONFIG3): \" + h(data_byte), LOG_NET);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Write pg\" + pg + \"/06: \" + h(data_byte), LOG_NET);\r\n            dbg_assert(false);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | EN0_RSR, this, function()\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            return 1 | 1 << 3; // receive status ok\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Read pg\" + pg + \"/0c\", LOG_NET);\r\n            dbg_assert(false);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(this.port | EN0_RXCR, this, function(data_byte)\r\n    {\r\n        var pg = this.get_page();\r\n        if(pg === 0)\r\n        {\r\n            dbg_log(\"RX configuration reg write: \" + h(data_byte, 2), LOG_NET);\r\n            this.rxcr = data_byte;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unimplemented: Write pg\" + pg + \"/0c: \" + h(data_byte), LOG_NET);\r\n        }\r\n    });\r\n\r\n    io.register_read(this.port | NE_DATAPORT | 0, this,\r\n            this.data_port_read8,\r\n            this.data_port_read16,\r\n            this.data_port_read32);\r\n    io.register_write(this.port | NE_DATAPORT | 0, this,\r\n            this.data_port_write16,\r\n            this.data_port_write16,\r\n            this.data_port_write32);\r\n\r\n    if(use_pci)\r\n    {\r\n        cpu.devices.pci.register_device(this);\r\n    }\r\n}\r\n\r\nNe2k.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.isr;\r\n    state[1] = this.imr;\r\n    state[2] = this.cr;\r\n    state[3] = this.dcfg;\r\n    state[4] = this.rcnt;\r\n    state[5] = this.tcnt;\r\n    state[6] = this.tpsr;\r\n    state[7] = this.rsar;\r\n    state[8] = this.pstart;\r\n    state[9] = this.curpg;\r\n    state[10] = this.boundary;\r\n    state[11] = this.pstop;\r\n    state[12] = this.rxcr;\r\n    state[13] = this.txcr;\r\n    state[14] = this.tsr;\r\n    state[15] = this.mac;\r\n    state[16] = this.memory;\r\n\r\n    return state;\r\n};\r\n\r\nNe2k.prototype.set_state = function(state)\r\n{\r\n    this.isr = state[0];\r\n    this.imr = state[1];\r\n    this.cr = state[2];\r\n    this.dcfg = state[3];\r\n    this.rcnt = state[4];\r\n    this.tcnt = state[5];\r\n    this.tpsr = state[6];\r\n    this.rsar = state[7];\r\n    this.pstart = state[8];\r\n    this.curpg = state[9];\r\n    this.boundary = state[10];\r\n    this.pstop = state[11];\r\n    this.rxcr = state[12];\r\n    this.txcr = state[13];\r\n    this.tsr = state[14];\r\n\r\n    if(this.preserve_mac_from_state_image)\r\n    {\r\n        this.mac = state[15];\r\n        this.memory = state[16];\r\n    }\r\n};\r\n\r\nNe2k.prototype.do_interrupt = function(ir_mask)\r\n{\r\n    dbg_log(\"Do interrupt \" + h(ir_mask, 2), LOG_NET);\r\n    this.isr |= ir_mask;\r\n    this.update_irq();\r\n};\r\n\r\nNe2k.prototype.update_irq = function()\r\n{\r\n    if(this.imr & this.isr)\r\n    {\r\n        this.pci.raise_irq(this.pci_id);\r\n    }\r\n    else\r\n    {\r\n        this.pci.lower_irq(this.pci_id);\r\n    }\r\n};\r\n\r\nNe2k.prototype.data_port_write = function(data_byte)\r\n{\r\n    if(NE2K_LOG_VERBOSE)\r\n    {\r\n        dbg_log(\"Write data port: data=\" + h(data_byte & 0xFF, 2) +\r\n                                \" rsar=\" + h(this.rsar, 4) +\r\n                                \" rcnt=\" + h(this.rcnt, 4), LOG_NET);\r\n    }\r\n\r\n    if(this.rsar <= 0x10 || this.rsar >= (START_PAGE << 8) && this.rsar < (STOP_PAGE << 8))\r\n    {\r\n        this.memory[this.rsar] = data_byte;\r\n    }\r\n\r\n    this.rsar++;\r\n    this.rcnt--;\r\n\r\n    if(this.rsar >= (this.pstop << 8))\r\n    {\r\n        this.rsar += (this.pstart - this.pstop) << 8;\r\n    }\r\n\r\n    if(this.rcnt === 0)\r\n    {\r\n        this.do_interrupt(ENISR_RDC);\r\n    }\r\n};\r\n\r\nNe2k.prototype.data_port_write16 = function(data)\r\n{\r\n    this.data_port_write(data);\r\n\r\n    if(this.dcfg & 1)\r\n    {\r\n        this.data_port_write(data >> 8);\r\n    }\r\n};\r\n\r\nNe2k.prototype.data_port_write32 = function(data)\r\n{\r\n    this.data_port_write(data);\r\n    this.data_port_write(data >> 8);\r\n    this.data_port_write(data >> 16);\r\n    this.data_port_write(data >> 24);\r\n};\r\n\r\nNe2k.prototype.data_port_read = function()\r\n{\r\n    let data = 0;\r\n\r\n    if(this.rsar < (STOP_PAGE << 8))\r\n    {\r\n        data = this.memory[this.rsar];\r\n    }\r\n\r\n    if(NE2K_LOG_VERBOSE)\r\n    {\r\n        dbg_log(\"Read data port: data=\" + h(data, 2) +\r\n                               \" rsar=\" + h(this.rsar, 4) +\r\n                               \" rcnt=\" + h(this.rcnt, 4), LOG_NET);\r\n    }\r\n\r\n    this.rsar++;\r\n    this.rcnt--;\r\n\r\n    if(this.rsar >= (this.pstop << 8))\r\n    {\r\n        this.rsar += (this.pstart - this.pstop) << 8;\r\n    }\r\n\r\n    if(this.rcnt === 0)\r\n    {\r\n        this.do_interrupt(ENISR_RDC);\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nNe2k.prototype.data_port_read8 = function()\r\n{\r\n    return this.data_port_read16() & 0xFF;\r\n};\r\n\r\nNe2k.prototype.data_port_read16 = function()\r\n{\r\n    if(this.dcfg & 1)\r\n    {\r\n        return this.data_port_read() | this.data_port_read() << 8;\r\n    }\r\n    else\r\n    {\r\n        return this.data_port_read();\r\n    }\r\n};\r\n\r\nNe2k.prototype.data_port_read32 = function()\r\n{\r\n    return this.data_port_read() | this.data_port_read() << 8 |\r\n            this.data_port_read() << 16 | this.data_port_read() << 24;\r\n};\r\n\r\nNe2k.prototype.receive = function(data)\r\n{\r\n    // called from the adapter when data is received over the network\r\n\r\n    if(this.cr & 1)\r\n    {\r\n        // stop bit set\r\n        return;\r\n    }\r\n\r\n    this.bus.send(\"eth-receive-end\", [data.length]);\r\n\r\n    if(this.rxcr & 0x10)\r\n    {\r\n        // promiscuous\r\n    }\r\n    else if((this.rxcr & 4) &&\r\n            data[0] === 0xFF && data[1] === 0xFF && data[2] === 0xFF &&\r\n            data[3] === 0xFF && data[4] === 0xFF && data[5] === 0xFF)\r\n    {\r\n        // broadcast\r\n    }\r\n    else if((this.rxcr & 8) && (data[0] & 1) === 1)\r\n    {\r\n        // multicast\r\n        // XXX\r\n        return;\r\n    }\r\n    else if(data[0] === this.mac[0] && data[1] === this.mac[1] &&\r\n            data[2] === this.mac[2] && data[3] === this.mac[3] &&\r\n            data[4] === this.mac[4] && data[5] === this.mac[5])\r\n    {\r\n    }\r\n    else\r\n    {\r\n        return;\r\n    }\r\n\r\n    var packet_length = Math.max(60, data.length);\r\n\r\n    var offset = this.curpg << 8;\r\n    var total_length = packet_length + 4;\r\n    var data_start = offset + 4;\r\n    var next = this.curpg + 1 + (total_length >> 8);\r\n\r\n    var end = offset + total_length;\r\n\r\n    const needed = 1 + (total_length >> 8);\r\n\r\n    // boundary == curpg interpreted as ringbuffer empty\r\n    const available = this.boundary > this.curpg ?\r\n        this.boundary - this.curpg :\r\n        this.pstop - this.curpg + this.boundary - this.pstart;\r\n\r\n    if(available < needed &&\r\n        this.boundary !== 0 // XXX: ReactOS sets this to 0 initially and never updates it unless it receives a packet\r\n    )\r\n    {\r\n        dbg_log(\"Buffer full, dropping packet pstart=\" + h(this.pstart) + \" pstop=\" + h(this.pstop) +\r\n            \" curpg=\" + h(this.curpg) + \" needed=\" + h(needed) + \" boundary=\" + h(this.boundary) + \" available=\" + h(available), LOG_NET);\r\n        return;\r\n    }\r\n\r\n    if(end > (this.pstop << 8))\r\n    {\r\n        // Shouldn't happen because at this size it can't cross a page,\r\n        // so we can skip filling with zeroes\r\n        dbg_assert(data.length >= 60);\r\n\r\n        var cut = (this.pstop << 8) - data_start;\r\n        dbg_assert(cut >= 0);\r\n\r\n        this.memory.set(data.subarray(0, cut), data_start);\r\n        this.memory.set(data.subarray(cut), this.pstart << 8);\r\n        dbg_log(\"rcv cut=\" + h(cut), LOG_NET);\r\n    }\r\n    else\r\n    {\r\n        this.memory.set(data, data_start);\r\n\r\n        if(data.length < 60)\r\n        {\r\n            this.memory.fill(0, data_start + data.length, data_start + 60);\r\n        }\r\n    }\r\n\r\n    if(next >= this.pstop)\r\n    {\r\n        next += this.pstart - this.pstop;\r\n    }\r\n\r\n    // write packet header\r\n    this.memory[offset] = ENRSR_RXOK; // status\r\n    this.memory[offset + 1] = next;\r\n    this.memory[offset + 2] = total_length;\r\n    this.memory[offset + 3] = total_length >> 8;\r\n\r\n    this.curpg = next;\r\n\r\n    dbg_log(\"rcv offset=\" + h(offset) + \" len=\" + h(total_length) + \" next=\" + h(next), LOG_NET);\r\n\r\n    this.do_interrupt(ENISR_RX);\r\n};\r\n\r\nNe2k.prototype.get_page = function()\r\n{\r\n    return this.cr >> 6 & 3;\r\n};\r\n","\"use strict\";\r\n\r\n// Useful documentation, articles, and source codes for reference:\r\n// ===============================================================\r\n//\r\n// Official Hardware Programming Guide\r\n// -> https://pdos.csail.mit.edu/6.828/2011/readings/hardware/SoundBlaster.pdf\r\n//\r\n// Official Yamaha YMF262 Manual\r\n// -> http://map.grauw.nl/resources/sound/yamaha_ymf262.pdf\r\n//\r\n// OPL3 Programming Guide\r\n// -> http://www.fit.vutbr.cz/~arnost/opl/opl3.html\r\n//\r\n// DOSBox\r\n// -> https://sourceforge.net/p/dosbox/code-0/HEAD/tree/dosbox/branches/mamesound/src/hardware/sblaster.cpp\r\n// -> https://github.com/duganchen/dosbox/blob/master/src/hardware/sblaster.cpp\r\n// -> https://github.com/joncampbell123/dosbox-x/blob/master/src/hardware/sblaster.cpp\r\n//\r\n// QEMU\r\n// -> https://github.com/qemu/qemu/blob/master/hw/audio/sb16.c\r\n// -> https://github.com/hackndev/qemu/blob/master/hw/sb16.c\r\n//\r\n// VirtualBox\r\n// -> https://www.virtualbox.org/svn/vbox/trunk/src/VBox/Devices/Audio/DevSB16.cpp\r\n// -> https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/master/src/VBox/Devices/Audio/DevSB16.cpp\r\n\r\nvar\r\n\r\n    // Used for drivers to identify device (DSP command 0xE3).\r\n/** @const */ DSP_COPYRIGHT = \"COPYRIGHT (C) CREATIVE TECHNOLOGY LTD, 1992.\",\r\n\r\n    // Value of the current DSP command that indicates that the\r\n    // next command/data write in port 2xC should be interpreted\r\n    // as a command number.\r\n/** @const */ DSP_NO_COMMAND = 0,\r\n\r\n    // Size (bytes) of the DSP write/read buffers\r\n/** @const */ DSP_BUFSIZE = 64,\r\n\r\n    // Size (bytes) of the buffers containing floating point linear PCM audio.\r\n/** @const */ DSP_DACSIZE = 65536,\r\n\r\n    // Size (bytes) of the buffer in which DMA transfers are temporarily\r\n    // stored before being processed.\r\n/** @const */ SB_DMA_BUFSIZE = 65536,\r\n\r\n    // Number of samples to attempt to retrieve per transfer.\r\n/** @const */ SB_DMA_BLOCK_SAMPLES = 1024,\r\n\r\n    // Usable DMA channels.\r\n/** @const */ SB_DMA0 = 0,\r\n/** @const */ SB_DMA1 = 1,\r\n/** @const */ SB_DMA3 = 3,\r\n/** @const */ SB_DMA5 = 5,\r\n/** @const */ SB_DMA6 = 6,\r\n/** @const */ SB_DMA7 = 7,\r\n\r\n    // Default DMA channels.\r\n/** @const */ SB_DMA_CHANNEL_8BIT = SB_DMA1,\r\n/** @const */ SB_DMA_CHANNEL_16BIT = SB_DMA5,\r\n\r\n    // Usable IRQ channels.\r\n/** @const */ SB_IRQ2 = 2,\r\n/** @const */ SB_IRQ5 = 5,\r\n/** @const */ SB_IRQ7 = 7,\r\n/** @const */ SB_IRQ10 = 10,\r\n\r\n    // Default IRQ channel.\r\n/** @const */ SB_IRQ = SB_IRQ5,\r\n\r\n    // Indices to the irq_triggered register.\r\n/** @const */ SB_IRQ_8BIT = 0x1,\r\n/** @const */ SB_IRQ_16BIT = 0x2,\r\n/** @const */ SB_IRQ_MIDI = 0x1,\r\n/** @const */ SB_IRQ_MPU = 0x4;\r\n\r\n\r\n// Probably less efficient, but it's more maintainable, instead\r\n// of having a single large unorganised and decoupled table.\r\nvar DSP_COMMAND_SIZES = new Uint8Array(256);\r\nvar DSP_COMMAND_HANDLERS = [];\r\nvar MIXER_READ_HANDLERS = [];\r\nvar MIXER_WRITE_HANDLERS = [];\r\nvar MIXER_REGISTER_IS_LEGACY = new Uint8Array(256);\r\nvar FM_HANDLERS = [];\r\n\r\n\r\n/**\r\n * Sound Blaster 16 Emulator, or so it seems.\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {BusConnector} bus\r\n */\r\nfunction SB16(cpu, bus)\r\n{\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    // I/O Buffers.\r\n    this.write_buffer = new ByteQueue(DSP_BUFSIZE);\r\n    this.read_buffer = new ByteQueue(DSP_BUFSIZE);\r\n    this.read_buffer_lastvalue = 0;\r\n\r\n    // Current DSP command info.\r\n    this.command = DSP_NO_COMMAND;\r\n    this.command_size = 0;\r\n\r\n    // Mixer.\r\n    this.mixer_current_address = 0;\r\n    this.mixer_registers = new Uint8Array(256);\r\n    this.mixer_reset();\r\n\r\n    // Dummy status and test registers.\r\n    this.dummy_speaker_enabled = false;\r\n    this.test_register = 0;\r\n\r\n    // DSP state.\r\n    this.dsp_highspeed = false;\r\n    this.dsp_stereo = false;\r\n    this.dsp_16bit = false;\r\n    this.dsp_signed = false;\r\n\r\n    // DAC buffer.\r\n    // The final destination for audio data before being sent off\r\n    // to Web Audio APIs.\r\n    // Format:\r\n    // Floating precision linear PCM, nominal between -1 and 1.\r\n    this.dac_buffers = [\r\n      new FloatQueue(DSP_DACSIZE),\r\n      new FloatQueue(DSP_DACSIZE),\r\n    ];\r\n\r\n    // Direct Memory Access transfer info.\r\n    this.dma = cpu.devices.dma;\r\n    this.dma_sample_count = 0;\r\n    this.dma_bytes_count = 0;\r\n    this.dma_bytes_left = 0;\r\n    this.dma_bytes_block = 0;\r\n    this.dma_irq = 0;\r\n    this.dma_channel = 0;\r\n    this.dma_channel_8bit = SB_DMA_CHANNEL_8BIT;\r\n    this.dma_channel_16bit = SB_DMA_CHANNEL_16BIT;\r\n    this.dma_autoinit = false;\r\n    this.dma_buffer = new ArrayBuffer(SB_DMA_BUFSIZE);\r\n    this.dma_buffer_int8 = new Int8Array(this.dma_buffer);\r\n    this.dma_buffer_uint8 = new Uint8Array(this.dma_buffer);\r\n    this.dma_buffer_int16 = new Int16Array(this.dma_buffer);\r\n    this.dma_buffer_uint16 = new Uint16Array(this.dma_buffer);\r\n    this.dma_syncbuffer = new SyncBuffer(this.dma_buffer);\r\n    this.dma_waiting_transfer = false;\r\n    this.dma_paused = false;\r\n    this.sampling_rate = 22050;\r\n    bus.send(\"dac-tell-sampling-rate\", this.sampling_rate);\r\n    this.bytes_per_sample = 1;\r\n\r\n    // DMA identification data.\r\n    this.e2_value = 0xAA;\r\n    this.e2_count = 0;\r\n\r\n    // ASP data: not understood by me.\r\n    this.asp_registers = new Uint8Array(256);\r\n\r\n    // MPU.\r\n    this.mpu_read_buffer = new ByteQueue(DSP_BUFSIZE);\r\n    this.mpu_read_buffer_lastvalue = 0;\r\n\r\n    // FM Synthesizer.\r\n    this.fm_current_address0 = 0;\r\n    this.fm_current_address1 = 0;\r\n    this.fm_waveform_select_enable = false;\r\n\r\n    // Interrupts.\r\n    this.irq = SB_IRQ;\r\n    this.irq_triggered = new Uint8Array(0x10);\r\n\r\n    // IO Ports.\r\n    // http://homepages.cae.wisc.edu/~brodskye/sb16doc/sb16doc.html#DSPPorts\r\n    // https://pdos.csail.mit.edu/6.828/2011/readings/hardware/SoundBlaster.pdf\r\n\r\n    cpu.io.register_read_consecutive(0x220, this,\r\n        this.port2x0_read, this.port2x1_read, this.port2x2_read, this.port2x3_read);\r\n    cpu.io.register_read_consecutive(0x388, this,\r\n        this.port2x0_read, this.port2x1_read);\r\n\r\n    cpu.io.register_read_consecutive(0x224, this,\r\n        this.port2x4_read, this.port2x5_read);\r\n\r\n    cpu.io.register_read(0x226, this, this.port2x6_read);\r\n    cpu.io.register_read(0x227, this, this.port2x7_read);\r\n    cpu.io.register_read(0x228, this, this.port2x8_read);\r\n    cpu.io.register_read(0x229, this, this.port2x9_read);\r\n\r\n    cpu.io.register_read(0x22A, this, this.port2xA_read);\r\n    cpu.io.register_read(0x22B, this, this.port2xB_read);\r\n    cpu.io.register_read(0x22C, this, this.port2xC_read);\r\n    cpu.io.register_read(0x22D, this, this.port2xD_read);\r\n\r\n    cpu.io.register_read_consecutive(0x22E, this,\r\n        this.port2xE_read, this.port2xF_read);\r\n\r\n    cpu.io.register_write_consecutive(0x220, this,\r\n        this.port2x0_write, this.port2x1_write, this.port2x2_write, this.port2x3_write);\r\n    cpu.io.register_write_consecutive(0x388, this,\r\n        this.port2x0_write, this.port2x1_write);\r\n\r\n    cpu.io.register_write_consecutive(0x224, this,\r\n        this.port2x4_write, this.port2x5_write);\r\n\r\n    cpu.io.register_write(0x226, this, this.port2x6_write);\r\n    cpu.io.register_write(0x227, this, this.port2x7_write);\r\n\r\n    cpu.io.register_write_consecutive(0x228, this,\r\n        this.port2x8_write, this.port2x9_write);\r\n\r\n    cpu.io.register_write(0x22A, this, this.port2xA_write);\r\n    cpu.io.register_write(0x22B, this, this.port2xB_write);\r\n    cpu.io.register_write(0x22C, this, this.port2xC_write);\r\n    cpu.io.register_write(0x22D, this, this.port2xD_write);\r\n    cpu.io.register_write(0x22E, this, this.port2xE_write);\r\n    cpu.io.register_write(0x22F, this, this.port2xF_write);\r\n\r\n    cpu.io.register_read_consecutive(0x330, this, this.port3x0_read, this.port3x1_read);\r\n    cpu.io.register_write_consecutive(0x330, this, this.port3x0_write, this.port3x1_write);\r\n\r\n    this.dma.on_unmask(this.dma_on_unmask, this);\r\n\r\n    bus.register(\"dac-request-data\", function()\r\n    {\r\n        this.dac_handle_request();\r\n    }, this);\r\n    bus.register(\"speaker-has-initialized\", function()\r\n    {\r\n        this.mixer_reset();\r\n    }, this);\r\n    bus.send(\"speaker-confirm-initialized\");\r\n\r\n    this.dsp_reset();\r\n}\r\n\r\n//\r\n// General\r\n//\r\n\r\nSB16.prototype.dsp_reset = function()\r\n{\r\n    this.write_buffer.clear();\r\n    this.read_buffer.clear();\r\n\r\n    this.command = DSP_NO_COMMAND;\r\n    this.command_size = 0;\r\n\r\n    this.dummy_speaker_enabled = false;\r\n    this.test_register = 0;\r\n\r\n    this.dsp_highspeed = false;\r\n    this.dsp_stereo = false;\r\n    this.dsp_16bit = false;\r\n    this.dsp_signed = false;\r\n\r\n    this.dac_buffers[0].clear();\r\n    this.dac_buffers[1].clear();\r\n\r\n    this.dma_sample_count = 0;\r\n    this.dma_bytes_count = 0;\r\n    this.dma_bytes_left = 0;\r\n    this.dma_bytes_block = 0;\r\n    this.dma_irq = 0;\r\n    this.dma_channel = 0;\r\n    this.dma_autoinit = false;\r\n    this.dma_buffer_uint8.fill(0);\r\n    this.dma_waiting_transfer = false;\r\n    this.dma_paused = false;\r\n\r\n    this.e2_value = 0xAA;\r\n    this.e2_count = 0;\r\n\r\n    this.sampling_rate = 22050;\r\n    this.bytes_per_sample = 1;\r\n\r\n    this.lower_irq(SB_IRQ_8BIT);\r\n    this.irq_triggered.fill(0);\r\n\r\n    this.asp_registers.fill(0);\r\n    this.asp_registers[5] = 0x01;\r\n    this.asp_registers[9] = 0xF8;\r\n};\r\n\r\nSB16.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    // state[0] = this.write_buffer;\r\n    // state[1] = this.read_buffer;\r\n    state[2] = this.read_buffer_lastvalue;\r\n\r\n    state[3] = this.command;\r\n    state[4] = this.command_size;\r\n\r\n    state[5] = this.mixer_current_address;\r\n    state[6] = this.mixer_registers;\r\n\r\n    state[7] = this.dummy_speaker_enabled;\r\n    state[8] = this.test_register;\r\n\r\n    state[9] = this.dsp_highspeed;\r\n    state[10] = this.dsp_stereo;\r\n    state[11] = this.dsp_16bit;\r\n    state[12] = this.dsp_signed;\r\n\r\n    // state[13] = this.dac_buffers;\r\n    //state[14]\r\n\r\n    state[15] = this.dma_sample_count;\r\n    state[16] = this.dma_bytes_count;\r\n    state[17] = this.dma_bytes_left;\r\n    state[18] = this.dma_bytes_block;\r\n    state[19] = this.dma_irq;\r\n    state[20] = this.dma_channel;\r\n    state[21] = this.dma_channel_8bit;\r\n    state[22] = this.dma_channel_16bit;\r\n    state[23] = this.dma_autoinit;\r\n    state[24] = this.dma_buffer_uint8;\r\n    state[25] = this.dma_waiting_transfer;\r\n    state[26] = this.dma_paused;\r\n    state[27] = this.sampling_rate;\r\n    state[28] = this.bytes_per_sample;\r\n\r\n    state[29] = this.e2_value;\r\n    state[30] = this.e2_count;\r\n\r\n    state[31] = this.asp_registers;\r\n\r\n    // state[32] = this.mpu_read_buffer;\r\n    state[33] = this.mpu_read_buffer_last_value;\r\n\r\n    state[34] = this.irq;\r\n    state[35] = this.irq_triggered;\r\n    //state[36]\r\n\r\n    return state;\r\n};\r\n\r\nSB16.prototype.set_state = function(state)\r\n{\r\n    // this.write_buffer = state[0];\r\n    // this.read_buffer = state[1];\r\n    this.read_buffer_lastvalue = state[2];\r\n\r\n    this.command = state[3];\r\n    this.command_size = state[4];\r\n\r\n    this.mixer_current_address = state[5];\r\n    this.mixer_registers = state[6];\r\n    this.mixer_full_update();\r\n\r\n    this.dummy_speaker_enabled = state[7];\r\n    this.test_register = state[8];\r\n\r\n    this.dsp_highspeed = state[9];\r\n    this.dsp_stereo = state[10];\r\n    this.dsp_16bit = state[11];\r\n    this.dsp_signed = state[12];\r\n\r\n    // this.dac_buffers = state[13];\r\n    //state[14]\r\n\r\n    this.dma_sample_count = state[15];\r\n    this.dma_bytes_count = state[16];\r\n    this.dma_bytes_left = state[17];\r\n    this.dma_bytes_block = state[18];\r\n    this.dma_irq = state[19];\r\n    this.dma_channel = state[20];\r\n    this.dma_channel_8bit = state[21];\r\n    this.dma_channel_16bit = state[22];\r\n    this.dma_autoinit = state[23];\r\n    this.dma_buffer_uint8 = state[24];\r\n    this.dma_waiting_transfer = state[25];\r\n    this.dma_paused = state[26];\r\n    this.sampling_rate = state[27];\r\n    this.bytes_per_sample = state[28];\r\n\r\n    this.e2_value = state[29];\r\n    this.e2_count = state[30];\r\n\r\n    this.asp_registers = state[31];\r\n\r\n    // this.mpu_read_buffer = state[32];\r\n    this.mpu_read_buffer_last_value = state[33];\r\n\r\n    this.irq = state[34];\r\n    this.irq_triggered = state[35];\r\n    //state[36];\r\n\r\n    this.dma_buffer = this.dma_buffer_uint8.buffer;\r\n    this.dma_buffer_int8 = new Int8Array(this.dma_buffer);\r\n    this.dma_buffer_int16 = new Int16Array(this.dma_buffer);\r\n    this.dma_buffer_uint16 = new Uint16Array(this.dma_buffer);\r\n    this.dma_syncbuffer = new SyncBuffer(this.dma_buffer);\r\n\r\n    if(this.dma_paused)\r\n    {\r\n        this.bus.send(\"dac-disable\");\r\n    }\r\n    else\r\n    {\r\n        this.bus.send(\"dac-enable\");\r\n    }\r\n};\r\n\r\n//\r\n// I/O handlers\r\n//\r\n\r\nSB16.prototype.port2x0_read = function()\r\n{\r\n    dbg_log(\"220 read: fm music status port (unimplemented)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x1_read = function()\r\n{\r\n    dbg_log(\"221 read: fm music data port (write only)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x2_read = function()\r\n{\r\n    dbg_log(\"222 read: advanced fm music status port (unimplemented)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x3_read = function()\r\n{\r\n    dbg_log(\"223 read: advanced music data port (write only)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\n// Mixer Address Port.\r\nSB16.prototype.port2x4_read = function()\r\n{\r\n    dbg_log(\"224 read: mixer address port\", LOG_SB16);\r\n    return this.mixer_current_address;\r\n};\r\n\r\n// Mixer Data Port.\r\nSB16.prototype.port2x5_read = function()\r\n{\r\n    dbg_log(\"225 read: mixer data port\", LOG_SB16);\r\n    return this.mixer_read(this.mixer_current_address);\r\n};\r\n\r\nSB16.prototype.port2x6_read = function()\r\n{\r\n    dbg_log(\"226 read: (write only)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x7_read = function()\r\n{\r\n    dbg_log(\"227 read: undocumented\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x8_read = function()\r\n{\r\n    dbg_log(\"228 read: fm music status port (unimplemented)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\nSB16.prototype.port2x9_read = function()\r\n{\r\n    dbg_log(\"229 read: fm music data port (write only)\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\n// Read Data.\r\n// Used to access in-bound DSP data.\r\nSB16.prototype.port2xA_read = function()\r\n{\r\n    dbg_log(\"22A read: read data\", LOG_SB16);\r\n    if(this.read_buffer.length)\r\n    {\r\n        this.read_buffer_lastvalue = this.read_buffer.shift();\r\n    }\r\n    dbg_log(\" <- \" + this.read_buffer_lastvalue + \" \" + h(this.read_buffer_lastvalue) + \" '\" + String.fromCharCode(this.read_buffer_lastvalue) + \"'\", LOG_SB16);\r\n    return this.read_buffer_lastvalue;\r\n};\r\n\r\nSB16.prototype.port2xB_read = function()\r\n{\r\n    dbg_log(\"22B read: undocumented\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\n// Write-Buffer Status.\r\n// Indicates whether the DSP is ready to accept commands or data.\r\nSB16.prototype.port2xC_read = function()\r\n{\r\n    dbg_log(\"22C read: write-buffer status\", LOG_SB16);\r\n    // Always return ready (bit-7 set to low)\r\n    return 0x7F;\r\n};\r\n\r\nSB16.prototype.port2xD_read = function()\r\n{\r\n    dbg_log(\"22D read: undocumented\", LOG_SB16);\r\n    return 0xFF;\r\n};\r\n\r\n// Read-Buffer Status.\r\n// Indicates whether there is any in-bound data available for reading.\r\n// Also used to acknowledge DSP 8-bit interrupt.\r\nSB16.prototype.port2xE_read = function()\r\n{\r\n    dbg_log(\"22E read: read-buffer status / irq 8bit ack.\", LOG_SB16);\r\n    if(this.irq_triggered[SB_IRQ_8BIT])\r\n    {\r\n        this.lower_irq(SB_IRQ_8BIT);\r\n    }\r\n    var ready = this.read_buffer.length && !this.dsp_highspeed;\r\n    return (ready << 7) | 0x7F;\r\n};\r\n\r\n// DSP 16-bit interrupt acknowledgement.\r\nSB16.prototype.port2xF_read = function()\r\n{\r\n    dbg_log(\"22F read: irq 16bit ack\", LOG_SB16);\r\n    this.lower_irq(SB_IRQ_16BIT);\r\n    return 0;\r\n};\r\n\r\n\r\n// FM Address Port - primary register.\r\nSB16.prototype.port2x0_write = function(value)\r\n{\r\n    dbg_log(\"220 write: (unimplemented) fm register 0 address = \" + h(value), LOG_SB16);\r\n    this.fm_current_address0 = 0;\r\n};\r\n\r\n// FM Data Port - primary register.\r\nSB16.prototype.port2x1_write = function(value)\r\n{\r\n    dbg_log(\"221 write: (unimplemented) fm register 0 data = \" + h(value), LOG_SB16);\r\n    var handler = FM_HANDLERS[this.fm_current_address0];\r\n    if(!handler)\r\n    {\r\n        handler = this.fm_default_write;\r\n    }\r\n    handler.call(this, value, 0, this.fm_current_address0);\r\n};\r\n\r\n// FM Address Port - secondary register.\r\nSB16.prototype.port2x2_write = function(value)\r\n{\r\n    dbg_log(\"222 write: (unimplemented) fm register 1 address = \" + h(value), LOG_SB16);\r\n    this.fm_current_address1 = 0;\r\n};\r\n\r\n// FM Data Port - secondary register.\r\nSB16.prototype.port2x3_write = function(value)\r\n{\r\n    dbg_log(\"223 write: (unimplemented) fm register 1 data =\" + h(value), LOG_SB16);\r\n    var handler = FM_HANDLERS[this.fm_current_address1];\r\n    if(!handler)\r\n    {\r\n        handler = this.fm_default_write;\r\n    }\r\n    handler.call(this, value, 1, this.fm_current_address1);\r\n};\r\n\r\n// Mixer Address Port.\r\nSB16.prototype.port2x4_write = function(value)\r\n{\r\n    dbg_log(\"224 write: mixer address = \" + h(value), LOG_SB16);\r\n    this.mixer_current_address = value;\r\n};\r\n\r\n// Mixer Data Port.\r\nSB16.prototype.port2x5_write = function(value)\r\n{\r\n    dbg_log(\"225 write: mixer data = \" + h(value), LOG_SB16);\r\n    this.mixer_write(this.mixer_current_address, value);\r\n};\r\n\r\n// Reset.\r\n// Used to reset the DSP to its default state and to exit highspeed mode.\r\nSB16.prototype.port2x6_write = function(yesplease)\r\n{\r\n    dbg_log(\"226 write: reset = \" + h(yesplease), LOG_SB16);\r\n\r\n    if(this.dsp_highspeed)\r\n    {\r\n        dbg_log(\" -> exit highspeed\", LOG_SB16);\r\n        this.dsp_highspeed = false;\r\n    }\r\n    else if(yesplease)\r\n    {\r\n        dbg_log(\" -> reset\", LOG_SB16);\r\n        this.dsp_reset();\r\n    }\r\n\r\n    // Signal completion.\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(0xAA);\r\n};\r\n\r\nSB16.prototype.port2x7_write = function(value)\r\n{\r\n    dbg_log(\"227 write: undocumented\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2x8_write = function(value)\r\n{\r\n    dbg_log(\"228 write: fm music register port (unimplemented)\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2x9_write = function(value)\r\n{\r\n    dbg_log(\"229 write: fm music data port (unimplemented)\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2xA_write = function(value)\r\n{\r\n    dbg_log(\"22A write: dsp read data port (read only)\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2xB_write = function(value)\r\n{\r\n    dbg_log(\"22B write: undocumented\", LOG_SB16);\r\n};\r\n\r\n// Write Command/Data.\r\n// Used to send commands or data to the DSP.\r\nSB16.prototype.port2xC_write = function(value)\r\n{\r\n    dbg_log(\"22C write: write command/data\", LOG_SB16);\r\n\r\n    if(this.command === DSP_NO_COMMAND)\r\n    {\r\n        // New command.\r\n        dbg_log(\"22C write: command = \" + h(value), LOG_SB16);\r\n        this.command = value;\r\n        this.write_buffer.clear();\r\n        this.command_size = DSP_COMMAND_SIZES[value];\r\n    }\r\n    else\r\n    {\r\n        // More data for current command.\r\n        dbg_log(\"22C write: data: \" + h(value), LOG_SB16);\r\n        this.write_buffer.push(value);\r\n    }\r\n\r\n    // Perform command when we have all the needed data.\r\n    if(this.write_buffer.length >= this.command_size)\r\n    {\r\n        this.command_do();\r\n    }\r\n};\r\n\r\nSB16.prototype.port2xD_write = function(value)\r\n{\r\n    dbg_log(\"22D write: undocumented\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2xE_write = function(value)\r\n{\r\n    dbg_log(\"22E write: dsp read buffer status (read only)\", LOG_SB16);\r\n};\r\n\r\nSB16.prototype.port2xF_write = function(value)\r\n{\r\n    dbg_log(\"22F write: undocumented\", LOG_SB16);\r\n};\r\n\r\n\r\n// MPU UART Mode - Data Port\r\nSB16.prototype.port3x0_read = function()\r\n{\r\n    dbg_log(\"330 read: mpu data\", LOG_SB16);\r\n\r\n    if(this.mpu_read_buffer.length)\r\n    {\r\n        this.mpu_read_buffer_lastvalue = this.mpu_read_buffer.shift();\r\n    }\r\n    dbg_log(\" <- \" + h(this.mpu_read_buffer_lastvalue), LOG_SB16);\r\n\r\n    return this.mpu_read_buffer_lastvalue;\r\n};\r\nSB16.prototype.port3x0_write = function(value)\r\n{\r\n    dbg_log(\"330 write: mpu data (unimplemented) : \" + h(value), LOG_SB16);\r\n};\r\n\r\n// MPU UART Mode - Status Port\r\nSB16.prototype.port3x1_read = function()\r\n{\r\n    dbg_log(\"331 read: mpu status\", LOG_SB16);\r\n\r\n    var status = 0;\r\n    status |= 0x40 * 0; // Output Ready\r\n    status |= 0x80 * !this.mpu_read_buffer.length; // Input Ready\r\n\r\n    return status;\r\n};\r\n\r\n// MPU UART Mode - Command Port\r\nSB16.prototype.port3x1_write = function(value)\r\n{\r\n    dbg_log(\"331 write: mpu command: \" + h(value), LOG_SB16);\r\n    if(value == 0xFF)\r\n    {\r\n        // Command acknowledge.\r\n        this.mpu_read_buffer.clear();\r\n        this.mpu_read_buffer.push(0xFE);\r\n    }\r\n};\r\n\r\n//\r\n// DSP command handlers\r\n//\r\n\r\nSB16.prototype.command_do = function()\r\n{\r\n    var handler = DSP_COMMAND_HANDLERS[this.command];\r\n    if(!handler)\r\n    {\r\n        handler = this.dsp_default_handler;\r\n    }\r\n    handler.call(this);\r\n\r\n    // Reset Inputs.\r\n    this.command = DSP_NO_COMMAND;\r\n    this.command_size = 0;\r\n    this.write_buffer.clear();\r\n};\r\n\r\nSB16.prototype.dsp_default_handler = function()\r\n{\r\n    dbg_log(\"Unhandled command: \" + h(this.command), LOG_SB16);\r\n};\r\n\r\n/**\r\n * @param {Array} commands\r\n * @param {number} size\r\n * @param {function()=} handler\r\n */\r\nfunction register_dsp_command(commands, size, handler)\r\n{\r\n    if(!handler)\r\n    {\r\n        handler = SB16.prototype.dsp_default_handler;\r\n    }\r\n    for(var i = 0; i < commands.length; i++)\r\n    {\r\n        DSP_COMMAND_SIZES[commands[i]] = size;\r\n        DSP_COMMAND_HANDLERS[commands[i]] = handler;\r\n    }\r\n}\r\n\r\nfunction any_first_digit(base)\r\n{\r\n    var commands = [];\r\n    for(var i = 0; i < 16; i++)\r\n    {\r\n        commands.push(base + i);\r\n    }\r\n    return commands;\r\n}\r\n\r\n// ASP set register\r\nregister_dsp_command([0x0E], 2, function()\r\n{\r\n    this.asp_registers[this.write_buffer.shift()] = this.write_buffer.shift();\r\n});\r\n\r\n// ASP get register\r\nregister_dsp_command([0x0F], 1, function()\r\n{\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(this.asp_registers[this.write_buffer.shift()]);\r\n});\r\n\r\n// 8-bit direct mode single byte digitized sound output.\r\nregister_dsp_command([0x10], 1, function()\r\n{\r\n    var value = audio_normalize(this.write_buffer.shift(), 127.5, -1);\r\n\r\n    this.dac_buffers[0].push(value);\r\n    this.dac_buffers[1].push(value);\r\n    this.bus.send(\"dac-enable\");\r\n});\r\n\r\n// 8-bit single-cycle DMA mode digitized sound output.\r\nregister_dsp_command([0x14, 0x15], 2, function()\r\n{\r\n    this.dma_irq = SB_IRQ_8BIT;\r\n    this.dma_channel = this.dma_channel_8bit;\r\n    this.dma_autoinit = false;\r\n    this.dsp_signed = false;\r\n    this.dsp_16bit = false;\r\n    this.dsp_highspeed = false;\r\n    this.dma_transfer_size_set();\r\n    this.dma_transfer_start();\r\n});\r\n\r\n// Creative 8-bit to 2-bit ADPCM single-cycle DMA mode digitized sound output.\r\nregister_dsp_command([0x16], 2);\r\n\r\n// Creative 8-bit to 2-bit ADPCM single-cycle DMA mode digitzed sound output\r\n// with reference byte.\r\nregister_dsp_command([0x17], 2);\r\n\r\n// 8-bit auto-init DMA mode digitized sound output.\r\nregister_dsp_command([0x1C], 0, function()\r\n{\r\n    this.dma_irq = SB_IRQ_8BIT;\r\n    this.dma_channel = this.dma_channel_8bit;\r\n    this.dma_autoinit = true;\r\n    this.dsp_signed = false;\r\n    this.dsp_16bit = false;\r\n    this.dsp_highspeed = false;\r\n    this.dma_transfer_start();\r\n});\r\n\r\n// Creative 8-bit to 2-bit ADPCM auto-init DMA mode digitized sound output\r\n// with reference byte.\r\nregister_dsp_command([0x1F], 0);\r\n\r\n// 8-bit direct mode single byte digitized sound input.\r\nregister_dsp_command([0x20], 0, function()\r\n{\r\n    // Fake silent input.\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(0x7f);\r\n});\r\n\r\n// 8-bit single-cycle DMA mode digitized sound input.\r\nregister_dsp_command([0x24], 2);\r\n\r\n// 8-bit auto-init DMA mode digitized sound input.\r\nregister_dsp_command([0x2C], 0);\r\n\r\n// Polling mode MIDI input.\r\nregister_dsp_command([0x30], 0);\r\n\r\n// Interrupt mode MIDI input.\r\nregister_dsp_command([0x31], 0);\r\n\r\n// UART polling mode MIDI I/O.\r\nregister_dsp_command([0x34], 0);\r\n\r\n// UART interrupt mode MIDI I/O.\r\nregister_dsp_command([0x35], 0);\r\n\r\n// UART polling mode MIDI I/O with time stamping.\r\nregister_dsp_command([0x36], 0);\r\n\r\n// UART interrupt mode MIDI I/O with time stamping.\r\nregister_dsp_command([0x37], 0);\r\n\r\n// MIDI output.\r\nregister_dsp_command([0x38], 0);\r\n\r\n// Set digitized sound transfer Time Constant.\r\nregister_dsp_command([0x40], 1, function()\r\n{\r\n    // Note: bTimeConstant = 256 * time constant\r\n    this.sampling_rate_change(\r\n        1000000\r\n        / (256 - this.write_buffer.shift())\r\n        / this.get_channel_count()\r\n    );\r\n});\r\n\r\n// Set digitized sound output sampling rate.\r\n// Set digitized sound input sampling rate.\r\nregister_dsp_command([0x41, 0x42], 2, function()\r\n{\r\n    this.sampling_rate_change((this.write_buffer.shift() << 8) | this.write_buffer.shift());\r\n});\r\n\r\n// Set DSP block transfer size.\r\nregister_dsp_command([0x48], 2, function()\r\n{\r\n    // TODO: should be in bytes, but if this is only used\r\n    // for 8 bit transfers, then this number is the same\r\n    // as number of samples?\r\n    // Wrong: e.g. stereo requires two bytes per sample.\r\n    this.dma_transfer_size_set();\r\n});\r\n\r\n// Creative 8-bit to 4-bit ADPCM single-cycle DMA mode digitized sound output.\r\nregister_dsp_command([0x74], 2);\r\n\r\n// Creative 8-bit to 4-bit ADPCM single-cycle DMA mode digitized sound output\r\n// with referene byte.\r\nregister_dsp_command([0x75], 2);\r\n\r\n// Creative 8-bit to 3-bit ADPCM single-cycle DMA mode digitized sound output.\r\nregister_dsp_command([0x76], 2);\r\n\r\n// Creative 8-bit to 3-bit ADPCM single-cycle DMA mode digitized sound output\r\n// with referene byte.\r\nregister_dsp_command([0x77], 2);\r\n\r\n// Creative 8-bit to 4-bit ADPCM auto-init DMA mode digitized sound output\r\n// with reference byte.\r\nregister_dsp_command([0x7D], 0);\r\n\r\n// Creative 8-bit to 3-bit ADPCM auto-init DMA mode digitized sound output\r\n// with reference byte.\r\nregister_dsp_command([0x7F], 0);\r\n\r\n// Pause DAC for a duration.\r\nregister_dsp_command([0x80], 2);\r\n\r\n// 8-bit high-speed auto-init DMA mode digitized sound output.\r\nregister_dsp_command([0x90], 0, function()\r\n{\r\n    this.dma_irq = SB_IRQ_8BIT;\r\n    this.dma_channel = this.dma_channel_8bit;\r\n    this.dma_autoinit = true;\r\n    this.dsp_signed = false;\r\n    this.dsp_highspeed = true;\r\n    this.dsp_16bit = false;\r\n    this.dma_transfer_start();\r\n});\r\n\r\n// 8-bit high-speed single-cycle DMA mode digitized sound input.\r\nregister_dsp_command([0x91], 0);\r\n\r\n// 8-bit high-speed auto-init DMA mode digitized sound input.\r\nregister_dsp_command([0x98], 0);\r\n\r\n// 8-bit high-speed single-cycle DMA mode digitized sound input.\r\nregister_dsp_command([0x99], 0);\r\n\r\n// Set input mode to mono.\r\nregister_dsp_command([0xA0], 0);\r\n\r\n// Set input mode to stereo.\r\nregister_dsp_command([0xA8], 0);\r\n\r\n// Program 16-bit DMA mode digitized sound I/O.\r\nregister_dsp_command(any_first_digit(0xB0), 3, function()\r\n{\r\n    if(this.command & (1 << 3))\r\n    {\r\n        // Analogue to digital not implemented.\r\n        this.dsp_default_handler();\r\n        return;\r\n    }\r\n    var mode = this.write_buffer.shift();\r\n    this.dma_irq = SB_IRQ_16BIT;\r\n    this.dma_channel = this.dma_channel_16bit;\r\n    this.dma_autoinit = !!(this.command & (1 << 2));\r\n    this.dsp_signed = !!(mode & (1 << 4));\r\n    this.dsp_stereo = !!(mode & (1 << 5));\r\n    this.dsp_16bit = true;\r\n    this.dma_transfer_size_set();\r\n    this.dma_transfer_start();\r\n});\r\n\r\n// Program 8-bit DMA mode digitized sound I/O.\r\nregister_dsp_command(any_first_digit(0xC0), 3, function()\r\n{\r\n    if(this.command & (1 << 3))\r\n    {\r\n        // Analogue to digital not implemented.\r\n        this.dsp_default_handler();\r\n        return;\r\n    }\r\n    var mode = this.write_buffer.shift();\r\n    this.dma_irq = SB_IRQ_8BIT;\r\n    this.dma_channel = this.dma_channel_8bit;\r\n    this.dma_autoinit = !!(this.command & (1 << 2));\r\n    this.dsp_signed = !!(mode & (1 << 4));\r\n    this.dsp_stereo = !!(mode & (1 << 5));\r\n    this.dsp_16bit = false;\r\n    this.dma_transfer_size_set();\r\n    this.dma_transfer_start();\r\n});\r\n\r\n// Pause 8-bit DMA mode digitized sound I/O.\r\nregister_dsp_command([0xD0], 0, function()\r\n{\r\n    this.dma_paused = true;\r\n    this.bus.send(\"dac-disable\");\r\n});\r\n\r\n// Turn on speaker.\r\n// Documented to have no effect on SB16.\r\nregister_dsp_command([0xD1], 0, function()\r\n{\r\n    this.dummy_speaker_enabled = true;\r\n});\r\n\r\n// Turn off speaker.\r\n// Documented to have no effect on SB16.\r\nregister_dsp_command([0xD3], 0, function()\r\n{\r\n    this.dummy_speaker_enabled = false;\r\n});\r\n\r\n// Continue 8-bit DMA mode digitized sound I/O.\r\nregister_dsp_command([0xD4], 0, function()\r\n{\r\n    this.dma_paused = false;\r\n    this.bus.send(\"dac-enable\");\r\n});\r\n\r\n// Pause 16-bit DMA mode digitized sound I/O.\r\nregister_dsp_command([0xD5], 0, function()\r\n{\r\n    this.dma_paused = true;\r\n    this.bus.send(\"dac-disable\");\r\n});\r\n\r\n// Continue 16-bit DMA mode digitized sound I/O.\r\nregister_dsp_command([0xD6], 0, function()\r\n{\r\n    this.dma_paused = false;\r\n    this.bus.send(\"dac-enable\");\r\n});\r\n\r\n// Get speaker status.\r\nregister_dsp_command([0xD8], 0, function()\r\n{\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(this.dummy_speaker_enabled * 0xFF);\r\n});\r\n\r\n// Exit 16-bit auto-init DMA mode digitized sound I/O.\r\n// Exit 8-bit auto-init mode digitized sound I/O.\r\nregister_dsp_command([0xD9, 0xDA], 0, function()\r\n{\r\n    this.dma_autoinit = false;\r\n});\r\n\r\n// DSP identification\r\nregister_dsp_command([0xE0], 1, function()\r\n{\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(~this.write_buffer.shift());\r\n});\r\n\r\n// Get DSP version number.\r\nregister_dsp_command([0xE1], 0, function()\r\n{\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(4);\r\n    this.read_buffer.push(5);\r\n});\r\n\r\n// DMA identification.\r\nregister_dsp_command([0xE2], 1);\r\n\r\n// Get DSP copyright.\r\nregister_dsp_command([0xE3], 0, function()\r\n{\r\n    this.read_buffer.clear();\r\n    for(var i = 0; i < DSP_COPYRIGHT.length; i++)\r\n    {\r\n        this.read_buffer.push(DSP_COPYRIGHT.charCodeAt(i));\r\n    }\r\n    // Null terminator.\r\n    this.read_buffer.push(0);\r\n});\r\n\r\n// Write test register.\r\nregister_dsp_command([0xE4], 1, function()\r\n{\r\n    this.test_register = this.write_buffer.shift();\r\n});\r\n\r\n// Read test register.\r\nregister_dsp_command([0xE8], 0, function()\r\n{\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(this.test_register);\r\n});\r\n\r\n// Trigger IRQ\r\nregister_dsp_command([0xF2, 0xF3], 0, function()\r\n{\r\n    this.raise_irq();\r\n});\r\n\r\n// ASP - unknown function\r\nvar SB_F9 = new Uint8Array(256);\r\nSB_F9[0x0E] = 0xFF;\r\nSB_F9[0x0F] = 0x07;\r\nSB_F9[0x37] = 0x38;\r\nregister_dsp_command([0xF9], 1, function()\r\n{\r\n    var input = this.write_buffer.shift();\r\n    dbg_log(\"dsp 0xf9: unknown function. input: \" + input, LOG_SB16);\r\n\r\n    this.read_buffer.clear();\r\n    this.read_buffer.push(SB_F9[input]);\r\n});\r\n\r\n//\r\n// Mixer Handlers (CT1745)\r\n//\r\n\r\nSB16.prototype.mixer_read = function(address)\r\n{\r\n    var handler = MIXER_READ_HANDLERS[address];\r\n    var data;\r\n    if(handler)\r\n    {\r\n        data = handler.call(this);\r\n    }\r\n    else\r\n    {\r\n        data = this.mixer_registers[address];\r\n        dbg_log(\"unhandled mixer register read. addr:\" + h(address) + \" data:\" + h(data), LOG_SB16);\r\n    }\r\n    return data;\r\n};\r\n\r\nSB16.prototype.mixer_write = function(address, data)\r\n{\r\n    var handler = MIXER_WRITE_HANDLERS[address];\r\n    if(handler)\r\n    {\r\n        handler.call(this, data);\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"unhandled mixer register write. addr:\" + h(address) + \" data:\" + h(data), LOG_SB16);\r\n    }\r\n};\r\n\r\nSB16.prototype.mixer_default_read = function()\r\n{\r\n    dbg_log(\"mixer register read. addr:\" + h(this.mixer_current_address), LOG_SB16);\r\n    return this.mixer_registers[this.mixer_current_address];\r\n};\r\n\r\nSB16.prototype.mixer_default_write = function(data)\r\n{\r\n    dbg_log(\"mixer register write. addr:\" + h(this.mixer_current_address) + \" data:\" + h(data), LOG_SB16);\r\n    this.mixer_registers[this.mixer_current_address] = data;\r\n};\r\n\r\nSB16.prototype.mixer_reset = function()\r\n{\r\n    // Values intentionally in decimal.\r\n    // Default values available at\r\n    // https://pdos.csail.mit.edu/6.828/2011/readings/hardware/SoundBlaster.pdf\r\n    this.mixer_registers[0x04] = 12 << 4 | 12;\r\n    this.mixer_registers[0x22] = 12 << 4 | 12;\r\n    this.mixer_registers[0x26] = 12 << 4 | 12;\r\n    this.mixer_registers[0x28] = 0;\r\n    this.mixer_registers[0x2E] = 0;\r\n    this.mixer_registers[0x0A] = 0;\r\n    this.mixer_registers[0x30] = 24 << 3;\r\n    this.mixer_registers[0x31] = 24 << 3;\r\n    this.mixer_registers[0x32] = 24 << 3;\r\n    this.mixer_registers[0x33] = 24 << 3;\r\n    this.mixer_registers[0x34] = 24 << 3;\r\n    this.mixer_registers[0x35] = 24 << 3;\r\n    this.mixer_registers[0x36] = 0;\r\n    this.mixer_registers[0x37] = 0;\r\n    this.mixer_registers[0x38] = 0;\r\n    this.mixer_registers[0x39] = 0;\r\n    this.mixer_registers[0x3B] = 0;\r\n    this.mixer_registers[0x3C] = 0x1F;\r\n    this.mixer_registers[0x3D] = 0x15;\r\n    this.mixer_registers[0x3E] = 0x0B;\r\n    this.mixer_registers[0x3F] = 0;\r\n    this.mixer_registers[0x40] = 0;\r\n    this.mixer_registers[0x41] = 0;\r\n    this.mixer_registers[0x42] = 0;\r\n    this.mixer_registers[0x43] = 0;\r\n    this.mixer_registers[0x44] = 8 << 4;\r\n    this.mixer_registers[0x45] = 8 << 4;\r\n    this.mixer_registers[0x46] = 8 << 4;\r\n    this.mixer_registers[0x47] = 8 << 4;\r\n\r\n    this.mixer_full_update();\r\n};\r\n\r\nSB16.prototype.mixer_full_update = function()\r\n{\r\n    // Start at 1. Don't re-reset.\r\n    for(var i = 1; i < this.mixer_registers.length; i++)\r\n    {\r\n        if(MIXER_REGISTER_IS_LEGACY[i])\r\n        {\r\n            // Legacy registers are actually mapped to other register locations. Update\r\n            // using the new registers rather than the legacy registers.\r\n            continue;\r\n        }\r\n        this.mixer_write(i, this.mixer_registers[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * @param{number} address\r\n * @param{function():number=} handler\r\n */\r\nfunction register_mixer_read(address, handler)\r\n{\r\n    if(!handler)\r\n    {\r\n        handler = SB16.prototype.mixer_default_read;\r\n    }\r\n    MIXER_READ_HANDLERS[address] = handler;\r\n}\r\n\r\n/**\r\n * @param{number} address\r\n * @param{function(number)=} handler\r\n */\r\nfunction register_mixer_write(address, handler)\r\n{\r\n    if(!handler)\r\n    {\r\n        handler = SB16.prototype.mixer_default_write;\r\n    }\r\n    MIXER_WRITE_HANDLERS[address] = handler;\r\n}\r\n\r\n// Legacy registers map each nibble to the last 4 bits of the new registers\r\nfunction register_mixer_legacy(address_old, address_new_left, address_new_right)\r\n{\r\n    MIXER_REGISTER_IS_LEGACY[address_old] = 1;\r\n\r\n    /** @this {SB16} */\r\n    MIXER_READ_HANDLERS[address_old] = function()\r\n    {\r\n        var left = this.mixer_registers[address_new_left] & 0xF0;\r\n        var right = this.mixer_registers[address_new_right] >>> 4;\r\n        return left | right;\r\n    };\r\n\r\n    /** @this {SB16} */\r\n    MIXER_WRITE_HANDLERS[address_old] = function(data)\r\n    {\r\n        this.mixer_registers[address_old] = data;\r\n        var prev_left = this.mixer_registers[address_new_left];\r\n        var prev_right = this.mixer_registers[address_new_right];\r\n        var left = (data & 0xF0) | (prev_left & 0x0F);\r\n        var right = (data << 4 & 0xF0) | (prev_right & 0x0F);\r\n\r\n        this.mixer_write(address_new_left, left);\r\n        this.mixer_write(address_new_right, right);\r\n    };\r\n}\r\n\r\n/**\r\n * @param {number} address\r\n * @param {number} mixer_source\r\n * @param {number} channel\r\n */\r\nfunction register_mixer_volume(address, mixer_source, channel)\r\n{\r\n    MIXER_READ_HANDLERS[address] = SB16.prototype.mixer_default_read;\r\n\r\n    /** @this {SB16} */\r\n    MIXER_WRITE_HANDLERS[address] = function(data)\r\n    {\r\n        this.mixer_registers[address] = data;\r\n        this.bus.send(\"mixer-volume\",\r\n        [\r\n            mixer_source,\r\n            channel,\r\n            (data >>> 2) - 62\r\n        ]);\r\n    };\r\n}\r\n\r\n// Reset.\r\nregister_mixer_read(0x00, function()\r\n{\r\n    this.mixer_reset();\r\n    return 0;\r\n});\r\nregister_mixer_write(0x00);\r\n\r\n// Legacy Voice Volume Left/Right.\r\nregister_mixer_legacy(0x04, 0x32, 0x33);\r\n\r\n// Legacy Mic Volume. TODO.\r\n//register_mixer_read(0x0A);\r\n//register_mixer_write(0x0A, function(data)\r\n//{\r\n//    this.mixer_registers[0x0A] = data;\r\n//    var prev = this.mixer_registers[0x3A];\r\n//    this.mixer_write(0x3A, data << 5 | (prev & 0x0F));\r\n//});\r\n\r\n// Legacy Master Volume Left/Right.\r\nregister_mixer_legacy(0x22, 0x30, 0x31);\r\n// Legacy Midi Volume Left/Right.\r\nregister_mixer_legacy(0x26, 0x34, 0x35);\r\n// Legacy CD Volume Left/Right.\r\nregister_mixer_legacy(0x28, 0x36, 0x37);\r\n// Legacy Line Volume Left/Right.\r\nregister_mixer_legacy(0x2E, 0x38, 0x39);\r\n\r\n// Master Volume Left.\r\nregister_mixer_volume(0x30, MIXER_SRC_MASTER, MIXER_CHANNEL_LEFT);\r\n// Master Volume Right.\r\nregister_mixer_volume(0x31, MIXER_SRC_MASTER, MIXER_CHANNEL_RIGHT);\r\n// Voice Volume Left.\r\nregister_mixer_volume(0x32, MIXER_SRC_DAC, MIXER_CHANNEL_LEFT);\r\n// Voice Volume Right.\r\nregister_mixer_volume(0x33, MIXER_SRC_DAC, MIXER_CHANNEL_RIGHT);\r\n// MIDI Volume Left. TODO.\r\n//register_mixer_volume(0x34, MIXER_SRC_SYNTH, MIXER_CHANNEL_LEFT);\r\n// MIDI Volume Right. TODO.\r\n//register_mixer_volume(0x35, MIXER_SRC_SYNTH, MIXER_CHANNEL_RIGHT);\r\n// CD Volume Left. TODO.\r\n//register_mixer_volume(0x36, MIXER_SRC_CD, MIXER_CHANNEL_LEFT);\r\n// CD Volume Right. TODO.\r\n//register_mixer_volume(0x37, MIXER_SRC_CD, MIXER_CHANNEL_RIGHT);\r\n// Line Volume Left. TODO.\r\n//register_mixer_volume(0x38, MIXER_SRC_LINE, MIXER_CHANNEL_LEFT);\r\n// Line Volume Right. TODO.\r\n//register_mixer_volume(0x39, MIXER_SRC_LINE, MIXER_CHANNEL_RIGHT);\r\n// Mic Volume. TODO.\r\n//register_mixer_volume(0x3A, MIXER_SRC_MIC, MIXER_CHANNEL_BOTH);\r\n\r\n// PC Speaker Volume.\r\nregister_mixer_read(0x3B);\r\nregister_mixer_write(0x3B, function(data)\r\n{\r\n    this.mixer_registers[0x3B] = data;\r\n    this.bus.send(\"mixer-volume\", [MIXER_SRC_PCSPEAKER, MIXER_CHANNEL_BOTH, (data >>> 6) * 6 - 18]);\r\n});\r\n\r\n// Output Mixer Switches. TODO.\r\n//register_mixer_read(0x3C);\r\n//register_mixer_write(0x3C, function(data)\r\n//{\r\n//    this.mixer_registers[0x3C] = data;\r\n//\r\n//    if(data & 0x01) this.bus.send(\"mixer-connect\", [MIXER_SRC_MIC, MIXER_CHANNEL_BOTH]);\r\n//    else this.bus.send(\"mixer-disconnect\", [MIXER_SRC_MIC, MIXER_CHANNEL_BOTH]);\r\n//\r\n//    if(data & 0x02) this.bus.send(\"mixer-connect\", [MIXER_SRC_CD, MIXER_CHANNEL_RIGHT]);\r\n//    else this.bus.send(\"mixer-disconnect\", [MIXER_SRC_CD, MIXER_CHANNEL_RIGHT]);\r\n//\r\n//    if(data & 0x04) this.bus.send(\"mixer-connect\", [MIXER_SRC_CD, MIXER_CHANNEL_LEFT]);\r\n//    else this.bus.send(\"mixer-disconnect\", [MIXER_SRC_CD, MIXER_CHANNEL_LEFT]);\r\n//\r\n//    if(data & 0x08) this.bus.send(\"mixer-connect\", [MIXER_SRC_LINE, MIXER_CHANNEL_RIGHT]);\r\n//    else this.bus.send(\"mixer-disconnect\", [MIXER_SRC_LINE, MIXER_CHANNEL_RIGHT]);\r\n//\r\n//    if(data & 0x10) this.bus.send(\"mixer-connect\", [MIXER_SRC_LINE, MIXER_CHANNEL_LEFT]);\r\n//    else this.bus.send(\"mixer-disconnect\", [MIXER_SRC_LINE, MIXER_CHANNEL_LEFT]);\r\n//});\r\n\r\n// Input Mixer Left Switches. TODO.\r\n//register_mixer_read(0x3D);\r\n//register_mixer_write(0x3D);\r\n\r\n// Input Mixer Right Switches. TODO.\r\n//register_mixer_read(0x3E);\r\n//register_mixer_write(0x3E);\r\n\r\n// Input Gain Left. TODO.\r\n//register_mixer_read(0x3F);\r\n//register_mixer_write(0x3F);\r\n\r\n// Input Gain Right. TODO.\r\n//register_mixer_read(0x40);\r\n//register_mixer_write(0x40);\r\n\r\n// Output Gain Left.\r\nregister_mixer_read(0x41);\r\nregister_mixer_write(0x41, function(data)\r\n{\r\n    this.mixer_registers[0x41] = data;\r\n    this.bus.send(\"mixer-gain-left\", (data >>> 6) * 6);\r\n});\r\n\r\n// Output Gain Right.\r\nregister_mixer_read(0x42);\r\nregister_mixer_write(0x42, function(data)\r\n{\r\n    this.mixer_registers[0x42] = data;\r\n    this.bus.send(\"mixer-gain-right\", (data >>> 6) * 6);\r\n});\r\n\r\n// Mic AGC. TODO.\r\n//register_mixer_read(0x43);\r\n//register_mixer_write(0x43);\r\n\r\n// Treble Left.\r\nregister_mixer_read(0x44);\r\nregister_mixer_write(0x44, function(data)\r\n{\r\n    this.mixer_registers[0x44] = data;\r\n    data >>>= 3;\r\n    this.bus.send(\"mixer-treble-left\", data - (data < 16 ? 14 : 16));\r\n});\r\n\r\n// Treble Right.\r\nregister_mixer_read(0x45);\r\nregister_mixer_write(0x45, function(data)\r\n{\r\n    this.mixer_registers[0x45] = data;\r\n    data >>>= 3;\r\n    this.bus.send(\"mixer-treble-right\", data - (data < 16 ? 14 : 16));\r\n});\r\n\r\n// Bass Left.\r\nregister_mixer_read(0x46);\r\nregister_mixer_write(0x46, function(data)\r\n{\r\n    this.mixer_registers[0x46] = data;\r\n    data >>>= 3;\r\n    this.bus.send(\"mixer-bass-right\", data - (data < 16 ? 14 : 16));\r\n});\r\n\r\n// Bass Right.\r\nregister_mixer_read(0x47);\r\nregister_mixer_write(0x47, function(data)\r\n{\r\n    this.mixer_registers[0x47] = data;\r\n    data >>>= 3;\r\n    this.bus.send(\"mixer-bass-right\", data - (data < 16 ? 14 : 16));\r\n});\r\n\r\n// IRQ Select.\r\nregister_mixer_read(0x80, function()\r\n{\r\n    switch(this.irq)\r\n    {\r\n        case SB_IRQ2: return 0x1;\r\n        case SB_IRQ5: return 0x2;\r\n        case SB_IRQ7: return 0x4;\r\n        case SB_IRQ10: return 0x8;\r\n        default: return 0x0;\r\n    }\r\n});\r\nregister_mixer_write(0x80, function(bits)\r\n{\r\n    if(bits & 0x1) this.irq = SB_IRQ2;\r\n    if(bits & 0x2) this.irq = SB_IRQ5;\r\n    if(bits & 0x4) this.irq = SB_IRQ7;\r\n    if(bits & 0x8) this.irq = SB_IRQ10;\r\n});\r\n\r\n// DMA Select.\r\nregister_mixer_read(0x81, function()\r\n{\r\n    var ret = 0;\r\n    switch(this.dma_channel_8bit)\r\n    {\r\n        case SB_DMA0: ret |= 0x1; break;\r\n        case SB_DMA1: ret |= 0x2; break;\r\n        // Channel 2 is hardwired to floppy disk.\r\n        case SB_DMA3: ret |= 0x8; break;\r\n    }\r\n    switch(this.dma_channel_16bit)\r\n    {\r\n        // Channel 4 cannot be used.\r\n        case SB_DMA5: ret |= 0x20; break;\r\n        case SB_DMA6: ret |= 0x40; break;\r\n        case SB_DMA7: ret |= 0x80; break;\r\n    }\r\n    return ret;\r\n});\r\nregister_mixer_write(0x81, function(bits)\r\n{\r\n    if(bits & 0x1) this.dma_channel_8bit = SB_DMA0;\r\n    if(bits & 0x2) this.dma_channel_8bit = SB_DMA1;\r\n    if(bits & 0x8) this.dma_channel_8bit = SB_DMA3;\r\n    if(bits & 0x20) this.dma_channel_16bit = SB_DMA5;\r\n    if(bits & 0x40) this.dma_channel_16bit = SB_DMA6;\r\n    if(bits & 0x80) this.dma_channel_16bit = SB_DMA7;\r\n});\r\n\r\n// IRQ Status.\r\nregister_mixer_read(0x82, function()\r\n{\r\n    var ret = 0x20;\r\n    for(var i = 0; i < 16; i++)\r\n    {\r\n        ret |= i * this.irq_triggered[i];\r\n    }\r\n    return ret;\r\n});\r\n\r\n//\r\n// FM Handlers\r\n//\r\n\r\nSB16.prototype.fm_default_write = function(data, register, address)\r\n{\r\n    dbg_log(\"unhandled fm register write. addr:\" + register + \"|\" + h(address) + \" data:\" + h(data), LOG_SB16);\r\n    // No need to save into a dummy register as the registers are write-only.\r\n};\r\n\r\n/**\r\n * @param{Array} addresses\r\n * @param{function(number, number, number)=} handler\r\n */\r\nfunction register_fm_write(addresses, handler)\r\n{\r\n    if(!handler)\r\n    {\r\n        handler = SB16.prototype.fm_default_write;\r\n    }\r\n    for(var i = 0; i < addresses.length; i++)\r\n    {\r\n        FM_HANDLERS[addresses[i]] = handler;\r\n    }\r\n}\r\n\r\nfunction between(start, end)\r\n{\r\n    var a = [];\r\n    for(var i = start; i <= end; i++)\r\n    {\r\n        a.push(i);\r\n    }\r\n    return a;\r\n}\r\n\r\n/** @const */ var SB_FM_OPERATORS_BY_OFFSET = new Uint8Array(32);\r\nSB_FM_OPERATORS_BY_OFFSET[0x00] = 0;\r\nSB_FM_OPERATORS_BY_OFFSET[0x01] = 1;\r\nSB_FM_OPERATORS_BY_OFFSET[0x02] = 2;\r\nSB_FM_OPERATORS_BY_OFFSET[0x03] = 3;\r\nSB_FM_OPERATORS_BY_OFFSET[0x04] = 4;\r\nSB_FM_OPERATORS_BY_OFFSET[0x05] = 5;\r\nSB_FM_OPERATORS_BY_OFFSET[0x08] = 6;\r\nSB_FM_OPERATORS_BY_OFFSET[0x09] = 7;\r\nSB_FM_OPERATORS_BY_OFFSET[0x0A] = 8;\r\nSB_FM_OPERATORS_BY_OFFSET[0x0B] = 9;\r\nSB_FM_OPERATORS_BY_OFFSET[0x0C] = 10;\r\nSB_FM_OPERATORS_BY_OFFSET[0x0D] = 11;\r\nSB_FM_OPERATORS_BY_OFFSET[0x10] = 12;\r\nSB_FM_OPERATORS_BY_OFFSET[0x11] = 13;\r\nSB_FM_OPERATORS_BY_OFFSET[0x12] = 14;\r\nSB_FM_OPERATORS_BY_OFFSET[0x13] = 15;\r\nSB_FM_OPERATORS_BY_OFFSET[0x14] = 16;\r\nSB_FM_OPERATORS_BY_OFFSET[0x15] = 17;\r\n\r\nfunction get_fm_operator(register, offset)\r\n{\r\n    return register * 18 + SB_FM_OPERATORS_BY_OFFSET[offset];\r\n}\r\n\r\nregister_fm_write([0x01], function(bits, register, address)\r\n{\r\n    this.fm_waveform_select_enable[register] = bits & 0x20 > 0;\r\n    this.fm_update_waveforms();\r\n});\r\n\r\n// Timer 1 Count.\r\nregister_fm_write([0x02]);\r\n\r\n// Timer 2 Count.\r\nregister_fm_write([0x03]);\r\n\r\nregister_fm_write([0x04], function(bits, register, address)\r\n{\r\n    switch(register)\r\n    {\r\n        case 0:\r\n            // if(bits & 0x80)\r\n            // {\r\n            //     // IQR Reset\r\n            // }\r\n            // else\r\n            // {\r\n            //     // Timer masks and on/off\r\n            // }\r\n            break;\r\n        case 1:\r\n            // Four-operator enable\r\n            break;\r\n    }\r\n});\r\n\r\nregister_fm_write([0x05], function(bits, register, address)\r\n{\r\n    if(register === 0)\r\n    {\r\n        // No registers documented here.\r\n        this.fm_default_write(bits, register, address);\r\n        return;\r\n    }\r\n    // OPL3 Mode Enable\r\n});\r\n\r\nregister_fm_write([0x08], function(bits, register, address)\r\n{\r\n    // Composite sine wave on/off\r\n    // Note select (keyboard split selection method)\r\n});\r\n\r\nregister_fm_write(between(0x20, 0x35), function(bits, register, address)\r\n{\r\n    var operator = get_fm_operator(register, address - 0x20);\r\n    // Tremolo\r\n    // Vibrato\r\n    // Sustain\r\n    // KSR Envelope Scaling\r\n    // Frequency Multiplication Factor\r\n});\r\n\r\nregister_fm_write(between(0x40, 0x55), function(bits, register, address)\r\n{\r\n    var operator = get_fm_operator(register, address - 0x40);\r\n    // Key Scale Level\r\n    // Output Level\r\n});\r\n\r\nregister_fm_write(between(0x60, 0x75), function(bits, register, address)\r\n{\r\n    var operator = get_fm_operator(register, address - 0x60);\r\n    // Attack Rate\r\n    // Decay Rate\r\n});\r\n\r\nregister_fm_write(between(0x80, 0x95), function(bits, register, address)\r\n{\r\n    var operator = get_fm_operator(register, address - 0x80);\r\n    // Sustain Level\r\n    // Release Rate\r\n});\r\n\r\nregister_fm_write(between(0xA0, 0xA8), function(bits, register, address)\r\n{\r\n    var channel = address - 0xA0;\r\n    // Frequency Number (Lower 8 bits)\r\n});\r\n\r\nregister_fm_write(between(0xB0, 0xB8), function(bits, register, address)\r\n{\r\n    // Key-On\r\n    // Block Number\r\n    // Frequency Number (Higher 2 bits)\r\n});\r\n\r\nregister_fm_write([0xBD], function(bits, register, address)\r\n{\r\n    // Tremelo Depth\r\n    // Vibrato Depth\r\n    // Percussion Mode\r\n    // Bass Drum Key-On\r\n    // Snare Drum Key-On\r\n    // Tom-Tom Key-On\r\n    // Cymbal Key-On\r\n    // Hi-Hat Key-On\r\n});\r\n\r\nregister_fm_write(between(0xC0, 0xC8), function(bits, register, address)\r\n{\r\n    // Right Speaker Enable\r\n    // Left Speaker Enable\r\n    // Feedback Modulation Factor\r\n    // Synthesis Type\r\n});\r\n\r\nregister_fm_write(between(0xE0, 0xF5), function(bits, register, address)\r\n{\r\n    var operator = get_fm_operator(register, address - 0xE0);\r\n    // Waveform Select\r\n});\r\n\r\n//\r\n// FM behaviours\r\n//\r\n\r\nSB16.prototype.fm_update_waveforms = function()\r\n{\r\n    // To be implemented.\r\n};\r\n\r\n//\r\n// General behaviours\r\n//\r\n\r\nSB16.prototype.sampling_rate_change = function(rate)\r\n{\r\n    this.sampling_rate = rate;\r\n    this.bus.send(\"dac-tell-sampling-rate\", rate);\r\n};\r\n\r\nSB16.prototype.get_channel_count = function()\r\n{\r\n    return this.dsp_stereo ? 2 : 1;\r\n};\r\n\r\nSB16.prototype.dma_transfer_size_set = function()\r\n{\r\n    this.dma_sample_count = 1 + (this.write_buffer.shift() << 0) + (this.write_buffer.shift() << 8);\r\n};\r\n\r\nSB16.prototype.dma_transfer_start = function()\r\n{\r\n    dbg_log(\"begin dma transfer\", LOG_SB16);\r\n\r\n    // (1) Setup appropriate settings.\r\n\r\n    this.bytes_per_sample = 1;\r\n    if(this.dsp_16bit) this.bytes_per_sample *= 2;\r\n\r\n    // Don't count stereo interleaved bits apparently.\r\n    // Disabling this line is needed for sounds to work correctly,\r\n    // especially double buffering autoinit mode.\r\n    // Learnt the hard way.\r\n    // if(this.dsp_stereo) this.bytes_per_sample *= 2;\r\n\r\n    this.dma_bytes_count = this.dma_sample_count * this.bytes_per_sample;\r\n    this.dma_bytes_block = SB_DMA_BLOCK_SAMPLES * this.bytes_per_sample;\r\n\r\n    // Ensure block size is small enough but not too small, and is divisible by 4\r\n    var max_bytes_block = Math.max(this.dma_bytes_count >> 2 & ~0x3, 32);\r\n    this.dma_bytes_block = Math.min(max_bytes_block, this.dma_bytes_block);\r\n\r\n    // (2) Wait until channel is unmasked (if not already)\r\n    this.dma_waiting_transfer = true;\r\n    if(!this.dma.channel_mask[this.dma_channel])\r\n    {\r\n        this.dma_on_unmask(this.dma_channel);\r\n    }\r\n};\r\n\r\nSB16.prototype.dma_on_unmask = function(channel)\r\n{\r\n    if(channel !== this.dma_channel || !this.dma_waiting_transfer)\r\n    {\r\n        return;\r\n    }\r\n\r\n    // (3) Configure amount of bytes left to transfer and tell speaker adapter\r\n    // to start requesting transfers\r\n    this.dma_waiting_transfer = false;\r\n    this.dma_bytes_left = this.dma_bytes_count;\r\n    this.dma_paused = false;\r\n    this.bus.send(\"dac-enable\");\r\n};\r\n\r\nSB16.prototype.dma_transfer_next = function()\r\n{\r\n    dbg_log(\"dma transfering next block\", LOG_SB16);\r\n\r\n    var size = Math.min(this.dma_bytes_left, this.dma_bytes_block);\r\n    var samples = Math.floor(size / this.bytes_per_sample);\r\n\r\n    this.dma.do_write(this.dma_syncbuffer, 0, size, this.dma_channel, (error) =>\r\n    {\r\n        dbg_log(\"dma block transfer \" + (error ? \"unsuccessful\" : \"successful\"), LOG_SB16);\r\n        if(error) return;\r\n\r\n        this.dma_to_dac(samples);\r\n        this.dma_bytes_left -= size;\r\n\r\n        if(!this.dma_bytes_left)\r\n        {\r\n            // Completed requested transfer of given size.\r\n            this.raise_irq(this.dma_irq);\r\n\r\n            if(this.dma_autoinit)\r\n            {\r\n                // Restart the transfer.\r\n                this.dma_bytes_left = this.dma_bytes_count;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nSB16.prototype.dma_to_dac = function(sample_count)\r\n{\r\n    var amplitude = this.dsp_16bit ? 32767.5 : 127.5;\r\n    var offset = this.dsp_signed ? 0 : -1;\r\n    var repeats = this.dsp_stereo ? 1 : 2;\r\n\r\n    var buffer;\r\n    if(this.dsp_16bit)\r\n    {\r\n        buffer = this.dsp_signed ? this.dma_buffer_int16 : this.dma_buffer_uint16;\r\n    }\r\n    else\r\n    {\r\n        buffer = this.dsp_signed ? this.dma_buffer_int8 : this.dma_buffer_uint8;\r\n    }\r\n\r\n    var channel = 0;\r\n    for(var i = 0; i < sample_count; i++)\r\n    {\r\n        var sample = audio_normalize(buffer[i], amplitude, offset);\r\n        for(var j = 0; j < repeats; j++)\r\n        {\r\n            this.dac_buffers[channel].push(sample);\r\n            channel ^= 1;\r\n        }\r\n    }\r\n\r\n    this.dac_send();\r\n};\r\n\r\nSB16.prototype.dac_handle_request = function()\r\n{\r\n    if(!this.dma_bytes_left || this.dma_paused)\r\n    {\r\n        // No more data to transfer or is paused. Send whatever is in the buffers.\r\n        this.dac_send();\r\n    }\r\n    else\r\n    {\r\n        this.dma_transfer_next();\r\n    }\r\n};\r\n\r\nSB16.prototype.dac_send = function()\r\n{\r\n    if(!this.dac_buffers[0].length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var out0 = this.dac_buffers[0].shift_block(this.dac_buffers[0].length);\r\n    var out1 = this.dac_buffers[1].shift_block(this.dac_buffers[1].length);\r\n    this.bus.send(\"dac-send-data\", [out0, out1], [out0.buffer, out1.buffer]);\r\n};\r\n\r\nSB16.prototype.raise_irq = function(type)\r\n{\r\n    dbg_log(\"raise irq\", LOG_SB16);\r\n    this.irq_triggered[type] = 1;\r\n    this.cpu.device_raise_irq(this.irq);\r\n};\r\n\r\nSB16.prototype.lower_irq = function(type)\r\n{\r\n    dbg_log(\"lower irq\", LOG_SB16);\r\n    this.irq_triggered[type] = 0;\r\n    this.cpu.device_lower_irq(this.irq);\r\n};\r\n\r\n//\r\n// Helpers\r\n//\r\n\r\nfunction audio_normalize(value, amplitude, offset)\r\n{\r\n    return audio_clip(value / amplitude + offset, -1, 1);\r\n}\r\n\r\nfunction audio_clip(value, low, high)\r\n{\r\n    return (value < low) * low + (value > high) * high + (low <= value && value <= high) * value;\r\n}\r\n","\"use strict\";\r\n\r\n\r\n/**\r\n * @constructor\r\n * @param {CPU} cpu\r\n * @param {BusConnector} bus\r\n * @param {FS} filesystem\r\n */\r\nfunction VirtIO(cpu, bus, filesystem)\r\n{\r\n    // http://ozlabs.org/~rusty/virtio-spec/virtio-0.9.5.pdf\r\n\r\n    this.pci_space = [\r\n        0xf4, 0x1a, 0x09, 0x10, 0x07, 0x05, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x01, 0xa8, 0x00, 0x00, 0x00, 0x10, 0xbf, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x1a, 0x09, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,\r\n    ];\r\n    this.pci_id = 0x06 << 3;\r\n    this.pci_bars = [\r\n        {\r\n            size: 256,\r\n        },\r\n    ];\r\n    this.name = \"virtio\";\r\n\r\n    var io = cpu.io;\r\n\r\n    io.register_read(0xA800, this,\r\n        function() {\r\n            dbg_log(\"Read device features\", LOG_VIRTIO);\r\n            return 1;\r\n        },\r\n        undefined,\r\n        function()\r\n        {\r\n            dbg_log(\"Read device features\", LOG_VIRTIO);\r\n            return 1;\r\n        }\r\n    );\r\n\r\n    io.register_write(0xA804, this, undefined, undefined, function(data)\r\n    {\r\n        // write guest features\r\n        dbg_log(\"Guest feature selection: \" + h(data, 8), LOG_VIRTIO);\r\n    });\r\n\r\n    io.register_write(0xA80E, this, undefined, function(data)\r\n    {\r\n        // rw queue select\r\n        dbg_log(\"Queue select: \" + h(data, 4), LOG_VIRTIO);\r\n        this.queue_select = data;\r\n    }, undefined);\r\n\r\n    io.register_read(0xA80C, this, undefined, function()\r\n    {\r\n        // read queue size\r\n        dbg_log(\"Read queue size\", LOG_VIRTIO);\r\n        return this.queue_size;\r\n    }, undefined);\r\n\r\n    io.register_read(0xA808, this, undefined, undefined, function()\r\n    {\r\n        // rw queue address\r\n        dbg_log(\"Read queue address\", LOG_VIRTIO);\r\n\r\n        if(this.queue_select === 0)\r\n        {\r\n            return this.queue_address;\r\n        }\r\n        else\r\n        {\r\n            // queue does not exist\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    io.register_write(0xA808, this, undefined, undefined, function(data)\r\n    {\r\n        // rw queue address\r\n        dbg_log(\"Write queue address: \" + h(data, 8), LOG_VIRTIO);\r\n        this.queue_address = data;\r\n    });\r\n\r\n    io.register_write(0xA812, this, function(data)\r\n    {\r\n        dbg_log(\"Write device status: \" + h(data, 2), LOG_VIRTIO);\r\n\r\n        if(data === 0)\r\n        {\r\n            dbg_log(\"Reset\", LOG_VIRTIO);\r\n            this.reset();\r\n        }\r\n        else if(data & 0x80)\r\n        {\r\n            dbg_log(\"Warning: Device status failed\", LOG_VIRTIO);\r\n        }\r\n        else\r\n        {\r\n            dbg_log(((data & 1) ? \"ACKNOWLEDGE \" : \"\") +\r\n                    ((data & 2) ? \"DRIVER \" : \"\") +\r\n                    ((data & 4) ? \"DRIVER_OK\" : \"\"),\r\n                    LOG_VIRTIO);\r\n\r\n        }\r\n\r\n        this.device_status = data;\r\n    });\r\n\r\n    io.register_read(0xA812, this, function()\r\n    {\r\n        dbg_log(\"Read device status: \" + h(this.device_status), LOG_VIRTIO);\r\n        return this.device_status;\r\n    });\r\n\r\n    io.register_read(0xA813, this, function()\r\n    {\r\n        dbg_log(\"Read isr\", LOG_VIRTIO);\r\n\r\n        // reading resets the isr\r\n        var isr = this.isr;\r\n        this.isr = 0;\r\n        this.pci.lower_irq(this.pci_id);\r\n        return isr;\r\n    });\r\n\r\n    io.register_write(0xA810, this, undefined, function(data)\r\n    {\r\n        dbg_log(\"Write queue notify: \" + h(data, 4), LOG_VIRTIO);\r\n\r\n        // only queue 0 supported\r\n        dbg_assert(data === 0);\r\n\r\n        var queue_start = this.queue_address << 12;\r\n        var ring_start = queue_start + 16 * this.queue_size;\r\n        var ring_desc_start = ring_start + 4;\r\n\r\n        var //flags = this.cpu.read16(ring_start),\r\n            // index of the next free ring\r\n            idx = this.cpu.read16(ring_start + 2);\r\n\r\n        dbg_log(\"idx=\" + h(idx, 4), LOG_VIRTIO);\r\n        //dbg_assert(idx < this.queue_size);\r\n\r\n        var mask = this.queue_size - 1;\r\n        idx &= mask;\r\n\r\n        while(this.last_idx !== idx)\r\n        {\r\n            var desc_idx = this.cpu.read16(ring_desc_start + this.last_idx * 2);\r\n            this.handle_descriptor(desc_idx);\r\n\r\n            this.last_idx = this.last_idx + 1 & mask;\r\n        }\r\n    });\r\n\r\n    /** @const @type {CPU} */\r\n    this.cpu = cpu;\r\n\r\n    /** @const @type {PCI} */\r\n    this.pci = cpu.devices.pci;\r\n\r\n    /** @const @type {BusConnector} */\r\n    this.bus = bus;\r\n\r\n    this.queue_select = 0;\r\n    this.device_status = 0;\r\n    this.isr = 0;\r\n\r\n    // these should be stored per queue if there is more than one queue\r\n    this.last_idx = 0;\r\n    this.queue_size = 32;\r\n    this.queue_address = 0;\r\n\r\n    for(var i = 0; i < 128; i++)\r\n    {\r\n        io.register_read(0xA814 + i, this, function(port)\r\n        {\r\n            dbg_log(\"Read device \" + h(port), LOG_VIRTIO);\r\n\r\n            if(port < this.device.configspace.length)\r\n            {\r\n                return this.device.configspace[port];\r\n            }\r\n            else\r\n            {\r\n                return 0;\r\n            }\r\n        }.bind(this, i), undefined, undefined);\r\n\r\n        io.register_write(0xA814 + i, this, function(port, data)\r\n        {\r\n            dbg_log(\"Write device \" + h(port) + \": \" + h(data, 2), LOG_VIRTIO);\r\n        }.bind(this, i), undefined, undefined);\r\n    }\r\n\r\n    // should be generalized to support more devices than just the filesystem\r\n    this.device = new Virtio9p(filesystem, bus);\r\n    this.device.SendReply = this.device_reply.bind(this);\r\n\r\n    cpu.devices.pci.register_device(this);\r\n}\r\n\r\nVirtIO.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = 0; // unused\r\n    state[1] = this.queue_select;\r\n    state[2] = this.device_status;\r\n    state[3] = this.isr;\r\n    state[4] = this.last_idx;\r\n    state[5] = this.queue_size;\r\n    state[6] = this.queue_address;\r\n    state[7] = this.device;\r\n\r\n    return state;\r\n};\r\n\r\nVirtIO.prototype.set_state = function(state)\r\n{\r\n    this.queue_select = state[1];\r\n    this.device_status = state[2];\r\n    this.isr = state[3];\r\n    this.last_idx = state[4];\r\n    this.queue_size = state[5];\r\n    this.queue_address = state[6];\r\n\r\n    this.device = state[7];\r\n    this.device.SendReply = this.device_reply.bind(this);\r\n};\r\n\r\nVirtIO.prototype.reset = function()\r\n{\r\n    this.queue_select = 0;\r\n    this.device_status = 0;\r\n    this.isr = 0;\r\n\r\n    this.last_idx = 0;\r\n    this.queue_size = 32;\r\n    this.queue_address = 0;\r\n};\r\n\r\nVirtIO.prototype.handle_descriptor = function(idx)\r\n{\r\n    var next = idx;\r\n    var desc_start = this.queue_address << 12;\r\n\r\n    var buffer_idx = 0;\r\n    var buffers = [];\r\n\r\n    do\r\n    {\r\n        var addr = desc_start + next * 16;\r\n        var flags = this.cpu.read16(addr + 12);\r\n\r\n        if(flags & VRING_DESC_F_WRITE)\r\n        {\r\n            break;\r\n        }\r\n\r\n        if(flags & VRING_DESC_F_INDIRECT) {\r\n            dbg_assert(false, \"unsupported\");\r\n        }\r\n\r\n        var addr_low = this.cpu.read32s(addr);\r\n        var addr_high = this.cpu.read32s(addr + 4);\r\n        var len = this.cpu.read32s(addr + 8) >>> 0;\r\n\r\n        buffers.push({\r\n            addr_low: addr_low,\r\n            addr_high: addr_high,\r\n            len: len,\r\n        });\r\n\r\n        dbg_log(\"descriptor: addr=\" + h(addr_high, 8) + \":\" + h(addr_low, 8) +\r\n                             \" len=\" + h(len, 8) + \" flags=\" + h(flags, 4) + \" next=\" + h(next, 4), LOG_VIRTIO);\r\n\r\n        if(flags & VRING_DESC_F_NEXT)\r\n        {\r\n            next = this.cpu.read16(addr + 14);\r\n            dbg_assert(next < this.queue_size);\r\n        }\r\n        else\r\n        {\r\n            next = -1;\r\n            break;\r\n        }\r\n    }\r\n    while(true);\r\n\r\n    var buffer_len = -1;\r\n    var pointer = 0;\r\n\r\n    var infos = {\r\n        start: idx,\r\n        next: next,\r\n    };\r\n\r\n    this.device.ReceiveRequest(infos, function()\r\n    {\r\n        // return one byte\r\n\r\n        if(pointer >= buffer_len)\r\n        {\r\n            if(buffer_idx === buffers.length)\r\n            {\r\n                dbg_log(\"Read more data than descriptor has\", LOG_VIRTIO);\r\n                return 0;\r\n            }\r\n\r\n            var buf = buffers[buffer_idx++];\r\n\r\n            addr_low = buf.addr_low;\r\n            buffer_len = buf.len;\r\n            pointer = 0;\r\n        }\r\n\r\n        return this.cpu.read8(addr_low + pointer++);\r\n    }.bind(this));\r\n};\r\n\r\nVirtIO.prototype.device_reply = function(queueidx, infos)\r\n{\r\n    if(infos.next === -1)\r\n    {\r\n        dbg_log(\"Reply to invalid index\", LOG_VIRTIO);\r\n        return;\r\n    }\r\n\r\n    var mask = this.queue_size - 1;\r\n    var result_length = this.device.replybuffersize;\r\n\r\n    var next = infos.next;\r\n    var desc_start = this.queue_address << 12;\r\n\r\n    var buffer_idx = 0;\r\n    var buffers = [];\r\n\r\n    do\r\n    {\r\n        var addr = desc_start + next * 16;\r\n        var flags = this.cpu.read16(addr + 12);\r\n\r\n        if((flags & VRING_DESC_F_WRITE) === 0)\r\n        {\r\n            dbg_log(\"Bug: Readonly ring after writeonly ring\", LOG_VIRTIO);\r\n            break;\r\n        }\r\n\r\n        var addr_low = this.cpu.read32s(addr);\r\n        var addr_high = this.cpu.read32s(addr + 4);\r\n        var len = this.cpu.read32s(addr + 8) >>> 0;\r\n\r\n        buffers.push({\r\n            addr_low: addr_low,\r\n            addr_high: addr_high,\r\n            len: len,\r\n        });\r\n\r\n        dbg_log(\"descriptor: addr=\" + h(addr_high, 8) + \":\" + h(addr_low, 8) +\r\n                             \" len=\" + h(len, 8) + \" flags=\" + h(flags, 4) + \" next=\" + h(next, 4), LOG_VIRTIO);\r\n\r\n        if(flags & VRING_DESC_F_NEXT)\r\n        {\r\n            next = this.cpu.read16(addr + 14);\r\n            dbg_assert(next < this.queue_size);\r\n        }\r\n        else\r\n        {\r\n            break;\r\n        }\r\n    }\r\n    while(true);\r\n\r\n    var buffer_len = -1;\r\n    var pointer = 0;\r\n\r\n    for(var i = 0; i < result_length; i++)\r\n    {\r\n        var data = this.device.replybuffer[i];\r\n\r\n        if(pointer >= buffer_len)\r\n        {\r\n            if(buffer_idx === buffers.length)\r\n            {\r\n                dbg_log(\"Write more data than descriptor has\", LOG_VIRTIO);\r\n                return 0;\r\n            }\r\n\r\n            var buf = buffers[buffer_idx++];\r\n\r\n            addr_low = buf.addr_low;\r\n            buffer_len = buf.len;\r\n            pointer = 0;\r\n        }\r\n\r\n        this.cpu.write8(addr_low + pointer++, data);\r\n    }\r\n\r\n    var used_desc_start = (this.queue_address << 12) + 16 * this.queue_size + 4 + 2 * this.queue_size;\r\n    used_desc_start = used_desc_start + 4095 & ~4095;\r\n\r\n    var flags = this.cpu.read16(used_desc_start);\r\n    var used_idx = this.cpu.read16(used_desc_start + 2);\r\n    this.cpu.write16(used_desc_start + 2, used_idx + 1);\r\n\r\n    dbg_log(\"used descriptor: addr=\" + h(used_desc_start, 8) + \" flags=\" + h(flags, 4) + \" idx=\" + h(used_idx, 4), LOG_VIRTIO);\r\n\r\n    used_idx &= mask;\r\n    var used_desc_offset = used_desc_start + 4 + used_idx * 8;\r\n    this.cpu.write32(used_desc_offset, infos.start);\r\n    this.cpu.write32(used_desc_offset + 4, result_length);\r\n\r\n    this.isr |= 1;\r\n    this.pci.raise_irq(this.pci_id);\r\n};\r\n","\"use strict\";\r\n\r\nvar Bus = {};\r\n\r\n/** @constructor */\r\nfunction BusConnector()\r\n{\r\n    this.listeners = {};\r\n    this.pair = undefined;\r\n}\r\n\r\n/**\r\n * @param {string} name\r\n * @param {function(?)} fn\r\n * @param {Object} this_value\r\n */\r\nBusConnector.prototype.register = function(name, fn, this_value)\r\n{\r\n    var listeners = this.listeners[name];\r\n\r\n    if(listeners === undefined)\r\n    {\r\n        listeners = this.listeners[name] = [];\r\n    }\r\n\r\n    listeners.push({\r\n        fn: fn,\r\n        this_value: this_value,\r\n    });\r\n};\r\n\r\n/**\r\n * Unregister one message with the given name and callback\r\n *\r\n * @param {string} name\r\n * @param {function()} fn\r\n */\r\nBusConnector.prototype.unregister = function(name, fn)\r\n{\r\n    var listeners = this.listeners[name];\r\n\r\n    if(listeners === undefined)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.listeners[name] = listeners.filter(function(l)\r\n    {\r\n        return l.fn !== fn;\r\n    });\r\n};\r\n\r\n/**\r\n * Send (\"emit\") a message\r\n *\r\n * @param {string} name\r\n * @param {*=} value\r\n * @param {*=} unused_transfer\r\n */\r\nBusConnector.prototype.send = function(name, value, unused_transfer)\r\n{\r\n    if(!this.pair)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var listeners = this.pair.listeners[name];\r\n\r\n    if(listeners === undefined)\r\n    {\r\n        return;\r\n    }\r\n\r\n    for(var i = 0; i < listeners.length; i++)\r\n    {\r\n        var listener = listeners[i];\r\n        listener.fn.call(listener.this_value, value);\r\n    }\r\n};\r\n\r\n/**\r\n * Send a message, guaranteeing that it is received asynchronously\r\n *\r\n * @param {string} name\r\n * @param {Object=} value\r\n */\r\nBusConnector.prototype.send_async = function(name, value)\r\n{\r\n    dbg_assert(arguments.length === 1 || arguments.length === 2);\r\n\r\n    setTimeout(this.send.bind(this, name, value), 0);\r\n};\r\n\r\nBus.create = function()\r\n{\r\n    var c0 = new BusConnector();\r\n    var c1 = new BusConnector();\r\n\r\n    c0.pair = c1;\r\n    c1.pair = c0;\r\n\r\n    return [c0, c1];\r\n};\r\n\r\n","\"use strict\";\r\n\r\nvar log_data = [];\r\n\r\nfunction do_the_log(message)\r\n{\r\n    if(LOG_TO_FILE)\r\n    {\r\n        log_data.push(message, \"\\n\");\r\n    }\r\n    else\r\n    {\r\n        console.log(message);\r\n    }\r\n}\r\n\r\n/**\r\n * @type {function((string|number), number=)}\r\n * @const\r\n */\r\nvar dbg_log = (function()\r\n{\r\n    if(!DEBUG)\r\n    {\r\n        return function() {};\r\n    }\r\n\r\n    /** @const @type {Object.<number, string>} */\r\n    var dbg_names = LOG_NAMES.reduce(function(a, x)\r\n    {\r\n        a[x[0]] = x[1];\r\n        return a;\r\n    }, {});\r\n\r\n    var log_last_message = \"\";\r\n    var log_message_repetitions = 0;\r\n\r\n    /**\r\n     * @param {number=} level\r\n     */\r\n    function dbg_log_(stuff, level)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        level = level || 1;\r\n\r\n        if(level & LOG_LEVEL)\r\n        {\r\n            var level_name = dbg_names[level] || \"\",\r\n                message = \"[\" + v86util.pads(level_name, 4) + \"] \" + stuff;\r\n\r\n            if(message === log_last_message)\r\n            {\r\n                log_message_repetitions++;\r\n\r\n                if(log_message_repetitions < 2048)\r\n                {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var now = new Date();\r\n            var time_str = v86util.pad0(now.getHours(), 2) + \":\" +\r\n                           v86util.pad0(now.getMinutes(), 2) + \":\" +\r\n                           v86util.pad0(now.getSeconds(), 2) + \"+\" +\r\n                           v86util.pad0(now.getMilliseconds(), 3) + \" \";\r\n\r\n            if(log_message_repetitions)\r\n            {\r\n                if(log_message_repetitions === 1)\r\n                {\r\n                    do_the_log(time_str + log_last_message);\r\n                }\r\n                else\r\n                {\r\n                    do_the_log(\"Previous message repeated \" + log_message_repetitions + \" times\");\r\n                }\r\n\r\n                log_message_repetitions = 0;\r\n            }\r\n\r\n            do_the_log(time_str + message);\r\n            log_last_message = message;\r\n        }\r\n    }\r\n\r\n    return dbg_log_;\r\n})();\r\n\r\n/**\r\n * @param {number=} level\r\n */\r\nfunction dbg_trace(level)\r\n{\r\n    if(!DEBUG) return;\r\n\r\n    dbg_log(Error().stack.replace(/(?:(?:t|t16|t32)\\.\\(anonymous function\\)\\.)+/g, \"t.(anonymous function).\"), level);\r\n}\r\n\r\n/**\r\n * console.assert is fucking slow\r\n * @param {string=} msg\r\n * @param {number=} level\r\n */\r\nfunction dbg_assert(cond, msg, level)\r\n{\r\n    if(!DEBUG) return;\r\n\r\n    if(!cond)\r\n    {\r\n        dbg_assert_failed(msg);\r\n    }\r\n};\r\n\r\n\r\nfunction dbg_assert_failed(msg)\r\n{\r\n    debugger;\r\n    console.trace();\r\n\r\n    if(msg)\r\n    {\r\n        throw \"Assert failed: \" + msg;\r\n    }\r\n    else\r\n    {\r\n        throw \"Assert failed\";\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar CPU_LOG_VERBOSE = false;\r\n\r\n\r\n// Resources:\r\n// https://pdos.csail.mit.edu/6.828/2006/readings/i386/toc.htm\r\n// https://www-ssl.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\r\n// http://ref.x86asm.net/geek32.html\r\n\r\n\r\n// exception bits in the MXCSR Register\r\nvar\r\n    /** @const */\r\n    CPU_EX_P = 1 << 5,\r\n    /** @const */\r\n    CPU_EX_U = 1 << 4,\r\n    /** @const */\r\n    CPU_EX_O = 1 << 3,\r\n    /** @const */\r\n    CPU_EX_Z = 1 << 2,\r\n    /** @const */\r\n    CPU_EX_D = 1 << 1,\r\n    /** @const */\r\n    CPU_EX_I = 1 << 0;\r\n\r\n/** @constructor */\r\nfunction CPU(bus)\r\n{\r\n    /** @type {number} */\r\n    this.memory_size = 0;\r\n\r\n    // Note: Currently unused (degrades performance and not required by any OS\r\n    //       that we support)\r\n    this.a20_enabled = true;\r\n\r\n    this.mem_page_infos = undefined;\r\n\r\n    this.mem8 = new Uint8Array(0);\r\n    this.mem16 = new Uint16Array(this.mem8.buffer);\r\n    this.mem32s = new Int32Array(this.mem8.buffer);\r\n\r\n    this.segment_is_null = new Uint8Array(8);\r\n    this.segment_limits = new Uint32Array(8);\r\n    //this.segment_infos = new Uint32Array(8);\r\n    this.segment_offsets = new Int32Array(8);\r\n\r\n    /**\r\n     * Translation Lookaside Buffer\r\n     * @const\r\n     */\r\n    this.tlb_data = new Int32Array(1 << 20);\r\n\r\n    /**\r\n     * Information about which pages are cached in the tlb.\r\n     * By bit:\r\n     *   0 system, read\r\n     *   1 system, write\r\n     *   2 user, read\r\n     *   3 user, write\r\n     * @const\r\n     */\r\n    this.tlb_info = new Uint8Array(1 << 20);\r\n\r\n    /**\r\n     * Same as tlb_info, except it only contains global pages\r\n     * @const\r\n     */\r\n    this.tlb_info_global = new Uint8Array(1 << 20);\r\n\r\n    /**\r\n     * Wheter or not in protected mode\r\n     * @type {boolean}\r\n     */\r\n    this.protected_mode = false;\r\n\r\n    /**\r\n     * interrupt descriptor table\r\n     * @type {number}\r\n     */\r\n    this.idtr_size = 0;\r\n    /** @type {number} */\r\n    this.idtr_offset = 0;\r\n\r\n    /**\r\n     * global descriptor table register\r\n     * @type {number}\r\n     */\r\n    this.gdtr_size = 0;\r\n    /** @type {number} */\r\n    this.gdtr_offset = 0;\r\n\r\n    this.tss_size_32 = false;\r\n\r\n    /*\r\n     * whether or not a page fault occured\r\n     */\r\n    this.page_fault = false;\r\n\r\n    this.cr = new Int32Array(8);\r\n\r\n    /** @type {number} */\r\n    this.cr[0] = 0;\r\n    /** @type {number} */\r\n    this.cr[2] = 0;\r\n    /** @type {number} */\r\n    this.cr[3] = 0;\r\n    /** @type {number} */\r\n    this.cr[4] = 0;\r\n\r\n    // current privilege level\r\n    /** @type {number} */\r\n    this.cpl = 0;\r\n\r\n    // if false, pages are 4 KiB, else 4 Mib\r\n    /** @type {number} */\r\n    this.page_size_extensions = 0;\r\n\r\n    // current operand/address size\r\n    /** @type {boolean} */\r\n    this.is_32 = false;\r\n\r\n    /** @type {boolean} */\r\n    this.stack_size_32 = false;\r\n\r\n    /**\r\n     * Was the last instruction a hlt?\r\n     * @type {boolean}\r\n     */\r\n    this.in_hlt = false;\r\n\r\n    /** @type {number} */\r\n    this.last_virt_eip = 0;\r\n\r\n    /** @type {number} */\r\n    this.eip_phys = 0;\r\n\r\n    /** @type {number} */\r\n    this.last_virt_esp = 0;\r\n\r\n    /** @type {number} */\r\n    this.esp_phys = 0;\r\n\r\n\r\n    /** @type {number} */\r\n    this.sysenter_cs = 0;\r\n\r\n    /** @type {number} */\r\n    this.sysenter_esp = 0;\r\n\r\n    /** @type {number} */\r\n    this.sysenter_eip = 0;\r\n\r\n    /** @type {number} */\r\n    this.prefixes = 0;\r\n\r\n    /** @type {number} */\r\n    this.flags = 0;\r\n\r\n    /**\r\n     * bitmap of flags which are not updated in the flags variable\r\n     * changed by arithmetic instructions, so only relevant to arithmetic flags\r\n     * @type {number}\r\n     */\r\n    this.flags_changed = 0;\r\n\r\n    /**\r\n     * the last 2 operators and the result and size of the last arithmetic operation\r\n     * @type {number}\r\n     */\r\n    this.last_op1 = 0;\r\n    /** @type {number} */\r\n    this.last_op2 = 0;\r\n    /** @type {number} */\r\n    this.last_op_size = 0;\r\n\r\n    /** @type {number} */\r\n    this.last_add_result = 0;\r\n\r\n    /** @type {number} */\r\n    this.last_result = 0;\r\n\r\n    this.div32_result = new Float64Array(2);\r\n\r\n    this.tsc_offset = 0;\r\n\r\n    /** @type {number} */\r\n    this.modrm_byte = 0;\r\n\r\n    /** @type {number} */\r\n    this.phys_addr = 0;\r\n\r\n    /** @type {number} */\r\n    this.phys_addr_high = 0;\r\n\r\n    /** @type {!Object} */\r\n    this.devices = {};\r\n\r\n    this.table = [];\r\n\r\n    // paging enabled\r\n    /** @type {boolean} */\r\n    this.paging = false;\r\n\r\n    /** @type {number} */\r\n    this.instruction_pointer = 0;\r\n\r\n    /** @type {number} */\r\n    this.previous_ip = 0;\r\n\r\n    this.apic_enabled = true;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.timestamp_counter = 0;\r\n\r\n    // registers\r\n    this.reg32s = new Int32Array(8);\r\n    this.reg32 = new Uint32Array(this.reg32s.buffer);\r\n    this.reg16s = new Int16Array(this.reg32s.buffer);\r\n    this.reg16 = new Uint16Array(this.reg32s.buffer);\r\n    this.reg8s = new Int8Array(this.reg32s.buffer);\r\n    this.reg8 = new Uint8Array(this.reg32s.buffer);\r\n\r\n    // mm0-mm7 split up into 32 bit pairs\r\n    this.reg_mmxs = new Int32Array(16);\r\n    this.reg_mmx = new Uint32Array(this.reg_mmxs.buffer);\r\n    this.reg_mmx8s = new Int8Array(this.reg_mmxs.buffer);\r\n    this.reg_mmx8 = new Uint8Array(this.reg_mmxs.buffer);\r\n\r\n    this.reg_xmm32s = new Int32Array(8 * 4);\r\n    this.mxcsr = 0x1F80;\r\n\r\n    // segment registers, tr and ldtr\r\n    this.sreg = new Uint16Array(8);\r\n\r\n    // debug registers\r\n    this.dreg = new Int32Array(8);\r\n\r\n\r\n    // managed in io.js\r\n    /** @const */ this.memory_map_read8 = [];\r\n    /** @const */ this.memory_map_write8 = [];\r\n    /** @const */ this.memory_map_read32 = [];\r\n    /** @const */ this.memory_map_write32 = [];\r\n\r\n    /**\r\n     * @const\r\n     * @type {{main: ArrayBuffer, vga: ArrayBuffer}}\r\n     */\r\n    this.bios = {\r\n        main: null,\r\n        vga: null,\r\n    };\r\n\r\n    /** @type {number} */\r\n    this.fw_value = 0;\r\n\r\n    this.io = undefined;\r\n    this.fpu = undefined;\r\n\r\n    this.bus = bus;\r\n\r\n    dbg_assert(this.table16 && this.table32);\r\n    dbg_assert(this.table0F_16 && this.table0F_32);\r\n\r\n    this.update_operand_size();\r\n\r\n    this.tsc_offset = v86.microtick();\r\n\r\n    this.debug_init();\r\n\r\n    this.init2();\r\n\t\r\n\tthis.winnt_fix = WINNT_FIX;\r\n\r\n    //Object.seal(this);\r\n}\r\n\r\nCPU.prototype.get_state = function()\r\n{\r\n    var state = [];\r\n\r\n    state[0] = this.memory_size;\r\n    state[1] = this.segment_is_null;\r\n    state[2] = this.segment_offsets;\r\n    state[3] = this.segment_limits;\r\n    state[4] = this.protected_mode;\r\n    state[5] = this.idtr_offset;\r\n    state[6] = this.idtr_size;\r\n    state[7] = this.gdtr_offset;\r\n    state[8] = this.gdtr_size;\r\n    state[9] = this.page_fault;\r\n    state[10] = this.cr;\r\n    state[11] = this.cpl;\r\n    state[12] = this.page_size_extensions;\r\n    state[13] = this.is_32;\r\n\r\n    state[16] = this.stack_size_32;\r\n    state[17] = this.in_hlt;\r\n    state[18] = this.last_virt_eip;\r\n    state[19] = this.eip_phys;\r\n    state[20] = this.last_virt_esp;\r\n    state[21] = this.esp_phys;\r\n    state[22] = this.sysenter_cs;\r\n    state[23] = this.sysenter_eip;\r\n    state[24] = this.sysenter_esp;\r\n    state[25] = this.prefixes;\r\n    state[26] = this.flags;\r\n    state[27] = this.flags_changed;\r\n    state[28] = this.last_op1;\r\n    state[29] = this.last_op2;\r\n    state[30] = this.last_op_size;\r\n    state[31] = this.last_add_result;\r\n    state[32] = this.modrm_byte;\r\n\r\n    state[36] = this.paging;\r\n    state[37] = this.instruction_pointer;\r\n    state[38] = this.previous_ip;\r\n    state[39] = this.reg32s;\r\n    state[40] = this.sreg;\r\n    state[41] = this.dreg;\r\n    state[42] = this.mem8;\r\n    state[43] = this.fpu;\r\n\r\n    state[45] = this.devices.virtio;\r\n    state[46] = this.devices.apic;\r\n    state[47] = this.devices.rtc;\r\n    state[48] = this.devices.pci;\r\n    state[49] = this.devices.dma;\r\n    state[50] = this.devices.acpi;\r\n    state[51] = this.devices.hpet;\r\n    state[52] = this.devices.vga;\r\n    state[53] = this.devices.ps2;\r\n    state[54] = this.devices.uart0;\r\n    state[55] = this.devices.fdc;\r\n    state[56] = this.devices.cdrom;\r\n    state[57] = this.devices.hda;\r\n    state[58] = this.devices.pit;\r\n    state[59] = this.devices.net;\r\n    state[60] = this.devices.pic;\r\n    state[61] = this.devices.sb16;\r\n\r\n    state[62] = this.a20_enabled;\r\n    state[63] = this.fw_value;\r\n\r\n    state[64] = this.devices.ioapic;\r\n\r\n    state[65] = this.tss_size_32;\r\n\r\n    state[66] = this.reg_mmxs;\r\n\r\n    state[67] = this.devices.uart1;\r\n    state[68] = this.devices.uart2;\r\n    state[69] = this.devices.uart3;\r\n\r\n    return state;\r\n};\r\n\r\nCPU.prototype.set_state = function(state)\r\n{\r\n    this.memory_size = state[0];\r\n    this.segment_is_null = state[1];\r\n    this.segment_offsets = state[2];\r\n    this.segment_limits = state[3];\r\n    this.protected_mode = state[4];\r\n    this.idtr_offset = state[5];\r\n    this.idtr_size = state[6];\r\n    this.gdtr_offset = state[7];\r\n    this.gdtr_size = state[8];\r\n    this.page_fault = state[9];\r\n    this.cr = state[10];\r\n    this.cpl = state[11];\r\n    this.page_size_extensions = state[12];\r\n    this.is_32 = state[13];\r\n\r\n    this.stack_size_32 = state[16];\r\n\r\n    this.in_hlt = state[17];\r\n    this.last_virt_eip = state[18];\r\n    this.eip_phys = state[19];\r\n    this.last_virt_esp = state[20];\r\n    this.esp_phys = state[21];\r\n    this.sysenter_cs = state[22];\r\n    this.sysenter_eip = state[23];\r\n    this.sysenter_esp = state[24];\r\n    this.prefixes = state[25];\r\n\r\n    this.flags = state[26];\r\n    this.flags_changed = state[27];\r\n    this.last_op1 = state[28];\r\n    this.last_op2 = state[29];\r\n    this.last_op_size = state[30];\r\n    this.last_add_result = state[31];\r\n    this.modrm_byte = state[32];\r\n\r\n    this.paging = state[36];\r\n    this.instruction_pointer = state[37];\r\n    this.previous_ip = state[38];\r\n    this.reg32s = state[39];\r\n    this.sreg = state[40];\r\n    this.dreg = state[41];\r\n    this.mem8 = state[42];\r\n    this.fpu = state[43];\r\n\r\n    this.devices.virtio = state[45];\r\n    this.devices.apic = state[46];\r\n    this.devices.rtc = state[47];\r\n    this.devices.pci = state[48];\r\n    this.devices.dma = state[49];\r\n    this.devices.acpi = state[50];\r\n    this.devices.hpet = state[51];\r\n    this.devices.vga = state[52];\r\n    this.devices.ps2 = state[53];\r\n    this.devices.uart0 = state[54];\r\n    this.devices.fdc = state[55];\r\n    this.devices.cdrom = state[56];\r\n    this.devices.hda = state[57];\r\n    this.devices.pit = state[58];\r\n    this.devices.net = state[59];\r\n    this.devices.pic = state[60];\r\n    this.devices.sb16 = state[61];\r\n\r\n    this.a20_enabled = state[62];\r\n    this.fw_value = state[63];\r\n\r\n    this.devices.ioapic = state[64];\r\n\r\n    this.tss_size_32 = state[65];\r\n\r\n    this.reg_mmxs = state[66];\r\n\r\n    this.devices.uart1 = state[67];\r\n    this.devices.uart2 = state[68];\r\n    this.devices.uart3 = state[69];\r\n\r\n    this.mem16 = new Uint16Array(this.mem8.buffer, this.mem8.byteOffset, this.mem8.length >> 1);\r\n    this.mem32s = new Int32Array(this.mem8.buffer, this.mem8.byteOffset, this.mem8.length >> 2);\r\n\r\n\r\n    this.full_clear_tlb();\r\n    // tsc_offset?\r\n\r\n    this.reg32 = new Uint32Array(this.reg32s.buffer);\r\n    this.reg16s = new Int16Array(this.reg32s.buffer);\r\n    this.reg16 = new Uint16Array(this.reg32s.buffer);\r\n    this.reg8s = new Int8Array(this.reg32s.buffer);\r\n    this.reg8 = new Uint8Array(this.reg32s.buffer);\r\n\r\n    this.reg_mmx = new Uint32Array(this.reg_mmxs.buffer);\r\n    this.reg_mmx8s = new Int8Array(this.reg_mmxs.buffer);\r\n    this.reg_mmx8 = new Uint8Array(this.reg_mmxs.buffer);\r\n    this.update_operand_size();\r\n};\r\n\r\n\r\n/**\r\n * @return {number} time in ms until this method should becalled again\r\n */\r\nCPU.prototype.main_run = function()\r\n{\r\n    if(this.in_hlt)\r\n    {\r\n        //if(false)\r\n        //{\r\n        //    var _t = this.hlt_loop();\r\n        //    var t = 0;\r\n        //}\r\n        //else\r\n        //{\r\n            var t = this.hlt_loop();\r\n        //}\r\n\r\n        if(this.in_hlt)\r\n        {\r\n            return t;\r\n        }\r\n    }\r\n\r\n    this.do_run();\r\n\r\n    return 0;\r\n};\r\n\r\nCPU.prototype.exception_cleanup = function(e)\r\n{\r\n    if(e === MAGIC_CPU_EXCEPTION)\r\n    {\r\n        // A legit CPU exception (for instance, a page fault happened)\r\n        // call_interrupt_vector has already been called at this point,\r\n        // so we just need to reset some state\r\n\r\n        this.page_fault = false;\r\n\r\n        // restore state from prefixes\r\n        this.clear_prefixes();\r\n    }\r\n    else\r\n    {\r\n        console.log(e);\r\n        console.log(e.stack);\r\n        //var e = new Error(e.message);\r\n        //Error.captureStackTrace && Error.captureStackTrace(e);\r\n        throw e;\r\n    }\r\n};\r\n\r\nCPU.prototype.reboot_internal = function()\r\n{\r\n    this.reset();\r\n    this.load_bios();\r\n\r\n    throw MAGIC_CPU_EXCEPTION;\r\n};\r\n\r\nCPU.prototype.reset = function()\r\n{\r\n    this.a20_enabled = true;\r\n\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.segment_is_null[i] = 0;\r\n        this.segment_limits[i] = 0;\r\n        //this.segment_infos = new Uint32Array(8);\r\n        this.segment_offsets[i] = 0;\r\n    }\r\n\r\n    this.full_clear_tlb();\r\n\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.reg32s[i] = 0;\r\n        this.sreg[i] = 0;\r\n        this.cr[i] = 0;\r\n        this.dreg[i] = 0;\r\n    }\r\n\r\n    for(let i = 0; i < this.reg_mmxs.length; i++)\r\n    {\r\n        this.reg_mmxs[i] = 0;\r\n    }\r\n\r\n    for(let i = 0; i < this.reg_xmm32s.length; i++)\r\n    {\r\n        this.reg_xmm32s[i] = 0;\r\n    }\r\n    this.mxcsr = 0x1F80;\r\n\r\n    this.protected_mode = false;\r\n\r\n    // http://www.sandpile.org/x86/initial.htm\r\n    this.idtr_size = 0;\r\n    this.idtr_offset = 0;\r\n\r\n    this.gdtr_size = 0;\r\n    this.gdtr_offset = 0;\r\n\r\n    this.page_fault = false;\r\n    this.cr[0] = 1 << 30 | 1 << 29 | 1 << 4;\r\n    this.cr[2] = 0;\r\n    this.cr[3] = 0;\r\n    this.cr[4] = 0;\r\n    this.dreg[6] = 0xFFFF0FF0|0;\r\n    this.dreg[7] = 0x400;\r\n    this.cpl = 0;\r\n    this.paging = false;\r\n    this.page_size_extensions = 0;\r\n    this.is_32 = false;\r\n    this.stack_size_32 = false;\r\n    this.prefixes = 0;\r\n\r\n    this.last_virt_eip = -1;\r\n    this.last_virt_esp = -1;\r\n\r\n    this.update_operand_size();\r\n\r\n    this.timestamp_counter = 0;\r\n    this.previous_ip = 0;\r\n    this.in_hlt = false;\r\n\r\n    this.sysenter_cs = 0;\r\n    this.sysenter_esp = 0;\r\n    this.sysenter_eip = 0;\r\n\r\n    this.flags = flags_default;\r\n    this.flags_changed = 0;\r\n\r\n    this.last_result = 0;\r\n    this.last_add_result = 0;\r\n    this.last_op1 = 0;\r\n    this.last_op2 = 0;\r\n    this.last_op_size = 0;\r\n\r\n    this.tsc_offset = v86.microtick();\r\n\r\n    this.instruction_pointer = 0xFFFF0;\r\n    this.switch_cs_real_mode(0xF000);\r\n\r\n    this.switch_seg(reg_ss, 0x30);\r\n    this.reg16[reg_sp] = 0x100;\r\n\r\n    if(this.devices.virtio)\r\n    {\r\n        this.devices.virtio.reset();\r\n    }\r\n\r\n    this.fw_value = 0;\r\n};\r\n\r\n/** @export */\r\nCPU.prototype.create_memory = function(size)\r\n{\r\n    if(size < 1024 * 1024)\r\n    {\r\n        size = 1024 * 1024;\r\n    }\r\n    else if((size | 0) < 0)\r\n    {\r\n        size = Math.pow(2, 31) - MMAP_BLOCK_SIZE;\r\n    }\r\n\r\n    size = ((size - 1) | (MMAP_BLOCK_SIZE - 1)) + 1 | 0;\r\n    dbg_assert((size | 0) > 0);\r\n    dbg_assert((size & MMAP_BLOCK_SIZE - 1) === 0);\r\n\r\n    this.memory_size = size;\r\n\r\n    var buffer = new ArrayBuffer(size);\r\n\r\n    this.mem8 = new Uint8Array(buffer);\r\n    this.mem16 = new Uint16Array(buffer);\r\n    this.mem32s = new Int32Array(buffer);\r\n};\r\n\r\nCPU.prototype.init = function(settings, device_bus)\r\n{\r\n    this.create_memory(typeof settings.memory_size === \"number\" ?\r\n        settings.memory_size : 1024 * 1024 * 64);\r\n\r\n    this.reset();\r\n\r\n    var io = new IO(this);\r\n    this.io = io;\r\n\r\n    this.bios.main = settings.bios;\r\n    this.bios.vga = settings.vga_bios;\r\n\r\n    this.load_bios();\r\n\r\n    var a20_byte = 0;\r\n\r\n    io.register_read(0xB3, this, function()\r\n    {\r\n        // seabios smm_relocate_and_restore\r\n        dbg_log(\"port 0xB3 read\");\r\n        return 0;\r\n    });\r\n\r\n    io.register_read(0x92, this, function()\r\n    {\r\n        return a20_byte;\r\n    });\r\n\r\n    io.register_write(0x92, this, function(out_byte)\r\n    {\r\n        a20_byte = out_byte;\r\n    });\r\n\r\n    io.register_read(0x511, this, function()\r\n    {\r\n        // bios config port (used by seabios and kvm-unit-test)\r\n        let result = this.fw_value & 0xFF;\r\n        this.fw_value >>>= 8;\r\n        return result;\r\n    });\r\n    io.register_write(0x510, this, undefined, function(value)\r\n    {\r\n        dbg_log(\"bios config port, index=\" + h(value));\r\n\r\n        if(value === FW_CFG_SIGNATURE)\r\n        {\r\n            // We could pretend to be QEMU here to control certain options in\r\n            // seabios, but for now this isn't needed\r\n            this.fw_value = 0xfab0fab0|0;\r\n        }\r\n        else if(value === FW_CFG_RAM_SIZE)\r\n        {\r\n            this.fw_value = this.memory_size;\r\n        }\r\n        else if(value === FW_CFG_NB_CPUS)\r\n        {\r\n            this.fw_value = 1;\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false, \"Unimplemented fw index: \" + h(value));\r\n            this.fw_value = 0;\r\n        }\r\n    });\r\n\r\n    if(DEBUG)\r\n    {\r\n        // Use by linux for port-IO delay\r\n        // Avoid generating tons of debug messages\r\n        io.register_write(0x80, this, function(out_byte)\r\n        {\r\n        });\r\n    }\r\n\r\n    this.devices = {};\r\n\r\n    // TODO: Make this more configurable\r\n    if(settings.load_devices)\r\n    {\r\n        this.devices.pic = new PIC(this);\r\n        this.devices.pci = new PCI(this);\r\n\r\n        if(ENABLE_ACPI)\r\n        {\r\n            this.devices.ioapic = new IOAPIC(this);\r\n            this.devices.apic = new APIC(this);\r\n            this.devices.acpi = new ACPI(this);\r\n        }\r\n\r\n        this.devices.rtc = typeof CustomRTC === 'undefined' ? new RTC(this) : new CustomRTC(this);\r\n        this.fill_cmos(this.devices.rtc, settings);\r\n\r\n        this.devices.dma = new DMA(this);\r\n\r\n        if(ENABLE_HPET)\r\n        {\r\n            this.devices.hpet = new HPET(this);\r\n        }\r\n\r\n        this.devices.vga = new VGAScreen(this, device_bus,\r\n                settings.vga_memory_size || 8 * 1024 * 1024);\r\n\r\n        this.fpu = new FPU(this);\r\n\r\n        this.devices.ps2 = new PS2(this, device_bus);\r\n\r\n        this.devices.uart0 = new UART(this, 0x3F8, device_bus);\r\n\r\n        if(settings.uart1)\r\n        {\r\n            this.devices.uart1 = new UART(this, 0x2F8, device_bus);\r\n        }\r\n        if(settings.uart2)\r\n        {\r\n            this.devices.uart2 = new UART(this, 0x3E8, device_bus);\r\n        }\r\n        if(settings.uart3)\r\n        {\r\n            this.devices.uart3 = new UART(this, 0x3E8, device_bus);\r\n        }\r\n\r\n        this.devices.fdc = new FloppyController(this, settings.fda, settings.fdb);\r\n\r\n        var ide_device_count = 0;\r\n\r\n        if(settings.hda)\r\n        {\r\n            this.devices.hda = new IDEDevice(this, settings.hda, settings.hdb, false, ide_device_count++, device_bus);\r\n        }\r\n\r\n        if(settings.cdrom)\r\n        {\r\n            this.devices.cdrom = new IDEDevice(this, settings.cdrom, undefined, true, ide_device_count++, device_bus);\r\n        }\r\n\r\n        this.devices.pit = new PIT(this, device_bus);\r\n\r\n        if(settings.enable_ne2k)\r\n        {\r\n            this.devices.net = new Ne2k(this, device_bus, settings.preserve_mac_from_state_image);\r\n        }\r\n\r\n        if(settings.fs9p)\r\n        {\r\n            this.devices.virtio = new VirtIO(this, device_bus, settings.fs9p);\r\n        }\r\n\r\n        if(true)\r\n        {\r\n            this.devices.sb16 = new SB16(this, device_bus);\r\n        }\r\n    }\r\n\r\n    if(settings.multiboot)\r\n    {\r\n        dbg_assert(settings.multiboot.buffer);\r\n        this.load_multiboot(settings.multiboot.buffer);\r\n    }\r\n\r\n    if(DEBUG)\r\n    {\r\n        this.debug.init();\r\n    }\r\n};\r\n\r\nCPU.prototype.load_multiboot = function(buffer)\r\n{\r\n    // https://www.gnu.org/software/grub/manual/multiboot/multiboot.html\r\n\r\n    dbg_log(\"Trying multiboot from buffer of size \" + buffer.byteLength, LOG_CPU);\r\n\r\n    const MAGIC = 0x1BADB002;\r\n    const ELF_MAGIC = 0x464C457F;\r\n    const MULTIBOOT_HEADER_ADDRESS = 0x10000;\r\n    const MULTIBOOT_SEARCH_BYTES = 8192;\r\n\r\n    if(buffer.byteLength < MULTIBOOT_SEARCH_BYTES)\r\n    {\r\n        var buf32 = new Int32Array(MULTIBOOT_SEARCH_BYTES / 4);\r\n        new Uint8Array(buf32.buffer).set(new Uint8Array(buffer));\r\n    }\r\n    else\r\n    {\r\n        var buf32 = new Int32Array(buffer, 0, MULTIBOOT_SEARCH_BYTES / 4);\r\n    }\r\n\r\n    for(var offset = 0; offset < MULTIBOOT_SEARCH_BYTES; offset += 4)\r\n    {\r\n        if(buf32[offset >> 2] === MAGIC)\r\n        {\r\n            var flags = buf32[offset + 4 >> 2];\r\n            var checksum = buf32[offset + 8 >> 2];\r\n            var total = MAGIC + flags + checksum | 0;\r\n\r\n            if(total)\r\n            {\r\n                dbg_log(\"Multiboot checksum check failed\", LOG_CPU);\r\n                continue;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            continue;\r\n        }\r\n\r\n        dbg_log(\"Multiboot magic found, flags: \" + h(flags >>> 0, 8), LOG_CPU);\r\n        dbg_assert((flags & ~MULTIBOOT_HEADER_ADDRESS) === 0, \"TODO\");\r\n\r\n        this.reg32s[reg_eax] = 0x2BADB002;\r\n\r\n        let multiboot_info_addr = 0x7C00;\r\n        this.reg32s[reg_ebx] = multiboot_info_addr;\r\n        this.write32(multiboot_info_addr, 0);\r\n\r\n        this.cr[0] = 1;\r\n        this.protected_mode = true;\r\n        this.flags = flags_default;\r\n        this.update_cs_size(true);\r\n        this.stack_size_32 = true;\r\n\r\n        for(var i = 0; i < 6; i++)\r\n        {\r\n            this.segment_is_null[i] = 0;\r\n            this.segment_offsets[i] = 0;\r\n            this.segment_limits[i] = 0xFFFFFFFF;\r\n\r\n            // Value doesn't matter, OS isn't allowed to reload without setting\r\n            // up a proper GDT\r\n            this.sreg[i] = 0xB002;\r\n        }\r\n\r\n        if(flags & MULTIBOOT_HEADER_ADDRESS)\r\n        {\r\n            dbg_log(\"Multiboot specifies its own address table\", LOG_CPU);\r\n\r\n            var header_addr = buf32[offset + 12 >> 2];\r\n            var load_addr = buf32[offset + 16 >> 2];\r\n            var load_end_addr = buf32[offset + 20 >> 2];\r\n            var bss_end_addr = buf32[offset + 24 >> 2];\r\n            var entry_addr = buf32[offset + 28 >> 2];\r\n\r\n            dbg_log(\"header=\" + h(header_addr, 8) +\r\n                    \" load=\" + h(load_addr, 8) +\r\n                    \" load_end=\" + h(load_end_addr, 8) +\r\n                    \" bss_end=\" + h(bss_end_addr, 8) +\r\n                    \" entry=\" + h(entry_addr, 8));\r\n\r\n            dbg_assert(load_addr <= header_addr);\r\n\r\n            var file_start = offset - (header_addr - load_addr);\r\n\r\n            if(load_end_addr === 0)\r\n            {\r\n                var length = undefined;\r\n            }\r\n            else\r\n            {\r\n                dbg_assert(load_end_addr >= load_addr);\r\n                var length = load_end_addr - load_addr;\r\n            }\r\n\r\n            let blob = new Uint8Array(buffer, file_start, length);\r\n            this.write_blob(blob, load_addr);\r\n\r\n            this.instruction_pointer = this.get_seg(reg_cs) + entry_addr | 0;\r\n        }\r\n        else if(buf32[0] === ELF_MAGIC)\r\n        {\r\n            dbg_log(\"Multiboot image is in elf format\", LOG_CPU);\r\n\r\n            let elf = read_elf(buffer);\r\n\r\n            this.instruction_pointer = this.get_seg(reg_cs) + elf.header.entry | 0;\r\n\r\n            for(let program of elf.program_headers)\r\n            {\r\n                if(program.type === 0)\r\n                {\r\n                    // null\r\n                }\r\n                else if(program.type === 1)\r\n                {\r\n                    // load\r\n\r\n                    // Since multiboot specifies that paging is disabled,\r\n                    // virtual and physical address must be equal\r\n                    dbg_assert(program.paddr === program.vaddr);\r\n                    dbg_assert(program.filesz <= program.memsz);\r\n\r\n                    let blob = new Uint8Array(buffer, program.offset, program.filesz);\r\n                    this.write_blob(blob, program.paddr);\r\n                }\r\n                else if(program.type === 4 ||\r\n                        program.type === 0x6474e550 ||\r\n                        program.type === 0x6474e551)\r\n                {\r\n                    // ignore for now\r\n                }\r\n                else\r\n                {\r\n                    dbg_assert(false, \"unimplemented elf section type\");\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            dbg_assert(false, \"Not a bootable multiboot format\");\r\n        }\r\n\r\n        // only for kvm-unit-test\r\n        this.io.register_write_consecutive(0xF4, this,\r\n            function(value)\r\n            {\r\n                console.log(\"Test exited with code \" + h(value, 2));\r\n                throw \"HALT\";\r\n            },\r\n            function() {},\r\n            function() {},\r\n            function() {});\r\n\r\n        // only for kvm-unit-test\r\n        for(let i = 0xE; i <= 0xF; i++)\r\n        {\r\n            this.io.register_write(0x2000 + i, this,\r\n                function(value)\r\n                {\r\n                    dbg_log(\"kvm-unit-test: Set irq \" + h(i) + \" to \" + h(value, 2));\r\n                    if(value)\r\n                    {\r\n                        this.device_raise_irq(i);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.device_lower_irq(i);\r\n                    }\r\n                });\r\n        }\r\n\r\n        dbg_log(\"Starting multiboot kernel at:\", LOG_CPU);\r\n        this.debug.dump_state();\r\n        this.debug.dump_regs();\r\n\r\n        break;\r\n    }\r\n};\r\n\r\nCPU.prototype.fill_cmos = function(rtc, settings)\r\n{\r\n    var boot_order = settings.boot_order || 0x213;\r\n\r\n    // Used by seabios to determine the boot order\r\n    //   Nibble\r\n    //   1: FloppyPrio\r\n    //   2: HDPrio\r\n    //   3: CDPrio\r\n    //   4: BEVPrio\r\n    // bootflag 1, high nibble, lowest priority\r\n    // Low nibble: Disable floppy signature check (1)\r\n    rtc.cmos_write(CMOS_BIOS_BOOTFLAG1 , 1 | boot_order >> 4 & 0xF0);\r\n\r\n    // bootflag 2, both nibbles, high and middle priority\r\n    rtc.cmos_write(CMOS_BIOS_BOOTFLAG2, boot_order & 0xFF);\r\n\r\n    // 640k or less if less memory is used\r\n    rtc.cmos_write_lowhi(CMOS_MEM_BASE_LOW, 640);\r\n\r\n    var memory_above_1m = 0; // in k\r\n    if(this.memory_size >= 1024 * 1024)\r\n    {\r\n        memory_above_1m = (this.memory_size - 1024 * 1024) >> 10;\r\n    }\r\n\r\n    rtc.cmos_write_lowhi(CMOS_MEM_OLD_EXT_LOW, memory_above_1m);\r\n    rtc.cmos_write_lowhi(CMOS_MEM_EXTMEM_LOW, memory_above_1m);\r\n\r\n    var memory_above_16m = 0; // in 64k blocks\r\n    if(this.memory_size >= 16 * 1024 * 1024)\r\n    {\r\n        memory_above_16m = (this.memory_size - 16 * 1024 * 1024) >> 16;\r\n    }\r\n    rtc.cmos_write_lowhi(CMOS_MEM_EXTMEM2_LOW, memory_above_16m);\r\n\r\n    // memory above 4G (not supported by this emulator)\r\n    rtc.cmos_write(CMOS_MEM_HIGHMEM_LOW, 0);\r\n    rtc.cmos_write(CMOS_MEM_HIGHMEM_MID, 0);\r\n    rtc.cmos_write(CMOS_MEM_HIGHMEM_HIGH, 0);\r\n\r\n    rtc.cmos_write(CMOS_EQUIPMENT_INFO, 0x2F);\r\n\r\n    rtc.cmos_write(CMOS_BIOS_SMP_COUNT, 0);\r\n\r\n    // Used by bochs BIOS to skip the boot menu delay.\r\n    if (settings.fastboot) rtc.cmos_write(0x3F, 0x01);\r\n\r\n    rtc.cmos_write(CMOS_CENTURY, 0x19); // Century in BCD\r\n    rtc.cmos_write(CMOS_CENTURY_PS2, 0x19); // PS2 Century in BCD for Windows XP\r\n};\r\n\r\nCPU.prototype.load_bios = function()\r\n{\r\n    var bios = this.bios.main;\r\n    var vga_bios = this.bios.vga;\r\n\r\n    if(!bios)\r\n    {\r\n        dbg_log(\"Warning: No BIOS\");\r\n        return;\r\n    }\r\n\r\n    // load bios\r\n    var data = new Uint8Array(bios),\r\n        start = 0x100000 - bios.byteLength;\r\n\r\n    this.write_blob(data, start);\r\n\r\n    if(vga_bios)\r\n    {\r\n        // load vga bios\r\n        var vga_bios8 = new Uint8Array(vga_bios);\r\n\r\n        // older versions of seabios\r\n        this.write_blob(vga_bios8, 0xC0000);\r\n\r\n        // newer versions of seabios (needs to match pci rom address, see vga.js)\r\n        this.io.mmap_register(0xFEB00000, 0x100000,\r\n            function(addr)\r\n            {\r\n                addr = (addr - 0xFEB00000) | 0;\r\n                if(addr < vga_bios8.length)\r\n                {\r\n                    return vga_bios8[addr];\r\n                }\r\n                else\r\n                {\r\n                    return 0;\r\n                }\r\n            },\r\n            function(addr, value)\r\n            {\r\n                dbg_assert(false, \"Unexpected write to VGA rom\");\r\n            });\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"Warning: No VGA BIOS\");\r\n    }\r\n\r\n    // seabios expects the bios to be mapped to 0xFFF00000 also\r\n    this.io.mmap_register(0xFFF00000, 0x100000,\r\n        function(addr)\r\n        {\r\n            addr &= 0xFFFFF;\r\n            return this.mem8[addr];\r\n        }.bind(this),\r\n        function(addr, value)\r\n        {\r\n            addr &= 0xFFFFF;\r\n            this.mem8[addr] = value;\r\n        }.bind(this));\r\n};\r\n\r\nCPU.prototype.do_run = function()\r\n{\r\n    /** @type {number} */\r\n    var start = v86.microtick();\r\n\r\n    /** @type {number} */\r\n    var now = start;\r\n\r\n    // outer loop:\r\n    // runs cycles + timers\r\n    for(; now - start < TIME_PER_FRAME;)\r\n    {\r\n        this.run_hardware_timers(now);\r\n        this.handle_irqs();\r\n\r\n        this.do_many_cycles();\r\n\r\n        if(this.in_hlt)\r\n        {\r\n            return;\r\n        }\r\n\r\n        now = v86.microtick();\r\n    }\r\n};\r\n\r\nCPU.prototype.do_many_cycles = function()\r\n{\r\n    try {\r\n        this.do_many_cycles_unsafe();\r\n    }\r\n    catch(e)\r\n    {\r\n        this.exception_cleanup(e);\r\n    }\r\n};\r\n\r\nCPU.prototype.do_many_cycles_unsafe = function()\r\n{\r\n    // inner loop:\r\n    // runs only cycles\r\n    for(var k = LOOP_COUNTER; k--;)\r\n    {\r\n        this.cycle_internal();\r\n    }\r\n};\r\n\r\n/** @const */\r\nvar PROFILING = false;\r\n\r\nif(PROFILING)\r\n{\r\n    var instruction_total = new Float64Array(256);\r\n    var instruction_count = new Float64Array(256);\r\n\r\n    window[\"print_profiling\"] = function print_profiling()\r\n    {\r\n        var prof_instructions = [];\r\n        for(var i = 0; i < 256; i++) prof_instructions[i] = {\r\n            n: h(i, 2),\r\n            total: instruction_total[i],\r\n            count: instruction_count[i],\r\n            per: (instruction_total[i] / instruction_count[i]) || 0,\r\n        };\r\n\r\n        console.log(\"count:\");\r\n        console.table(prof_instructions.sort((p0, p1) => p1.count - p0.count));\r\n\r\n        console.log(\"time:\");\r\n        console.table(prof_instructions.sort((p0, p1) => p1.total - p0.total));\r\n\r\n        console.log(\"time/count:\");\r\n        console.table(prof_instructions.sort((p0, p1) => p1.per - p0.per));\r\n    };\r\n}\r\n\r\n/**\r\n * execute a single instruction cycle on the cpu\r\n * this includes reading all prefixes and the whole instruction\r\n */\r\nCPU.prototype.cycle_internal = function()\r\n{\r\n    this.previous_ip = this.instruction_pointer;\r\n\r\n    this.timestamp_counter++;\r\n\r\n    if(PROFILING)\r\n    {\r\n        var start = performance.now();\r\n    }\r\n\r\n    var opcode = this.read_imm8();\r\n    //this.translate_address_read(this.instruction_pointer + 15|0)\r\n\r\n    if(DEBUG)\r\n    {\r\n        this.debug.logop(this.instruction_pointer - 1 >>> 0, opcode);\r\n    }\r\n\r\n    // call the instruction\r\n    this.table[opcode](this);\r\n\r\n    if(PROFILING)\r\n    {\r\n        var end = performance.now();\r\n        instruction_total[opcode] += end - start;\r\n        instruction_count[opcode]++;\r\n    }\r\n\r\n    if(this.flags & flag_trap)\r\n    {\r\n        // TODO\r\n        dbg_log(\"Trap flag: Ignored\", LOG_CPU);\r\n    }\r\n};\r\n\r\n/** @export */\r\nCPU.prototype.cycle = function()\r\n{\r\n    try\r\n    {\r\n        this.cycle_internal();\r\n    }\r\n    catch(e)\r\n    {\r\n        this.exception_cleanup(e);\r\n    }\r\n};\r\n\r\nCPU.prototype.segment_prefix_op = function(sreg)\r\n{\r\n    dbg_assert(sreg <= 5);\r\n    this.prefixes |= sreg + 1;\r\n    this.run_prefix_instruction();\r\n    this.prefixes = 0;\r\n};\r\n\r\nCPU.prototype.run_prefix_instruction = function()\r\n{\r\n    if(this.is_osize_32())\r\n    {\r\n        this.table32[this.read_imm8()](this);\r\n    }\r\n    else\r\n    {\r\n        this.table16[this.read_imm8()](this);\r\n    }\r\n};\r\n\r\nCPU.prototype.hlt_loop = function()\r\n{\r\n    dbg_assert(this.flags & flag_interrupt);\r\n    //dbg_log(\"In HLT loop\", LOG_CPU);\r\n\r\n    this.run_hardware_timers(v86.microtick());\r\n    this.handle_irqs();\r\n\r\n    return 0;\r\n};\r\n\r\nCPU.prototype.run_hardware_timers = function(now)\r\n{\r\n    if(ENABLE_HPET)\r\n    {\r\n        var pit_time = this.devices.pit.timer(now, this.devices.hpet.legacy_mode);\r\n        var rtc_time = this.devices.rtc.timer(now, this.devices.hpet.legacy_mode);\r\n        this.devices.hpet.timer(now);\r\n    }\r\n    else\r\n    {\r\n        var pit_time = this.devices.pit.timer(now, false);\r\n        var rtc_time = this.devices.rtc.timer(now, false);\r\n    }\r\n\r\n    if(ENABLE_ACPI)\r\n    {\r\n        this.devices.acpi.timer(now);\r\n        this.devices.apic.timer(now);\r\n    }\r\n};\r\n\r\nCPU.prototype.clear_prefixes = function()\r\n{\r\n    this.prefixes = 0;\r\n};\r\n\r\nCPU.prototype.set_cr0 = function(cr0)\r\n{\r\n    //dbg_log(\"cr0 = \" + h(this.cr[0] >>> 0), LOG_CPU);\r\n\r\n    if((cr0 & (CR0_PE | CR0_PG)) === CR0_PG)\r\n    {\r\n        // cannot load PG without PE\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    this.cr[0] = cr0;\r\n\r\n    if(!this.fpu)\r\n    {\r\n        // if there's no FPU, keep emulation set\r\n        this.cr[0] |= CR0_EM;\r\n    }\r\n    this.cr[0] |= CR0_ET;\r\n\r\n    var new_paging = (this.cr[0] & CR0_PG) === CR0_PG;\r\n\r\n    dbg_assert(typeof this.paging === \"boolean\");\r\n    if(new_paging !== this.paging)\r\n    {\r\n        this.paging = new_paging;\r\n        this.full_clear_tlb();\r\n    }\r\n\r\n    this.protected_mode = (this.cr[0] & CR0_PE) === CR0_PE;\r\n};\r\n\r\nCPU.prototype.set_cr4 = function(cr4)\r\n{\r\n    if(cr4 & (1 << 11 | 1 << 12 | 1 << 15 | 1 << 16 | 1 << 19 | 0xFFC00000))\r\n    {\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if((this.cr[4] ^ cr4) & CR4_PGE)\r\n    {\r\n        if(cr4 & CR4_PGE)\r\n        {\r\n            // The PGE bit has been enabled. The global TLB is\r\n            // still empty, so we only have to copy it over\r\n            this.clear_tlb();\r\n        }\r\n        else\r\n        {\r\n            // Clear the global TLB\r\n            this.full_clear_tlb();\r\n        }\r\n    }\r\n\r\n    this.cr[4] = cr4;\r\n    this.page_size_extensions = (cr4 & CR4_PSE) ? PSE_ENABLED : 0;\r\n\r\n    if(cr4 & CR4_PAE)\r\n    {\r\n        throw this.debug.unimpl(\"PAE\");\r\n    }\r\n\r\n    if(cr4 & 0xFFFFF900)\r\n    {\r\n        dbg_assert(false, \"Unimplemented CR4 bits: \" + h(cr4));\r\n        this.trigger_ud();\r\n    }\r\n\r\n    dbg_log(\"cr4=\" + h(cr4 >>> 0), LOG_CPU);\r\n};\r\n\r\nCPU.prototype.cpl_changed = function()\r\n{\r\n    this.last_virt_eip = -1;\r\n    this.last_virt_esp = -1;\r\n};\r\n\r\nCPU.prototype.read_imm8 = function()\r\n{\r\n    if((this.instruction_pointer & ~0xFFF) ^ this.last_virt_eip)\r\n    {\r\n        this.eip_phys = this.translate_address_read(this.instruction_pointer) ^ this.instruction_pointer;\r\n        this.last_virt_eip = this.instruction_pointer & ~0xFFF;\r\n    }\r\n\r\n    var data8 = this.read8(this.eip_phys ^ this.instruction_pointer);\r\n    this.instruction_pointer = this.instruction_pointer + 1 | 0;\r\n\r\n    return data8;\r\n};\r\n\r\nCPU.prototype.read_imm8s = function()\r\n{\r\n    return this.read_imm8() << 24 >> 24;\r\n};\r\n\r\nCPU.prototype.read_imm16 = function()\r\n{\r\n    // Two checks in one comparison:\r\n    //    1. Did the high 20 bits of eip change\r\n    // or 2. Are the low 12 bits of eip 0xFFF (and this read crosses a page boundary)\r\n    if(((this.instruction_pointer ^ this.last_virt_eip) >>> 0) > 0xFFE)\r\n    {\r\n        return this.read_imm8() | this.read_imm8() << 8;\r\n    }\r\n\r\n    var data16 = this.read16(this.eip_phys ^ this.instruction_pointer);\r\n    this.instruction_pointer = this.instruction_pointer + 2 | 0;\r\n\r\n    return data16;\r\n};\r\n\r\nCPU.prototype.read_imm32s = function()\r\n{\r\n    // Analogue to the above comment\r\n    if(((this.instruction_pointer ^ this.last_virt_eip) >>> 0) > 0xFFC)\r\n    {\r\n        return this.read_imm16() | this.read_imm16() << 16;\r\n    }\r\n\r\n    var data32 = this.read32s(this.eip_phys ^ this.instruction_pointer);\r\n    this.instruction_pointer = this.instruction_pointer + 4 | 0;\r\n\r\n    return data32;\r\n};\r\n\r\n/*\r\n * Create an internal data unit to represent 64 bits of data\r\n */\r\nCPU.prototype.create_atom64s = function(low, high)\r\n{\r\n    let data = new Int32Array(2);\r\n    data[0] = low;\r\n    data[1] = high;\r\n    return data;\r\n};\r\n\r\nCPU.prototype.create_atom128s = function(d0, d1, d2, d3)\r\n{\r\n    let data = new Int32Array(4);\r\n    data[0] = d0;\r\n    data[1] = d1;\r\n    data[2] = d2;\r\n    data[3] = d3;\r\n    return data;\r\n}\r\n\r\nCPU.prototype.read_modrm_byte = function()\r\n{\r\n    this.modrm_byte = this.read_imm8();\r\n};\r\n\r\nCPU.prototype.read_op0F = CPU.prototype.read_imm8;\r\nCPU.prototype.read_sib = CPU.prototype.read_imm8;\r\nCPU.prototype.read_op8 = CPU.prototype.read_imm8;\r\nCPU.prototype.read_op8s = CPU.prototype.read_imm8s;\r\nCPU.prototype.read_op16 = CPU.prototype.read_imm16;\r\nCPU.prototype.read_op32s = CPU.prototype.read_imm32s;\r\nCPU.prototype.read_disp8 = CPU.prototype.read_imm8;\r\nCPU.prototype.read_disp8s = CPU.prototype.read_imm8s;\r\nCPU.prototype.read_disp16 = CPU.prototype.read_imm16;\r\nCPU.prototype.read_disp32s = CPU.prototype.read_imm32s;\r\n\r\nCPU.prototype.init2 = function () {};\r\nCPU.prototype.branch_taken = function () {};\r\nCPU.prototype.branch_not_taken = function () {};\r\nCPU.prototype.diverged = function () {};\r\n\r\nCPU.prototype.modrm_resolve = function(modrm_byte)\r\n{\r\n    dbg_assert(modrm_byte < 0xC0);\r\n\r\n    return (this.is_asize_32() ? this.modrm_table32 : this.modrm_table16)[modrm_byte](this);\r\n};\r\n\r\nCPU.prototype.sib_resolve = function(mod)\r\n{\r\n    return this.sib_table[this.read_sib()](this, mod);\r\n};\r\n\r\nCPU.prototype.clear_instruction_cache = function() {};\r\n\r\n// read word from a page boundary, given 2 physical addresses\r\nCPU.prototype.virt_boundary_read16 = function(low, high)\r\n{\r\n    dbg_assert((low & 0xFFF) === 0xFFF);\r\n    dbg_assert((high & 0xFFF) === 0);\r\n\r\n    return this.read8(low) | this.read8(high) << 8;\r\n};\r\n\r\n// read doubleword from a page boundary, given 2 addresses\r\nCPU.prototype.virt_boundary_read32s = function(low, high)\r\n{\r\n    dbg_assert((low & 0xFFF) >= 0xFFD);\r\n    dbg_assert((high - 3 & 0xFFF) === (low & 0xFFF));\r\n\r\n    var mid;\r\n\r\n    if(low & 1)\r\n    {\r\n        if(low & 2)\r\n        {\r\n            // 0xFFF\r\n            mid = this.read_aligned16(high - 2 >> 1);\r\n        }\r\n        else\r\n        {\r\n            // 0xFFD\r\n            mid = this.read_aligned16(low + 1 >> 1);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // 0xFFE\r\n        mid = this.virt_boundary_read16(low + 1 | 0, high - 1 | 0);\r\n    }\r\n\r\n    return this.read8(low) | mid << 8 | this.read8(high) << 24;\r\n};\r\n\r\nCPU.prototype.virt_boundary_write16 = function(low, high, value)\r\n{\r\n    dbg_assert((low & 0xFFF) === 0xFFF);\r\n    dbg_assert((high & 0xFFF) === 0);\r\n\r\n    this.write8(low, value);\r\n    this.write8(high, value >> 8);\r\n};\r\n\r\nCPU.prototype.virt_boundary_write32 = function(low, high, value)\r\n{\r\n    dbg_assert((low & 0xFFF) >= 0xFFD);\r\n    dbg_assert((high - 3 & 0xFFF) === (low & 0xFFF));\r\n\r\n    this.write8(low, value);\r\n    this.write8(high, value >> 24);\r\n\r\n    if(low & 1)\r\n    {\r\n        if(low & 2)\r\n        {\r\n            // 0xFFF\r\n            this.write8(high - 2, value >> 8);\r\n            this.write8(high - 1, value >> 16);\r\n        }\r\n        else\r\n        {\r\n            // 0xFFD\r\n            this.write8(low + 1 | 0, value >> 8);\r\n            this.write8(low + 2 | 0, value >> 16);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // 0xFFE\r\n        this.write8(low + 1 | 0, value >> 8);\r\n        this.write8(high - 1, value >> 16);\r\n    }\r\n};\r\n\r\n// safe_read, safe_write\r\n// read or write byte, word or dword to the given *virtual* address,\r\n// and be safe on page boundaries\r\n\r\nCPU.prototype.safe_read8 = function(addr)\r\n{\r\n    dbg_assert(addr < 0x80000000);\r\n    return this.read8(this.translate_address_read(addr));\r\n};\r\n\r\nCPU.prototype.safe_read16 = function(addr)\r\n{\r\n    if(this.paging && (addr & 0xFFF) === 0xFFF)\r\n    {\r\n        return this.safe_read8(addr) | this.safe_read8(addr + 1 | 0) << 8;\r\n    }\r\n    else\r\n    {\r\n        return this.read16(this.translate_address_read(addr));\r\n    }\r\n};\r\n\r\nCPU.prototype.safe_read32s = function(addr)\r\n{\r\n    if(this.paging && (addr & 0xFFF) >= 0xFFD)\r\n    {\r\n        return this.safe_read16(addr) | this.safe_read16(addr + 2 | 0) << 16;\r\n    }\r\n    else\r\n    {\r\n        return this.read32s(this.translate_address_read(addr));\r\n    }\r\n};\r\n\r\nCPU.prototype.safe_read64s = function(addr)\r\n{\r\n    let data = this.create_atom64s(0, 0);\r\n    if(this.paging && (addr & 0xFFF) >= 0xFF9)\r\n    {\r\n        data[0] = this.safe_read32s(addr);\r\n        data[1] = this.safe_read32s(addr + 4 | 0);\r\n    }\r\n    else\r\n    {\r\n        data[0] = this.read32s(this.translate_address_read(addr));\r\n        data[1] = this.read32s(this.translate_address_read(addr + 4 | 0));\r\n    }\r\n    return data;\r\n};\r\n\r\nCPU.prototype.safe_read128s_aligned = function(addr)\r\n{\r\n    dbg_assert((addr & 0xF) === 0);\r\n    let phys = this.translate_address_read(addr);\r\n    return this.create_atom128s(\r\n        this.read32s(phys),\r\n        this.read32s(phys + 4 | 0),\r\n        this.read32s(phys + 8 | 0),\r\n        this.read32s(phys + 12 | 0)\r\n    );\r\n};\r\n\r\nCPU.prototype.safe_read128s_unaligned = function(addr)\r\n{\r\n    return this.create_atom128s(\r\n        this.safe_read32s(addr),\r\n        this.safe_read32s(addr + 4 | 0),\r\n        this.safe_read32s(addr + 8 | 0),\r\n        this.safe_read32s(addr + 12 | 0)\r\n    );\r\n};\r\n\r\nCPU.prototype.safe_write8 = function(addr, value)\r\n{\r\n    dbg_assert(addr < 0x80000000);\r\n    this.write8(this.translate_address_write(addr), value);\r\n};\r\n\r\nCPU.prototype.safe_write16 = function(addr, value)\r\n{\r\n    var phys_low = this.translate_address_write(addr);\r\n\r\n    if((addr & 0xFFF) === 0xFFF)\r\n    {\r\n        this.virt_boundary_write16(phys_low, this.translate_address_write(addr + 1 | 0), value);\r\n    }\r\n    else\r\n    {\r\n        this.write16(phys_low, value);\r\n    }\r\n};\r\n\r\nCPU.prototype.safe_write32 = function(addr, value)\r\n{\r\n    var phys_low = this.translate_address_write(addr);\r\n\r\n    if((addr & 0xFFF) >= 0xFFD)\r\n    {\r\n        // XXX\r\n        this.virt_boundary_write32(phys_low, this.translate_address_write(addr + 3 & ~3) | (addr + 3) & 3, value);\r\n    }\r\n    else\r\n    {\r\n        this.write32(phys_low, value);\r\n    }\r\n};\r\n\r\nCPU.prototype.safe_write64 = function(addr, low, high)\r\n{\r\n    this.writable_or_pagefault(addr, 8);\r\n    this.safe_write32(addr, low);\r\n    this.safe_write32(addr + 4 | 0, high);\r\n};\r\n\r\nCPU.prototype.safe_write128 = function(addr, d0, d1, d2, d3)\r\n{\r\n    this.writable_or_pagefault(addr, 16);\r\n    this.safe_write32(addr, d0);\r\n    this.safe_write32(addr + 4 | 0, d1);\r\n    this.safe_write32(addr + 8 | 0, d2);\r\n    this.safe_write32(addr + 12 | 0, d3);\r\n};\r\n\r\n\r\n// read 2 or 4 byte from ip, depending on address size attribute\r\nCPU.prototype.read_moffs = function()\r\n{\r\n    if(this.is_asize_32())\r\n    {\r\n        return this.get_seg_prefix(reg_ds) + this.read_op32s() | 0;\r\n    }\r\n    else\r\n    {\r\n        return this.get_seg_prefix(reg_ds) + this.read_op16() | 0;\r\n    }\r\n};\r\n\r\nCPU.prototype.getiopl = function()\r\n{\r\n    return this.flags >> 12 & 3;\r\n};\r\n\r\nCPU.prototype.vm86_mode = function()\r\n{\r\n    return !!(this.flags & flag_vm);\r\n};\r\n\r\nCPU.prototype.get_eflags = function()\r\n{\r\n    return (this.flags & ~flags_all) | !!this.getcf() | !!this.getpf() << 2 | !!this.getaf() << 4 |\r\n                                  !!this.getzf() << 6 | !!this.getsf() << 7 | !!this.getof() << 11;\r\n};\r\n\r\n/**\r\n * Update the flags register depending on iopl and cpl\r\n */\r\nCPU.prototype.update_eflags = function(new_flags)\r\n{\r\n    var dont_update = flag_rf | flag_vm | flag_vip | flag_vif,\r\n        clear = ~flag_vip & ~flag_vif & flags_mask;\r\n\r\n    if(this.flags & flag_vm)\r\n    {\r\n        // other case needs to be handled in popf or iret\r\n        dbg_assert(this.getiopl() === 3);\r\n\r\n        dont_update |= flag_iopl;\r\n\r\n        // don't clear vip or vif\r\n        clear |= flag_vip | flag_vif;\r\n    }\r\n    else\r\n    {\r\n        if(!this.protected_mode) dbg_assert(this.cpl === 0);\r\n\r\n        if(this.cpl)\r\n        {\r\n            // cpl > 0\r\n            // cannot update iopl\r\n            dont_update |= flag_iopl;\r\n\r\n            if(this.cpl > this.getiopl())\r\n            {\r\n                // cpl > iopl\r\n                // cannot update interrupt flag\r\n                dont_update |= flag_interrupt;\r\n            }\r\n        }\r\n    }\r\n\r\n    this.flags = (new_flags ^ ((this.flags ^ new_flags) & dont_update)) & clear | flags_default;\r\n\r\n    this.flags_changed = 0;\r\n};\r\n\r\nCPU.prototype.get_stack_reg = function()\r\n{\r\n    if(this.stack_size_32)\r\n    {\r\n        return this.reg32s[reg_esp];\r\n    }\r\n    else\r\n    {\r\n        return this.reg16[reg_sp];\r\n    }\r\n};\r\n\r\nCPU.prototype.set_stack_reg = function(value)\r\n{\r\n    if(this.stack_size_32)\r\n    {\r\n        this.reg32s[reg_esp] = value;\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg_sp] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.adjust_stack_reg = function(value)\r\n{\r\n    if(this.stack_size_32)\r\n    {\r\n        this.reg32s[reg_esp] += value;\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg_sp] += value;\r\n    }\r\n};\r\n\r\nCPU.prototype.get_stack_pointer = function(mod)\r\n{\r\n    if(this.stack_size_32)\r\n    {\r\n        return this.get_seg(reg_ss) + this.reg32s[reg_esp] + mod | 0;\r\n    }\r\n    else\r\n    {\r\n        return this.get_seg(reg_ss) + (this.reg16[reg_sp] + mod & 0xFFFF) | 0;\r\n    }\r\n};\r\n\r\n/*\r\n * returns the \"real\" instruction pointer,\r\n * without segment offset\r\n */\r\nCPU.prototype.get_real_eip = function()\r\n{\r\n    return this.instruction_pointer - this.get_seg(reg_cs) | 0;\r\n};\r\n\r\nCPU.prototype.call_interrupt_vector = function(interrupt_nr, is_software_int, error_code)\r\n{\r\n    //dbg_log(\"int \" + h(interrupt_nr, 2) + \" (\" + (is_software_int ? \"soft\" : \"hard\") + \"ware)\", LOG_CPU);\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"int \" + h(interrupt_nr) + \" start\" +\r\n        \" (\" + (is_software_int ? \"soft\" : \"hard\") + \"ware)\");\r\n    CPU_LOG_VERBOSE && this.debug.dump_regs();\r\n\r\n    this.debug.debug_interrupt(interrupt_nr);\r\n\r\n    dbg_assert(error_code === false || typeof error_code === \"number\");\r\n\r\n    // we have to leave hlt_loop at some point, this is a\r\n    // good place to do it\r\n    //this.in_hlt && dbg_log(\"Leave HLT loop\", LOG_CPU);\r\n    this.in_hlt = false;\r\n\r\n    if(this.protected_mode)\r\n    {\r\n        if(this.vm86_mode() && (this.cr[4] & CR4_VME))\r\n        {\r\n            throw this.debug.unimpl(\"VME\");\r\n        }\r\n\r\n        if(this.vm86_mode() && is_software_int && this.getiopl() < 3)\r\n        {\r\n            dbg_log(\"call_interrupt_vector #GP. vm86 && software int && iopl < 3\", LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(0);\r\n        }\r\n\r\n        if((interrupt_nr << 3 | 7) > this.idtr_size)\r\n        {\r\n            dbg_log(interrupt_nr, LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n\r\n        var addr = this.idtr_offset + (interrupt_nr << 3) | 0;\r\n        dbg_assert((addr & 0xFFF) < 0xFF8);\r\n\r\n        if(this.paging)\r\n        {\r\n            addr = this.translate_address_system_read(addr);\r\n        }\r\n\r\n        var base = this.read16(addr) | this.read16(addr + 6 | 0) << 16;\r\n        var selector = this.read16(addr + 2 | 0);\r\n        var access = this.read8(addr + 5 | 0);\r\n        var dpl = access >> 5 & 3;\r\n        var type = access & 31;\r\n\r\n        if((access & 0x80) === 0)\r\n        {\r\n            // present bit not set\r\n            // throw this.debug.unimpl(\"#NP handler\");\r\n\t\t\treturn;\r\n        }\r\n\r\n        if(is_software_int && dpl < this.cpl)\r\n        {\r\n            dbg_log(\"#gp software interrupt (\" + h(interrupt_nr, 2) + \") and dpl < cpl\", LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(interrupt_nr << 3 | 2);\r\n        }\r\n\r\n        if(type === 5)\r\n        {\r\n            // task gate\r\n            dbg_log(\"interrupt to task gate: int=\" + h(interrupt_nr, 2) + \" sel=\" + h(selector, 4) + \" dpl=\" + dpl, LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n\r\n            this.do_task_switch(selector, error_code);\r\n            CPU_LOG_VERBOSE && this.debug.dump_state(\"int end\");\r\n            return;\r\n        }\r\n\r\n        if((type & ~1 & ~8) !== 6)\r\n        {\r\n            // invalid type\r\n            dbg_trace(LOG_CPU);\r\n            dbg_log(\"invalid type: \" + h(type));\r\n            dbg_log(h(addr) + \" \" + h(base >>> 0) + \" \" + h(selector));\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n\r\n        var is_trap = (type & 1) === 1;\r\n        var is_16 = (type & 8) === 0;\r\n\r\n        var info = this.lookup_segment_selector(selector);\r\n\r\n        dbg_assert((base >>> 0) <= info.effective_limit);\r\n        dbg_assert(info.is_valid);\r\n\r\n        if(info.is_null)\r\n        {\r\n            dbg_log(\"is null\");\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n        if(!info.is_executable || info.dpl > this.cpl)\r\n        {\r\n            dbg_log(\"not exec\");\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n        if(!info.is_present)\r\n        {\r\n            // kvm-unit-test\r\n            dbg_log(\"not present\");\r\n            this.trigger_np(interrupt_nr << 3 | 2);\r\n        }\r\n\r\n        var old_flags = this.get_eflags();\r\n\r\n        //dbg_log(\"interrupt \" + h(interrupt_nr, 2) + \" (\" + (is_software_int ? \"soft\" : \"hard\") + \"ware) from cpl=\" + this.cpl + \" vm=\" + (this.flags & flag_vm) + \" cs:eip=\" + h(this.sreg[reg_cs], 4) + \":\" + h(this.get_real_eip(), 8) + \" to cpl=\"\r\n\r\n        if(!info.dc_bit && info.dpl < this.cpl)\r\n        {\r\n            // inter privilege level interrupt\r\n            // interrupt from vm86 mode\r\n\r\n            //dbg_log(\"Inter privilege interrupt gate=\" + h(selector, 4) + \":\" + h(base >>> 0, 8) + \" trap=\" + is_trap + \" 16bit=\" + is_16, LOG_CPU);\r\n            //this.debug.dump_regs();\r\n            var tss_stack_addr = this.get_tss_stack_addr(info.dpl);\r\n\r\n            if(this.tss_size_32)\r\n            {\r\n                var new_esp = this.read32s(tss_stack_addr);\r\n                var new_ss = this.read16(tss_stack_addr + 4 | 0);\r\n            }\r\n            else\r\n            {\r\n                var new_esp = this.read16(tss_stack_addr);\r\n                var new_ss = this.read16(tss_stack_addr + 2 | 0);\r\n            }\r\n            var ss_info = this.lookup_segment_selector(new_ss);\r\n\r\n            // Disabled: Incorrect handling of direction bit\r\n            // See http://css.csail.mit.edu/6.858/2014/readings/i386/s06_03.htm\r\n            //if(!((new_esp >>> 0) <= ss_info.effective_limit))\r\n            //    debugger;\r\n            //dbg_assert((new_esp >>> 0) <= ss_info.effective_limit);\r\n            dbg_assert(ss_info.is_valid && !ss_info.is_system && ss_info.is_writable);\r\n\r\n            if(ss_info.is_null)\r\n            {\r\n                throw this.debug.unimpl(\"#TS handler\");\r\n            }\r\n            if(ss_info.rpl !== info.dpl) // xxx: 0 in v86 mode\r\n            {\r\n                throw this.debug.unimpl(\"#TS handler\");\r\n            }\r\n            if(ss_info.dpl !== info.dpl || !ss_info.rw_bit)\r\n            {\r\n                throw this.debug.unimpl(\"#TS handler\");\r\n            }\r\n            if(!ss_info.is_present)\r\n            {\r\n                throw this.debug.unimpl(\"#TS handler\");\r\n            }\r\n\r\n            var old_esp = this.reg32s[reg_esp];\r\n            var old_ss = this.sreg[reg_ss];\r\n\r\n            if(old_flags & flag_vm)\r\n            {\r\n                //dbg_log(\"return from vm86 mode\");\r\n                //this.debug.dump_regs();\r\n                dbg_assert(info.dpl === 0, \"switch to non-0 dpl from vm86 mode\");\r\n            }\r\n\r\n            var stack_space = (is_16 ? 2 : 4) * (5 + (error_code !== false) + 4 * ((old_flags & flag_vm) === flag_vm));\r\n            var new_stack_pointer = ss_info.base + (ss_info.size ? new_esp - stack_space : (new_esp - stack_space & 0xFFFF));\r\n\r\n            // XXX: with new cpl or with cpl 0?\r\n            this.translate_address_system_write(new_stack_pointer);\r\n            this.translate_address_system_write(ss_info.base + new_esp - 1);\r\n\r\n            // no exceptions below\r\n\r\n            this.cpl = info.dpl;\r\n            this.cpl_changed();\r\n\r\n            this.update_cs_size(info.size);\r\n\r\n            this.flags &= ~flag_vm & ~flag_rf;\r\n\r\n            this.switch_seg(reg_ss, new_ss);\r\n            this.set_stack_reg(new_esp);\r\n\r\n            if(old_flags & flag_vm)\r\n            {\r\n                if(is_16)\r\n                {\r\n                    dbg_assert(false);\r\n                }\r\n                else\r\n                {\r\n                    this.push32(this.sreg[reg_gs]);\r\n                    this.push32(this.sreg[reg_fs]);\r\n                    this.push32(this.sreg[reg_ds]);\r\n                    this.push32(this.sreg[reg_es]);\r\n                }\r\n            }\r\n\r\n            if(is_16)\r\n            {\r\n                this.push16(old_ss);\r\n                this.push16(old_esp);\r\n            }\r\n            else\r\n            {\r\n                this.push32(old_ss);\r\n                this.push32(old_esp);\r\n            }\r\n        }\r\n        else if(info.dc_bit || info.dpl === this.cpl)\r\n        {\r\n            // intra privilege level interrupt\r\n\r\n            //dbg_log(\"Intra privilege interrupt gate=\" + h(selector, 4) + \":\" + h(base >>> 0, 8) +\r\n            //        \" trap=\" + is_trap + \" 16bit=\" + is_16 +\r\n            //        \" cpl=\" + this.cpl + \" dpl=\" + info.dpl + \" conforming=\" + +info.dc_bit, LOG_CPU);\r\n            //this.debug.dump_regs();\r\n\r\n            if(this.flags & flag_vm)\r\n            {\r\n                dbg_assert(false, \"check error code\");\r\n                this.trigger_gp(selector & ~3);\r\n            }\r\n\r\n            var stack_space = (is_16 ? 2 : 4) * (3 + (error_code !== false));\r\n\r\n            // XXX: with current cpl or with cpl 0?\r\n            this.writable_or_pagefault(this.get_stack_pointer(-stack_space), stack_space);\r\n\r\n            // no exceptions below\r\n        }\r\n        else\r\n        {\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n\r\n        if(is_16)\r\n        {\r\n            this.push16(old_flags);\r\n            this.push16(this.sreg[reg_cs]);\r\n            this.push16(this.get_real_eip());\r\n\r\n            if(error_code !== false)\r\n            {\r\n                this.push16(error_code);\r\n            }\r\n\r\n            base &= 0xFFFF;\r\n        }\r\n        else\r\n        {\r\n            this.push32(old_flags);\r\n            this.push32(this.sreg[reg_cs]);\r\n            this.push32(this.get_real_eip());\r\n\r\n            if(error_code !== false)\r\n            {\r\n                this.push32(error_code);\r\n            }\r\n        }\r\n\r\n        if(old_flags & flag_vm)\r\n        {\r\n            this.switch_seg(reg_gs, 0);\r\n            this.switch_seg(reg_fs, 0);\r\n            this.switch_seg(reg_ds, 0);\r\n            this.switch_seg(reg_es, 0);\r\n        }\r\n\r\n        this.sreg[reg_cs] = selector & ~3 | this.cpl;\r\n        dbg_assert((this.sreg[reg_cs] & 3) === this.cpl);\r\n\r\n        this.update_cs_size(info.size);\r\n\r\n        this.segment_limits[reg_cs] = info.effective_limit;\r\n        this.segment_offsets[reg_cs] = info.base;\r\n\r\n        this.instruction_pointer = this.get_seg(reg_cs) + base | 0;\r\n\r\n        this.flags &= ~flag_nt & ~flag_vm & ~flag_rf & ~flag_trap;\r\n\r\n        if(!is_trap)\r\n        {\r\n            // clear int flag for interrupt gates\r\n            this.flags &= ~flag_interrupt;\r\n        }\r\n        else\r\n        {\r\n            if((this.flags & flag_interrupt) && !(old_flags & flag_interrupt))\r\n            {\r\n                if(!this.page_fault[0]) // XXX\r\n                {\r\n                    this.handle_irqs();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // call 4 byte cs:ip interrupt vector from ivt at cpu.memory 0\r\n\r\n        var index = interrupt_nr << 2;\r\n        var new_ip = this.read16(index);\r\n        var new_cs = this.read16(index + 2 | 0);\r\n\r\n        // push flags, cs:ip\r\n        this.push16(this.get_eflags());\r\n        this.push16(this.sreg[reg_cs]);\r\n        this.push16(this.get_real_eip());\r\n\r\n        this.flags &= ~flag_interrupt;\r\n\r\n        this.switch_cs_real_mode(new_cs);\r\n        this.instruction_pointer = this.get_seg(reg_cs) + new_ip | 0;\r\n    }\r\n\r\n    //dbg_log(\"int to:\", LOG_CPU);\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"int end\");\r\n};\r\n\r\nCPU.prototype.iret16 = function()\r\n{\r\n    this.iret(true);\r\n};\r\n\r\nCPU.prototype.iret32 = function()\r\n{\r\n    this.iret(false);\r\n};\r\n\r\nCPU.prototype.iret = function(is_16)\r\n{\r\n    //dbg_log(\"iret is_16=\" + is_16, LOG_CPU);\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"iret\" + (is_16 ? \"16\" : \"32\") + \" start\");\r\n    //this.debug.dump_regs();\r\n\r\n    if(this.vm86_mode() && this.getiopl() < 3)\r\n    {\r\n        // vm86 mode, iopl != 3\r\n        dbg_log(\"#gp iret vm86 mode, iopl != 3\", LOG_CPU);\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if(is_16)\r\n    {\r\n        var new_eip = this.safe_read16(this.get_stack_pointer(0));\r\n        var new_cs = this.safe_read16(this.get_stack_pointer(2));\r\n        var new_flags = this.safe_read16(this.get_stack_pointer(4));\r\n    }\r\n    else\r\n    {\r\n        var new_eip = this.safe_read32s(this.get_stack_pointer(0));\r\n        var new_cs = this.safe_read16(this.get_stack_pointer(4));\r\n        var new_flags = this.safe_read32s(this.get_stack_pointer(8));\r\n    }\r\n\r\n    if(!this.protected_mode || (this.vm86_mode() && this.getiopl() === 3))\r\n    {\r\n        if(new_eip & 0xFFFF0000)\r\n        {\r\n            throw this.debug.unimpl(\"#GP handler\");\r\n        }\r\n\r\n        this.switch_cs_real_mode(new_cs);\r\n        this.instruction_pointer = new_eip + this.get_seg(reg_cs) | 0;\r\n\r\n        if(is_16)\r\n        {\r\n            this.update_eflags(new_flags | this.flags & ~0xFFFF);\r\n            this.adjust_stack_reg(3 * 2);\r\n        }\r\n        else\r\n        {\r\n            this.update_eflags(new_flags);\r\n            this.adjust_stack_reg(3 * 4);\r\n        }\r\n\r\n        //dbg_log(\"iret32 to:\", LOG_CPU);\r\n        CPU_LOG_VERBOSE && this.debug.dump_state(\"iret end\");\r\n\r\n        this.handle_irqs();\r\n        return;\r\n    }\r\n\r\n    dbg_assert(!this.vm86_mode());\r\n\r\n    if(this.flags & flag_nt)\r\n    {\r\n        if(DEBUG) throw this.debug.unimpl(\"nt\");\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if(new_flags & flag_vm)\r\n    {\r\n        if(this.cpl === 0)\r\n        {\r\n            // return to virtual 8086 mode\r\n\r\n            // vm86 cannot be set in 16 bit flag\r\n            dbg_assert(!is_16);\r\n\r\n            dbg_assert((new_eip & ~0xFFFF) === 0);\r\n\r\n            //dbg_log(\"in vm86 mode now \" +\r\n            //        \" cs:eip=\" + h(new_cs, 4) + \":\" + h(this.instruction_pointer >>> 0, 8) +\r\n            //        \" iopl=\" + this.getiopl() + \" flags=\" + h(new_flags, 8), LOG_CPU);\r\n\r\n\r\n            var temp_esp = this.safe_read32s(this.get_stack_pointer(12));\r\n            var temp_ss = this.safe_read16(this.get_stack_pointer(16));\r\n\r\n            var new_es = this.safe_read16(this.get_stack_pointer(20));\r\n            var new_ds = this.safe_read16(this.get_stack_pointer(24));\r\n            var new_fs = this.safe_read16(this.get_stack_pointer(28));\r\n            var new_gs = this.safe_read16(this.get_stack_pointer(32));\r\n\r\n            // no exceptions below\r\n\r\n            this.update_eflags(new_flags);\r\n            this.flags |= flag_vm;\r\n\r\n            this.switch_cs_real_mode(new_cs);\r\n            this.instruction_pointer = (new_eip & 0xFFFF) + this.get_seg(reg_cs) | 0;\r\n\r\n            this.switch_seg(reg_es, new_es);\r\n            this.switch_seg(reg_ds, new_ds);\r\n            this.switch_seg(reg_fs, new_fs);\r\n            this.switch_seg(reg_gs, new_gs);\r\n\r\n            this.adjust_stack_reg(9 * 4); // 9 dwords: eip, cs, flags, esp, ss, es, ds, fs, gs\r\n\r\n            this.reg32s[reg_esp] = temp_esp;\r\n            this.switch_seg(reg_ss, temp_ss);\r\n\r\n            this.cpl = 3;\r\n            this.cpl_changed();\r\n\r\n            this.update_cs_size(false);\r\n\r\n            //dbg_log(\"iret32 to:\", LOG_CPU);\r\n            CPU_LOG_VERBOSE && this.debug.dump_state(\"iret end\");\r\n            //this.debug.dump_regs();\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"vm86 flag ignored because cpl != 0\", LOG_CPU);\r\n            new_flags &= ~flag_vm;\r\n        }\r\n    }\r\n\r\n    // protected mode return\r\n\r\n    var info = this.lookup_segment_selector(new_cs);\r\n\r\n    dbg_assert(info.is_valid);\r\n    dbg_assert((new_eip >>> 0) <= info.effective_limit);\r\n\r\n    if(info.is_null)\r\n    {\r\n        throw this.debug.unimpl(\"is null\");\r\n    }\r\n    if(!info.is_present)\r\n    {\r\n        throw this.debug.unimpl(\"not present\");\r\n    }\r\n    if(!info.is_executable)\r\n    {\r\n        throw this.debug.unimpl(\"not exec\");\r\n    }\r\n    if(info.rpl < this.cpl)\r\n    {\r\n        throw this.debug.unimpl(\"rpl < cpl\");\r\n    }\r\n    if(info.dc_bit && info.dpl > info.rpl)\r\n    {\r\n        throw this.debug.unimpl(\"conforming and dpl > rpl\");\r\n    }\r\n\r\n    if(!info.dc_bit && info.rpl !== info.dpl)\r\n    {\r\n        dbg_log(\"#gp iret: non-conforming cs and rpl != dpl, dpl=\" + info.dpl + \" rpl=\" + info.rpl, LOG_CPU);\r\n        this.trigger_gp(new_cs & ~3);\r\n    }\r\n\r\n    if(info.rpl > this.cpl)\r\n    {\r\n        // outer privilege return\r\n        if(is_16)\r\n        {\r\n            var temp_esp = this.safe_read16(this.get_stack_pointer(6));\r\n            var temp_ss = this.safe_read16(this.get_stack_pointer(8));\r\n        }\r\n        else\r\n        {\r\n            var temp_esp = this.safe_read32s(this.get_stack_pointer(12));\r\n            var temp_ss = this.safe_read16(this.get_stack_pointer(16));\r\n        }\r\n\r\n        var ss_info = this.lookup_segment_selector(temp_ss);\r\n        var new_cpl = info.rpl;\r\n\r\n        if(ss_info.is_null)\r\n        {\r\n            dbg_log(\"#GP for loading 0 in SS sel=\" + h(temp_ss, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(0);\r\n        }\r\n\r\n        if(!ss_info.is_valid ||\r\n           ss_info.is_system ||\r\n           ss_info.rpl !== new_cpl ||\r\n           !ss_info.is_writable ||\r\n           ss_info.dpl !== new_cpl)\r\n        {\r\n            dbg_log(\"#GP for loading invalid in SS sel=\" + h(temp_ss, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(temp_ss & ~3);\r\n        }\r\n\r\n        if(!ss_info.is_present)\r\n        {\r\n            dbg_log(\"#SS for loading non-present in SS sel=\" + h(temp_ss, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_ss(temp_ss & ~3);\r\n        }\r\n\r\n        // no exceptions below\r\n\r\n        if(is_16)\r\n        {\r\n            this.update_eflags(new_flags | this.flags & ~0xFFFF);\r\n        }\r\n        else\r\n        {\r\n            this.update_eflags(new_flags);\r\n        }\r\n\r\n        this.cpl = info.rpl;\r\n        this.cpl_changed();\r\n\r\n        //dbg_log(\"outer privilege return: from=\" + this.cpl + \" to=\" + info.rpl + \" ss:esp=\" + h(temp_ss, 4) + \":\" + h(temp_esp >>> 0, 8), LOG_CPU);\r\n\r\n        this.switch_seg(reg_ss, temp_ss);\r\n\r\n        this.set_stack_reg(temp_esp);\r\n\r\n        if(this.cpl === 0)\r\n        {\r\n            this.flags = this.flags & ~flag_vif & ~flag_vip | (new_flags & (flag_vif | flag_vip));\r\n        }\r\n\r\n\r\n        // XXX: Set segment to 0 if it's not usable in the new cpl\r\n        // XXX: Use cached segment information\r\n        //var ds_info = this.lookup_segment_selector(this.sreg[reg_ds]);\r\n        //if(this.cpl > ds_info.dpl && (!ds_info.is_executable || !ds_info.dc_bit)) this.switch_seg(reg_ds, 0);\r\n        // ...\r\n    }\r\n    else if(info.rpl === this.cpl)\r\n    {\r\n        // same privilege return\r\n        // no exceptions below\r\n        if(is_16)\r\n        {\r\n            this.adjust_stack_reg(3 * 2);\r\n            this.update_eflags(new_flags | this.flags & ~0xFFFF);\r\n        }\r\n        else\r\n        {\r\n            this.adjust_stack_reg(3 * 4);\r\n            this.update_eflags(new_flags);\r\n        }\r\n\r\n        // update vip and vif, which are not changed by update_eflags\r\n        if(this.cpl === 0)\r\n        {\r\n            this.flags = this.flags & ~flag_vif & ~flag_vip | (new_flags & (flag_vif | flag_vip));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        dbg_assert(false);\r\n    }\r\n\r\n    this.sreg[reg_cs] = new_cs;\r\n    dbg_assert((new_cs & 3) === this.cpl);\r\n\r\n    this.update_cs_size(info.size);\r\n\r\n    this.segment_limits[reg_cs] = info.effective_limit;\r\n    this.segment_offsets[reg_cs] = info.base;\r\n\r\n    this.instruction_pointer = new_eip + this.get_seg(reg_cs) | 0;\r\n\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"iret\" + (is_16 ? \"16\" : \"32\") + \" end\");\r\n\r\n    this.handle_irqs();\r\n};\r\n\r\nCPU.prototype.switch_cs_real_mode = function(selector)\r\n{\r\n    dbg_assert(!this.protected_mode || this.vm86_mode());\r\n\r\n    this.sreg[reg_cs] = selector;\r\n    this.segment_is_null[reg_cs] = 0;\r\n    this.segment_offsets[reg_cs] = selector << 4;\r\n};\r\n\r\nCPU.prototype.far_return = function(eip, selector, stack_adjust)\r\n{\r\n    dbg_assert(typeof selector === \"number\" && selector < 0x10000 && selector >= 0);\r\n\r\n    //dbg_log(\"far return eip=\" + h(eip >>> 0, 8) + \" cs=\" + h(selector, 4) + \" stack_adjust=\" + h(stack_adjust), LOG_CPU);\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"far ret start\");\r\n\r\n    if(!this.protected_mode)\r\n    {\r\n        dbg_assert(!this.is_32);\r\n        //dbg_assert(!this.stack_size_32);\r\n    }\r\n\r\n    if(!this.protected_mode || this.vm86_mode())\r\n    {\r\n        this.switch_cs_real_mode(selector);\r\n        this.instruction_pointer = this.get_seg(reg_cs) + eip | 0;\r\n        this.adjust_stack_reg(2 * (this.is_osize_32() ? 4 : 2) + stack_adjust);\r\n        return;\r\n    }\r\n\r\n    var info = this.lookup_segment_selector(selector);\r\n\r\n    if(info.is_null)\r\n    {\r\n        dbg_log(\"null cs\", LOG_CPU);\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if(!info.is_valid)\r\n    {\r\n        dbg_log(\"invalid cs: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(info.is_system)\r\n    {\r\n        dbg_assert(false, \"is system in far return\");\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(!info.is_executable)\r\n    {\r\n        dbg_log(\"non-executable cs: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(info.rpl < this.cpl)\r\n    {\r\n        dbg_log(\"cs rpl < cpl: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(info.dc_bit && info.dpl > info.rpl)\r\n    {\r\n        dbg_log(\"cs conforming and dpl > rpl: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(!info.dc_bit && info.dpl !== info.rpl)\r\n    {\r\n        dbg_log(\"cs non-conforming and dpl != rpl: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(!info.is_present)\r\n    {\r\n        dbg_log(\"#NP for loading not-present in cs sel=\" + h(selector, 4), LOG_CPU);\r\n        dbg_trace(LOG_CPU);\r\n        this.trigger_np(selector & ~3);\r\n    }\r\n\r\n    if(info.rpl > this.cpl)\r\n    {\r\n        dbg_log(\"far return privilege change cs: \" + h(selector) + \" from=\" + this.cpl + \" to=\" + info.rpl + \" is_16=\" + this.is_osize_32(), LOG_CPU);\r\n\r\n        if(this.is_osize_32())\r\n        {\r\n            //dbg_log(\"esp read from \" + h(this.translate_address_system_read(this.get_stack_pointer(stack_adjust + 8))))\r\n            var temp_esp = this.safe_read32s(this.get_stack_pointer(stack_adjust + 8));\r\n            //dbg_log(\"esp=\" + h(temp_esp));\r\n            var temp_ss = this.safe_read16(this.get_stack_pointer(stack_adjust + 12));\r\n        }\r\n        else\r\n        {\r\n            //dbg_log(\"esp read from \" + h(this.translate_address_system_read(this.get_stack_pointer(stack_adjust + 4))));\r\n            var temp_esp = this.safe_read16(this.get_stack_pointer(stack_adjust + 4));\r\n            //dbg_log(\"esp=\" + h(temp_esp));\r\n            var temp_ss = this.safe_read16(this.get_stack_pointer(stack_adjust + 6));\r\n        }\r\n\r\n        this.cpl = info.rpl;\r\n        this.cpl_changed();\r\n\r\n        // XXX: Can raise, conditions should be checked before side effects\r\n        this.switch_seg(reg_ss, temp_ss);\r\n        this.set_stack_reg(temp_esp + stack_adjust);\r\n\r\n        //if(this.is_osize_32())\r\n        //{\r\n        //    this.adjust_stack_reg(2 * 4);\r\n        //}\r\n        //else\r\n        //{\r\n        //    this.adjust_stack_reg(2 * 2);\r\n        //}\r\n\r\n        //throw this.debug.unimpl(\"privilege change\");\r\n\r\n        //this.adjust_stack_reg(stack_adjust);\r\n    }\r\n    else\r\n    {\r\n        if(this.is_osize_32())\r\n        {\r\n            this.adjust_stack_reg(2 * 4 + stack_adjust);\r\n        }\r\n        else\r\n        {\r\n            this.adjust_stack_reg(2 * 2 + stack_adjust);\r\n        }\r\n    }\r\n\r\n    //dbg_assert(this.cpl === info.dpl);\r\n\r\n    this.update_cs_size(info.size);\r\n\r\n    this.segment_is_null[reg_cs] = 0;\r\n    this.segment_limits[reg_cs] = info.effective_limit;\r\n    //this.segment_infos[reg_cs] = 0; // TODO\r\n\r\n    this.segment_offsets[reg_cs] = info.base;\r\n    this.sreg[reg_cs] = selector;\r\n\r\n    dbg_assert((selector & 3) === this.cpl);\r\n\r\n    this.instruction_pointer = this.get_seg(reg_cs) + eip | 0;\r\n\r\n    //dbg_log(\"far return to:\", LOG_CPU)\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"far ret end\");\r\n};\r\n\r\nCPU.prototype.far_jump = function(eip, selector, is_call)\r\n{\r\n    dbg_assert(typeof selector === \"number\" && selector < 0x10000 && selector >= 0);\r\n\r\n    //dbg_log(\"far \" + [\"jump\", \"call\"][+is_call] + \" eip=\" + h(eip >>> 0, 8) + \" cs=\" + h(selector, 4), LOG_CPU);\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"far \" + [\"jump\", \"call\"][+is_call]);\r\n\r\n    if(!this.protected_mode || this.vm86_mode())\r\n    {\r\n        if(is_call)\r\n        {\r\n            if(this.is_osize_32())\r\n            {\r\n                this.writable_or_pagefault(this.get_stack_pointer(-8), 8);\r\n                this.push32(this.sreg[reg_cs]);\r\n                this.push32(this.get_real_eip());\r\n            }\r\n            else\r\n            {\r\n                this.writable_or_pagefault(this.get_stack_pointer(-4), 4);\r\n                this.push16(this.sreg[reg_cs]);\r\n                this.push16(this.get_real_eip());\r\n            }\r\n        }\r\n        this.switch_cs_real_mode(selector);\r\n        this.instruction_pointer = this.get_seg(reg_cs) + eip | 0;\r\n        return;\r\n    }\r\n\r\n    var info = this.lookup_segment_selector(selector);\r\n\r\n    if(info.is_null)\r\n    {\r\n        dbg_log(\"#gp null cs\", LOG_CPU);\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if(!info.is_valid)\r\n    {\r\n        dbg_log(\"#gp invalid cs: \" + h(selector), LOG_CPU);\r\n        this.trigger_gp(selector & ~3);\r\n    }\r\n\r\n    if(info.is_system)\r\n    {\r\n        dbg_assert(is_call, \"TODO: Jump\");\r\n\r\n        dbg_log(\"system type cs: \" + h(selector), LOG_CPU);\r\n\r\n        if(info.type === 0xC || info.type === 4)\r\n        {\r\n            // call gate\r\n            var is_16 = info.type === 4;\r\n\r\n            if(info.dpl < this.cpl || info.dpl < info.rpl)\r\n            {\r\n                dbg_log(\"#gp cs gate dpl < cpl or dpl < rpl: \" + h(selector), LOG_CPU);\r\n                this.trigger_gp(selector & ~3);\r\n            }\r\n\r\n            if(!info.is_present)\r\n            {\r\n                dbg_log(\"#NP for loading not-present in gate cs sel=\" + h(selector, 4), LOG_CPU);\r\n                this.trigger_np(selector & ~3);\r\n            }\r\n\r\n            var cs_selector = info.raw0 >>> 16;\r\n            var cs_info = this.lookup_segment_selector(cs_selector);\r\n\r\n            if(cs_info.is_null)\r\n            {\r\n                dbg_log(\"#gp null cs\", LOG_CPU);\r\n                this.trigger_gp(0);\r\n            }\r\n\r\n            if(!cs_info.is_valid)\r\n            {\r\n                dbg_log(\"#gp invalid cs: \" + h(cs_selector), LOG_CPU);\r\n                this.trigger_gp(cs_selector & ~3);\r\n            }\r\n\r\n            if(!cs_info.is_executable)\r\n            {\r\n                dbg_log(\"#gp non-executable cs: \" + h(cs_selector), LOG_CPU);\r\n                this.trigger_gp(cs_selector & ~3);\r\n            }\r\n\r\n            if(cs_info.dpl > this.cpl)\r\n            {\r\n                dbg_log(\"#gp dpl > cpl: \" + h(cs_selector), LOG_CPU);\r\n                this.trigger_gp(cs_selector & ~3);\r\n            }\r\n\r\n            if(!cs_info.is_present)\r\n            {\r\n                dbg_log(\"#NP for loading not-present in cs sel=\" + h(cs_selector, 4), LOG_CPU);\r\n                this.trigger_np(cs_selector & ~3);\r\n            }\r\n\r\n            if(!cs_info.dc_bit && cs_info.dpl < this.cpl)\r\n            {\r\n                dbg_log(\"more privilege call gate is_16=\" + is_16 + \" from=\" + this.cpl + \" to=\" + cs_info.dpl);\r\n                var tss_stack_addr = this.get_tss_stack_addr(cs_info.dpl);\r\n\r\n                if(this.tss_size_32)\r\n                {\r\n                    var new_esp = this.read32s(tss_stack_addr);\r\n                    var new_ss = this.read16(tss_stack_addr + 4 | 0);\r\n                }\r\n                else\r\n                {\r\n                    var new_esp = this.read16(tss_stack_addr);\r\n                    var new_ss = this.read16(tss_stack_addr + 2 | 0);\r\n                }\r\n                var ss_info = this.lookup_segment_selector(new_ss);\r\n\r\n                // Disabled: Incorrect handling of direction bit\r\n                // See http://css.csail.mit.edu/6.858/2014/readings/i386/s06_03.htm\r\n                //if(!((new_esp >>> 0) <= ss_info.effective_limit))\r\n                //    debugger;\r\n                //dbg_assert((new_esp >>> 0) <= ss_info.effective_limit);\r\n                dbg_assert(ss_info.is_valid && !ss_info.is_system && ss_info.is_writable);\r\n\r\n                if(ss_info.is_null)\r\n                {\r\n                    throw this.debug.unimpl(\"#TS handler\");\r\n                }\r\n                if(ss_info.rpl !== cs_info.dpl) // xxx: 0 in v86 mode\r\n                {\r\n                    throw this.debug.unimpl(\"#TS handler\");\r\n                }\r\n                if(ss_info.dpl !== cs_info.dpl || !ss_info.rw_bit)\r\n                {\r\n                    throw this.debug.unimpl(\"#TS handler\");\r\n                }\r\n                if(!ss_info.is_present)\r\n                {\r\n                    throw this.debug.unimpl(\"#SS handler\");\r\n                }\r\n\r\n                var parameter_count = info.raw1 & 0x1F;\r\n                var stack_space = is_16 ? 4 : 8;\r\n                if(is_call)\r\n                {\r\n                    stack_space += is_16 ? 4 + 2 * parameter_count : 8 + 4 * parameter_count;\r\n                }\r\n                if(ss_info.size)\r\n                {\r\n                    //try {\r\n                    this.writable_or_pagefault(ss_info.base + new_esp - stack_space | 0, stack_space); // , cs_info.dpl\r\n                    //} catch(e) { debugger; }\r\n                }\r\n                else\r\n                {\r\n                    //try {\r\n                    this.writable_or_pagefault(ss_info.base + (new_esp - stack_space & 0xFFFF) | 0, stack_space); // , cs_info.dpl\r\n                    //} catch(e) { debugger; }\r\n                }\r\n\r\n                var old_esp = this.reg32s[reg_esp];\r\n                var old_ss = this.sreg[reg_ss];\r\n                var old_stack_pointer = this.get_stack_pointer(0);\r\n\r\n                //dbg_log(\"old_esp=\" + h(old_esp));\r\n\r\n                this.cpl = cs_info.dpl;\r\n                this.cpl_changed();\r\n\r\n                this.update_cs_size(cs_info.size);\r\n\r\n                this.switch_seg(reg_ss, new_ss);\r\n                this.set_stack_reg(new_esp);\r\n\r\n                //dbg_log(\"parameter_count=\" + parameter_count);\r\n                //dbg_assert(parameter_count === 0, \"TODO\");\r\n\r\n                if(is_16)\r\n                {\r\n                    this.push16(old_ss);\r\n                    this.push16(old_esp);\r\n                    //dbg_log(\"old esp written to \" + h(this.translate_address_system_read(this.get_stack_pointer(0))));\r\n                }\r\n                else\r\n                {\r\n                    this.push32(old_ss);\r\n                    this.push32(old_esp);\r\n                    //dbg_log(\"old esp written to \" + h(this.translate_address_system_read(this.get_stack_pointer(0))));\r\n                }\r\n\r\n                if(is_call)\r\n                {\r\n                    if(is_16)\r\n                    {\r\n                        for(var i = parameter_count - 1; i >= 0; i--)\r\n                        {\r\n                            var parameter = this.safe_read16(old_stack_pointer + 2 * i);\r\n                            this.push16(parameter);\r\n                        }\r\n\r\n                        //this.writable_or_pagefault(this.get_stack_pointer(-4), 4);\r\n                        this.push16(this.sreg[reg_cs]);\r\n                        this.push16(this.get_real_eip());\r\n                    }\r\n                    else\r\n                    {\r\n                        for(var i = parameter_count - 1; i >= 0; i--)\r\n                        {\r\n                            var parameter = this.safe_read32s(old_stack_pointer + 4 * i);\r\n                            this.push32(parameter);\r\n                        }\r\n\r\n                        //this.writable_or_pagefault(this.get_stack_pointer(-8), 8);\r\n                        this.push32(this.sreg[reg_cs]);\r\n                        this.push32(this.get_real_eip());\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"same privilege call gate is_16=\" + is_16 + \" from=\" + this.cpl + \" to=\" + cs_info.dpl + \" conforming=\" + cs_info.dc_bit);\r\n                // ok\r\n\r\n                if(is_call)\r\n                {\r\n                    if(is_16)\r\n                    {\r\n                        this.writable_or_pagefault(this.get_stack_pointer(-4), 4);\r\n                        this.push16(this.sreg[reg_cs]);\r\n                        this.push16(this.get_real_eip());\r\n                    }\r\n                    else\r\n                    {\r\n                        this.writable_or_pagefault(this.get_stack_pointer(-8), 8);\r\n                        this.push32(this.sreg[reg_cs]);\r\n                        this.push32(this.get_real_eip());\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Note: eip from call is ignored\r\n            var new_eip = info.raw0 & 0xFFFF;\r\n            if(!is_16)\r\n            {\r\n                new_eip |= info.raw1 & 0xFFFF0000;\r\n            }\r\n\r\n            dbg_log(\"call gate eip=\" + h(new_eip >>> 0) + \" cs=\" + h(cs_selector) + \" conforming=\" + cs_info.dc_bit);\r\n            dbg_assert((new_eip >>> 0) <= cs_info.effective_limit, \"todo: #gp\");\r\n\r\n            this.update_cs_size(cs_info.size);\r\n\r\n            this.segment_is_null[reg_cs] = 0;\r\n            this.segment_limits[reg_cs] = cs_info.effective_limit;\r\n            //this.segment_infos[reg_cs] = 0; // TODO\r\n            this.segment_offsets[reg_cs] = cs_info.base;\r\n            this.sreg[reg_cs] = cs_selector & ~3 | this.cpl;\r\n            dbg_assert((this.sreg[reg_cs] & 3) === this.cpl);\r\n\r\n            this.instruction_pointer = this.get_seg(reg_cs) + new_eip | 0;\r\n        }\r\n        else\r\n        {\r\n            var types = { 9: \"Available 386 TSS\", 0xb: \"Busy 386 TSS\", 4: \"286 Call Gate\", 0xc: \"386 Call Gate\" };\r\n            throw this.debug.unimpl(\"load system segment descriptor, type = \" + (info.access & 15) + \" (\" + types[info.access & 15] + \")\");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(!info.is_executable)\r\n        {\r\n            dbg_log(\"#gp non-executable cs: \" + h(selector), LOG_CPU);\r\n            this.trigger_gp(selector & ~3);\r\n        }\r\n\r\n        if(info.dc_bit)\r\n        {\r\n            // conforming code segment\r\n            if(info.dpl > this.cpl)\r\n            {\r\n                dbg_log(\"#gp cs dpl > cpl: \" + h(selector), LOG_CPU);\r\n                this.trigger_gp(selector & ~3);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // non-conforming code segment\r\n\r\n            if(info.rpl > this.cpl || info.dpl !== this.cpl)\r\n            {\r\n                dbg_log(\"#gp cs rpl > cpl or dpl != cpl: \" + h(selector), LOG_CPU);\r\n                this.trigger_gp(selector & ~3);\r\n            }\r\n        }\r\n\r\n        if(!info.is_present)\r\n        {\r\n            dbg_log(\"#NP for loading not-present in cs sel=\" + h(selector, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_np(selector & ~3);\r\n        }\r\n\r\n        if(is_call)\r\n        {\r\n            if(this.is_osize_32())\r\n            {\r\n                this.writable_or_pagefault(this.get_stack_pointer(-8), 8);\r\n                this.push32(this.sreg[reg_cs]);\r\n                this.push32(this.get_real_eip());\r\n            }\r\n            else\r\n            {\r\n                this.writable_or_pagefault(this.get_stack_pointer(-4), 4);\r\n                this.push16(this.sreg[reg_cs]);\r\n                this.push16(this.get_real_eip());\r\n            }\r\n        }\r\n\r\n        dbg_assert((eip >>> 0) <= info.effective_limit, \"todo: #gp\");\r\n\r\n        this.update_cs_size(info.size);\r\n\r\n        this.segment_is_null[reg_cs] = 0;\r\n        this.segment_limits[reg_cs] = info.effective_limit;\r\n        //this.segment_infos[reg_cs] = 0; // TODO\r\n\r\n        this.segment_offsets[reg_cs] = info.base;\r\n        this.sreg[reg_cs] = selector & ~3 | this.cpl;\r\n\r\n        this.instruction_pointer = this.get_seg(reg_cs) + eip | 0;\r\n    }\r\n\r\n    //dbg_log(\"far \" + [\"jump\", \"call\"][+is_call] + \" to:\", LOG_CPU)\r\n    CPU_LOG_VERBOSE && this.debug.dump_state(\"far \" + [\"jump\", \"call\"][+is_call] + \" end\");\r\n};\r\n\r\nCPU.prototype.get_tss_stack_addr = function(dpl)\r\n{\r\n    if(this.tss_size_32)\r\n    {\r\n        var tss_stack_addr = (dpl << 3) + 4 | 0;\r\n\r\n        if((tss_stack_addr + 5 | 0) > this.segment_limits[reg_tr])\r\n        {\r\n            throw this.debug.unimpl(\"#TS handler\");\r\n        }\r\n\r\n        tss_stack_addr = tss_stack_addr + this.segment_offsets[reg_tr] | 0;\r\n\r\n        dbg_assert((tss_stack_addr & 0xFFF) <= 0x1000 - 6);\r\n    }\r\n    else\r\n    {\r\n        var tss_stack_addr = (dpl << 2) + 2 | 0;\r\n\r\n        if((tss_stack_addr + 5 | 0) > this.segment_limits[reg_tr])\r\n        {\r\n            throw this.debug.unimpl(\"#TS handler\");\r\n        }\r\n\r\n        tss_stack_addr = tss_stack_addr + this.segment_offsets[reg_tr] | 0;\r\n        dbg_assert((tss_stack_addr & 0xFFF) <= 0x1000 - 4);\r\n    }\r\n\r\n    if(this.paging)\r\n    {\r\n        tss_stack_addr = this.translate_address_system_read(tss_stack_addr);\r\n    }\r\n\r\n    return tss_stack_addr;\r\n};\r\n\r\nCPU.prototype.do_task_switch = function(selector, error_code)\r\n{\r\n    dbg_assert(this.tss_size_32, \"TODO\");\r\n\r\n    dbg_log(\"do_task_switch sel=\" + h(selector), LOG_CPU);\r\n    var descriptor = this.lookup_segment_selector(selector);\r\n\r\n    dbg_assert((descriptor.type | 2) === 3 || (descriptor.type | 2) === 0xb);\r\n    var tss_is_16 = descriptor.type <= 3;\r\n    var tss_is_busy = (descriptor.type & 2) === 2;\r\n\r\n    if(!descriptor.is_valid || descriptor.is_null || !descriptor.from_gdt)\r\n    {\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if((descriptor.access & 31) === 0xB)\r\n    {\r\n        // is busy\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if(!descriptor.is_present)\r\n    {\r\n        // throw this.debug.unimpl(\"#NP handler\");\r\n\t\treturn;\r\n    }\r\n\r\n    if(descriptor.effective_limit < 103)\r\n    {\r\n        // throw this.debug.unimpl(\"#NP handler\");\r\n\t\treturn;\r\n    }\r\n\r\n    var tsr_size = this.segment_limits[reg_tr];\r\n    var tsr_offset = this.segment_offsets[reg_tr];\r\n\r\n    var old_eflags = this.get_eflags();\r\n\r\n    if(tss_is_busy)\r\n    {\r\n        old_eflags &= ~flag_nt;\r\n    }\r\n\r\n    this.writable_or_pagefault(tsr_offset, 0x66);\r\n\r\n    //this.safe_write32(tsr_offset + TSR_CR3, this.cr[3]);\r\n\r\n    // TODO: Write 16 bit values if old tss is 16 bit\r\n    this.safe_write32(tsr_offset + TSR_EIP, this.get_real_eip());\r\n    this.safe_write32(tsr_offset + TSR_EFLAGS, old_eflags);\r\n\r\n    this.safe_write32(tsr_offset + TSR_EAX, this.reg32s[reg_eax]);\r\n    this.safe_write32(tsr_offset + TSR_ECX, this.reg32s[reg_ecx]);\r\n    this.safe_write32(tsr_offset + TSR_EDX, this.reg32s[reg_edx]);\r\n    this.safe_write32(tsr_offset + TSR_EBX, this.reg32s[reg_ebx]);\r\n\r\n    this.safe_write32(tsr_offset + TSR_ESP, this.reg32s[reg_esp]);\r\n    this.safe_write32(tsr_offset + TSR_EBP, this.reg32s[reg_ebp]);\r\n    this.safe_write32(tsr_offset + TSR_ESI, this.reg32s[reg_esi]);\r\n    this.safe_write32(tsr_offset + TSR_EDI, this.reg32s[reg_edi]);\r\n\r\n    this.safe_write32(tsr_offset + TSR_ES, this.sreg[reg_es]);\r\n    this.safe_write32(tsr_offset + TSR_CS, this.sreg[reg_cs]);\r\n    this.safe_write32(tsr_offset + TSR_SS, this.sreg[reg_ss]);\r\n    this.safe_write32(tsr_offset + TSR_DS, this.sreg[reg_ds]);\r\n    this.safe_write32(tsr_offset + TSR_FS, this.sreg[reg_fs]);\r\n    this.safe_write32(tsr_offset + TSR_GS, this.sreg[reg_gs]);\r\n\r\n    //this.safe_write32(tsr_offset + TSR_LDT, this.sreg[reg_ldtr]);\r\n\r\n    if(true /* is jump or call or int */)\r\n    {\r\n        // mark as busy\r\n        this.write8(descriptor.table_offset + 5 | 0, this.read8(descriptor.table_offset + 5 | 0) | 2);\r\n    }\r\n\r\n    //var new_tsr_size = descriptor.effective_limit;\r\n    var new_tsr_offset = descriptor.base;\r\n\r\n    dbg_assert(!tss_is_16, \"unimplemented\");\r\n\r\n    if(true /* is call or int */)\r\n    {\r\n        this.safe_write16(new_tsr_offset + TSR_BACKLINK, this.sreg[reg_tr]);\r\n    }\r\n\r\n    var new_cr3 = this.safe_read32s(new_tsr_offset + TSR_CR3);\r\n\r\n    this.flags &= ~flag_vm;\r\n\r\n    var new_eip = this.safe_read32s(new_tsr_offset + TSR_EIP);\r\n    var new_cs = this.safe_read16(new_tsr_offset + TSR_CS);\r\n    var info = this.lookup_segment_selector(new_cs);\r\n\r\n    if(info.is_null)\r\n    {\r\n        dbg_log(\"null cs\", LOG_CPU);\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(!info.is_valid)\r\n    {\r\n        dbg_log(\"invalid cs: \" + h(selector), LOG_CPU);\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(info.is_system)\r\n    {\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(!info.is_executable)\r\n    {\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(info.dc_bit && info.dpl > info.rpl)\r\n    {\r\n        dbg_log(\"cs conforming and dpl > rpl: \" + h(selector), LOG_CPU);\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(!info.dc_bit && info.dpl !== info.rpl)\r\n    {\r\n        dbg_log(\"cs non-conforming and dpl != rpl: \" + h(selector), LOG_CPU);\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    if(!info.is_present)\r\n    {\r\n        dbg_log(\"#NP for loading not-present in cs sel=\" + h(selector, 4), LOG_CPU);\r\n        throw this.debug.unimpl(\"#TS handler\");\r\n    }\r\n\r\n    this.segment_is_null[reg_cs] = 0;\r\n    this.segment_limits[reg_cs] = info.effective_limit;\r\n    this.segment_offsets[reg_cs] = info.base;\r\n    this.sreg[reg_cs] = new_cs;\r\n\r\n    this.cpl = info.dpl;\r\n    this.cpl_changed();\r\n\r\n    dbg_assert((this.sreg[reg_cs] & 3) === this.cpl);\r\n\r\n    dbg_assert((new_eip >>> 0) <= info.effective_limit, \"todo: #gp\");\r\n    this.update_cs_size(info.size);\r\n\r\n    var new_eflags = this.safe_read32s(new_tsr_offset + TSR_EFLAGS);\r\n\r\n    if(true /* is call or int */)\r\n    {\r\n        this.safe_write32(tsr_offset + TSR_BACKLINK, selector);\r\n        new_eflags |= flag_nt;\r\n    }\r\n\r\n    if(new_eflags & flag_vm)\r\n    {\r\n        throw this.debug.unimpl(\"task switch to VM mode\");\r\n    }\r\n\r\n    this.update_eflags(new_eflags);\r\n\r\n    if(true /* call or int */)\r\n    {\r\n        this.flags |= flag_nt;\r\n    }\r\n\r\n    var new_ldt = this.safe_read16(new_tsr_offset + TSR_LDT);\r\n    this.load_ldt(new_ldt);\r\n\r\n    this.reg32s[reg_eax] = this.safe_read32s(new_tsr_offset + TSR_EAX);\r\n    this.reg32s[reg_ecx] = this.safe_read32s(new_tsr_offset + TSR_ECX);\r\n    this.reg32s[reg_edx] = this.safe_read32s(new_tsr_offset + TSR_EDX);\r\n    this.reg32s[reg_ebx] = this.safe_read32s(new_tsr_offset + TSR_EBX);\r\n\r\n    this.reg32s[reg_esp] = this.safe_read32s(new_tsr_offset + TSR_ESP);\r\n    this.reg32s[reg_ebp] = this.safe_read32s(new_tsr_offset + TSR_EBP);\r\n    this.reg32s[reg_esi] = this.safe_read32s(new_tsr_offset + TSR_ESI);\r\n    this.reg32s[reg_edi] = this.safe_read32s(new_tsr_offset + TSR_EDI);\r\n\r\n    this.switch_seg(reg_es, this.safe_read16(new_tsr_offset + TSR_ES));\r\n    this.switch_seg(reg_ss, this.safe_read16(new_tsr_offset + TSR_SS));\r\n    this.switch_seg(reg_ds, this.safe_read16(new_tsr_offset + TSR_DS));\r\n    this.switch_seg(reg_fs, this.safe_read16(new_tsr_offset + TSR_FS));\r\n    this.switch_seg(reg_gs, this.safe_read16(new_tsr_offset + TSR_GS));\r\n\r\n    this.instruction_pointer = this.get_seg(reg_cs) + new_eip | 0;\r\n\r\n    this.segment_offsets[reg_tr] = descriptor.base;\r\n    this.segment_limits[reg_tr] = descriptor.effective_limit;\r\n    this.sreg[reg_tr] = selector;\r\n\r\n    this.cr[3] = new_cr3;\r\n    dbg_assert((this.cr[3] & 0xFFF) === 0);\r\n    this.clear_tlb();\r\n\r\n    this.cr[0] |= CR0_TS;\r\n\r\n    if(error_code !== false)\r\n    {\r\n        if(tss_is_16)\r\n        {\r\n            this.push16(error_code & 0xFFFF);\r\n        }\r\n        else\r\n        {\r\n            this.push32(error_code);\r\n        }\r\n    }\r\n};\r\n\r\nCPU.prototype.hlt_op = function()\r\n{\r\n    if(this.cpl)\r\n    {\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    if((this.flags & flag_interrupt) === 0)\r\n    {\r\n        // this.debug.show(\"cpu halted\");\r\n        // this.bus.send(\"cpu-event-halt\");\r\n        // if(DEBUG) this.debug.dump_regs();\r\n        // throw \"HALT\";\r\n    }\r\n    else\r\n    {\r\n        // get out of here and into hlt_loop\r\n        this.in_hlt = true;\r\n\r\n        //if(false) // possibly unsafe, test in safari\r\n        //{\r\n        //    this.hlt_loop();\r\n        //    this.diverged();\r\n        //    if(this.in_hlt)\r\n        //    {\r\n        //        throw MAGIC_CPU_EXCEPTION;\r\n        //    }\r\n        //}\r\n        //else\r\n        {\r\n            throw MAGIC_CPU_EXCEPTION;\r\n        }\r\n    }\r\n};\r\n\r\n// assumes ip to point to the byte before the next instruction\r\nCPU.prototype.raise_exception = function(interrupt_nr)\r\n{\r\n    //if(DEBUG && interrupt_nr !== 7)\r\n    //{\r\n    //    // show interesting exceptions\r\n    //    dbg_log(\"Exception \" + h(interrupt_nr) + \" at \" + h(this.previous_ip >>> 0, 8) + \" (cs=\" + h(this.sreg[reg_cs], 4) + \")\", LOG_CPU);\r\n    //    dbg_trace(LOG_CPU);\r\n    //    this.debug.dump_regs();\r\n    //    this.debug.dump_state();\r\n    //}\r\n\r\n    this.call_interrupt_vector(interrupt_nr, false, false);\r\n    throw MAGIC_CPU_EXCEPTION;\r\n};\r\n\r\nCPU.prototype.raise_exception_with_code = function(interrupt_nr, error_code)\r\n{\r\n    dbg_assert(typeof error_code === \"number\");\r\n\r\n    //if(DEBUG)\r\n    //{\r\n    //    dbg_log(\"Exception \" + h(interrupt_nr) + \" err=\" + h(error_code) + \" at \" + h(this.previous_ip >>> 0, 8) + \" (cs=\" + h(this.sreg[reg_cs], 4) + \")\", LOG_CPU);\r\n    //    dbg_trace(LOG_CPU);\r\n    //    this.debug.dump_regs();\r\n    //}\r\n\r\n    this.call_interrupt_vector(interrupt_nr, false, error_code);\r\n    throw MAGIC_CPU_EXCEPTION;\r\n};\r\n\r\nCPU.prototype.trigger_de = function()\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception(0);\r\n};\r\n\r\nCPU.prototype.trigger_ud = function()\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception(6);\r\n};\r\n\r\nCPU.prototype.trigger_nm = function()\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception(7);\r\n};\r\n\r\nCPU.prototype.trigger_ts = function(code)\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception_with_code(10, code);\r\n};\r\n\r\nCPU.prototype.trigger_gp = function(code)\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception_with_code(13, code);\r\n};\r\n\r\nCPU.prototype.trigger_np = function(code)\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception_with_code(11, code);\r\n};\r\n\r\nCPU.prototype.trigger_ss = function(code)\r\n{\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.raise_exception_with_code(12, code);\r\n};\r\n\r\n// used before fpu instructions\r\nCPU.prototype.task_switch_test = function()\r\n{\r\n    if(this.cr[0] & (CR0_EM | CR0_TS))\r\n    {\r\n        this.trigger_nm();\r\n    }\r\n};\r\n\r\n// used before mmx instructions\r\nCPU.prototype.task_switch_test_mmx = function()\r\n{\r\n    if(this.cr[0] & (CR0_EM | CR0_TS))\r\n    {\r\n        if(this.cr[0] & CR0_TS)\r\n        {\r\n            this.trigger_nm();\r\n        }\r\n        else\r\n        {\r\n            this.trigger_ud();\r\n        }\r\n    }\r\n\r\n};\r\n\r\nCPU.prototype.todo = function()\r\n{\r\n    if(DEBUG)\r\n    {\r\n        dbg_trace();\r\n        throw \"TODO\";\r\n    }\r\n\r\n    this.trigger_ud();\r\n};\r\n\r\nCPU.prototype.undefined_instruction = function()\r\n{\r\n    dbg_assert(false, \"Possible fault: undefined instruction\");\r\n    this.trigger_ud();\r\n};\r\n\r\nCPU.prototype.unimplemented_sse = function()\r\n{\r\n    dbg_log(\"No SSE\", LOG_CPU);\r\n    dbg_assert(false);\r\n    this.trigger_ud();\r\n};\r\n\r\nCPU.prototype.get_seg_prefix_ds = function()\r\n{\r\n    return this.get_seg_prefix(reg_ds);\r\n};\r\n\r\nCPU.prototype.get_seg_prefix_ss = function()\r\n{\r\n    return this.get_seg_prefix(reg_ss);\r\n};\r\n\r\nCPU.prototype.get_seg_prefix_cs = function()\r\n{\r\n    return this.get_seg_prefix(reg_cs);\r\n};\r\n\r\n/**\r\n * Get segment base by prefix or default\r\n * @param {number} default_segment\r\n */\r\nCPU.prototype.get_seg_prefix = function(default_segment /*, offset*/)\r\n{\r\n    var prefix = this.prefixes & PREFIX_MASK_SEGMENT;\r\n\r\n    if(prefix)\r\n    {\r\n        if(prefix === SEG_PREFIX_ZERO)\r\n        {\r\n            return 0;\r\n        }\r\n        else\r\n        {\r\n            return this.get_seg(prefix - 1 /*, offset*/);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return this.get_seg(default_segment /*, offset*/);\r\n    }\r\n};\r\n\r\n/**\r\n * Get segment base\r\n * @param {number} segment\r\n */\r\nCPU.prototype.get_seg = function(segment /*, offset*/)\r\n{\r\n    dbg_assert(segment >= 0 && segment < 8);\r\n\r\n    if(this.protected_mode)\r\n    {\r\n        if(this.segment_is_null[segment])\r\n        {\r\n            dbg_assert(segment !== reg_cs && segment !== reg_ss);\r\n            dbg_trace();\r\n            dbg_log(\"#gp Use null segment: \" + segment + \" sel=\" + h(this.sreg[segment], 4), LOG_CPU);\r\n\r\n            this.trigger_gp(0);\r\n        }\r\n\r\n        // TODO:\r\n        // - validate segment limits\r\n        // - validate if segment is writable\r\n    }\r\n\r\n    return this.segment_offsets[segment];\r\n};\r\n\r\nCPU.prototype.read_e8 = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read8(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        return this.reg8[this.modrm_byte << 2 & 0xC | this.modrm_byte >> 2 & 1];\r\n    }\r\n};\r\n\r\nCPU.prototype.read_e8s = function()\r\n{\r\n    return this.read_e8() << 24 >> 24;\r\n};\r\n\r\nCPU.prototype.read_e16 = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read16(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        return this.reg16[this.modrm_byte << 1 & 14];\r\n    }\r\n};\r\n\r\nCPU.prototype.read_e16s = function()\r\n{\r\n    return this.read_e16() << 16 >> 16;\r\n};\r\n\r\nCPU.prototype.read_e32s = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read32s(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        return this.reg32s[this.modrm_byte & 7];\r\n    }\r\n};\r\n\r\nCPU.prototype.read_e32 = function()\r\n{\r\n    return this.read_e32s() >>> 0;\r\n};\r\n\r\nCPU.prototype.read_mmx_mem32s = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read32s(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        // Returning lower dword of qword\r\n        return this.reg_mmxs[2 * (this.modrm_byte & 7)];\r\n    }\r\n};\r\n\r\nCPU.prototype.read_mmx_mem64s = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read64s(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        return this.create_atom64s(\r\n            this.reg_mmxs[2 * (this.modrm_byte & 7)],\r\n            this.reg_mmxs[2 * (this.modrm_byte & 7) + 1]\r\n        );\r\n    }\r\n};\r\n\r\nCPU.prototype.read_xmm_mem64s = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read64s(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        let i = (this.modrm_byte & 7) << 2;\r\n        return this.create_atom64s(\r\n            this.reg_xmm32s[i],\r\n            this.reg_xmm32s[i | 1]\r\n        );\r\n    }\r\n};\r\n\r\nCPU.prototype.read_xmm_mem128s = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read128s_aligned(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        let i = (this.modrm_byte & 7) << 2;\r\n        return this.create_atom128s(\r\n            this.reg_xmm32s[i],\r\n            this.reg_xmm32s[i | 1],\r\n            this.reg_xmm32s[i | 2],\r\n            this.reg_xmm32s[i | 3]\r\n        );\r\n    }\r\n};\r\n\r\nCPU.prototype.read_xmm_mem128s_unaligned = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        return this.safe_read128s_unaligned(this.modrm_resolve(this.modrm_byte));\r\n    } else {\r\n        let i = (this.modrm_byte & 7) << 2;\r\n        return this.create_atom128s(\r\n            this.reg_xmm32s[i],\r\n            this.reg_xmm32s[i | 1],\r\n            this.reg_xmm32s[i | 2],\r\n            this.reg_xmm32s[i | 3]\r\n        );\r\n    }\r\n};\r\n\r\nCPU.prototype.set_e8 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var addr = this.modrm_resolve(this.modrm_byte);\r\n        this.safe_write8(addr, value);\r\n    } else {\r\n        this.reg8[this.modrm_byte << 2 & 0xC | this.modrm_byte >> 2 & 1] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.set_e16 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var addr = this.modrm_resolve(this.modrm_byte);\r\n        this.safe_write16(addr, value);\r\n    } else {\r\n        this.reg16[this.modrm_byte << 1 & 14] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.set_e32 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var addr = this.modrm_resolve(this.modrm_byte);\r\n        this.safe_write32(addr, value);\r\n    } else {\r\n        this.reg32s[this.modrm_byte & 7] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.set_mmx_mem64s = function(low, high)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var addr = this.modrm_resolve(this.modrm_byte);\r\n        this.safe_write64(addr, low, high);\r\n    } else {\r\n        this.reg_mmxs[2 * (this.modrm_byte & 7)] = low;\r\n        this.reg_mmxs[2 * (this.modrm_byte & 7) + 1] = high;\r\n    }\r\n};\r\n\r\nCPU.prototype.read_write_e8 = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var virt_addr = this.modrm_resolve(this.modrm_byte);\r\n        this.phys_addr = this.translate_address_write(virt_addr);\r\n        return this.read8(this.phys_addr);\r\n    } else {\r\n        return this.reg8[this.modrm_byte << 2 & 0xC | this.modrm_byte >> 2 & 1];\r\n    }\r\n};\r\n\r\nCPU.prototype.write_e8 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        this.write8(this.phys_addr, value);\r\n    }\r\n    else {\r\n        this.reg8[this.modrm_byte << 2 & 0xC | this.modrm_byte >> 2 & 1] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.read_write_e16 = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var virt_addr = this.modrm_resolve(this.modrm_byte);\r\n        this.phys_addr = this.translate_address_write(virt_addr);\r\n        if(this.paging && (virt_addr & 0xFFF) === 0xFFF) {\r\n            this.phys_addr_high = this.translate_address_write(virt_addr + 1 | 0);\r\n            dbg_assert(this.phys_addr_high);\r\n            return this.virt_boundary_read16(this.phys_addr, this.phys_addr_high);\r\n        } else {\r\n            this.phys_addr_high = 0;\r\n            return this.read16(this.phys_addr);\r\n        }\r\n    } else {\r\n        return this.reg16[this.modrm_byte << 1 & 14];\r\n    }\r\n};\r\n\r\nCPU.prototype.write_e16 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        if(this.phys_addr_high) {\r\n            this.virt_boundary_write16(this.phys_addr, this.phys_addr_high, value);\r\n        } else {\r\n            this.write16(this.phys_addr, value);\r\n        }\r\n    } else {\r\n        this.reg16[this.modrm_byte << 1 & 14] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.read_write_e32 = function()\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        var virt_addr = this.modrm_resolve(this.modrm_byte);\r\n        this.phys_addr = this.translate_address_write(virt_addr);\r\n        if(this.paging && (virt_addr & 0xFFF) >= 0xFFD) {\r\n            //this.phys_addr_high = this.translate_address_write(virt_addr + 3 | 0);\r\n            this.phys_addr_high = this.translate_address_write(virt_addr + 3 & ~3) | (virt_addr + 3) & 3;\r\n            dbg_assert(this.phys_addr_high);\r\n            return this.virt_boundary_read32s(this.phys_addr, this.phys_addr_high);\r\n        } else {\r\n            this.phys_addr_high = 0;\r\n            return this.read32s(this.phys_addr);\r\n        }\r\n    } else {\r\n        return this.reg32s[this.modrm_byte & 7];\r\n    }\r\n};\r\n\r\nCPU.prototype.write_e32 = function(value)\r\n{\r\n    if(this.modrm_byte < 0xC0) {\r\n        if(this.phys_addr_high) {\r\n            this.virt_boundary_write32(this.phys_addr, this.phys_addr_high, value);\r\n        } else {\r\n            this.write32(this.phys_addr, value);\r\n        }\r\n    } else {\r\n        this.reg32s[this.modrm_byte & 7] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.read_reg_e16 = function()\r\n{\r\n    return this.reg16[this.modrm_byte << 1 & 14];\r\n};\r\n\r\nCPU.prototype.write_reg_e16 = function(value)\r\n{\r\n    this.reg16[this.modrm_byte << 1 & 14] = value;\r\n};\r\n\r\nCPU.prototype.read_reg_e32s = function()\r\n{\r\n    return this.reg32s[this.modrm_byte & 7];\r\n};\r\n\r\nCPU.prototype.write_reg_e32 = function(value)\r\n{\r\n    this.reg32s[this.modrm_byte & 7] = value;\r\n};\r\n\r\nCPU.prototype.read_g8 = function()\r\n{\r\n    return this.reg8[this.modrm_byte >> 1 & 0xC | this.modrm_byte >> 5 & 1];\r\n};\r\n\r\nCPU.prototype.write_g8 = function(value)\r\n{\r\n    this.reg8[this.modrm_byte >> 1 & 0xC | this.modrm_byte >> 5 & 1] = value;\r\n};\r\n\r\nCPU.prototype.read_g16 = function()\r\n{\r\n    return this.reg16[this.modrm_byte >> 2 & 14];\r\n};\r\n\r\nCPU.prototype.read_g16s = function()\r\n{\r\n    return this.reg16s[this.modrm_byte >> 2 & 14];\r\n};\r\n\r\nCPU.prototype.write_g16 = function(value)\r\n{\r\n    this.reg16[this.modrm_byte >> 2 & 14] = value;\r\n};\r\n\r\nCPU.prototype.read_g32s = function()\r\n{\r\n    return this.reg32s[this.modrm_byte >> 3 & 7];\r\n};\r\n\r\nCPU.prototype.write_g32 = function(value)\r\n{\r\n    this.reg32[this.modrm_byte >> 3 & 7] = value;\r\n};\r\n\r\nCPU.prototype.read_xmm64s = function()\r\n{\r\n    return this.create_atom64s(\r\n        this.reg_xmm32s[(this.modrm_byte >> 3 & 7) << 2],\r\n        this.reg_xmm32s[(this.modrm_byte >> 3 & 7) << 2 | 1]\r\n    );\r\n};\r\n\r\nCPU.prototype.read_xmm128s = function()\r\n{\r\n    let i = (this.modrm_byte >> 3 & 7) << 2;\r\n    return this.create_atom128s(\r\n        this.reg_xmm32s[i | 0],\r\n        this.reg_xmm32s[i | 1],\r\n        this.reg_xmm32s[i | 2],\r\n        this.reg_xmm32s[i | 3]\r\n    );\r\n};\r\n\r\nCPU.prototype.read_mmx64s = function()\r\n{\r\n    return this.create_atom64s(\r\n        this.reg_mmxs[2 * (this.modrm_byte >> 3 & 7)],\r\n        this.reg_mmxs[2 * (this.modrm_byte >> 3 & 7) + 1]\r\n    );\r\n};\r\n\r\nCPU.prototype.write_mmx64s = function(low, high)\r\n{\r\n    this.reg_mmxs[2 * (this.modrm_byte >> 3 & 7)] = low;\r\n    this.reg_mmxs[2 * (this.modrm_byte >> 3 & 7) + 1] = high;\r\n};\r\n\r\nCPU.prototype.write_xmm64 = function(low, high)\r\n{\r\n    let i = (this.modrm_byte >> 3 & 7) << 2;\r\n    this.reg_xmm32s[i] = low;\r\n    this.reg_xmm32s[i + 1] = high;\r\n};\r\n\r\nCPU.prototype.write_xmm128s = function(d0, d1, d2, d3)\r\n{\r\n    let i = (this.modrm_byte >> 3 & 7) << 2;\r\n    this.reg_xmm32s[i] = d0;\r\n    this.reg_xmm32s[i + 1] = d1;\r\n    this.reg_xmm32s[i + 2] = d2;\r\n    this.reg_xmm32s[i + 3] = d3;\r\n};\r\n\r\nCPU.prototype.pic_call_irq = function(int)\r\n{\r\n    try\r\n    {\r\n        this.previous_ip = this.instruction_pointer;\r\n        this.call_interrupt_vector(int, false, false);\r\n    }\r\n    catch(e)\r\n    {\r\n        this.exception_cleanup(e);\r\n    }\r\n};\r\n\r\nCPU.prototype.handle_irqs = function()\r\n{\r\n    dbg_assert(!this.page_fault);\r\n\r\n    this.diverged();\r\n\r\n    if((this.flags & flag_interrupt) && !this.page_fault)\r\n    {\r\n        if(this.devices.pic)\r\n        {\r\n            this.devices.pic.acknowledge_irq();\r\n        }\r\n\r\n        if(this.devices.apic)\r\n        {\r\n            this.devices.apic.acknowledge_irq();\r\n        }\r\n    }\r\n};\r\n\r\nCPU.prototype.device_raise_irq = function(i)\r\n{\r\n    dbg_assert(arguments.length === 1);\r\n    if(this.devices.pic)\r\n    {\r\n        this.devices.pic.set_irq(i);\r\n    }\r\n\r\n    if(this.devices.ioapic)\r\n    {\r\n        this.devices.ioapic.set_irq(i);\r\n    }\r\n};\r\n\r\nCPU.prototype.device_lower_irq = function(i)\r\n{\r\n    if(this.devices.pic)\r\n    {\r\n        this.devices.pic.clear_irq(i);\r\n    }\r\n\r\n    if(this.devices.ioapic)\r\n    {\r\n        this.devices.ioapic.clear_irq(i);\r\n    }\r\n};\r\n\r\nCPU.prototype.test_privileges_for_io = function(port, size)\r\n{\r\n    if(this.protected_mode && (this.cpl > this.getiopl() || (this.flags & flag_vm)))\r\n    {\r\n        if(!this.tss_size_32)\r\n        {\r\n            dbg_log(\"#GP for port io, 16-bit TSS  port=\" + h(port) + \" size=\" + size, LOG_CPU);\r\n            CPU_LOG_VERBOSE && this.debug.dump_state();\r\n            this.trigger_gp(0);\r\n        }\r\n\r\n        var tsr_size = this.segment_limits[reg_tr];\r\n        var tsr_offset = this.segment_offsets[reg_tr];\r\n\r\n        if(tsr_size >= 0x67)\r\n        {\r\n            dbg_assert((tsr_offset + 0x64 + 2 & 0xFFF) < 0xFFF);\r\n\r\n            var iomap_base = this.read16(this.translate_address_system_read(tsr_offset + 0x64 + 2 | 0)),\r\n                high_port = port + size - 1 | 0;\r\n\r\n            if(tsr_size >= (iomap_base + (high_port >> 3) | 0))\r\n            {\r\n                var mask = ((1 << size) - 1) << (port & 7),\r\n                    addr = this.translate_address_system_read(tsr_offset + iomap_base + (port >> 3) | 0),\r\n                    port_info = (mask & 0xFF00) ?\r\n                        this.read16(addr) : this.read8(addr);\r\n\r\n                dbg_assert((addr & 0xFFF) < 0xFFF);\r\n\r\n                if(!(port_info & mask))\r\n                {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        dbg_log(\"#GP for port io  port=\" + h(port) + \" size=\" + size, LOG_CPU);\r\n        CPU_LOG_VERBOSE && this.debug.dump_state();\r\n        this.trigger_gp(0);\r\n    }\r\n};\r\n\r\nCPU.prototype.cpuid = function()\r\n{\r\n    // cpuid\r\n    // TODO: Fill in with less bogus values\r\n\r\n    // http://lxr.linux.no/linux+%2a/arch/x86/include/asm/cpufeature.h\r\n    // http://www.sandpile.org/x86/cpuid.htm\r\n\r\n    var eax = 0;\r\n    var ecx = 0;\r\n    var edx = 0;\r\n    var ebx = 0;\r\n\r\n    switch(this.reg32s[reg_eax])\r\n    {\r\n        case 0:\r\n            // maximum supported level\r\n            if(this.winnt_fix)\r\n            {\r\n                eax = 2;\r\n            }\r\n            else\r\n            {\r\n                eax = 5;\r\n            }\r\n\r\n            ebx = 0x756E6547|0; // Genu\r\n            edx = 0x49656E69|0; // ineI\r\n            ecx = 0x6C65746E|0; // ntel\r\n            break;\r\n\r\n        case 1:\r\n            // pentium\r\n            eax = 3 | 6 << 4 | 15 << 8;\r\n            ebx = 1 << 16 | 8 << 8; // cpu count, clflush size\r\n            ecx = 1 << 23 | 1 << 30; // popcnt, rdrand\r\n            var vme = 0 << 1;\r\n            if(VMWARE_HYPERVISOR_PORT) ecx |= 1 << 31; // hypervisor\r\n            edx = (this.fpu ? 1 : 0) |                // fpu\r\n                    vme | 1 << 3 | 1 << 4 | 1 << 5 |   // vme, pse, tsc, msr\r\n                    1 << 8 | 1 << 11 | 1 << 13 | 1 << 15 | // cx8, sep, pge, cmov\r\n                    0 << 23 | 0 << 24 | 0 << 25 | 0 << 26;   // mmx, fxsr, sse, sse2\r\n\r\n            if(ENABLE_ACPI && this.apic_enabled)\r\n            {\r\n                edx |= 1 << 9; // apic\r\n            }\r\n            break;\r\n\r\n        case 2:\r\n            // Taken from http://siyobik.info.gf/main/reference/instruction/CPUID\r\n            eax = 0x665B5001|0;\r\n            ebx = 0;\r\n            ecx = 0;\r\n            edx = 0x007A7000;\r\n            break;\r\n\r\n        case 4:\r\n            // from my local machine\r\n            switch(this.reg32s[reg_ecx])\r\n            {\r\n                case 0:\r\n                    eax = 0x00000121;\r\n                    ebx = 0x01c0003f;\r\n                    ecx = 0x0000003f;\r\n                    edx = 0x00000001;\r\n                    break;\r\n                case 1:\r\n                    eax = 0x00000122;\r\n                    ebx = 0x01c0003f;\r\n                    ecx = 0x0000003f;\r\n                    edx = 0x00000001;\r\n                    break;\r\n                case 2:\r\n                    eax = 0x00000143;\r\n                    ebx = 0x05c0003f;\r\n                    ecx = 0x00000fff;\r\n                    edx = 0x00000001;\r\n                    break;\r\n            }\r\n            break;\r\n\r\n        case 5:\r\n            // from my local machine\r\n            eax = 0x40;\r\n            ebx = 0x40;\r\n            ecx = 3;\r\n            edx = 0x00142120;\r\n            break;\r\n\r\n        case 0x80000000|0:\r\n            // maximum supported extended level\r\n            eax = 5;\r\n            // other registers are reserved\r\n            break;\r\n\r\n        case 0x40000000|0: // hypervisor\r\n            if(VMWARE_HYPERVISOR_PORT)\r\n            {\r\n                // h(\"Ware\".split(\"\").reduce((a, c, i) => a | c.charCodeAt(0) << i * 8, 0))\r\n                ebx = 0x61774D56|0; // VMwa\r\n                ecx = 0x4D566572|0; // reVM\r\n                edx = 0x65726177|0; // ware\r\n            }\r\n            break;\r\n\r\n        default:\r\n            dbg_log(\"cpuid: unimplemented eax: \" + h(this.reg32[reg_eax]), LOG_CPU);\r\n    }\r\n\r\n    dbg_log(\"cpuid: eax=\" + h(this.reg32[reg_eax], 8) + \" cl=\" + h(this.reg8[reg_cl], 2), LOG_CPU);\r\n\r\n    this.reg32s[reg_eax] = eax;\r\n    this.reg32s[reg_ecx] = ecx;\r\n    this.reg32s[reg_edx] = edx;\r\n    this.reg32s[reg_ebx] = ebx;\r\n};\r\n\r\nCPU.prototype.update_cs_size = function(new_size)\r\n{\r\n    dbg_assert(typeof new_size === \"boolean\");\r\n\r\n    if(this.is_32 !== new_size)\r\n    {\r\n        this.clear_instruction_cache();\r\n        this.is_32 = new_size;\r\n        this.update_operand_size();\r\n    }\r\n};\r\n\r\nCPU.prototype.update_operand_size = function()\r\n{\r\n    if(this.is_32)\r\n    {\r\n        this.table = this.table32;\r\n    }\r\n    else\r\n    {\r\n        this.table = this.table16;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {number} selector\r\n */\r\nCPU.prototype.lookup_segment_selector = function(selector)\r\n{\r\n    dbg_assert(typeof selector === \"number\" && selector >= 0 && selector < 0x10000);\r\n\r\n    var is_gdt = (selector & 4) === 0,\r\n        selector_offset = selector & ~7,\r\n        info,\r\n        table_offset,\r\n        table_limit;\r\n\r\n    info = {\r\n        rpl: selector & 3,\r\n        from_gdt: is_gdt,\r\n        is_null: false,\r\n        is_valid: true,\r\n\r\n        base: 0,\r\n        access: 0,\r\n        flags: 0,\r\n        type: 0,\r\n        dpl: 0,\r\n        is_system: false,\r\n        is_present: false,\r\n        is_executable: false,\r\n        rw_bit: false,\r\n        dc_bit: false,\r\n        size: false,\r\n\r\n        is_conforming_executable: false,\r\n\r\n        // limit after applying granularity\r\n        effective_limit: 0,\r\n\r\n        is_writable: false,\r\n        is_readable: false,\r\n        table_offset: 0,\r\n\r\n        raw0: 0,\r\n        raw1: 0,\r\n    };\r\n\r\n    if(is_gdt)\r\n    {\r\n        table_offset = this.gdtr_offset;\r\n        table_limit = this.gdtr_size;\r\n    }\r\n    else\r\n    {\r\n        table_offset = this.segment_offsets[reg_ldtr];\r\n        table_limit = this.segment_limits[reg_ldtr];\r\n    }\r\n\r\n    if(is_gdt && selector_offset === 0)\r\n    {\r\n        info.is_null = true;\r\n        return info;\r\n    }\r\n\r\n    // limit is the number of entries in the table minus one\r\n    if((selector | 7) > table_limit)\r\n    {\r\n        dbg_log(\"Selector \" + h(selector, 4) + \" is outside of the \" +\r\n            (is_gdt ? \"g\" : \"l\") + \"dt limits\", LOG_CPU);\r\n        info.is_valid = false;\r\n        return info;\r\n    }\r\n\r\n    table_offset = table_offset + selector_offset | 0;\r\n\r\n    if(this.paging)\r\n    {\r\n        table_offset = this.translate_address_system_read(table_offset);\r\n    }\r\n    info.table_offset = table_offset;\r\n\r\n    info.base = this.read16(table_offset + 2 | 0) | this.read8(table_offset + 4 | 0) << 16 |\r\n                this.read8(table_offset + 7 | 0) << 24;\r\n    info.access = this.read8(table_offset + 5 | 0);\r\n    info.flags = this.read8(table_offset + 6 | 0) >> 4;\r\n\r\n    info.raw0 = this.read32s(table_offset     | 0);\r\n    info.raw1 = this.read32s(table_offset + 4 | 0);\r\n\r\n    //this.write8(table_offset + 5 | 0, info.access | 1);\r\n\r\n    // used if system\r\n    info.type = info.access & 0xF;\r\n\r\n    info.dpl = info.access >> 5 & 3;\r\n\r\n    info.is_system = (info.access & 0x10) === 0;\r\n    info.is_present = (info.access & 0x80) === 0x80;\r\n    info.is_executable = (info.access & 8) === 8;\r\n\r\n    info.rw_bit = (info.access & 2) === 2;\r\n    info.dc_bit = (info.access & 4) === 4;\r\n\r\n    info.is_conforming_executable = info.dc_bit && info.is_executable;\r\n\r\n    info.size = (info.flags & 4) === 4;\r\n\r\n    var limit = this.read16(table_offset) |\r\n                (this.read8(table_offset + 6 | 0) & 0xF) << 16;\r\n\r\n    if(info.flags & 8)\r\n    {\r\n        // granularity set\r\n        info.effective_limit = (limit << 12 | 0xFFF) >>> 0;\r\n    }\r\n    else\r\n    {\r\n        info.effective_limit = limit;\r\n    }\r\n\r\n    info.is_writable = info.rw_bit && !info.is_executable;\r\n    info.is_readable = info.rw_bit || !info.is_executable;\r\n\r\n    return info;\r\n};\r\n\r\n/**\r\n * @param {number} reg\r\n * @param {number} selector\r\n */\r\nCPU.prototype.switch_seg = function(reg, selector)\r\n{\r\n    dbg_assert(reg >= 0 && reg <= 5);\r\n    dbg_assert(typeof selector === \"number\" && selector < 0x10000 && selector >= 0);\r\n\r\n    if(!this.protected_mode || this.vm86_mode())\r\n    {\r\n        this.sreg[reg] = selector;\r\n        this.segment_is_null[reg] = 0;\r\n        this.segment_offsets[reg] = selector << 4;\r\n\r\n        if(reg === reg_ss)\r\n        {\r\n            this.stack_size_32 = false;\r\n        }\r\n        return;\r\n    }\r\n\r\n    var info = this.lookup_segment_selector(selector);\r\n\r\n    if(reg === reg_ss)\r\n    {\r\n        if(info.is_null)\r\n        {\r\n            dbg_log(\"#GP for loading 0 in SS sel=\" + h(selector, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(0);\r\n        }\r\n\r\n        if(!info.is_valid ||\r\n           info.is_system ||\r\n           info.rpl !== this.cpl ||\r\n           !info.is_writable ||\r\n           info.dpl !== this.cpl)\r\n        {\r\n            dbg_log(\"#GP for loading invalid in SS sel=\" + h(selector, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(selector & ~3);\r\n        }\r\n\r\n        if(!info.is_present)\r\n        {\r\n            dbg_log(\"#SS for loading non-present in SS sel=\" + h(selector, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_ss(selector & ~3);\r\n        }\r\n\r\n        this.stack_size_32 = info.size;\r\n    }\r\n    else if(reg === reg_cs)\r\n    {\r\n        // handled by switch_cs_real_mode, far_return or far_jump\r\n        dbg_assert(false);\r\n    }\r\n    else\r\n    {\r\n        // es, ds, fs, gs\r\n        if(info.is_null)\r\n        {\r\n            //dbg_log(\"0 loaded in seg=\" + reg + \" sel=\" + h(selector, 4), LOG_CPU);\r\n            //dbg_trace(LOG_CPU);\r\n            this.sreg[reg] = selector;\r\n            this.segment_is_null[reg] = 1;\r\n            return;\r\n        }\r\n\r\n        if(!info.is_valid ||\r\n           info.is_system ||\r\n           !info.is_readable ||\r\n           (!info.is_conforming_executable &&\r\n            (info.rpl > info.dpl || this.cpl > info.dpl))\r\n        ) {\r\n            dbg_log(\"#GP for loading invalid in seg \" + reg + \" sel=\" + h(selector, 4), LOG_CPU);\r\n            this.debug.dump_state();\r\n            this.debug.dump_regs();\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_gp(selector & ~3);\r\n        }\r\n\r\n        if(!info.is_present)\r\n        {\r\n            dbg_log(\"#NP for loading not-present in seg \" + reg + \" sel=\" + h(selector, 4), LOG_CPU);\r\n            dbg_trace(LOG_CPU);\r\n            this.trigger_np(selector & ~3);\r\n        }\r\n    }\r\n\r\n    this.segment_is_null[reg] = 0;\r\n    this.segment_limits[reg] = info.effective_limit;\r\n    //this.segment_infos[reg] = 0; // TODO\r\n\r\n    this.segment_offsets[reg] = info.base;\r\n    this.sreg[reg] = selector;\r\n};\r\n\r\nCPU.prototype.load_tr = function(selector)\r\n{\r\n    var info = this.lookup_segment_selector(selector);\r\n\r\n    dbg_assert(info.is_valid);\r\n    //dbg_log(\"load tr: \" + h(selector, 4) + \" offset=\" + h(info.base >>> 0, 8) + \" limit=\" + h(info.effective_limit >>> 0, 8), LOG_CPU);\r\n\r\n    if(!info.from_gdt)\r\n    {\r\n        throw this.debug.unimpl(\"TR can only be loaded from GDT\");\r\n    }\r\n\r\n    if(info.is_null)\r\n    {\r\n        dbg_log(\"#GP(0) | tried to load null selector (ltr)\");\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if(!info.is_system)\r\n    {\r\n        dbg_log(\"#GP | ltr: not a system entry\");\r\n        throw this.debug.unimpl(\"#GP handler (happens when running kvm-unit-test without ACPI)\");\r\n    }\r\n\r\n    if(info.type !== 9 && info.type !== 1)\r\n    {\r\n        // 0xB: busy 386 TSS (GP)\r\n        // 0x9: 386 TSS\r\n        // 0x3: busy 286 TSS (GP)\r\n        // 0x1: 286 TSS (??)\r\n        dbg_log(\"#GP | ltr: invalid type (type = \" + h(info.type) + \")\");\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if(!info.is_present)\r\n    {\r\n        dbg_log(\"#NT | present bit not set (ltr)\");\r\n        throw this.debug.unimpl(\"#NT handler\");\r\n    }\r\n\r\n    this.tss_size_32 = info.type === 9;\r\n    this.segment_offsets[reg_tr] = info.base;\r\n    this.segment_limits[reg_tr] = info.effective_limit;\r\n    this.sreg[reg_tr] = selector;\r\n\r\n    // Mark task as busy\r\n    this.write8(info.table_offset + 5 | 0, this.read8(info.table_offset + 5 | 0) | 2);\r\n\r\n    //dbg_log(\"tsr at \" + h(info.base) + \"; (\" + info.effective_limit + \" bytes)\");\r\n};\r\n\r\nCPU.prototype.load_ldt = function(selector)\r\n{\r\n    var info = this.lookup_segment_selector(selector);\r\n\r\n    if(info.is_null)\r\n    {\r\n        // invalid\r\n        this.segment_offsets[reg_ldtr] = 0;\r\n        this.segment_limits[reg_ldtr] = 0;\r\n        return;\r\n    }\r\n\r\n    dbg_assert(info.is_valid);\r\n\r\n    if(!info.from_gdt)\r\n    {\r\n        throw this.debug.unimpl(\"LDTR can only be loaded from GDT\");\r\n    }\r\n\r\n    if(!info.is_present)\r\n    {\r\n        dbg_log(\"lldt: present bit not set\");\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if(!info.is_system)\r\n    {\r\n        dbg_log(\"lldt: not a system entry\");\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    if(info.type !== 2)\r\n    {\r\n        dbg_log(\"lldt: invalid type (\" + info.type + \")\");\r\n        throw this.debug.unimpl(\"#GP handler\");\r\n    }\r\n\r\n    this.segment_offsets[reg_ldtr] = info.base;\r\n    this.segment_limits[reg_ldtr] = info.effective_limit;\r\n    this.sreg[reg_ldtr] = selector;\r\n\r\n    //dbg_log(\"ldt at \" + h(info.base >>> 0) + \"; (\" + info.effective_limit + \" bytes)\", LOG_CPU);\r\n};\r\n\r\nCPU.prototype.arpl = function(seg, r16)\r\n{\r\n    this.flags_changed &= ~flag_zero;\r\n\r\n    if((seg & 3) < (this.reg16[r16] & 3))\r\n    {\r\n        this.flags |= flag_zero;\r\n        return seg & ~3 | this.reg16[r16] & 3;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_zero;\r\n        return seg;\r\n    }\r\n};\r\n\r\nCPU.prototype.lar = function(selector, original)\r\n{\r\n    dbg_log(\"lar sel=\" + h(selector, 4), LOG_CPU);\r\n\r\n    /** @const */\r\n    var LAR_INVALID_TYPE = 1 << 0 | 1 << 6 | 1 << 7 | 1 << 8 | 1 << 0xA |\r\n                           1 << 0xD | 1 << 0xE | 1 << 0xF;\r\n\r\n    var info = this.lookup_segment_selector(selector);\r\n    this.flags_changed &= ~flag_zero;\r\n\r\n    var dpl_bad = info.dpl < this.cpl || info.dpl < info.rpl;\r\n\r\n    if(info.is_null || !info.is_valid ||\r\n       (info.is_system ? (LAR_INVALID_TYPE >> info.type & 1) || dpl_bad :\r\n                         !info.is_conforming_executable && dpl_bad)\r\n    ) {\r\n        this.flags &= ~flag_zero;\r\n        dbg_log(\"lar: invalid selector=\" + h(selector, 4) + \" is_null=\" + info.is_null, LOG_CPU);\r\n        return original;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= flag_zero;\r\n        return info.raw1 & 0x00FFFF00;\r\n    }\r\n};\r\n\r\nCPU.prototype.lsl = function(selector, original)\r\n{\r\n    dbg_log(\"lsl sel=\" + h(selector, 4), LOG_CPU);\r\n\r\n    /** @const */\r\n    var LSL_INVALID_TYPE = 1 << 0 | 1 << 4 | 1 << 5 | 1 << 6 | 1 << 8 |\r\n                           1 << 0xA | 1 << 0xC | 1 << 0xD | 1 << 0xE | 1 << 0xF;\r\n\r\n    var info = this.lookup_segment_selector(selector);\r\n    this.flags_changed &= ~flag_zero;\r\n\r\n    var dpl_bad = info.dpl < this.cpl || info.dpl < info.rpl;\r\n\r\n    if(info.is_null || !info.is_valid ||\r\n       (info.is_system ? (LSL_INVALID_TYPE >> info.type & 1) || dpl_bad :\r\n                         !info.is_conforming_executable && dpl_bad)\r\n    ) {\r\n        this.flags &= ~flag_zero;\r\n        dbg_log(\"lsl: invalid  selector=\" + h(selector, 4) + \" is_null=\" + info.is_null, LOG_CPU);\r\n        return original;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= flag_zero;\r\n        return info.effective_limit | 0;\r\n    }\r\n\r\n};\r\n\r\nCPU.prototype.verr = function(selector)\r\n{\r\n    var info = this.lookup_segment_selector(selector);\r\n    this.flags_changed &= ~flag_zero;\r\n\r\n    if(info.is_null || !info.is_valid || info.is_system || !info.is_readable ||\r\n       (!info.is_conforming_executable && (info.dpl < this.cpl || info.dpl < info.rpl)))\r\n    {\r\n        dbg_log(\"verr -> invalid. selector=\" + h(selector, 4), LOG_CPU);\r\n        this.flags &= ~flag_zero;\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"verr -> valid. selector=\" + h(selector, 4), LOG_CPU);\r\n        this.flags |= flag_zero;\r\n    }\r\n};\r\n\r\nCPU.prototype.verw = function(selector)\r\n{\r\n    var info = this.lookup_segment_selector(selector);\r\n    this.flags_changed &= ~flag_zero;\r\n\r\n    if(info.is_null || !info.is_valid || info.is_system || !info.is_writable ||\r\n       info.dpl < this.cpl || info.dpl < info.rpl)\r\n    {\r\n        dbg_log(\"verw invalid \" + \" \" + h(selector) + \" \" + info.is_null + \" \" +\r\n                !info.is_valid + \" \" + info.is_system + \" \" + !info.is_writable + \" \" +\r\n                (info.dpl < this.cpl) + \" \" + (info.dpl < info.rpl) + \" \" + LOG_CPU);\r\n        this.flags &= ~flag_zero;\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"verw valid\", LOG_CPU);\r\n        this.flags |= flag_zero;\r\n    }\r\n};\r\n\r\nCPU.prototype.clear_tlb = function()\r\n{\r\n    // clear tlb excluding global pages\r\n    this.last_virt_eip = -1;\r\n    this.last_virt_esp = -1;\r\n\r\n    this.tlb_info.set(this.tlb_info_global);\r\n\r\n    //dbg_log(\"page table loaded\", LOG_CPU);\r\n};\r\n\r\nCPU.prototype.full_clear_tlb = function()\r\n{\r\n    //dbg_log(\"TLB full clear\", LOG_CPU);\r\n\r\n    // clear tlb including global pages\r\n    var buf32 = new Int32Array(this.tlb_info_global.buffer);\r\n    for(var i = 0; i < (1 << 18); )\r\n    {\r\n        buf32[i++] = buf32[i++] = buf32[i++] = buf32[i++] = 0;\r\n    }\r\n\r\n    this.clear_tlb();\r\n};\r\n\r\nCPU.prototype.invlpg = function(addr)\r\n{\r\n    var page = addr >>> 12;\r\n    //dbg_log(\"invlpg: addr=\" + h(addr >>> 0), LOG_CPU);\r\n\r\n    this.tlb_info[page] = 0;\r\n    this.tlb_info_global[page] = 0;\r\n\r\n    this.last_virt_eip = -1;\r\n    this.last_virt_esp = -1;\r\n};\r\n\r\nCPU.prototype.translate_address_read = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    if(this.cpl === 3)\r\n    {\r\n        return this.translate_address_user_read(addr);\r\n    }\r\n    else\r\n    {\r\n        return this.translate_address_system_read(addr);\r\n    }\r\n};\r\n\r\nCPU.prototype.translate_address_write = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    if(this.cpl === 3)\r\n    {\r\n        return this.translate_address_user_write(addr);\r\n    }\r\n    else\r\n    {\r\n        return this.translate_address_system_write(addr);\r\n    }\r\n};\r\n\r\nCPU.prototype.translate_address_user_write = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    var base = addr >>> 12;\r\n\r\n    if(this.tlb_info[base] & TLB_USER_WRITE)\r\n    {\r\n        return this.tlb_data[base] ^ addr;\r\n    }\r\n    else\r\n    {\r\n        return this.do_page_translation(addr, 1, 1) | addr & 0xFFF;\r\n    }\r\n};\r\n\r\nCPU.prototype.translate_address_user_read = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    var base = addr >>> 12;\r\n\r\n    if(this.tlb_info[base] & TLB_USER_READ)\r\n    {\r\n        return this.tlb_data[base] ^ addr;\r\n    }\r\n    else\r\n    {\r\n        return this.do_page_translation(addr, 0, 1) | addr & 0xFFF;\r\n    }\r\n};\r\n\r\nCPU.prototype.translate_address_system_write = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    var base = addr >>> 12;\r\n\r\n    if(this.tlb_info[base] & TLB_SYSTEM_WRITE)\r\n    {\r\n        return this.tlb_data[base] ^ addr;\r\n    }\r\n    else\r\n    {\r\n        return this.do_page_translation(addr, 1, 0) | addr & 0xFFF;\r\n    }\r\n};\r\n\r\nCPU.prototype.translate_address_system_read = function(addr)\r\n{\r\n    if(!this.paging)\r\n    {\r\n        return addr;\r\n    }\r\n\r\n    var base = addr >>> 12;\r\n\r\n    if(this.tlb_info[base] & TLB_SYSTEM_READ)\r\n    {\r\n        return this.tlb_data[base] ^ addr;\r\n    }\r\n    else\r\n    {\r\n        return this.do_page_translation(addr, 0, 0) | addr & 0xFFF;\r\n    }\r\n};\r\n\r\n/**\r\n * @return {number}\r\n */\r\nCPU.prototype.do_page_translation = function(addr, for_writing, user)\r\n{\r\n    var page = addr >>> 12,\r\n        page_dir_addr = (this.cr[3] >>> 2) + (page >> 10) | 0,\r\n        page_dir_entry = this.mem32s[page_dir_addr],\r\n        high,\r\n        can_write = true,\r\n        global,\r\n        cachable = true,\r\n        allow_user = true;\r\n\r\n    dbg_assert(addr < 0x80000000);\r\n\r\n    if(!(page_dir_entry & 1))\r\n    {\r\n        // to do at this place:\r\n        //\r\n        // - set cr2 = addr (which caused the page fault)\r\n        // - call_interrupt_vector  with id 14, error code 0-7 (requires information if read or write)\r\n        // - prevent execution of the function that triggered this call\r\n        //dbg_log(\"#PF not present\", LOG_CPU);\r\n\r\n        this.cr[2] = addr;\r\n        this.trigger_pagefault(for_writing, user, 0);\r\n\r\n        // never reached as this.trigger_pagefault throws up\r\n        dbg_assert(false);\r\n    }\r\n\r\n    if((page_dir_entry & 2) === 0)\r\n    {\r\n        can_write = false;\r\n\r\n        if(for_writing && (user || (this.cr[0] & CR0_WP)))\r\n        {\r\n            this.cr[2] = addr;\r\n            this.trigger_pagefault(for_writing, user, 1);\r\n            dbg_assert(false);\r\n        }\r\n    }\r\n\r\n    if((page_dir_entry & 4) === 0)\r\n    {\r\n        allow_user = false;\r\n\r\n        if(user)\r\n        {\r\n            // \"Page Fault: page table accessed by non-supervisor\";\r\n            //dbg_log(\"#PF supervisor\", LOG_CPU);\r\n            this.cr[2] = addr;\r\n            this.trigger_pagefault(for_writing, user, 1);\r\n            dbg_assert(false);\r\n        }\r\n    }\r\n\r\n    if(page_dir_entry & this.page_size_extensions)\r\n    {\r\n        // size bit is set\r\n\r\n        // set the accessed and dirty bits\r\n        this.mem32s[page_dir_addr] = page_dir_entry | 0x20 | for_writing << 6;\r\n\r\n        high = (page_dir_entry & 0xFFC00000) | (addr & 0x3FF000);\r\n        global = page_dir_entry & 0x100;\r\n    }\r\n    else\r\n    {\r\n        var page_table_addr = ((page_dir_entry & 0xFFFFF000) >>> 2) + (page & 0x3FF) | 0,\r\n            page_table_entry = this.mem32s[page_table_addr];\r\n\r\n        if((page_table_entry & 1) === 0)\r\n        {\r\n            //dbg_log(\"#PF not present table\", LOG_CPU);\r\n            this.cr[2] = addr;\r\n            this.trigger_pagefault(for_writing, user, 0);\r\n            dbg_assert(false);\r\n        }\r\n\r\n        if((page_table_entry & 2) === 0)\r\n        {\r\n            can_write = false;\r\n\r\n            if(for_writing && (user || (this.cr[0] & CR0_WP)))\r\n            {\r\n                //dbg_log(\"#PF not writable page\", LOG_CPU);\r\n                this.cr[2] = addr;\r\n                this.trigger_pagefault(for_writing, user, 1);\r\n                dbg_assert(false);\r\n            }\r\n        }\r\n\r\n        if((page_table_entry & 4) === 0)\r\n        {\r\n            allow_user = false;\r\n\r\n            if(user)\r\n            {\r\n                //dbg_log(\"#PF not supervisor page\", LOG_CPU);\r\n                this.cr[2] = addr;\r\n                this.trigger_pagefault(for_writing, user, 1);\r\n                dbg_assert(false);\r\n            }\r\n        }\r\n\r\n        // set the accessed and dirty bits\r\n        this.write_aligned32(page_dir_addr, page_dir_entry | 0x20);\r\n        this.write_aligned32(page_table_addr, page_table_entry | 0x20 | for_writing << 6);\r\n\r\n        high = page_table_entry & 0xFFFFF000;\r\n        global = page_table_entry & 0x100;\r\n    }\r\n\r\n    this.tlb_data[page] = high ^ page << 12;\r\n\r\n    var allowed_flag;\r\n\r\n    if(allow_user)\r\n    {\r\n        if(can_write)\r\n        {\r\n            allowed_flag = TLB_SYSTEM_READ | TLB_SYSTEM_WRITE | TLB_USER_READ | TLB_USER_WRITE;\r\n        }\r\n        else\r\n        {\r\n            // TODO: Consider if cr0.wp is not set\r\n            allowed_flag = TLB_SYSTEM_READ | TLB_USER_READ;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(can_write)\r\n        {\r\n            allowed_flag = TLB_SYSTEM_READ | TLB_SYSTEM_WRITE;\r\n        }\r\n        else\r\n        {\r\n            allowed_flag = TLB_SYSTEM_READ;\r\n        }\r\n    }\r\n\r\n    this.tlb_info[page] = allowed_flag;\r\n\r\n    if(global && (this.cr[4] & CR4_PGE))\r\n    {\r\n        this.tlb_info_global[page] = allowed_flag;\r\n    }\r\n\r\n    return high;\r\n};\r\n\r\nCPU.prototype.writable_or_pagefault = function(addr, size)\r\n{\r\n    dbg_assert(size < 0x1000, \"not supported yet\");\r\n    dbg_assert(size > 0);\r\n\r\n    if(!this.paging)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var user = this.cpl === 3 ? 1 : 0,\r\n        mask = user ? TLB_USER_WRITE : TLB_SYSTEM_WRITE,\r\n        page = addr >>> 12;\r\n\r\n    if((this.tlb_info[page] & mask) === 0)\r\n    {\r\n        this.do_page_translation(addr, 1, user);\r\n    }\r\n\r\n    if((addr & 0xFFF) + size - 1 >= 0x1000)\r\n    {\r\n        if((this.tlb_info[page + 1 | 0] & mask) === 0)\r\n        {\r\n            this.do_page_translation(addr + size - 1 | 0, 1, user);\r\n        }\r\n    }\r\n};\r\n\r\nCPU.prototype.trigger_pagefault = function(write, user, present)\r\n{\r\n    if(LOG_PAGE_FAULTS)\r\n    {\r\n        dbg_log(\"page fault w=\" + write + \" u=\" + user + \" p=\" + present +\r\n                \" eip=\" + h(this.previous_ip >>> 0, 8) +\r\n                \" cr2=\" + h(this.cr[2] >>> 0, 8), LOG_CPU);\r\n        dbg_trace(LOG_CPU);\r\n    }\r\n\r\n    if(this.page_fault)\r\n    {\r\n        dbg_trace(LOG_CPU);\r\n        throw this.debug.unimpl(\"Double fault\");\r\n    }\r\n\r\n    // invalidate tlb entry\r\n    var page = this.cr[2] >>> 12;\r\n    this.tlb_info[page] = 0;\r\n    this.tlb_info_global[page] = 0;\r\n\r\n    this.instruction_pointer = this.previous_ip;\r\n    this.page_fault = true;\r\n    this.call_interrupt_vector(14, false, user << 2 | write << 1 | present);\r\n\r\n    throw MAGIC_CPU_EXCEPTION;\r\n};\r\n\r\nCPU.prototype.is_osize_32 = function()\r\n{\r\n    return this.is_32 !== ((this.prefixes & PREFIX_MASK_OPSIZE) === PREFIX_MASK_OPSIZE);\r\n};\r\n\r\nCPU.prototype.is_asize_32 = function()\r\n{\r\n    return this.is_32 !== ((this.prefixes & PREFIX_MASK_ADDRSIZE) === PREFIX_MASK_ADDRSIZE);\r\n};\r\n\r\nCPU.prototype.get_reg_asize = function(reg)\r\n{\r\n    dbg_assert(reg === reg_ecx || reg === reg_esi || reg === reg_edi);\r\n    var r = this.reg32s[reg];\r\n\r\n    if(this.is_asize_32())\r\n    {\r\n        return r;\r\n    }\r\n    else\r\n    {\r\n        return r & 0xFFFF;\r\n    }\r\n};\r\n\r\nCPU.prototype.set_ecx_asize = function(value)\r\n{\r\n    if(this.is_asize_32())\r\n    {\r\n        this.reg32s[reg_ecx] = value;\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg_cx] = value;\r\n    }\r\n};\r\n\r\nCPU.prototype.add_reg_asize = function(reg, value)\r\n{\r\n    dbg_assert(reg === reg_ecx || reg === reg_esi || reg === reg_edi);\r\n    if(this.is_asize_32())\r\n    {\r\n        this.reg32s[reg] += value;\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg << 1] += value;\r\n    }\r\n};\r\n\r\nCPU.prototype.decr_ecx_asize = function()\r\n{\r\n    return this.is_asize_32() ? --this.reg32s[reg_ecx] : --this.reg16[reg_cx];\r\n};\r\n\r\nCPU.prototype.invalid_arithmatic = function()\r\n{\r\n    this.mxcsr |= CPU_EX_I;\r\n};\r\n\r\nCPU.prototype.is_SNaN32 = function(value)\r\n{\r\n    let exponent = (value >>> 23) & 0xFF;\r\n    let most_significand = (value >>> 22) & 1;\r\n    let less_significand = (value >>> 0) & 0x3FFFFF;\r\n\r\n    return exponent === 0xFF && most_significand === 0 && less_significand > 0;\r\n};\r\n\r\n// Closure Compiler's way of exporting\r\nif(typeof window !== \"undefined\")\r\n{\r\n    window[\"CPU\"] = CPU;\r\n}\r\nelse if(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\")\r\n{\r\n    module.exports[\"CPU\"] = CPU;\r\n}\r\nelse if(typeof importScripts === \"function\")\r\n{\r\n    self[\"CPU\"] = CPU;\r\n}\r\n","/** @constructor */\r\nfunction DynamicTranslator(something)\r\n{\r\n    // TODO\r\n    dbg_assert(false);\r\n\r\n    this.clear_cache = function() {};\r\n    this.cycle_translated = function() {};\r\n}\r\n","/**\r\n * This file contains functions to decode the modrm and sib bytes\r\n *\r\n * These functions return a virtual address\r\n *\r\n * @fileoverview .\r\n * @suppress {newCheckTypes}\r\n */\r\n\"use strict\";\r\n(function()\r\n{\r\n    CPU.prototype.modrm_table16 = Array(0xC0);\r\n    CPU.prototype.modrm_table32 = Array(0xC0);\r\n    CPU.prototype.sib_table = Array(0x100);\r\n    CPU.prototype.modrm_table16[0x00 | 0] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_si]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 0] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_si]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 0] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_si]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 1] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_di]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 1] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_di]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 1] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx] + cpu.reg16[reg_di]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 2] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_si]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 2] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_si]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 2] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_si]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 3] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_di]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 3] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_di]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 3] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp] + cpu.reg16[reg_di]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 4] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_si]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 4] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_si]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 4] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_si]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 5] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_di]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 5] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_di]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 5] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_di]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 6] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 6] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 6] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + ((cpu.reg16[reg_bp]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x00 | 7] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx]) & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x40 | 7] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx]) + cpu.read_disp8s() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table16[0x80 | 7] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + ((cpu.reg16[reg_bx]) + cpu.read_disp16() & 0xFFFF) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x00 | 0] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 0] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 0] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 1] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 1] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 1] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 2] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 2] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 2] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 3] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 3] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 3] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 5] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 5] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 5] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 6] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 6] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 6] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    CPU.prototype.modrm_table32[0x00 | 7] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi]) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 7] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi]) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 7] = function(cpu)\r\n    {\r\n        return(cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi]) + cpu.read_disp32s() | 0;\r\n    };;\r\n    // special cases\r\n    CPU.prototype.modrm_table16[0x00 | 6] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.read_disp16() | 0;\r\n    }\r\n    CPU.prototype.modrm_table32[0x00 | 5] = function(cpu)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.read_disp32s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x00 | 4] = function(cpu)\r\n    {\r\n        return cpu.sib_resolve(false) | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x40 | 4] = function(cpu)\r\n    {\r\n        return cpu.sib_resolve(true) + cpu.read_disp8s() | 0;\r\n    };\r\n    CPU.prototype.modrm_table32[0x80 | 4] = function(cpu)\r\n    {\r\n        return cpu.sib_resolve(true) + cpu.read_disp32s() | 0;\r\n    };\r\n    for(var low = 0; low < 8; low++)\r\n    {\r\n        for(var high = 0; high < 3; high++)\r\n        {\r\n            var x = low | high << 6;\r\n            for(var i = 1; i < 8; i++)\r\n            {\r\n                CPU.prototype.modrm_table32[x | i << 3] = CPU.prototype.modrm_table32[x];\r\n                CPU.prototype.modrm_table16[x | i << 3] = CPU.prototype.modrm_table16[x];\r\n            }\r\n        }\r\n    }\r\n\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 0 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 0 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 0 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 0 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_eax] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 1 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 1 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 1 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 1 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ecx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 2 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 2 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 2 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 2 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 3 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 3 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 3 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 3 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebx] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 4 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 4 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 4 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 4 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 5 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 5 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 5 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 5 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_ebp] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 6 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 6 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 6 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 6 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_esi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };;\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x00 | 7 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi]) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x40 | 7 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 1) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0x80 | 7 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 2) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 0] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_eax] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 1] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ecx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 2] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 3] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_ebx] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 4] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ss() + cpu.reg32s[reg_esp] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 5] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + (mod ? cpu.get_seg_prefix_ss() + cpu.reg32s[reg_ebp] : cpu.get_seg_prefix_ds() + cpu.read_disp32s()) | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 6] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_esi] | 0;\r\n    };\r\n    CPU.prototype.sib_table[0xC0 | 7 << 3 | 7] = function(cpu, mod)\r\n    {\r\n        return(cpu.reg32s[reg_edi] << 3) + cpu.get_seg_prefix_ds() + cpu.reg32s[reg_edi] | 0;\r\n    };\r\n})();\r\n","\"use strict\";\r\n\r\n/*\r\n * string operations\r\n *\r\n *       cmp  si  di\r\n * movs   0    1   1/w    A4\r\n * cmps   1    1   1/r    A6\r\n * stos   0    0   1/w    AA\r\n * lods   0    1   0      AC\r\n * scas   1    0   1/r    AE\r\n * ins    0    0   1/w\r\n * outs   0    1   0\r\n */\r\n\r\n/** @const */\r\nvar MAX_COUNT_PER_CYCLE = 0x1000;\r\n\r\n\r\nfunction string_get_cycle_count(size, address)\r\n{\r\n    dbg_assert(size && size <= 4 && size >= -4);\r\n\r\n    if(size < 0)\r\n    {\r\n        return (address & 0xFFF) >> (-size >> 1);\r\n    }\r\n    else\r\n    {\r\n        return (~address & 0xFFF) >> size;\r\n    }\r\n}\r\n\r\nfunction string_get_cycle_count2(size, addr1, addr2)\r\n{\r\n    dbg_assert(arguments.length === 3);\r\n\r\n    return Math.min(\r\n            string_get_cycle_count(size, addr1),\r\n            string_get_cycle_count(size, addr2));\r\n}\r\n\r\n\r\nCPU.prototype.movsb = function()\r\n{\r\n    var cpu = this;\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_src = cpu.translate_address_read(src);\r\n        var phys_dest = cpu.translate_address_write(dest);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count2(size, src, dest);\r\n        }\r\n        do\r\n        {\r\n            cpu.write8(phys_dest, cpu.read8(phys_src));\r\n            phys_dest += size;\r\n            phys_src += size;\r\n            cont = --count !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_edi, diff);\r\n        cpu.add_reg_asize(reg_esi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write8(dest, cpu.safe_read8(src));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n};\r\n\r\nCPU.prototype.movsw = function()\r\n{\r\n    var cpu = this;\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 1) && !(src & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 1;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count2(size, src, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned16(phys_dest, cpu.read_aligned16(phys_src));\r\n                phys_dest += single_size;\r\n                phys_src += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write16(dest, cpu.safe_read16(src));\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write16(dest, cpu.safe_read16(src));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n};\r\n\r\nCPU.prototype.movsd = function()\r\n{\r\n    var cpu = this;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        // often used by memcpy, well worth optimizing\r\n        //   using cpu.mem32s.set\r\n        var ds = cpu.get_seg_prefix(reg_ds),\r\n            src = ds + cpu.get_reg_asize(reg_esi) | 0,\r\n            es = cpu.get_seg(reg_es),\r\n            dest = es + cpu.get_reg_asize(reg_edi) | 0,\r\n            count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n\r\n        if(!count)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // must be page-aligned if cpu.paging is enabled\r\n        // and dword-aligned in general\r\n        var align_mask = cpu.paging ? 0xFFF : 3;\r\n\r\n        if((dest & align_mask) === 0 &&\r\n           (src & align_mask) === 0 &&\r\n           // If df is set, alignment works a different\r\n           // This should be unlikely\r\n           (cpu.flags & flag_direction) === 0)\r\n        {\r\n            var cont = false;\r\n            if(cpu.paging)\r\n            {\r\n                src = cpu.translate_address_read(src);\r\n                dest = cpu.translate_address_write(dest);\r\n\r\n                if(count > 0x400)\r\n                {\r\n                    count = 0x400;\r\n                    cont = true;\r\n                }\r\n            }\r\n\r\n            if(!cpu.io.in_mmap_range(src, count) &&\r\n                !cpu.io.in_mmap_range(dest, count))\r\n            {\r\n                var diff = count << 2;\r\n                cpu.add_reg_asize(reg_ecx, -count);\r\n                cpu.add_reg_asize(reg_edi, diff);\r\n                cpu.add_reg_asize(reg_esi, diff);\r\n\r\n                dest >>>= 2;\r\n                src >>>= 2;\r\n                cpu.write_blob32(cpu.mem32s.subarray(src, src + count), dest);\r\n\r\n                if(cont)\r\n                {\r\n                    cpu.instruction_pointer = cpu.previous_ip;\r\n                }\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 3) && !(src & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 2;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count2(size, src, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned32(phys_dest, cpu.read_aligned32(phys_src));\r\n                phys_dest += single_size;\r\n                phys_src += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write32(dest, cpu.safe_read32s(src));\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            this.instruction_pointer = this.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write32(dest, cpu.safe_read32s(src));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n};\r\n\r\nfunction cmpsb(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var data_src, data_dest;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_src = cpu.translate_address_read(src);\r\n        var phys_dest = cpu.translate_address_read(dest);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count2(size, src, dest);\r\n        }\r\n        do\r\n        {\r\n            data_dest = cpu.read8(phys_dest);\r\n            data_src = cpu.read8(phys_src);\r\n            phys_dest += size;\r\n            phys_src += size;\r\n            cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_edi, diff);\r\n        cpu.add_reg_asize(reg_esi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_src = cpu.safe_read8(src);\r\n        data_dest = cpu.safe_read8(dest);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n\r\n    cpu.cmp8(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction cmpsw(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var data_src, data_dest;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 1) && !(src & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 1;\r\n            var phys_dest = cpu.translate_address_read(dest) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count2(size, src, dest);\r\n            }\r\n            do\r\n            {\r\n                data_dest = cpu.read_aligned16(phys_dest);\r\n                data_src = cpu.read_aligned16(phys_src);\r\n                phys_dest += single_size;\r\n                phys_src += single_size;\r\n                cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                data_dest = cpu.safe_read16(dest);\r\n                data_src = cpu.safe_read16(src);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_dest = cpu.safe_read16(dest);\r\n        data_src = cpu.safe_read16(src);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n\r\n    cpu.cmp16(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction cmpsd(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var data_src, data_dest;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 3) && !(src & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 2;\r\n            var phys_dest = cpu.translate_address_read(dest) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count2(size, src, dest);\r\n            }\r\n            do\r\n            {\r\n                data_dest = cpu.read_aligned32(phys_dest);\r\n                data_src = cpu.read_aligned32(phys_src);\r\n                phys_dest += single_size;\r\n                phys_src += single_size;\r\n                cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                data_dest = cpu.safe_read32s(dest);\r\n                data_src = cpu.safe_read32s(src);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_dest = cpu.safe_read32s(dest);\r\n        data_src = cpu.safe_read32s(src);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n\r\n    cpu.cmp32(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction stosb(cpu)\r\n{\r\n    var data = cpu.reg8[reg_al];\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_dest = cpu.translate_address_write(dest);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count(size, dest);\r\n        }\r\n        do\r\n        {\r\n            cpu.write8(phys_dest, data);\r\n            phys_dest += size;\r\n            cont = --count !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_edi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write8(dest, data);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction stosw(cpu)\r\n{\r\n    var data = cpu.reg16[reg_ax];\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned16(phys_dest, data);\r\n                phys_dest += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write16(dest, data);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write16(dest, data);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction stosd(cpu)\r\n{\r\n    var data = cpu.reg32s[reg_eax];\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned32(phys_dest, data);\r\n                phys_dest += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write32(dest, data);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.safe_write32(dest, data);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction lodsb(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_src = cpu.translate_address_read(src);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count(size, src);\r\n        }\r\n        do\r\n        {\r\n            cpu.reg8[reg_al] = cpu.read8(phys_src);\r\n            phys_src += size;\r\n            cont = --count !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_esi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.reg8[reg_al] = cpu.safe_read8(src);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction lodsw(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        do\r\n        {\r\n            cpu.reg16[reg_ax] = cpu.safe_read16(src);\r\n            src += size;\r\n            cpu.add_reg_asize(reg_esi, size);\r\n            cont = cpu.decr_ecx_asize() !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.reg16[reg_ax] = cpu.safe_read16(src);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction lodsd(cpu)\r\n{\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        do\r\n        {\r\n            cpu.reg32s[reg_eax] = cpu.safe_read32s(src);\r\n            src += size;\r\n            cpu.add_reg_asize(reg_esi, size);\r\n            cont = cpu.decr_ecx_asize() !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.reg32s[reg_eax] = cpu.safe_read32s(src);\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction scasb(cpu)\r\n{\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n    var data_dest;\r\n    var data_src = cpu.reg8[reg_al];\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_dest = cpu.translate_address_read(dest);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count(size, dest);\r\n        }\r\n        do\r\n        {\r\n            data_dest = cpu.read8(phys_dest);\r\n            phys_dest += size;\r\n            cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_edi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_dest = cpu.safe_read8(dest);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n\r\n    cpu.cmp8(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction scasw(cpu)\r\n{\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n    var data_dest;\r\n    var data_src = cpu.reg16[reg_al];\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_read(dest) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                data_dest = cpu.read_aligned16(phys_dest);\r\n                phys_dest += single_size;\r\n                cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                data_dest = cpu.safe_read16(dest);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_dest = cpu.safe_read16(dest);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n\r\n    cpu.cmp16(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction scasd(cpu)\r\n{\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n    var data_dest;\r\n    var data_src = cpu.reg32s[reg_eax];\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var is_repz = (cpu.prefixes & PREFIX_MASK_REP) === PREFIX_REPZ;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_read(dest) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                data_dest = cpu.read_aligned32(phys_dest);\r\n                phys_dest += single_size;\r\n                cont = --count !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                data_dest = cpu.safe_read32s(dest);\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0 && (data_src === data_dest) === is_repz;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        data_dest = cpu.safe_read32s(dest);\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n\r\n    cpu.cmp32(data_src, data_dest);\r\n    cpu.diverged();\r\n}\r\n\r\nfunction insb(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 1);\r\n\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_dest = cpu.translate_address_write(dest);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count(size, dest);\r\n        }\r\n        do\r\n        {\r\n            cpu.write8(phys_dest, cpu.io.port_read8(port));\r\n            phys_dest += size;\r\n            cont = --count !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_edi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.writable_or_pagefault(dest, 1);\r\n        cpu.safe_write8(dest, cpu.io.port_read8(port));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction insw(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 2);\r\n\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned16(phys_dest, cpu.io.port_read16(port));\r\n                phys_dest += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write16(dest, cpu.io.port_read16(port));\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.writable_or_pagefault(dest, 2);\r\n        cpu.safe_write16(dest, cpu.io.port_read16(port));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction insd(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 4);\r\n\r\n    var dest = cpu.get_seg(reg_es) + cpu.get_reg_asize(reg_edi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(dest & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_dest = cpu.translate_address_write(dest) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, dest);\r\n            }\r\n            do\r\n            {\r\n                cpu.write_aligned32(phys_dest, cpu.io.port_read32(port));\r\n                phys_dest += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_edi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.safe_write32(dest, cpu.io.port_read32(port));\r\n                dest += size;\r\n                cpu.add_reg_asize(reg_edi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.writable_or_pagefault(dest, 4);\r\n        cpu.safe_write32(dest, cpu.io.port_read32(port));\r\n        cpu.add_reg_asize(reg_edi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction outsb(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 1);\r\n\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -1 : 1;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        var phys_src = cpu.translate_address_read(src);\r\n        if(cpu.paging)\r\n        {\r\n            cycle_counter = string_get_cycle_count(size, src);\r\n        }\r\n        do\r\n        {\r\n            cpu.io.port_write8(port, cpu.read8(phys_src));\r\n            phys_src += size;\r\n            cont = --count !== 0;\r\n        }\r\n        while(cont && cycle_counter--);\r\n        var diff = size * (start_count - count) | 0;\r\n        cpu.add_reg_asize(reg_esi, diff);\r\n        cpu.set_ecx_asize(count);\r\n        cpu.timestamp_counter += start_count - count;\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.io.port_write8(port, cpu.safe_read8(src));\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction outsw(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 2);\r\n\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -2 : 2;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(src & 1))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 1;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, src);\r\n            }\r\n            do\r\n            {\r\n                cpu.io.port_write16(port, cpu.read_aligned16(phys_src));\r\n                phys_src += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.io.port_write16(port, cpu.safe_read16(src));\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.io.port_write16(port, cpu.safe_read16(src));\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n\r\nfunction outsd(cpu)\r\n{\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 4);\r\n\r\n    var src = cpu.get_seg_prefix(reg_ds) + cpu.get_reg_asize(reg_esi) | 0;\r\n    var size = cpu.flags & flag_direction ? -4 : 4;\r\n\r\n    if(cpu.prefixes & PREFIX_MASK_REP)\r\n    {\r\n        var count = cpu.get_reg_asize(reg_ecx) >>> 0;\r\n        if(count === 0) return;\r\n        var cont = false;\r\n        var start_count = count;\r\n        var cycle_counter = MAX_COUNT_PER_CYCLE;\r\n        if(!(src & 3))\r\n        {\r\n            var single_size = size < 0 ? -1 : 1;\r\n            var phys_src = cpu.translate_address_read(src) >>> 2;\r\n            if(cpu.paging)\r\n            {\r\n                cycle_counter = string_get_cycle_count(size, src);\r\n            }\r\n            do\r\n            {\r\n                cpu.io.port_write32(port, cpu.read_aligned32(phys_src));\r\n                phys_src += single_size;\r\n                cont = --count !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n            var diff = size * (start_count - count) | 0;\r\n            cpu.add_reg_asize(reg_esi, diff);\r\n            cpu.set_ecx_asize(count);\r\n            cpu.timestamp_counter += start_count - count;\r\n        }\r\n        else\r\n        {\r\n            do\r\n            {\r\n                cpu.io.port_write32(port, cpu.safe_read32s(src));\r\n                src += size;\r\n                cpu.add_reg_asize(reg_esi, size);\r\n                cont = cpu.decr_ecx_asize() !== 0;\r\n            }\r\n            while(cont && cycle_counter--);\r\n        }\r\n        if(cont)\r\n        {\r\n            cpu.instruction_pointer = cpu.previous_ip;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cpu.io.port_write32(port, cpu.safe_read32s(src));\r\n        cpu.add_reg_asize(reg_esi, size);\r\n    }\r\n    cpu.diverged();\r\n}\r\n","/*\r\n * Arithmatic functions\r\n * This file contains:\r\n *\r\n * add, adc, sub, sbc, cmp\r\n * inc, dec\r\n * neg, not\r\n * imul, mul, idiv, div\r\n * xadd\r\n *\r\n * das, daa, aad, aam\r\n *\r\n * and, or, xor, test\r\n * shl, shr, sar, ror, rol, rcr, rcl\r\n * shld, shrd\r\n *\r\n * bts, btr, btc, bt\r\n * bsf, bsr\r\n *\r\n * popcnt\r\n*/\r\n\"use strict\";\r\n\r\nCPU.prototype.add8 = function(dest, src) { return this.add(dest, src, OPSIZE_8); }\r\nCPU.prototype.add16 = function(dest, src) { return this.add(dest, src, OPSIZE_16); }\r\nCPU.prototype.add32 = function(dest, src) { return this.add(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.adc8 = function(dest, src) { return this.adc(dest, src, OPSIZE_8); }\r\nCPU.prototype.adc16 = function(dest, src) { return this.adc(dest, src, OPSIZE_16); }\r\nCPU.prototype.adc32 = function(dest, src) { return this.adc(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.sub8 = function(dest, src) { return this.sub(dest, src, OPSIZE_8); }\r\nCPU.prototype.sub16 = function(dest, src) { return this.sub(dest, src, OPSIZE_16); }\r\nCPU.prototype.sub32 = function(dest, src) { return this.sub(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.cmp8 = function(dest, src) { return this.sub(dest, src, OPSIZE_8); }\r\nCPU.prototype.cmp16 = function(dest, src) { return this.sub(dest, src, OPSIZE_16); }\r\nCPU.prototype.cmp32 = function(dest, src) { return this.sub(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.sbb8 = function(dest, src) { return this.sbb(dest, src, OPSIZE_8); }\r\nCPU.prototype.sbb16 = function(dest, src) { return this.sbb(dest, src, OPSIZE_16); }\r\nCPU.prototype.sbb32 = function(dest, src) { return this.sbb(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.add = function(dest_operand, source_operand, op_size)\r\n{\r\n    //if(this.safe_read32s(this.instruction_pointer + 1) === 0 && this.safe_read32s(this.instruction_pointer + 5) === 0) throw \"0000000\";\r\n\r\n    this.last_op1 = dest_operand;\r\n    this.last_op2 = source_operand;\r\n    this.last_add_result = this.last_result = dest_operand + source_operand | 0;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags_changed = flags_all;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.adc = function(dest_operand, source_operand, op_size)\r\n{\r\n    var cf = this.getcf();\r\n    this.last_op1 = dest_operand;\r\n    this.last_op2 = source_operand;\r\n    this.last_add_result = this.last_result = (dest_operand + source_operand | 0) + cf | 0;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags_changed = flags_all;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.sub = function(dest_operand, source_operand, op_size)\r\n{\r\n    this.last_add_result = dest_operand;\r\n    this.last_op2 = source_operand;\r\n    this.last_op1 = this.last_result = dest_operand - source_operand | 0;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags_changed = flags_all;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.sbb = function(dest_operand, source_operand, op_size)\r\n{\r\n    var cf = this.getcf();\r\n    this.last_add_result = dest_operand;\r\n    this.last_op2 = source_operand;\r\n    this.last_op1 = this.last_result = dest_operand - source_operand - cf | 0;\r\n    this.last_op_size = op_size;\r\n\r\n    this.flags_changed = flags_all;\r\n\r\n    return this.last_result;\r\n}\r\n\r\n/*\r\n * inc and dec\r\n */\r\n\r\nCPU.prototype.inc8 = function(dest) { return this.inc(dest, OPSIZE_8); }\r\nCPU.prototype.inc16 = function(dest) { return this.inc(dest, OPSIZE_16); }\r\nCPU.prototype.inc32 = function(dest) { return this.inc(dest, OPSIZE_32); }\r\n\r\nCPU.prototype.dec8 = function(dest) { return this.dec(dest, OPSIZE_8); }\r\nCPU.prototype.dec16 = function(dest) { return this.dec(dest, OPSIZE_16); }\r\nCPU.prototype.dec32 = function(dest) { return this.dec(dest, OPSIZE_32); }\r\n\r\nCPU.prototype.inc = function(dest_operand, op_size)\r\n{\r\n    this.flags = (this.flags & ~1) | this.getcf();\r\n    this.last_op1 = dest_operand;\r\n    this.last_op2 = 1;\r\n    this.last_add_result = this.last_result = dest_operand + 1 | 0;\r\n    this.last_op_size = op_size;\r\n\r\n    this.flags_changed = flags_all & ~1;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.dec = function(dest_operand, op_size)\r\n{\r\n    this.flags = (this.flags & ~1) | this.getcf();\r\n    this.last_add_result = dest_operand;\r\n    this.last_op2 = 1;\r\n    this.last_op1 = this.last_result = dest_operand - 1 | 0;\r\n    this.last_op_size = op_size;\r\n\r\n    this.flags_changed = flags_all & ~1;\r\n\r\n    return this.last_result;\r\n}\r\n\r\n\r\n/*\r\n * neg\r\n */\r\nCPU.prototype.neg8 = function(dest) { return this.neg(dest, OPSIZE_8); }\r\nCPU.prototype.neg16 = function(dest) { return this.neg(dest, OPSIZE_16); }\r\nCPU.prototype.neg32 = function(dest) { return this.neg(dest, OPSIZE_32); }\r\n\r\nCPU.prototype.neg = function(dest_operand, op_size)\r\n{\r\n    this.last_op1 = this.last_result = -dest_operand | 0;\r\n\r\n    this.flags_changed = flags_all;\r\n    this.last_add_result = 0;\r\n    this.last_op2 = dest_operand;\r\n    this.last_op_size = op_size;\r\n\r\n    return this.last_result;\r\n}\r\n\r\n\r\n/*\r\n * mul, imul, div, idiv\r\n *\r\n * Note: imul has some extra opcodes\r\n *       while other functions only allow\r\n *       ax * modrm\r\n */\r\n\r\nCPU.prototype.mul8 = function(source_operand)\r\n{\r\n    var result = source_operand * this.reg8[reg_al];\r\n\r\n    this.reg16[reg_ax] = result;\r\n    this.last_result = result & 0xFF;\r\n    this.last_op_size = OPSIZE_8;\r\n\r\n    if(result < 0x100)\r\n    {\r\n        this.flags = this.flags & ~1 & ~flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags = this.flags | 1 | flag_overflow;\r\n    }\r\n\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n}\r\n\r\nCPU.prototype.imul8 = function(source_operand)\r\n{\r\n    var result = source_operand * this.reg8s[reg_al];\r\n\r\n    this.reg16[reg_ax] = result;\r\n    this.last_result = result & 0xFF;\r\n    this.last_op_size = OPSIZE_8;\r\n\r\n    if(result > 0x7F || result < -0x80)\r\n    {\r\n        this.flags = this.flags | 1 | flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags = this.flags & ~1 & ~flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n}\r\n\r\nCPU.prototype.mul16 = function(source_operand)\r\n{\r\n    var result = source_operand * this.reg16[reg_ax],\r\n        high_result = result >>> 16;\r\n    //console.log(h(a) + \" * \" + h(this.reg16[reg_ax]) + \" = \" + h(result));\r\n\r\n    this.reg16[reg_ax] = result;\r\n    this.reg16[reg_dx] = high_result;\r\n\r\n    this.last_result = result & 0xFFFF;\r\n    this.last_op_size = OPSIZE_16;\r\n\r\n    if(high_result === 0)\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n}\r\n\r\n/*\r\n * imul with 1 argument\r\n * ax = ax * r/m\r\n */\r\nCPU.prototype.imul16 = function(source_operand)\r\n{\r\n    var result = source_operand * this.reg16s[reg_ax];\r\n\r\n    this.reg16[reg_ax] = result;\r\n    this.reg16[reg_dx] = result >> 16;\r\n\r\n    this.last_result = result & 0xFFFF;\r\n    this.last_op_size = OPSIZE_16;\r\n\r\n    if(result > 0x7FFF || result < -0x8000)\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n}\r\n\r\n/*\r\n * imul with 2 or 3 arguments\r\n * reg = reg * r/m\r\n * reg = imm * r/m\r\n */\r\nCPU.prototype.imul_reg16 = function(operand1, operand2)\r\n{\r\n    dbg_assert(operand1 < 0x8000 && operand1 >= -0x8000);\r\n    dbg_assert(operand2 < 0x8000 && operand2 >= -0x8000);\r\n\r\n    var result = operand1 * operand2;\r\n\r\n    this.last_result = result & 0xFFFF;\r\n    this.last_op_size = OPSIZE_16;\r\n\r\n    if(result > 0x7FFF || result < -0x8000)\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.mul32 = function(source_operand)\r\n{\r\n    var dest_operand = this.reg32s[reg_eax];\r\n\r\n    var lo = v86util.mul_low(dest_operand, source_operand);\r\n    var hi = v86util.mul_high(dest_operand, source_operand);\r\n\r\n    this.reg32s[reg_eax] = lo;\r\n    this.reg32s[reg_edx] = hi;\r\n\r\n    this.last_result = lo;\r\n    this.last_op_size = OPSIZE_32;\r\n\r\n    if(hi === 0)\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    //console.log(h(source_operand >>> 0, 8) + \" * \" + h(dest_operand >>> 0, 8));\r\n    //console.log(\"= \" + h(this.reg32[reg_edx], 8) + \":\" + h(this.reg32[reg_eax], 8));\r\n}\r\n\r\nCPU.prototype.imul32 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand < 0x80000000 && source_operand >= -0x80000000);\r\n\r\n    var dest_operand = this.reg32s[reg_eax];\r\n\r\n    var lo = v86util.imul_low(dest_operand, source_operand);\r\n    var hi = v86util.imul_high(dest_operand, source_operand);\r\n\r\n    this.reg32s[reg_eax] = lo;\r\n    this.reg32s[reg_edx] = hi;\r\n\r\n    this.last_result = lo;\r\n    this.last_op_size = OPSIZE_32;\r\n\r\n    if(hi === (lo >> 31))\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    //console.log(target_operand + \" * \" + source_operand);\r\n    //console.log(\"= \" + h(this.reg32[reg_edx]) + \" \" + h(this.reg32[reg_eax]));\r\n}\r\n\r\n/*\r\n * imul with 2 or 3 arguments\r\n * reg = reg * r/m\r\n * reg = imm * r/m\r\n */\r\nCPU.prototype.imul_reg32 = function(operand1, operand2)\r\n{\r\n    dbg_assert(operand1 < 0x80000000 && operand1 >= -0x80000000);\r\n    dbg_assert(operand2 < 0x80000000 && operand2 >= -0x80000000);\r\n\r\n    var lo = v86util.imul_low(operand1, operand2);\r\n    var hi = v86util.imul_high(operand1, operand2);\r\n\r\n    this.last_result = lo;\r\n    this.last_op_size = OPSIZE_32;\r\n\r\n    if(hi === (lo >> 31))\r\n    {\r\n        this.flags &= ~1 & ~flag_overflow;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= 1 | flag_overflow;\r\n    }\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    return lo;\r\n\r\n    //console.log(operand + \" * \" + source_operand);\r\n    //console.log(\"= \" + this.reg32[reg]);\r\n}\r\n\r\nCPU.prototype.div8 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand >= 0 && source_operand < 0x100);\r\n\r\n    if(source_operand === 0)\r\n    {\r\n        this.trigger_de();\r\n        return;\r\n    }\r\n\r\n    var target_operand = this.reg16[reg_ax],\r\n        result = target_operand / source_operand | 0;\r\n\r\n    if(result >= 0x100)\r\n    {\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg8[reg_al] = result;\r\n        this.reg8[reg_ah] = target_operand % source_operand;\r\n    }\r\n}\r\n\r\nCPU.prototype.idiv8 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand >= -0x80 && source_operand < 0x80);\r\n\r\n    if(source_operand === 0)\r\n    {\r\n        this.trigger_de();\r\n        return;\r\n    }\r\n\r\n    var target_operand = this.reg16s[reg_ax],\r\n        result = target_operand / source_operand | 0;\r\n\r\n    if(result >= 0x80 || result <= -0x81)\r\n    {\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg8[reg_al] = result;\r\n        this.reg8[reg_ah] = target_operand % source_operand;\r\n    }\r\n}\r\n\r\nCPU.prototype.div16 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand >= 0 && source_operand < 0x10000);\r\n\r\n    if(source_operand === 0)\r\n    {\r\n        this.trigger_de();\r\n        return;\r\n    }\r\n\r\n    var\r\n        target_operand = (this.reg16[reg_ax] | this.reg16[reg_dx] << 16) >>> 0,\r\n        result = target_operand / source_operand | 0;\r\n\r\n    if(result >= 0x10000 || result < 0)\r\n    {\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg_ax] = result;\r\n        this.reg16[reg_dx] = target_operand % source_operand;\r\n    }\r\n}\r\n\r\nCPU.prototype.idiv16 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand >= -0x8000 && source_operand < 0x8000);\r\n\r\n    if(source_operand === 0)\r\n    {\r\n        this.trigger_de();\r\n        return;\r\n    }\r\n\r\n    var target_operand = this.reg16[reg_ax] | (this.reg16[reg_dx] << 16),\r\n        result = target_operand / source_operand | 0;\r\n\r\n    if(result >= 0x8000 || result <= -0x8001)\r\n    {\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg16[reg_ax] = result;\r\n        this.reg16[reg_dx] = target_operand % source_operand;\r\n    }\r\n}\r\n\r\n// If the dividend is too large, the division cannot be done precisely using\r\n// JavaScript's double floating point numbers. Run simple long division until\r\n// the dividend is small enough\r\nCPU.prototype.do_div32 = function(div_low, div_high, quot)\r\n{\r\n    if(div_high >= quot || quot === 0)\r\n    {\r\n        dbg_log(\"div32 #DE: \" + h(div_high, 8) + \":\" + h(div_low, 8) + \" div \" + h(quot, 8));\r\n        this.trigger_de();\r\n    }\r\n\r\n    var result = 0;\r\n\r\n    if(div_high > 0x100000)\r\n    {\r\n        var m = 0;\r\n        var i = 32;\r\n        var q = quot;\r\n        while(q > div_high)\r\n        {\r\n            q >>>= 1;\r\n            i--;\r\n        }\r\n        while(div_high > 0x100000)\r\n        {\r\n            if(div_high >= q)\r\n            {\r\n                div_high -= q;\r\n                var sub = quot << i >>> 0;\r\n                if(sub > div_low)\r\n                {\r\n                    div_high--;\r\n                }\r\n                div_low = div_low - sub >>> 0;\r\n                result |= 1 << i\r\n            }\r\n            i--;\r\n            q >>= 1;\r\n        }\r\n        result >>>= 0;\r\n    }\r\n\r\n    var div = div_low + div_high * 0x100000000;\r\n    var mod = div % quot;\r\n    result += div / quot | 0;\r\n\r\n    this.div32_result[0] = result;\r\n    this.div32_result[1] = mod;\r\n    return this.div32_result;\r\n}\r\n\r\n\r\nCPU.prototype.div32 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand >= 0 && source_operand <= 0xffffffff);\r\n\r\n    var dest_operand_low = this.reg32[reg_eax],\r\n        dest_operand_high = this.reg32[reg_edx];\r\n\r\n    var result_mod = this.do_div32(dest_operand_low, dest_operand_high, source_operand);\r\n    var result = result_mod[0];\r\n    var mod = result_mod[1];\r\n\r\n    // XXX\r\n    dbg_assert(source_operand);\r\n    if(result >= 0x100000000)\r\n    {\r\n        dbg_log(\"div32 #DE: \" + h(dest_operand_high, 8) + \":\" + h(dest_operand_low, 8) + \" div \" + h(source_operand, 8));\r\n        dbg_log(\"-> \" + h(result));\r\n\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg32s[reg_eax] = result;\r\n        this.reg32s[reg_edx] = mod;\r\n    }\r\n\r\n    //console.log(h(dest_operand_high) + \":\" + h(dest_operand_low) + \" / \" + h(source_operand));\r\n    //console.log(\"= \" + h(this.reg32[reg_eax]) + \" rem \" + h(this.reg32[reg_edx]));\r\n}\r\n\r\nCPU.prototype.idiv32 = function(source_operand)\r\n{\r\n    dbg_assert(source_operand < 0x80000000 && source_operand >= -0x80000000);\r\n\r\n    var dest_operand_low = this.reg32[reg_eax],\r\n        dest_operand_high = this.reg32s[reg_edx],\r\n        div_is_neg = false,\r\n        is_neg = false;\r\n\r\n    if(source_operand < 0)\r\n    {\r\n        is_neg = true;\r\n        source_operand = -source_operand;\r\n    }\r\n\r\n    if(dest_operand_high < 0)\r\n    {\r\n        div_is_neg = true;\r\n        is_neg = !is_neg;\r\n        dest_operand_low = -dest_operand_low >>> 0;\r\n        dest_operand_high = ~dest_operand_high + !dest_operand_low;\r\n    }\r\n\r\n    var result_mod = this.do_div32(dest_operand_low, dest_operand_high, source_operand);\r\n    var result = result_mod[0];\r\n    var mod = result_mod[1];\r\n\r\n    if(is_neg)\r\n    {\r\n        result = -result | 0;\r\n    }\r\n\r\n    if(div_is_neg)\r\n    {\r\n        mod = -mod | 0;\r\n    }\r\n\r\n    dbg_assert(source_operand);\r\n    if(result >= 0x80000000 || result <= -0x80000001)\r\n    {\r\n        dbg_log(\"div32 #DE: \" + h(dest_operand_high, 8) + \":\" + h(dest_operand_low, 8) + \" div \" + h(source_operand, 8));\r\n        dbg_log(\"-> \" + h(result));\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        this.reg32s[reg_eax] = result;\r\n        this.reg32s[reg_edx] = mod;\r\n    }\r\n\r\n    //console.log(h(dest_operand_high) + \":\" + h(dest_operand_low) + \" / \" + h(source_operand));\r\n    //console.log(\"= \" + h(this.reg32[reg_eax]) + \" rem \" + h(this.reg32[reg_edx]));\r\n}\r\n\r\n\r\nCPU.prototype.xadd8 = function(source_operand, reg)\r\n{\r\n    var tmp = this.reg8[reg];\r\n\r\n    this.reg8[reg] = source_operand;\r\n\r\n    return this.add(source_operand, tmp, OPSIZE_8);\r\n}\r\n\r\n\r\nCPU.prototype.xadd16 = function(source_operand, reg)\r\n{\r\n    var tmp = this.reg16[reg];\r\n\r\n    this.reg16[reg] = source_operand;\r\n\r\n    return this.add(source_operand, tmp, OPSIZE_16);\r\n}\r\n\r\n\r\nCPU.prototype.xadd32 = function(source_operand, reg)\r\n{\r\n    var tmp = this.reg32s[reg];\r\n\r\n    this.reg32s[reg] = source_operand;\r\n\r\n    return this.add(source_operand, tmp, OPSIZE_32);\r\n}\r\n\r\n\r\nCPU.prototype.bcd_daa = function()\r\n{\r\n    //dbg_log(\"daa\");\r\n    // decimal adjust after addition\r\n    var old_al = this.reg8[reg_al],\r\n        old_cf = this.getcf(),\r\n        old_af = this.getaf();\r\n\r\n    this.flags &= ~1 & ~flag_adjust\r\n\r\n    if((old_al & 0xF) > 9 || old_af)\r\n    {\r\n        this.reg8[reg_al] += 6;\r\n        this.flags |= flag_adjust;\r\n    }\r\n    if(old_al > 0x99 || old_cf)\r\n    {\r\n        this.reg8[reg_al] += 0x60;\r\n        this.flags |= 1;\r\n    }\r\n\r\n    this.last_result = this.reg8[reg_al];\r\n    this.last_op_size = OPSIZE_8;\r\n    this.last_op1 = this.last_op2 = 0;\r\n    this.flags_changed = flags_all & ~1 & ~flag_adjust & ~flag_overflow;\r\n}\r\n\r\nCPU.prototype.bcd_das = function()\r\n{\r\n    //dbg_log(\"das\");\r\n    // decimal adjust after subtraction\r\n    var old_al = this.reg8[reg_al],\r\n        old_cf = this.getcf();\r\n\r\n    this.flags &= ~1;\r\n\r\n    if((old_al & 0xF) > 9 || this.getaf())\r\n    {\r\n        this.reg8[reg_al] -= 6;\r\n        this.flags |= flag_adjust;\r\n        this.flags = this.flags & ~1 | old_cf | (old_al < 6);\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_adjust;\r\n    }\r\n\r\n    if(old_al > 0x99 || old_cf)\r\n    {\r\n        this.reg8[reg_al] -= 0x60;\r\n        this.flags |= 1;\r\n    }\r\n\r\n    this.last_result = this.reg8[reg_al];\r\n    this.last_op_size = OPSIZE_8;\r\n    this.last_op1 = this.last_op2 = 0;\r\n    this.flags_changed = flags_all & ~1 & ~flag_adjust & ~flag_overflow;\r\n}\r\n\r\nCPU.prototype.bcd_aam = function(imm8)\r\n{\r\n    //dbg_log(\"aam\");\r\n    // ascii adjust after multiplication\r\n\r\n    if(imm8 === 0)\r\n    {\r\n        this.trigger_de();\r\n    }\r\n    else\r\n    {\r\n        var temp = this.reg8[reg_al];\r\n        this.reg8[reg_ah] = temp / imm8;\r\n        this.reg8[reg_al] = temp % imm8;\r\n\r\n        this.last_result = this.reg8[reg_al];\r\n\r\n        this.flags_changed = flags_all & ~1 & ~flag_adjust & ~flag_overflow;\r\n        this.flags &= ~1 & ~flag_adjust & ~flag_overflow;\r\n    }\r\n}\r\n\r\nCPU.prototype.bcd_aad = function(imm8)\r\n{\r\n    //dbg_log(\"aad\");\r\n    // ascii adjust before division\r\n\r\n    var result = this.reg8[reg_al] + this.reg8[reg_ah] * imm8;\r\n    this.last_result = result & 0xFF;\r\n    this.reg16[reg_ax] = this.last_result;\r\n    this.last_op_size = OPSIZE_8;\r\n\r\n    this.flags_changed = flags_all & ~1 & ~flag_adjust & ~flag_overflow;\r\n    this.flags &= ~1 & ~flag_adjust & ~flag_overflow;\r\n\r\n    if(result > 0xFFFF)\r\n    {\r\n        this.flags |= 1;\r\n    }\r\n}\r\n\r\nCPU.prototype.bcd_aaa = function()\r\n{\r\n    //dbg_log(\"aaa\");\r\n    if((this.reg8[reg_al] & 0xF) > 9 || this.getaf())\r\n    {\r\n        this.reg16[reg_ax] += 6;\r\n        this.reg8[reg_ah] += 1;\r\n        this.flags |= flag_adjust | 1;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_adjust & ~1;\r\n    }\r\n    this.reg8[reg_al] &= 0xF;\r\n\r\n    this.flags_changed &= ~flag_adjust & ~1;\r\n};\r\n\r\n\r\nCPU.prototype.bcd_aas = function()\r\n{\r\n    //dbg_log(\"aas\");\r\n    if((this.reg8[reg_al] & 0xF) > 9 || this.getaf())\r\n    {\r\n        this.reg16[reg_ax] -= 6;\r\n        this.reg8[reg_ah] -= 1;\r\n        this.flags |= flag_adjust | 1;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_adjust & ~1;\r\n    }\r\n    this.reg8[reg_al] &= 0xF;\r\n\r\n    this.flags_changed &= ~flag_adjust & ~1;\r\n}\r\n\r\n\r\n/*                     \\O\r\n * bitwise functions    |\\\r\n *                     / \\\r\n *\r\n * and, or, xor, test\r\n * shl, shr, sar, rol, ror, rcl, ror\r\n * shrd, shld\r\n *\r\n * bt, bts, btr, btc\r\n * bsf, bsr\r\n */\r\n\r\nCPU.prototype.and8 = function(dest, src) { return this.and(dest, src, OPSIZE_8); }\r\nCPU.prototype.and16 = function(dest, src) { return this.and(dest, src, OPSIZE_16); }\r\nCPU.prototype.and32 = function(dest, src) { return this.and(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.test8 = function(dest, src) { return this.and(dest, src, OPSIZE_8); }\r\nCPU.prototype.test16 = function(dest, src) { return this.and(dest, src, OPSIZE_16); }\r\nCPU.prototype.test32 = function(dest, src) { return this.and(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.or8 = function(dest, src) { return this.or(dest, src, OPSIZE_8); }\r\nCPU.prototype.or16 = function(dest, src) { return this.or(dest, src, OPSIZE_16); }\r\nCPU.prototype.or32 = function(dest, src) { return this.or(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.xor8 = function(dest, src) { return this.xor(dest, src, OPSIZE_8); }\r\nCPU.prototype.xor16 = function(dest, src) { return this.xor(dest, src, OPSIZE_16); }\r\nCPU.prototype.xor32 = function(dest, src) { return this.xor(dest, src, OPSIZE_32); }\r\n\r\nCPU.prototype.and = function(dest_operand, source_operand, op_size)\r\n{\r\n    this.last_result = dest_operand & source_operand;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags &= ~1 & ~flag_overflow & ~flag_adjust;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow & ~flag_adjust;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.or = function(dest_operand, source_operand, op_size)\r\n{\r\n    this.last_result = dest_operand | source_operand;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags &= ~1 & ~flag_overflow & ~flag_adjust;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow & ~flag_adjust;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.xor = function(dest_operand, source_operand, op_size)\r\n{\r\n    this.last_result = dest_operand ^ source_operand;\r\n\r\n    this.last_op_size = op_size;\r\n    this.flags &= ~1 & ~flag_overflow & ~flag_adjust;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow & ~flag_adjust;\r\n\r\n    return this.last_result;\r\n}\r\n\r\n\r\n/*\r\n * rotates and shifts\r\n */\r\n\r\nCPU.prototype.rol8 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n    count &= 7;\r\n\r\n    var result = dest_operand << count | dest_operand >> (8 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result & 1)\r\n                | (result << 11 ^ result << 4) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rol16 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n    count &= 15;\r\n\r\n    var result = dest_operand << count | dest_operand >> (16 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result & 1)\r\n                | (result << 11 ^ result >> 4) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rol32 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand << count | dest_operand >>> (32 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result & 1)\r\n                | (result << 11 ^ result >> 20) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcl8 = function(dest_operand, count)\r\n{\r\n    count %= 9;\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand << count | this.getcf() << (count - 1) | dest_operand >> (9 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 8 & 1)\r\n                | (result << 3 ^ result << 4) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcl16 = function(dest_operand, count)\r\n{\r\n    count %= 17;\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand << count | this.getcf() << (count - 1) | dest_operand >> (17 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 16 & 1)\r\n                | (result >> 5 ^ result >> 4) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcl32 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand << count | this.getcf() << (count - 1);\r\n\r\n    if(count > 1)\r\n    {\r\n        result |= dest_operand >>> (33 - count);\r\n    }\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow) | (dest_operand >>> (32 - count) & 1);\r\n    this.flags |= (this.flags << 11 ^ result >> 20) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.ror8 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    count &= 7;\r\n    var result = dest_operand >> count | dest_operand << (8 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 7 & 1)\r\n                | (result << 4 ^ result << 5) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.ror16 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    count &= 15;\r\n    var result = dest_operand >> count | dest_operand << (16 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 15 & 1)\r\n                | (result >> 4 ^ result >> 3) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.ror32 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand >>> count | dest_operand << (32 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 31 & 1)\r\n                | (result >> 20 ^ result >> 19) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcr8 = function(dest_operand, count)\r\n{\r\n    count %= 9;\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand >> count | this.getcf() << (8 - count) | dest_operand << (9 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 8 & 1)\r\n                | (result << 4 ^ result << 5) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcr16 = function(dest_operand, count)\r\n{\r\n    count %= 17;\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand >> count | this.getcf() << (16 - count) | dest_operand << (17 - count);\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (result >> 16 & 1)\r\n                | (result >> 4 ^ result >> 3) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.rcr32 = function(dest_operand, count)\r\n{\r\n    if(!count)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    var result = dest_operand >>> count | this.getcf() << (32 - count);\r\n\r\n    if(count > 1)\r\n    {\r\n        result |= dest_operand << (33 - count);\r\n    }\r\n\r\n    this.flags_changed &= ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (dest_operand >> (count - 1) & 1)\r\n                | (result >> 20 ^ result >> 19) & flag_overflow;\r\n\r\n    return result;\r\n}\r\n\r\nCPU.prototype.shl8 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand << count;\r\n\r\n    this.last_op_size = OPSIZE_8;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (this.last_result >> 8 & 1)\r\n                | (this.last_result << 3 ^ this.last_result << 4) & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shl16 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand << count;\r\n\r\n    this.last_op_size = OPSIZE_16;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (this.last_result >> 16 & 1)\r\n                | (this.last_result >> 5 ^ this.last_result >> 4) & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shl32 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand << count;\r\n\r\n    this.last_op_size = OPSIZE_32;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    // test this\r\n    this.flags = (this.flags & ~1 & ~flag_overflow) | (dest_operand >>> (32 - count) & 1);\r\n    this.flags |= ((this.flags & 1) ^ (this.last_result >> 31 & 1)) << 11 & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shr8 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand >> count;\r\n\r\n    this.last_op_size = OPSIZE_8;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (dest_operand >> (count - 1) & 1)\r\n                | (dest_operand >> 7 & 1) << 11 & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shr16 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand >> count;\r\n\r\n    this.last_op_size = OPSIZE_16;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (dest_operand >> (count - 1) & 1)\r\n                | (dest_operand >> 4)  & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shr32 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand >>> count;\r\n\r\n    this.last_op_size = OPSIZE_32;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow)\r\n                | (dest_operand >>> (count - 1) & 1)\r\n                | (dest_operand >> 20) & flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.sar8 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    if(count < 8)\r\n    {\r\n        this.last_result = dest_operand << 24 >> count + 24;\r\n        // of is zero\r\n        this.flags = (this.flags & ~1 & ~flag_overflow) | (dest_operand >> (count - 1) & 1);\r\n    }\r\n    else\r\n    {\r\n        this.last_result = dest_operand << 24 >> 31;\r\n        this.flags = (this.flags & ~1 & ~flag_overflow) | (this.last_result & 1);\r\n    }\r\n\r\n    this.last_op_size = OPSIZE_8;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.sar16 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    if(count < 16)\r\n    {\r\n        this.last_result = dest_operand << 16 >> count + 16;\r\n        this.flags = (this.flags & ~1 & ~flag_overflow) | (dest_operand >> (count - 1) & 1);\r\n    }\r\n    else\r\n    {\r\n        this.last_result = dest_operand << 16 >> 31;\r\n        this.flags = (this.flags & ~1 & ~flag_overflow) | (this.last_result & 1);\r\n    }\r\n\r\n    this.last_op_size = OPSIZE_16;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.sar32 = function(dest_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand >> count;\r\n\r\n    this.last_op_size = OPSIZE_32;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1 & ~flag_overflow) | (dest_operand >>> (count - 1) & 1);\r\n\r\n    return this.last_result;\r\n}\r\n\r\n\r\nCPU.prototype.shrd16 = function(dest_operand, source_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    if(count <= 16)\r\n    {\r\n        this.last_result = dest_operand >> count | source_operand << (16 - count);\r\n        this.flags = (this.flags & ~1) | (dest_operand >> (count - 1) & 1);\r\n    }\r\n    else\r\n    {\r\n        this.last_result = dest_operand << (32 - count) | source_operand >> (count - 16);\r\n        this.flags = (this.flags & ~1) | (source_operand >> (count - 17) & 1);\r\n    }\r\n\r\n    this.last_op_size = OPSIZE_16;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~flag_overflow) | ((this.last_result ^ dest_operand) >> 4 & flag_overflow);\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shrd32 = function(dest_operand, source_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand >>> count | source_operand << (32 - count);\r\n\r\n    this.last_op_size = OPSIZE_32;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1) | (dest_operand >>> (count - 1) & 1);\r\n    this.flags = (this.flags & ~flag_overflow) | ((this.last_result ^ dest_operand) >> 20 & flag_overflow);\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shld16 = function(dest_operand, source_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    if(count <= 16)\r\n    {\r\n        this.last_result = dest_operand << count | source_operand >>> (16 - count);\r\n        this.flags = (this.flags & ~1) | (dest_operand >>> (16 - count) & 1);\r\n    }\r\n    else\r\n    {\r\n        this.last_result = dest_operand >> (32 - count) | source_operand << (count - 16);\r\n        this.flags = (this.flags & ~1) | (source_operand >>> (32 - count) & 1);\r\n    }\r\n\r\n    this.last_op_size = OPSIZE_16;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~flag_overflow) | ((this.flags & 1) ^ (this.last_result >> 15 & 1)) << 11;\r\n\r\n    return this.last_result;\r\n}\r\n\r\nCPU.prototype.shld32 = function(dest_operand, source_operand, count)\r\n{\r\n    if(count === 0)\r\n    {\r\n        return dest_operand;\r\n    }\r\n\r\n    this.last_result = dest_operand << count | source_operand >>> (32 - count);\r\n\r\n    this.last_op_size = OPSIZE_32;\r\n    this.flags_changed = flags_all & ~1 & ~flag_overflow;\r\n    this.flags = (this.flags & ~1) | (dest_operand >>> (32 - count) & 1);\r\n\r\n    if(count === 1)\r\n    {\r\n        this.flags = (this.flags & ~flag_overflow) | ((this.flags & 1) ^ (this.last_result >> 31 & 1)) << 11;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_overflow;\r\n    }\r\n\r\n    return this.last_result;\r\n}\r\n\r\n\r\nCPU.prototype.bt_reg = function(bit_base, bit_offset)\r\n{\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n}\r\n\r\nCPU.prototype.btc_reg = function(bit_base, bit_offset)\r\n{\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    return bit_base ^ 1 << bit_offset;\r\n}\r\n\r\nCPU.prototype.bts_reg = function(bit_base, bit_offset)\r\n{\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    return bit_base | 1 << bit_offset;\r\n}\r\n\r\nCPU.prototype.btr_reg = function(bit_base, bit_offset)\r\n{\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    return bit_base & ~(1 << bit_offset);\r\n}\r\n\r\nCPU.prototype.bt_mem = function(virt_addr, bit_offset)\r\n{\r\n    var bit_base = this.safe_read8(virt_addr + (bit_offset >> 3) | 0);\r\n    bit_offset &= 7;\r\n\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n}\r\n\r\nCPU.prototype.btc_mem = function(virt_addr, bit_offset)\r\n{\r\n    var phys_addr = this.translate_address_write(virt_addr + (bit_offset >> 3) | 0);\r\n    var bit_base = this.read8(phys_addr);\r\n\r\n    bit_offset &= 7;\r\n\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    this.write8(phys_addr, bit_base ^ 1 << bit_offset);\r\n}\r\n\r\nCPU.prototype.btr_mem = function(virt_addr, bit_offset)\r\n{\r\n    var phys_addr = this.translate_address_write(virt_addr + (bit_offset >> 3) | 0);\r\n    var bit_base = this.read8(phys_addr);\r\n\r\n    bit_offset &= 7;\r\n\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    this.write8(phys_addr, bit_base & ~(1 << bit_offset));\r\n}\r\n\r\nCPU.prototype.bts_mem = function(virt_addr, bit_offset)\r\n{\r\n    var phys_addr = this.translate_address_write(virt_addr + (bit_offset >> 3) | 0);\r\n    var bit_base = this.read8(phys_addr);\r\n\r\n    bit_offset &= 7;\r\n\r\n    this.flags = (this.flags & ~1) | (bit_base >> bit_offset & 1);\r\n    this.flags_changed &= ~1;\r\n\r\n    this.write8(phys_addr, bit_base | 1 << bit_offset);\r\n}\r\n\r\nCPU.prototype.bsf16 = function(old, bit_base)\r\n{\r\n    this.flags_changed = flags_all & ~flag_zero;\r\n    this.last_op_size = OPSIZE_16;\r\n\r\n    if(bit_base === 0)\r\n    {\r\n        this.flags |= flag_zero;\r\n        this.last_result = bit_base;\r\n\r\n        // not defined in the docs, but value doesn't change on my intel machine\r\n        return old;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_zero;\r\n\r\n        // http://jsperf.com/lowest-bit-index\r\n        return this.last_result = v86util.int_log2(-bit_base & bit_base);\r\n    }\r\n}\r\n\r\nCPU.prototype.bsf32 = function(old, bit_base)\r\n{\r\n    this.flags_changed = flags_all & ~flag_zero;\r\n    this.last_op_size = OPSIZE_32;\r\n\r\n    if(bit_base === 0)\r\n    {\r\n        this.flags |= flag_zero;\r\n        this.last_result = bit_base;\r\n        return old;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_zero;\r\n\r\n        return this.last_result = v86util.int_log2((-bit_base & bit_base) >>> 0);\r\n    }\r\n}\r\n\r\nCPU.prototype.bsr16 = function(old, bit_base)\r\n{\r\n    this.flags_changed = flags_all & ~flag_zero;\r\n    this.last_op_size = OPSIZE_16;\r\n\r\n    if(bit_base === 0)\r\n    {\r\n        this.flags |= flag_zero;\r\n        this.last_result = bit_base;\r\n        return old;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_zero;\r\n\r\n        return this.last_result = v86util.int_log2(bit_base);\r\n    }\r\n}\r\n\r\nCPU.prototype.bsr32 = function(old, bit_base)\r\n{\r\n    this.flags_changed = flags_all & ~flag_zero;\r\n    this.last_op_size = OPSIZE_32;\r\n\r\n    if(bit_base === 0)\r\n    {\r\n        this.flags |= flag_zero;\r\n        this.last_result = bit_base;\r\n        return old;\r\n    }\r\n    else\r\n    {\r\n        this.flags &= ~flag_zero;\r\n        return this.last_result = v86util.int_log2(bit_base >>> 0);\r\n    }\r\n}\r\n\r\nCPU.prototype.popcnt = function(v)\r\n{\r\n    this.flags_changed = 0;\r\n    this.flags &= ~flags_all;\r\n\r\n    if(v)\r\n    {\r\n        // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\r\n        v = v - ((v >> 1) & 0x55555555);\r\n        v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\r\n        return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\r\n    }\r\n    else\r\n    {\r\n        this.flags |= flag_zero;\r\n        return 0;\r\n    }\r\n};\r\n\r\nCPU.prototype.saturate_sw_to_ub = function(v)\r\n{\r\n    dbg_assert((v & 0xFFFF0000) === 0);\r\n\r\n    let ret = v >>> 0;\r\n    if (ret >= 0x8000) {\r\n        ret = 0;\r\n    }\r\n    else if (ret > 0xFF) {\r\n        ret = 0xFF;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFFFF00) === 0);\r\n    return ret;\r\n};\r\n\r\nCPU.prototype.saturate_sw_to_sb = function(v)\r\n{\r\n    dbg_assert((v & 0xFFFF0000) === 0);\r\n\r\n    let ret = v;\r\n\r\n    if (ret > 0xFF80) {\r\n        ret = ret & 0xFF;\r\n    }\r\n    else if (ret > 0x7FFF) {\r\n        ret = 0x80;\r\n    }\r\n    else if (ret > 0x7F) {\r\n        ret = 0x7F;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFFFF00) === 0);\r\n    return ret;\r\n};\r\n\r\nCPU.prototype.saturate_sd_to_sw = function(v)\r\n{\r\n    let ret = v >>> 0;\r\n\r\n    if (ret > 0xFFFF8000) {\r\n        ret = ret & 0xFFFF;\r\n    }\r\n    else if (ret > 0x7FFFFFFF) {\r\n        ret = 0x8000;\r\n    }\r\n    else if (ret > 0x7FFF) {\r\n        ret = 0x7FFF;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFF0000) === 0);\r\n    return ret;\r\n};\r\n\r\nCPU.prototype.saturate_sd_to_sb = function(v)\r\n{\r\n    let ret = v >>> 0;\r\n\r\n    if (ret > 0xFFFFFF80) {\r\n        ret = ret & 0xFF;\r\n    }\r\n    else if (ret > 0x7FFFFFFF) {\r\n        ret = 0x80;\r\n    }\r\n    else if (ret > 0x7F) {\r\n        ret = 0x7F;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFFFF00) === 0);\r\n    return ret;\r\n};\r\n\r\nCPU.prototype.saturate_sd_to_ub = function(v)\r\n{\r\n    let ret = v | 0;\r\n\r\n    if (ret < 0) {\r\n        ret = 0;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFFFF00) === 0);\r\n    return ret;\r\n};\r\n\r\n\r\nCPU.prototype.saturate_ud_to_ub = function(v)\r\n{\r\n    let ret = v >>> 0;\r\n\r\n    if (ret > 0xFF) {\r\n        ret = 0xFF;\r\n    }\r\n\r\n    dbg_assert((ret & 0xFFFFFF00) === 0);\r\n    return ret;\r\n};\r\n\r\nCPU.prototype.saturate_uw = function(v)\r\n{\r\n    dbg_assert(v >= 0);\r\n    return v > 0xFFFF ? 0xFFFF : v;\r\n};\r\n\r\nCPU.prototype.integer_round = function(f, rc)\r\n{\r\n    if(rc === 0)\r\n    {\r\n        // Round to nearest, or even if equidistant\r\n        var rounded = Math.round(f);\r\n\r\n        if(rounded - f === 0.5 && (rounded % 2))\r\n        {\r\n            // Special case: Math.round rounds to positive infinity\r\n            // if equidistant\r\n            rounded--;\r\n        }\r\n\r\n        return rounded;\r\n    }\r\n    // rc=3 is truncate -> floor for positive numbers\r\n    else if(rc === 1 || (rc === 3 && f > 0))\r\n    {\r\n        return Math.floor(f);\r\n    }\r\n    else\r\n    {\r\n        return Math.ceil(f);\r\n    }\r\n}\r\n","/*\r\n * Some miscellaneous instructions:\r\n *\r\n * jmpcc16, jmpcc32, jmp16\r\n * loop, loope, loopne, jcxz\r\n * test_cc\r\n *\r\n * mov, push, pop\r\n * pusha, popa\r\n * xchg, lss\r\n * lea\r\n * enter\r\n * bswap\r\n * fxsave, fxrstor\r\n */\r\n\"use strict\";\r\n\r\nCPU.prototype.jmpcc8 = function(condition)\r\n{\r\n    var imm8 = this.read_op8s();\r\n    if(condition)\r\n    {\r\n        this.instruction_pointer = this.instruction_pointer + imm8 | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n};\r\n\r\nCPU.prototype.jmp_rel16 = function(rel16)\r\n{\r\n    var current_cs = this.get_seg(reg_cs);\r\n\r\n    // limit ip to 16 bit\r\n    // ugly\r\n    this.instruction_pointer -= current_cs;\r\n    this.instruction_pointer = (this.instruction_pointer + rel16) & 0xFFFF;\r\n    this.instruction_pointer = this.instruction_pointer + current_cs | 0;\r\n};\r\n\r\nCPU.prototype.jmpcc16 = function(condition)\r\n{\r\n    var imm16 = this.read_op16();\r\n    if(condition)\r\n    {\r\n        this.jmp_rel16(imm16);\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n}\r\n\r\n\r\nCPU.prototype.jmpcc32 = function(condition)\r\n{\r\n    var imm32s = this.read_op32s();\r\n    if(condition)\r\n    {\r\n        // don't change to `this.instruction_pointer += this.read_op32s()`,\r\n        //   since read_op32s modifies instruction_pointer\r\n\r\n        this.instruction_pointer = this.instruction_pointer + imm32s | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n};\r\n\r\nCPU.prototype.cmovcc16 = function(condition)\r\n{\r\n    var data = this.read_e16();\r\n    if(condition)\r\n    {\r\n        this.write_g16(data);\r\n    }\r\n};\r\n\r\nCPU.prototype.cmovcc32 = function(condition)\r\n{\r\n    var data = this.read_e32s();\r\n    if(condition)\r\n    {\r\n        this.write_g32(data);\r\n    }\r\n};\r\n\r\nCPU.prototype.setcc = function(condition)\r\n{\r\n    this.set_e8(condition ? 1 : 0)\r\n};\r\n\r\nCPU.prototype.loopne = function(imm8s)\r\n{\r\n    if(this.decr_ecx_asize() && !this.getzf())\r\n    {\r\n        this.instruction_pointer = this.instruction_pointer + imm8s | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n}\r\n\r\nCPU.prototype.loope = function(imm8s)\r\n{\r\n    if(this.decr_ecx_asize() && this.getzf())\r\n    {\r\n        this.instruction_pointer = this.instruction_pointer + imm8s | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n}\r\n\r\nCPU.prototype.loop = function(imm8s)\r\n{\r\n    if(this.decr_ecx_asize())\r\n    {\r\n        this.instruction_pointer = this.instruction_pointer + imm8s | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n}\r\n\r\nCPU.prototype.jcxz = function(imm8s)\r\n{\r\n    if(this.get_reg_asize(reg_ecx) === 0)\r\n    {\r\n        this.instruction_pointer = this.instruction_pointer + imm8s | 0;\r\n        this.branch_taken();\r\n    }\r\n    else\r\n    {\r\n        this.branch_not_taken();\r\n    }\r\n};\r\n\r\n/**\r\n * @return {number}\r\n * @const\r\n */\r\nCPU.prototype.getcf = function()\r\n{\r\n    if(this.flags_changed & 1)\r\n    {\r\n        return (this.last_op1 ^ (this.last_op1 ^ this.last_op2) & (this.last_op2 ^ this.last_add_result)) >>> this.last_op_size & 1;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & 1;\r\n    }\r\n};\r\n\r\n/** @return {number} */\r\nCPU.prototype.getpf = function()\r\n{\r\n    if(this.flags_changed & flag_parity)\r\n    {\r\n        // inverted lookup table\r\n        return 0x9669 << 2 >> ((this.last_result ^ this.last_result >> 4) & 0xF) & flag_parity;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & flag_parity;\r\n    }\r\n};\r\n\r\n/** @return {number} */\r\nCPU.prototype.getaf = function()\r\n{\r\n    if(this.flags_changed & flag_adjust)\r\n    {\r\n        return (this.last_op1 ^ this.last_op2 ^ this.last_add_result) & flag_adjust;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & flag_adjust;\r\n    }\r\n};\r\n\r\n/** @return {number} */\r\nCPU.prototype.getzf = function()\r\n{\r\n    if(this.flags_changed & flag_zero)\r\n    {\r\n        return (~this.last_result & this.last_result - 1) >>> this.last_op_size & 1;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & flag_zero;\r\n    }\r\n};\r\n\r\n/** @return {number} */\r\nCPU.prototype.getsf = function()\r\n{\r\n    if(this.flags_changed & flag_sign)\r\n    {\r\n        return this.last_result >>> this.last_op_size & 1;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & flag_sign;\r\n    }\r\n};\r\n\r\n/** @return {number} */\r\nCPU.prototype.getof = function()\r\n{\r\n    if(this.flags_changed & flag_overflow)\r\n    {\r\n        return ((this.last_op1 ^ this.last_add_result) & (this.last_op2 ^ this.last_add_result)) >>> this.last_op_size & 1;\r\n    }\r\n    else\r\n    {\r\n        return this.flags & flag_overflow;\r\n    }\r\n};\r\n\r\nCPU.prototype.test_o = CPU.prototype.getof;\r\nCPU.prototype.test_b = CPU.prototype.getcf;\r\nCPU.prototype.test_z = CPU.prototype.getzf;\r\nCPU.prototype.test_s = CPU.prototype.getsf;\r\nCPU.prototype.test_p = CPU.prototype.getpf;\r\n\r\nCPU.prototype.test_be = function()\r\n{\r\n    // Idea:\r\n    //    return this.last_op1 <= this.last_op2;\r\n    return this.getcf() || this.getzf();\r\n}\r\n\r\nCPU.prototype.test_l = function()\r\n{\r\n    // Idea:\r\n    //    return this.last_add_result < this.last_op2;\r\n    return !this.getsf() !== !this.getof();\r\n}\r\n\r\nCPU.prototype.test_le = function()\r\n{\r\n    // Idea:\r\n    //    return this.last_add_result <= this.last_op2;\r\n    return this.getzf() || !this.getsf() !== !this.getof();\r\n}\r\n\r\n\r\n\r\nCPU.prototype.push16 = function(imm16)\r\n{\r\n    var sp = this.get_stack_pointer(-2);\r\n\r\n    this.safe_write16(sp, imm16);\r\n    this.adjust_stack_reg(-2);\r\n}\r\n\r\nCPU.prototype.push32 = function(imm32)\r\n{\r\n    var sp = this.get_stack_pointer(-4);\r\n\r\n    this.safe_write32(sp, imm32);\r\n    this.adjust_stack_reg(-4);\r\n}\r\n\r\nCPU.prototype.pop16 = function()\r\n{\r\n    var sp = this.get_seg(reg_ss) + this.get_stack_reg() | 0,\r\n        result = this.safe_read16(sp);\r\n\r\n    this.adjust_stack_reg(2);\r\n    return result;\r\n}\r\n\r\nCPU.prototype.pop32s = function()\r\n{\r\n    var sp = this.get_seg(reg_ss) + this.get_stack_reg() | 0,\r\n        result = this.safe_read32s(sp);\r\n\r\n    this.adjust_stack_reg(4);\r\n    return result;\r\n}\r\n\r\nCPU.prototype.pusha16 = function()\r\n{\r\n    var temp = this.reg16[reg_sp];\r\n\r\n    // make sure we don't get a pagefault after having\r\n    // pushed several registers already\r\n    this.writable_or_pagefault(this.get_stack_pointer(-16), 16);\r\n\r\n    this.push16(this.reg16[reg_ax]);\r\n    this.push16(this.reg16[reg_cx]);\r\n    this.push16(this.reg16[reg_dx]);\r\n    this.push16(this.reg16[reg_bx]);\r\n    this.push16(temp);\r\n    this.push16(this.reg16[reg_bp]);\r\n    this.push16(this.reg16[reg_si]);\r\n    this.push16(this.reg16[reg_di]);\r\n}\r\n\r\nCPU.prototype.pusha32 = function()\r\n{\r\n    var temp = this.reg32s[reg_esp];\r\n\r\n    this.writable_or_pagefault(this.get_stack_pointer(-32), 32);\r\n\r\n    this.push32(this.reg32s[reg_eax]);\r\n    this.push32(this.reg32s[reg_ecx]);\r\n    this.push32(this.reg32s[reg_edx]);\r\n    this.push32(this.reg32s[reg_ebx]);\r\n    this.push32(temp);\r\n    this.push32(this.reg32s[reg_ebp]);\r\n    this.push32(this.reg32s[reg_esi]);\r\n    this.push32(this.reg32s[reg_edi]);\r\n}\r\n\r\nCPU.prototype.popa16 = function()\r\n{\r\n    this.translate_address_read(this.get_stack_pointer(0));\r\n    this.translate_address_read(this.get_stack_pointer(15));\r\n\r\n    this.reg16[reg_di] = this.pop16();\r\n    this.reg16[reg_si] = this.pop16();\r\n    this.reg16[reg_bp] = this.pop16();\r\n    this.adjust_stack_reg(2);\r\n    this.reg16[reg_bx] = this.pop16();\r\n    this.reg16[reg_dx] = this.pop16();\r\n    this.reg16[reg_cx] = this.pop16();\r\n    this.reg16[reg_ax] = this.pop16();\r\n}\r\n\r\nCPU.prototype.popa32 = function()\r\n{\r\n    this.translate_address_read(this.get_stack_pointer(0));\r\n    this.translate_address_read(this.get_stack_pointer(31));\r\n\r\n    this.reg32s[reg_edi] = this.pop32s();\r\n    this.reg32s[reg_esi] = this.pop32s();\r\n    this.reg32s[reg_ebp] = this.pop32s();\r\n    this.adjust_stack_reg(4);\r\n    this.reg32s[reg_ebx] = this.pop32s();\r\n    this.reg32s[reg_edx] = this.pop32s();\r\n    this.reg32s[reg_ecx] = this.pop32s();\r\n    this.reg32s[reg_eax] = this.pop32s();\r\n}\r\n\r\nCPU.prototype.xchg8 = function(memory_data, modrm_byte)\r\n{\r\n    var mod = modrm_byte >> 1 & 0xC | modrm_byte >> 5 & 1,\r\n        tmp = this.reg8[mod];\r\n\r\n    this.reg8[mod] = memory_data;\r\n\r\n    return tmp;\r\n}\r\n\r\nCPU.prototype.xchg16 = function(memory_data, modrm_byte)\r\n{\r\n    var mod = modrm_byte >> 2 & 14,\r\n        tmp = this.reg16[mod];\r\n\r\n    this.reg16[mod] = memory_data;\r\n\r\n    return tmp;\r\n}\r\n\r\nCPU.prototype.xchg16r = function(operand)\r\n{\r\n    var temp = this.reg16[reg_ax];\r\n    this.reg16[reg_ax] = this.reg16[operand];\r\n    this.reg16[operand] = temp;\r\n}\r\n\r\nCPU.prototype.xchg32 = function(memory_data, modrm_byte)\r\n{\r\n    var mod = modrm_byte >> 3 & 7,\r\n        tmp = this.reg32s[mod];\r\n\r\n    this.reg32s[mod] = memory_data;\r\n\r\n    return tmp;\r\n}\r\n\r\nCPU.prototype.xchg32r = function(operand)\r\n{\r\n    var temp = this.reg32s[reg_eax];\r\n    this.reg32s[reg_eax] = this.reg32s[operand];\r\n    this.reg32s[operand] = temp;\r\n}\r\n\r\nCPU.prototype.lss16 = function(seg)\r\n{\r\n    if(this.modrm_byte >= 0xC0)\r\n    {\r\n        // 0xc4c4 #ud (EMULATOR_BOP) is used by reactos and windows to exit vm86 mode\r\n        this.trigger_ud();\r\n    }\r\n\r\n    var addr = this.modrm_resolve(this.modrm_byte);\r\n\r\n    var new_reg = this.safe_read16(addr),\r\n        new_seg = this.safe_read16(addr + 2 | 0);\r\n\r\n    this.switch_seg(seg, new_seg);\r\n\r\n    this.reg16[this.modrm_byte >> 2 & 14] = new_reg;\r\n}\r\n\r\nCPU.prototype.lss32 = function(seg)\r\n{\r\n    if(this.modrm_byte >= 0xC0)\r\n    {\r\n        this.trigger_ud();\r\n    }\r\n\r\n    var addr = this.modrm_resolve(this.modrm_byte);\r\n\r\n    var new_reg = this.safe_read32s(addr),\r\n        new_seg = this.safe_read16(addr + 4 | 0);\r\n\r\n    this.switch_seg(seg, new_seg);\r\n\r\n    this.reg32s[this.modrm_byte >> 3 & 7] = new_reg;\r\n}\r\n\r\nCPU.prototype.enter16 = function(size, nesting_level)\r\n{\r\n    nesting_level &= 31;\r\n\r\n    if(nesting_level) dbg_log(\"enter16 stack=\" + (this.stack_size_32 ? 32 : 16) + \" size=\" + size + \" nest=\" + nesting_level, LOG_CPU);\r\n    this.push16(this.reg16[reg_bp]);\r\n    var frame_temp = this.reg16[reg_sp];\r\n\r\n    if(nesting_level > 0)\r\n    {\r\n        var tmp_ebp = this.reg16[reg_ebp];\r\n        for(var i = 1; i < nesting_level; i++)\r\n        {\r\n            tmp_ebp -= 2;\r\n            this.push16(this.safe_read16(this.get_seg(reg_ss) + tmp_ebp | 0));\r\n        }\r\n        this.push16(frame_temp);\r\n    }\r\n    this.reg16[reg_bp] = frame_temp;\r\n    this.adjust_stack_reg(-size);\r\n};\r\n\r\nCPU.prototype.enter32 = function(size, nesting_level)\r\n{\r\n    nesting_level &= 31;\r\n\r\n    if(nesting_level) dbg_log(\"enter32 stack=\" + (this.stack_size_32 ? 32 : 16) + \" size=\" + size + \" nest=\" + nesting_level, LOG_CPU);\r\n    this.push32(this.reg32s[reg_ebp]);\r\n    var frame_temp = this.reg32s[reg_esp];\r\n\r\n    if(nesting_level > 0)\r\n    {\r\n        var tmp_ebp = this.reg32s[reg_ebp];\r\n        for(var i = 1; i < nesting_level; i++)\r\n        {\r\n            tmp_ebp -= 4;\r\n            this.push32(this.safe_read32s(this.get_seg(reg_ss) + tmp_ebp | 0));\r\n        }\r\n        this.push32(frame_temp);\r\n    }\r\n    this.reg32s[reg_ebp] = frame_temp;\r\n    this.adjust_stack_reg(-size);\r\n};\r\n\r\nCPU.prototype.bswap = function(reg)\r\n{\r\n    var temp = this.reg32s[reg];\r\n\r\n    this.reg32s[reg] = temp >>> 24 | temp << 24 | (temp >> 8 & 0xFF00) | (temp << 8 & 0xFF0000);\r\n}\r\n\r\nCPU.prototype.fxsave = function(addr)\r\n{\r\n    this.writable_or_pagefault(addr, 512);\r\n\r\n    this.safe_write16(addr + 0 | 0, this.fpu.control_word);\r\n    this.safe_write16(addr + 2 | 0, this.fpu.load_status_word());\r\n    this.safe_write8( addr + 4 | 0, ~this.fpu.stack_empty & 0xFF);\r\n    this.safe_write16(addr + 6 | 0, this.fpu.fpu_opcode);\r\n    this.safe_write32(addr + 8 | 0, this.fpu.fpu_ip);\r\n    this.safe_write16(addr + 12 | 0, this.fpu.fpu_ip_selector);\r\n    this.safe_write32(addr + 16 | 0, this.fpu.fpu_dp);\r\n    this.safe_write16(addr + 20 | 0, this.fpu.fpu_dp_selector);\r\n\r\n    this.safe_write32(addr + 24 | 0, this.mxcsr);\r\n    this.safe_write32(addr + 28 | 0, MXCSR_MASK);\r\n\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.fpu.store_m80(addr + 32 + (i << 4) | 0, this.fpu.st[this.fpu.stack_ptr + i & 7]);\r\n    }\r\n\r\n    // If the OSFXSR bit in control register CR4 is not set, the FXSAVE\r\n    // instruction may not save these registers. This behavior is\r\n    // implementation dependent.\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.safe_write32(addr + 160 + (i << 4) +  0 | 0, this.reg_xmm32s[i << 2 | 0]);\r\n        this.safe_write32(addr + 160 + (i << 4) +  4 | 0, this.reg_xmm32s[i << 2 | 1]);\r\n        this.safe_write32(addr + 160 + (i << 4) +  8 | 0, this.reg_xmm32s[i << 2 | 2]);\r\n        this.safe_write32(addr + 160 + (i << 4) + 12 | 0, this.reg_xmm32s[i << 2 | 3]);\r\n    }\r\n};\r\n\r\nCPU.prototype.fxrstor = function(addr)\r\n{\r\n    this.translate_address_read(addr | 0);\r\n    this.translate_address_read(addr + 511 | 0);\r\n\r\n    var new_mxcsr = this.safe_read32s(addr + 24 | 0);\r\n\r\n    if(new_mxcsr & ~MXCSR_MASK)\r\n    {\r\n        dbg_log(\"Invalid mxcsr bits: \" + h((new_mxcsr & ~MXCSR_MASK) >>> 0, 8));\r\n        this.trigger_gp(0);\r\n    }\r\n\r\n    this.fpu.control_word = this.safe_read16(addr + 0 | 0);\r\n    this.fpu.set_status_word(this.safe_read16(addr + 2 | 0));\r\n    this.fpu.stack_empty = ~this.safe_read8(addr + 4 | 0) & 0xFF;\r\n    this.fpu.fpu_opcode = this.safe_read16(addr + 6 | 0);\r\n    this.fpu.fpu_ip = this.safe_read32s(addr + 8 | 0);\r\n    this.fpu.fpu_ip = this.safe_read16(addr + 12 | 0);\r\n    this.fpu.fpu_dp = this.safe_read32s(addr + 16 | 0);\r\n    this.fpu.fpu_dp_selector = this.safe_read16(addr + 20 | 0);\r\n\r\n    this.mxcsr = new_mxcsr;\r\n\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.fpu.st[this.fpu.stack_ptr + i & 7] = this.fpu.load_m80(addr + 32 + (i << 4) | 0);\r\n    }\r\n\r\n    for(let i = 0; i < 8; i++)\r\n    {\r\n        this.reg_xmm32s[i << 2 | 0] = this.safe_read32s(addr + 160 + (i << 4) +  0 | 0);\r\n        this.reg_xmm32s[i << 2 | 1] = this.safe_read32s(addr + 160 + (i << 4) +  4 | 0);\r\n        this.reg_xmm32s[i << 2 | 2] = this.safe_read32s(addr + 160 + (i << 4) +  8 | 0);\r\n        this.reg_xmm32s[i << 2 | 3] = this.safe_read32s(addr + 160 + (i << 4) + 12 | 0);\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\nvar t = [];\r\nvar t16 = [];\r\nvar t32 = [];\r\n\r\nt[0x00] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.add8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x01] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.add16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x01] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.add32(cpu.read_write_e32(), cpu.read_g32s())); };\r\nt[0x02] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.add8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x03] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.add16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x03] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.add32(cpu.read_g32s(), cpu.read_e32s())); };\r\nt[0x04] = cpu => { cpu.reg8[reg_al] = cpu.add8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x05] = cpu => { cpu.reg16[reg_ax] = cpu.add16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x05] = cpu => { cpu.reg32s[reg_eax] = cpu.add32(cpu.reg32s[reg_eax], cpu.read_op32s()); };\r\n\r\nt16[0x06] = cpu => { cpu.push16(cpu.sreg[reg_es]); };\r\nt32[0x06] = cpu => { cpu.push32(cpu.sreg[reg_es]); };\r\nt16[0x07] = cpu => {\r\n    cpu.switch_seg(reg_es, cpu.safe_read16(cpu.get_stack_pointer(0)));\r\n    cpu.adjust_stack_reg(2);\r\n};\r\nt32[0x07] = cpu => {\r\n    cpu.switch_seg(reg_es, cpu.safe_read32s(cpu.get_stack_pointer(0)) & 0xFFFF);\r\n    cpu.adjust_stack_reg(4);\r\n};\r\n\r\nt[0x08] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.or8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x09] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.or16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x09] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.or32(cpu.read_write_e32(), cpu.read_g32s())); };\r\nt[0x0a] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.or8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x0b] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.or16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x0b] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.or32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x0c] = cpu => { cpu.reg8[reg_al] = cpu.or8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x0d] = cpu => { cpu.reg16[reg_ax] = cpu.or16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x0d] = cpu => { cpu.reg32s[reg_eax] = cpu.or32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\n\r\nt16[0x0E] = cpu => { cpu.push16(cpu.sreg[reg_cs]); };\r\nt32[0x0E] = cpu => { cpu.push32(cpu.sreg[reg_cs]); };\r\nt16[0x0F] = cpu => {\r\n    cpu.table0F_16[cpu.read_op0F()](cpu);\r\n};\r\nt32[0x0F] = cpu => {\r\n    cpu.table0F_32[cpu.read_op0F()](cpu);\r\n};\r\n\r\nt[0x10] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.adc8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x11] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.adc16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x11] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.adc32(cpu.read_write_e32(), cpu.read_g32s())); }\r\nt[0x12] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.adc8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x13] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.adc16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x13] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.adc32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x14] = cpu => { cpu.reg8[reg_al] = cpu.adc8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x15] = cpu => { cpu.reg16[reg_ax] = cpu.adc16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x15] = cpu => { cpu.reg32s[reg_eax] = cpu.adc32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\nt16[0x16] = cpu => { cpu.push16(cpu.sreg[reg_ss]); };\r\nt32[0x16] = cpu => { cpu.push32(cpu.sreg[reg_ss]); };\r\nt16[0x17] = cpu => {\r\n    cpu.switch_seg(reg_ss, cpu.safe_read16(cpu.get_stack_pointer(0)));\r\n    cpu.adjust_stack_reg(2);\r\n    cpu.clear_prefixes();\r\n    cpu.cycle_internal();\r\n};\r\nt32[0x17] = cpu => {\r\n    cpu.switch_seg(reg_ss, cpu.safe_read32s(cpu.get_stack_pointer(0)) & 0xFFFF);\r\n    cpu.adjust_stack_reg(4);\r\n    cpu.clear_prefixes();\r\n    cpu.cycle_internal();\r\n};\r\n\r\nt[0x18] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.sbb8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x19] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.sbb16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x19] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.sbb32(cpu.read_write_e32(), cpu.read_g32s())); }\r\nt[0x1a] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.sbb8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x1b] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.sbb16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x1b] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.sbb32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x1c] = cpu => { cpu.reg8[reg_al] = cpu.sbb8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x1d] = cpu => { cpu.reg16[reg_ax] = cpu.sbb16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x1d] = cpu => { cpu.reg32s[reg_eax] = cpu.sbb32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\n\r\nt16[0x1E] = cpu => { cpu.push16(cpu.sreg[reg_ds]); };\r\nt32[0x1E] = cpu => { cpu.push32(cpu.sreg[reg_ds]); };\r\nt16[0x1F] = cpu => {\r\n    cpu.switch_seg(reg_ds, cpu.safe_read16(cpu.get_stack_pointer(0)));\r\n    cpu.adjust_stack_reg(2);\r\n};\r\nt32[0x1F] = cpu => {\r\n    cpu.switch_seg(reg_ds, cpu.safe_read32s(cpu.get_stack_pointer(0)) & 0xFFFF);\r\n    cpu.adjust_stack_reg(4);\r\n};\r\n\r\nt[0x20] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.and8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x21] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.and16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x21] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.and32(cpu.read_write_e32(), cpu.read_g32s())); }\r\nt[0x22] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.and8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x23] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.and16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x23] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.and32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x24] = cpu => { cpu.reg8[reg_al] = cpu.and8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x25] = cpu => { cpu.reg16[reg_ax] = cpu.and16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x25] = cpu => { cpu.reg32s[reg_eax] = cpu.and32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\n\r\nt[0x26] = cpu => { cpu.segment_prefix_op(reg_es); };\r\nt[0x27] = cpu => { cpu.bcd_daa(); };\r\n\r\nt[0x28] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.sub8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x29] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.sub16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x29] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.sub32(cpu.read_write_e32(), cpu.read_g32s())); }\r\nt[0x2a] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.sub8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x2b] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.sub16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x2b] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.sub32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x2c] = cpu => { cpu.reg8[reg_al] = cpu.sub8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x2d] = cpu => { cpu.reg16[reg_ax] = cpu.sub16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x2d] = cpu => { cpu.reg32s[reg_eax] = cpu.sub32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\nt[0x2E] = cpu => { cpu.segment_prefix_op(reg_cs); };\r\nt[0x2F] = cpu => { cpu.bcd_das(); };\r\n\r\nt[0x30] = cpu => { cpu.read_modrm_byte(); cpu.write_e8(cpu.xor8(cpu.read_write_e8(), cpu.read_g8())); };\r\nt16[0x31] = cpu => { cpu.read_modrm_byte(); cpu.write_e16(cpu.xor16(cpu.read_write_e16(), cpu.read_g16())); };\r\nt32[0x31] = cpu => { cpu.read_modrm_byte(); cpu.write_e32(cpu.xor32(cpu.read_write_e32(), cpu.read_g32s())); }\r\nt[0x32] = cpu => { cpu.read_modrm_byte(); cpu.write_g8(cpu.xor8(cpu.read_g8(), cpu.read_e8())); };\r\nt16[0x33] = cpu => { cpu.read_modrm_byte(); cpu.write_g16(cpu.xor16(cpu.read_g16(), cpu.read_e16())); };\r\nt32[0x33] = cpu => { cpu.read_modrm_byte(); cpu.write_g32(cpu.xor32(cpu.read_g32s(), cpu.read_e32s())); }\r\nt[0x34] = cpu => { cpu.reg8[reg_al] = cpu.xor8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x35] = cpu => { cpu.reg16[reg_ax] = cpu.xor16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x35] = cpu => { cpu.reg32s[reg_eax] = cpu.xor32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\nt[0x36] = cpu => { cpu.segment_prefix_op(reg_ss); };\r\nt[0x37] = cpu => { cpu.bcd_aaa(); };\r\n\r\nt[0x38] = cpu => { cpu.read_modrm_byte(); cpu.cmp8(cpu.read_e8(), cpu.read_g8()); };\r\nt16[0x39] = cpu => { cpu.read_modrm_byte(); cpu.cmp16(cpu.read_e16(), cpu.read_g16()); };\r\nt32[0x39] = cpu => { cpu.read_modrm_byte(); cpu.cmp32(cpu.read_e32s(), cpu.read_g32s()); }\r\nt[0x3A] = cpu => { cpu.read_modrm_byte(); cpu.cmp8(cpu.read_g8(), cpu.read_e8()); };\r\nt16[0x3B] = cpu => { cpu.read_modrm_byte(); cpu.cmp16(cpu.read_g16(), cpu.read_e16()); };\r\nt32[0x3B] = cpu => { cpu.read_modrm_byte(); cpu.cmp32(cpu.read_g32s(), cpu.read_e32s()); }\r\nt[0x3C] = cpu => { cpu.cmp8(cpu.reg8[reg_al], cpu.read_op8()); };\r\nt16[0x3D] = cpu => { cpu.cmp16(cpu.reg16[reg_ax], cpu.read_op16()); };\r\nt32[0x3D] = cpu => { cpu.cmp32(cpu.reg32s[reg_eax], cpu.read_op32s()); }\r\n\r\nt[0x3E] = cpu => { cpu.segment_prefix_op(reg_ds); };\r\nt[0x3F] = cpu => { cpu.bcd_aas(); };\r\n\r\n\r\nt16[0x40] = cpu => { cpu.reg16[reg_ax] = cpu.inc16(cpu.reg16[reg_ax]); };\r\nt32[0x40] = cpu => { cpu.reg32s[reg_eax] = cpu.inc32(cpu.reg32s[reg_eax]); };\r\nt16[0x41] = cpu => { cpu.reg16[reg_cx] = cpu.inc16(cpu.reg16[reg_cx]); };\r\nt32[0x41] = cpu => { cpu.reg32s[reg_ecx] = cpu.inc32(cpu.reg32s[reg_ecx]); };\r\nt16[0x42] = cpu => { cpu.reg16[reg_dx] = cpu.inc16(cpu.reg16[reg_dx]); };\r\nt32[0x42] = cpu => { cpu.reg32s[reg_edx] = cpu.inc32(cpu.reg32s[reg_edx]); };\r\nt16[0x43] = cpu => { cpu.reg16[reg_bx] = cpu.inc16(cpu.reg16[reg_bx]); };\r\nt32[0x43] = cpu => { cpu.reg32s[reg_ebx] = cpu.inc32(cpu.reg32s[reg_ebx]); };\r\nt16[0x44] = cpu => { cpu.reg16[reg_sp] = cpu.inc16(cpu.reg16[reg_sp]); };\r\nt32[0x44] = cpu => { cpu.reg32s[reg_esp] = cpu.inc32(cpu.reg32s[reg_esp]); };\r\nt16[0x45] = cpu => { cpu.reg16[reg_bp] = cpu.inc16(cpu.reg16[reg_bp]); };\r\nt32[0x45] = cpu => { cpu.reg32s[reg_ebp] = cpu.inc32(cpu.reg32s[reg_ebp]); };\r\nt16[0x46] = cpu => { cpu.reg16[reg_si] = cpu.inc16(cpu.reg16[reg_si]); };\r\nt32[0x46] = cpu => { cpu.reg32s[reg_esi] = cpu.inc32(cpu.reg32s[reg_esi]); };\r\nt16[0x47] = cpu => { cpu.reg16[reg_di] = cpu.inc16(cpu.reg16[reg_di]); };\r\nt32[0x47] = cpu => { cpu.reg32s[reg_edi] = cpu.inc32(cpu.reg32s[reg_edi]); };\r\n\r\n\r\nt16[0x48] = cpu => { cpu.reg16[reg_ax] = cpu.dec16(cpu.reg16[reg_ax]); };\r\nt32[0x48] = cpu => { cpu.reg32s[reg_eax] = cpu.dec32(cpu.reg32s[reg_eax]); };\r\nt16[0x49] = cpu => { cpu.reg16[reg_cx] = cpu.dec16(cpu.reg16[reg_cx]); };\r\nt32[0x49] = cpu => { cpu.reg32s[reg_ecx] = cpu.dec32(cpu.reg32s[reg_ecx]); };\r\nt16[0x4A] = cpu => { cpu.reg16[reg_dx] = cpu.dec16(cpu.reg16[reg_dx]); };\r\nt32[0x4A] = cpu => { cpu.reg32s[reg_edx] = cpu.dec32(cpu.reg32s[reg_edx]); };\r\nt16[0x4B] = cpu => { cpu.reg16[reg_bx] = cpu.dec16(cpu.reg16[reg_bx]); };\r\nt32[0x4B] = cpu => { cpu.reg32s[reg_ebx] = cpu.dec32(cpu.reg32s[reg_ebx]); };\r\nt16[0x4C] = cpu => { cpu.reg16[reg_sp] = cpu.dec16(cpu.reg16[reg_sp]); };\r\nt32[0x4C] = cpu => { cpu.reg32s[reg_esp] = cpu.dec32(cpu.reg32s[reg_esp]); };\r\nt16[0x4D] = cpu => { cpu.reg16[reg_bp] = cpu.dec16(cpu.reg16[reg_bp]); };\r\nt32[0x4D] = cpu => { cpu.reg32s[reg_ebp] = cpu.dec32(cpu.reg32s[reg_ebp]); };\r\nt16[0x4E] = cpu => { cpu.reg16[reg_si] = cpu.dec16(cpu.reg16[reg_si]); };\r\nt32[0x4E] = cpu => { cpu.reg32s[reg_esi] = cpu.dec32(cpu.reg32s[reg_esi]); };\r\nt16[0x4F] = cpu => { cpu.reg16[reg_di] = cpu.dec16(cpu.reg16[reg_di]); };\r\nt32[0x4F] = cpu => { cpu.reg32s[reg_edi] = cpu.dec32(cpu.reg32s[reg_edi]); };\r\n\r\n\r\nt16[0x50] = cpu => { cpu.push16(cpu.reg16[reg_ax]); };\r\nt32[0x50] = cpu => { cpu.push32(cpu.reg32s[reg_eax]); }\r\nt16[0x51] = cpu => { cpu.push16(cpu.reg16[reg_cx]); };\r\nt32[0x51] = cpu => { cpu.push32(cpu.reg32s[reg_ecx]); }\r\nt16[0x52] = cpu => { cpu.push16(cpu.reg16[reg_dx]); };\r\nt32[0x52] = cpu => { cpu.push32(cpu.reg32s[reg_edx]); }\r\nt16[0x53] = cpu => { cpu.push16(cpu.reg16[reg_bx]); };\r\nt32[0x53] = cpu => { cpu.push32(cpu.reg32s[reg_ebx]); }\r\nt16[0x54] = cpu => { cpu.push16(cpu.reg16[reg_sp]); };\r\nt32[0x54] = cpu => { cpu.push32(cpu.reg32s[reg_esp]); }\r\nt16[0x55] = cpu => { cpu.push16(cpu.reg16[reg_bp]); };\r\nt32[0x55] = cpu => { cpu.push32(cpu.reg32s[reg_ebp]); }\r\nt16[0x56] = cpu => { cpu.push16(cpu.reg16[reg_si]); };\r\nt32[0x56] = cpu => { cpu.push32(cpu.reg32s[reg_esi]); }\r\nt16[0x57] = cpu => { cpu.push16(cpu.reg16[reg_di]); };\r\nt32[0x57] = cpu => { cpu.push32(cpu.reg32s[reg_edi]); }\r\n\r\nt16[0x58] = cpu => { cpu.reg16[reg_ax] = cpu.pop16(); };\r\nt32[0x58] = cpu => { cpu.reg32s[reg_eax] = cpu.pop32s(); }\r\nt16[0x59] = cpu => { cpu.reg16[reg_cx] = cpu.pop16(); };\r\nt32[0x59] = cpu => { cpu.reg32s[reg_ecx] = cpu.pop32s(); }\r\nt16[0x5A] = cpu => { cpu.reg16[reg_dx] = cpu.pop16(); };\r\nt32[0x5A] = cpu => { cpu.reg32s[reg_edx] = cpu.pop32s(); }\r\nt16[0x5B] = cpu => { cpu.reg16[reg_bx] = cpu.pop16(); };\r\nt32[0x5B] = cpu => { cpu.reg32s[reg_ebx] = cpu.pop32s(); }\r\nt16[0x5C] = cpu => { cpu.reg16[reg_sp] = cpu.pop16(); };\r\nt32[0x5C] = cpu => { cpu.reg32s[reg_esp] = cpu.pop32s(); }\r\nt16[0x5D] = cpu => { cpu.reg16[reg_bp] = cpu.pop16(); };\r\nt32[0x5D] = cpu => { cpu.reg32s[reg_ebp] = cpu.pop32s(); }\r\nt16[0x5E] = cpu => { cpu.reg16[reg_si] = cpu.pop16(); };\r\nt32[0x5E] = cpu => { cpu.reg32s[reg_esi] = cpu.pop32s(); }\r\nt16[0x5F] = cpu => { cpu.reg16[reg_di] = cpu.pop16(); };\r\nt32[0x5F] = cpu => { cpu.reg32s[reg_edi] = cpu.pop32s(); }\r\n\r\n\r\nt16[0x60] = cpu => { cpu.pusha16(); };\r\nt32[0x60] = cpu => { cpu.pusha32(); };\r\nt16[0x61] = cpu => { cpu.popa16(); };\r\nt32[0x61] = cpu => { cpu.popa32(); };\r\n\r\nt[0x62] = cpu => {\r\n    // bound\r\n    dbg_log(\"Unimplemented BOUND instruction\", LOG_CPU);\r\n    dbg_assert(false);\r\n};\r\nt[0x63] = cpu => { cpu.read_modrm_byte();\r\n    // arpl\r\n    //dbg_log(\"arpl\", LOG_CPU);\r\n    if(cpu.protected_mode && !cpu.vm86_mode())\r\n    {\r\n        cpu.write_e16(cpu.arpl(cpu.read_write_e16(), cpu.modrm_byte >> 2 & 14));\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"arpl #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n};\r\n\r\nt[0x64] = cpu => { cpu.segment_prefix_op(reg_fs); };\r\nt[0x65] = cpu => { cpu.segment_prefix_op(reg_gs); };\r\n\r\nt[0x66] = cpu => {\r\n    // Operand-size override prefix\r\n    cpu.prefixes |= PREFIX_MASK_OPSIZE;\r\n    cpu.run_prefix_instruction();\r\n    cpu.prefixes = 0;\r\n};\r\n\r\nt[0x67] = cpu => {\r\n    // Address-size override prefix\r\n    dbg_assert(cpu.is_asize_32() === cpu.is_32);\r\n\r\n    cpu.prefixes |= PREFIX_MASK_ADDRSIZE;\r\n    cpu.run_prefix_instruction();\r\n    cpu.prefixes = 0;\r\n};\r\n\r\nt16[0x68] = cpu => { cpu.push16(cpu.read_op16()); };\r\nt32[0x68] = cpu => { cpu.push32(cpu.read_op32s()); };\r\n\r\nt16[0x69] = cpu => { cpu.read_modrm_byte();\r\n    cpu.write_g16(cpu.imul_reg16(cpu.read_e16s(), cpu.read_op16() << 16 >> 16));\r\n};\r\nt32[0x69] = cpu => { cpu.read_modrm_byte();\r\n    cpu.write_g32(cpu.imul_reg32(cpu.read_e32s(), cpu.read_op32s()));\r\n};\r\n\r\nt16[0x6A] = cpu => { cpu.push16(cpu.read_op8s()); };\r\nt32[0x6A] = cpu => { cpu.push32(cpu.read_op8s()); };\r\n\r\nt16[0x6B] = cpu => { cpu.read_modrm_byte();\r\n    cpu.write_g16(cpu.imul_reg16(cpu.read_e16s(), cpu.read_op8s()));\r\n};\r\nt32[0x6B] = cpu => { cpu.read_modrm_byte();\r\n    cpu.write_g32(cpu.imul_reg32(cpu.read_e32s(), cpu.read_op8s()));\r\n};\r\n\r\nt[0x6C] = cpu => { insb(cpu); };\r\nt16[0x6D] = cpu => { insw(cpu); };\r\nt32[0x6D] = cpu => { insd(cpu); };\r\nt[0x6E] = cpu => { outsb(cpu); };\r\nt16[0x6F] = cpu => { outsw(cpu); };\r\nt32[0x6F] = cpu => { outsd(cpu); };\r\n\r\nt[0x70] = cpu => { cpu.jmpcc8( cpu.test_o()); };\r\nt[0x71] = cpu => { cpu.jmpcc8(!cpu.test_o()); };\r\nt[0x72] = cpu => { cpu.jmpcc8( cpu.test_b()); };\r\nt[0x73] = cpu => { cpu.jmpcc8(!cpu.test_b()); };\r\nt[0x74] = cpu => { cpu.jmpcc8( cpu.test_z()); };\r\nt[0x75] = cpu => { cpu.jmpcc8(!cpu.test_z()); };\r\nt[0x76] = cpu => { cpu.jmpcc8( cpu.test_be()); };\r\nt[0x77] = cpu => { cpu.jmpcc8(!cpu.test_be()); };\r\nt[0x78] = cpu => { cpu.jmpcc8( cpu.test_s()); };\r\nt[0x79] = cpu => { cpu.jmpcc8(!cpu.test_s()); };\r\nt[0x7A] = cpu => { cpu.jmpcc8( cpu.test_p()); };\r\nt[0x7B] = cpu => { cpu.jmpcc8(!cpu.test_p()); };\r\nt[0x7C] = cpu => { cpu.jmpcc8( cpu.test_l()); };\r\nt[0x7D] = cpu => { cpu.jmpcc8(!cpu.test_l()); };\r\nt[0x7E] = cpu => { cpu.jmpcc8( cpu.test_le()); };\r\nt[0x7F] = cpu => { cpu.jmpcc8(!cpu.test_le()); };\r\n\r\nt[0x80] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: cpu.write_e8(cpu.add8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 1: cpu.write_e8(cpu. or8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 2: cpu.write_e8(cpu.adc8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 3: cpu.write_e8(cpu.sbb8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 4: cpu.write_e8(cpu.and8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 5: cpu.write_e8(cpu.sub8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 6: cpu.write_e8(cpu.xor8(cpu.read_write_e8(), cpu.read_op8())); break;\r\n        case 7: cpu.cmp8(cpu.read_e8(), cpu.read_op8()); break;\r\n    }\r\n};\r\nt16[0x81] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: cpu.write_e16(cpu.add16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 1: cpu.write_e16(cpu. or16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 2: cpu.write_e16(cpu.adc16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 3: cpu.write_e16(cpu.sbb16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 4: cpu.write_e16(cpu.and16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 5: cpu.write_e16(cpu.sub16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 6: cpu.write_e16(cpu.xor16(cpu.read_write_e16(), cpu.read_op16())); break;\r\n        case 7: cpu.cmp16(cpu.read_e16(), cpu.read_op16()); break;\r\n    }\r\n};\r\nt32[0x81] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: cpu.write_e32(cpu.add32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 1: cpu.write_e32(cpu. or32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 2: cpu.write_e32(cpu.adc32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 3: cpu.write_e32(cpu.sbb32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 4: cpu.write_e32(cpu.and32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 5: cpu.write_e32(cpu.sub32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 6: cpu.write_e32(cpu.xor32(cpu.read_write_e32(), cpu.read_op32s())); break;\r\n        case 7: cpu.cmp32(cpu.read_e32s(), cpu.read_op32s()); break;\r\n    }\r\n};\r\nt[0x82] = t[0x80]; // alias\r\nt16[0x83] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: cpu.write_e16(cpu.add16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 1: cpu.write_e16(cpu. or16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 2: cpu.write_e16(cpu.adc16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 3: cpu.write_e16(cpu.sbb16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 4: cpu.write_e16(cpu.and16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 5: cpu.write_e16(cpu.sub16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 6: cpu.write_e16(cpu.xor16(cpu.read_write_e16(), cpu.read_op8s())); break;\r\n        case 7: cpu.cmp16(cpu.read_e16(), cpu.read_op8s()); break;\r\n    }\r\n};\r\nt32[0x83] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: cpu.write_e32(cpu.add32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 1: cpu.write_e32(cpu. or32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 2: cpu.write_e32(cpu.adc32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 3: cpu.write_e32(cpu.sbb32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 4: cpu.write_e32(cpu.and32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 5: cpu.write_e32(cpu.sub32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 6: cpu.write_e32(cpu.xor32(cpu.read_write_e32(), cpu.read_op8s())); break;\r\n        case 7: cpu.cmp32(cpu.read_e32s(), cpu.read_op8s()); break;\r\n    }\r\n};\r\n\r\nt[0x84] = cpu => { cpu.read_modrm_byte(); var data = cpu.read_e8(); cpu.test8(data, cpu.read_g8()); };\r\nt16[0x85] = cpu => { cpu.read_modrm_byte(); var data = cpu.read_e16(); cpu.test16(data, cpu.read_g16()); };\r\nt32[0x85] = cpu => { cpu.read_modrm_byte(); var data = cpu.read_e32s(); cpu.test32(data, cpu.read_g32s()); }\r\n\r\n\r\nt[0x86] = cpu => { cpu.read_modrm_byte(); var data = cpu.read_write_e8(); cpu.write_e8(cpu.xchg8(data, cpu.modrm_byte)); };\r\nt16[0x87] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16(); cpu.write_e16(cpu.xchg16(data, cpu.modrm_byte));\r\n};\r\nt32[0x87] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32(); cpu.write_e32(cpu.xchg32(data, cpu.modrm_byte));\r\n};\r\n\r\nt[0x88] = cpu => { cpu.read_modrm_byte(); cpu.set_e8(cpu.read_g8()); };\r\nt16[0x89] = cpu => { cpu.read_modrm_byte(); cpu.set_e16(cpu.read_g16()); };\r\nt32[0x89] = cpu => { cpu.read_modrm_byte(); cpu.set_e32(cpu.read_g32s()); }\r\n\r\nt[0x8A] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e8();\r\n    cpu.write_g8(data);\r\n};\r\nt16[0x8B] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(data);\r\n};\r\nt32[0x8B] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e32s();\r\n    cpu.write_g32(data);\r\n};\r\n\r\nt16[0x8C] = cpu => { cpu.read_modrm_byte();\r\n    cpu.set_e16(cpu.sreg[cpu.modrm_byte >> 3 & 7]);\r\n};\r\nt32[0x8C] = cpu => { cpu.read_modrm_byte();\r\n    cpu.set_e32(cpu.sreg[cpu.modrm_byte >> 3 & 7]);\r\n};\r\n\r\nt16[0x8D] = cpu => { cpu.read_modrm_byte();\r\n    // lea\r\n    if(cpu.modrm_byte >= 0xC0)\r\n    {\r\n        dbg_log(\"lea #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var mod = cpu.modrm_byte >> 3 & 7;\r\n\r\n    // override prefix, so modrm_resolve does not return the segment part\r\n    cpu.prefixes |= SEG_PREFIX_ZERO;\r\n    cpu.reg16[mod << 1] = cpu.modrm_resolve(cpu.modrm_byte);\r\n    cpu.prefixes = 0;\r\n};\r\nt32[0x8D] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte >= 0xC0)\r\n    {\r\n        dbg_log(\"lea #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var mod = cpu.modrm_byte >> 3 & 7;\r\n\r\n    cpu.prefixes |= SEG_PREFIX_ZERO;\r\n    cpu.reg32s[mod] = cpu.modrm_resolve(cpu.modrm_byte);\r\n    cpu.prefixes = 0;\r\n};\r\n\r\nt[0x8E] = cpu => { cpu.read_modrm_byte();\r\n    var mod = cpu.modrm_byte >> 3 & 7;\r\n    var data = cpu.read_e16();\r\n    cpu.switch_seg(mod, data);\r\n\r\n    if(mod === reg_ss)\r\n    {\r\n        // run next instruction, so no interrupts are handled\r\n        cpu.clear_prefixes();\r\n        cpu.cycle_internal();\r\n    }\r\n};\r\n\r\nt16[0x8F] = cpu => { cpu.read_modrm_byte();\r\n    // pop\r\n    var sp = cpu.safe_read16(cpu.get_stack_pointer(0));\r\n\r\n    cpu.adjust_stack_reg(2);\r\n\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.adjust_stack_reg(-2);\r\n        cpu.safe_write16(addr, sp);\r\n        cpu.adjust_stack_reg(2);\r\n    } else {\r\n        cpu.write_reg_e16(sp);\r\n    }\r\n};\r\nt32[0x8F] = cpu => { cpu.read_modrm_byte();\r\n    var sp = cpu.safe_read32s(cpu.get_stack_pointer(0));\r\n\r\n    // change esp first, then resolve modrm address\r\n    cpu.adjust_stack_reg(4);\r\n\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n\r\n        // Before attempting a write that might cause a page fault,\r\n        // we must set esp to the old value. Fuck Intel.\r\n        cpu.adjust_stack_reg(-4);\r\n        cpu.safe_write32(addr, sp);\r\n        cpu.adjust_stack_reg(4);\r\n    } else {\r\n        cpu.write_reg_e32(sp);\r\n    }\r\n};\r\n\r\nt[0x90] = cpu => { };\r\nt16[0x91] = cpu => { cpu.xchg16r(reg_cx) };\r\nt32[0x91] = cpu => { cpu.xchg32r(reg_ecx) };\r\nt16[0x92] = cpu => { cpu.xchg16r(reg_dx) };\r\nt32[0x92] = cpu => { cpu.xchg32r(reg_edx) };\r\nt16[0x93] = cpu => { cpu.xchg16r(reg_bx) };\r\nt32[0x93] = cpu => { cpu.xchg32r(reg_ebx) };\r\nt16[0x94] = cpu => { cpu.xchg16r(reg_sp) };\r\nt32[0x94] = cpu => { cpu.xchg32r(reg_esp) };\r\nt16[0x95] = cpu => { cpu.xchg16r(reg_bp) };\r\nt32[0x95] = cpu => { cpu.xchg32r(reg_ebp) };\r\nt16[0x96] = cpu => { cpu.xchg16r(reg_si) };\r\nt32[0x96] = cpu => { cpu.xchg32r(reg_esi) };\r\nt16[0x97] = cpu => { cpu.xchg16r(reg_di) };\r\nt32[0x97] = cpu => { cpu.xchg32r(reg_edi) };\r\n\r\nt16[0x98] = cpu => { /* cbw */ cpu.reg16[reg_ax] = cpu.reg8s[reg_al]; };\r\nt32[0x98] = cpu => { /* cwde */ cpu.reg32s[reg_eax] = cpu.reg16s[reg_ax]; };\r\nt16[0x99] = cpu => { /* cwd */ cpu.reg16[reg_dx] = cpu.reg16s[reg_ax] >> 15; };\r\nt32[0x99] = cpu => { /* cdq */ cpu.reg32s[reg_edx] = cpu.reg32s[reg_eax] >> 31; };\r\n\r\nt16[0x9A] = cpu => {\r\n    // callf\r\n    var new_ip = cpu.read_op16();\r\n    var new_cs = cpu.read_disp16();\r\n\r\n    cpu.far_jump(new_ip, new_cs, true);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt32[0x9A] = cpu => {\r\n    var new_ip = cpu.read_op32s();\r\n    var new_cs = cpu.read_disp16();\r\n\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        if(new_ip & 0xFFFF0000)\r\n        {\r\n            throw cpu.debug.unimpl(\"#GP handler\");\r\n        }\r\n    }\r\n\r\n    cpu.far_jump(new_ip, new_cs, true);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\n\r\nt[0x9B] = cpu => {\r\n    // fwait: check for pending fpu exceptions\r\n    if((cpu.cr[0] & (CR0_MP | CR0_TS)) === (CR0_MP | CR0_TS))\r\n    {\r\n        // task switched and MP bit is set\r\n        cpu.trigger_nm();\r\n    }\r\n    else\r\n    {\r\n        if(cpu.fpu)\r\n        {\r\n            cpu.fpu.fwait();\r\n        }\r\n        else\r\n        {\r\n            // EM bit isn't checked\r\n            // If there's no FPU, do nothing\r\n        }\r\n    }\r\n};\r\nt16[0x9C] = cpu => {\r\n    // pushf\r\n    if((cpu.flags & flag_vm) && cpu.getiopl() < 3)\r\n    {\r\n        dbg_assert(cpu.protected_mode);\r\n        dbg_log(\"pushf #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n    else\r\n    {\r\n        cpu.push16(cpu.get_eflags());\r\n    }\r\n};\r\nt32[0x9C] = cpu => {\r\n    // pushf\r\n    if((cpu.flags & flag_vm) && cpu.getiopl() < 3)\r\n    {\r\n        // trap to virtual 8086 monitor\r\n        dbg_assert(cpu.protected_mode);\r\n        dbg_log(\"pushf #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n    else\r\n    {\r\n        // vm and rf flag are cleared in image stored on the stack\r\n        cpu.push32(cpu.get_eflags() & 0x00FCFFFF);\r\n    }\r\n};\r\nt16[0x9D] = cpu => {\r\n    // popf\r\n    if((cpu.flags & flag_vm) && cpu.getiopl() < 3)\r\n    {\r\n        dbg_log(\"popf #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    cpu.update_eflags((cpu.flags & ~0xFFFF) | cpu.pop16());\r\n\r\n    if(cpu.flags & flag_trap)\r\n    {\r\n        // XXX: Problems with fdgame\r\n        //cpu.clear_prefixes();\r\n        //cpu.cycle_internal();\r\n        cpu.flags &= ~flag_trap;\r\n        //cpu.instruction_pointer = cpu.previous_ip;\r\n        //cpu.raise_exception(1);\r\n    }\r\n    else\r\n    {\r\n        cpu.handle_irqs();\r\n    }\r\n};\r\nt32[0x9D] = cpu => {\r\n    // popf\r\n    if((cpu.flags & flag_vm) && cpu.getiopl() < 3)\r\n    {\r\n        dbg_log(\"popf #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    cpu.update_eflags(cpu.pop32s());\r\n    cpu.handle_irqs();\r\n};\r\nt[0x9E] = cpu => {\r\n    // sahf\r\n    cpu.flags = (cpu.flags & ~0xFF) | cpu.reg8[reg_ah];\r\n    cpu.flags = (cpu.flags & flags_mask) | flags_default;\r\n    cpu.flags_changed = 0;\r\n};\r\nt[0x9F] = cpu => {\r\n    // lahf\r\n    cpu.reg8[reg_ah] = cpu.get_eflags();\r\n};\r\n\r\nt[0xA0] = cpu => {\r\n    // mov\r\n    var data = cpu.safe_read8(cpu.read_moffs());\r\n    cpu.reg8[reg_al] = data;\r\n};\r\nt16[0xA1] = cpu => {\r\n    // mov\r\n    var data = cpu.safe_read16(cpu.read_moffs());\r\n    cpu.reg16[reg_ax] = data;\r\n};\r\nt32[0xA1] = cpu => {\r\n    var data = cpu.safe_read32s(cpu.read_moffs());\r\n    cpu.reg32s[reg_eax] = data;\r\n};\r\nt[0xA2] = cpu => {\r\n    // mov\r\n    cpu.safe_write8(cpu.read_moffs(), cpu.reg8[reg_al]);\r\n};\r\nt16[0xA3] = cpu => {\r\n    // mov\r\n    cpu.safe_write16(cpu.read_moffs(), cpu.reg16[reg_ax]);\r\n};\r\nt32[0xA3] = cpu => {\r\n    cpu.safe_write32(cpu.read_moffs(), cpu.reg32s[reg_eax]);\r\n};\r\n\r\nt[0xA4] = cpu => { cpu.movsb(); };\r\nt16[0xA5] = cpu => { cpu.movsw(); };\r\nt32[0xA5] = cpu => { cpu.movsd(); };\r\nt[0xA6] = cpu => { cmpsb(cpu); };\r\nt16[0xA7] = cpu => { cmpsw(cpu); };\r\nt32[0xA7] = cpu => { cmpsd(cpu); };\r\n\r\nt[0xA8] = cpu => {\r\n    cpu.test8(cpu.reg8[reg_al], cpu.read_op8());\r\n};\r\nt16[0xA9] = cpu => {\r\n    cpu.test16(cpu.reg16[reg_ax], cpu.read_op16());\r\n};\r\nt32[0xA9] = cpu => {\r\n    cpu.test32(cpu.reg32s[reg_eax], cpu.read_op32s());\r\n};\r\n\r\nt[0xAA] = cpu => { stosb(cpu); };\r\nt16[0xAB] = cpu => { stosw(cpu); };\r\nt32[0xAB] = cpu => { stosd(cpu); };\r\nt[0xAC] = cpu => { lodsb(cpu); };\r\nt16[0xAD] = cpu => { lodsw(cpu); };\r\nt32[0xAD] = cpu => { lodsd(cpu); };\r\nt[0xAE] = cpu => { scasb(cpu); };\r\nt16[0xAF] = cpu => { scasw(cpu); };\r\nt32[0xAF] = cpu => { scasd(cpu); };\r\n\r\n\r\nt[0xB0] = cpu => { cpu.reg8[reg_al] = cpu.read_op8(); };\r\nt[0xB1] = cpu => { cpu.reg8[reg_cl] = cpu.read_op8(); };\r\nt[0xB2] = cpu => { cpu.reg8[reg_dl] = cpu.read_op8(); };\r\nt[0xB3] = cpu => { cpu.reg8[reg_bl] = cpu.read_op8(); };\r\nt[0xB4] = cpu => { cpu.reg8[reg_ah] = cpu.read_op8(); };\r\nt[0xB5] = cpu => { cpu.reg8[reg_ch] = cpu.read_op8(); };\r\nt[0xB6] = cpu => { cpu.reg8[reg_dh] = cpu.read_op8(); };\r\nt[0xB7] = cpu => { cpu.reg8[reg_bh] = cpu.read_op8(); };\r\n\r\nt16[0xB8] = cpu => { cpu.reg16[reg_ax] = cpu.read_op16(); };\r\nt32[0xB8] = cpu => { cpu.reg32s[reg_eax] = cpu.read_op32s(); };\r\nt16[0xB9] = cpu => { cpu.reg16[reg_cx] = cpu.read_op16(); };\r\nt32[0xB9] = cpu => { cpu.reg32s[reg_ecx] = cpu.read_op32s(); };\r\nt16[0xBA] = cpu => { cpu.reg16[reg_dx] = cpu.read_op16(); };\r\nt32[0xBA] = cpu => { cpu.reg32s[reg_edx] = cpu.read_op32s(); };\r\nt16[0xBB] = cpu => { cpu.reg16[reg_bx] = cpu.read_op16(); };\r\nt32[0xBB] = cpu => { cpu.reg32s[reg_ebx] = cpu.read_op32s(); };\r\nt16[0xBC] = cpu => { cpu.reg16[reg_sp] = cpu.read_op16(); };\r\nt32[0xBC] = cpu => { cpu.reg32s[reg_esp] = cpu.read_op32s(); };\r\nt16[0xBD] = cpu => { cpu.reg16[reg_bp] = cpu.read_op16(); };\r\nt32[0xBD] = cpu => { cpu.reg32s[reg_ebp] = cpu.read_op32s(); };\r\nt16[0xBE] = cpu => { cpu.reg16[reg_si] = cpu.read_op16(); };\r\nt32[0xBE] = cpu => { cpu.reg32s[reg_esi] = cpu.read_op32s(); };\r\nt16[0xBF] = cpu => { cpu.reg16[reg_di] = cpu.read_op16(); };\r\nt32[0xBF] = cpu => { cpu.reg32s[reg_edi] = cpu.read_op32s(); };\r\n\r\n\r\nt[0xC0] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e8();\r\n    var op2 = cpu.read_op8() & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol8(op1, op2); break;\r\n        case 1: result = cpu.ror8(op1, op2); break;\r\n        case 2: result = cpu.rcl8(op1, op2); break;\r\n        case 3: result = cpu.rcr8(op1, op2); break;\r\n        case 4: result = cpu.shl8(op1, op2); break;\r\n        case 5: result = cpu.shr8(op1, op2); break;\r\n        case 6: result = cpu.shl8(op1, op2); break;\r\n        case 7: result = cpu.sar8(op1, op2); break;\r\n    }\r\n    cpu.write_e8(result);\r\n};\r\nt16[0xC1] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e16();\r\n    var op2 = cpu.read_op8() & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol16(op1, op2); break;\r\n        case 1: result = cpu.ror16(op1, op2); break;\r\n        case 2: result = cpu.rcl16(op1, op2); break;\r\n        case 3: result = cpu.rcr16(op1, op2); break;\r\n        case 4: result = cpu.shl16(op1, op2); break;\r\n        case 5: result = cpu.shr16(op1, op2); break;\r\n        case 6: result = cpu.shl16(op1, op2); break;\r\n        case 7: result = cpu.sar16(op1, op2); break;\r\n    }\r\n    cpu.write_e16(result);\r\n};\r\nt32[0xC1] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e32();\r\n    var op2 = cpu.read_op8() & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol32(op1, op2); break;\r\n        case 1: result = cpu.ror32(op1, op2); break;\r\n        case 2: result = cpu.rcl32(op1, op2); break;\r\n        case 3: result = cpu.rcr32(op1, op2); break;\r\n        case 4: result = cpu.shl32(op1, op2); break;\r\n        case 5: result = cpu.shr32(op1, op2); break;\r\n        case 6: result = cpu.shl32(op1, op2); break;\r\n        case 7: result = cpu.sar32(op1, op2); break;\r\n    }\r\n    cpu.write_e32(result);\r\n};\r\n\r\nt16[0xC2] = cpu => {\r\n    // retn\r\n    var imm16 = cpu.read_op16();\r\n\r\n    cpu.instruction_pointer = cpu.get_seg(reg_cs) + cpu.pop16() | 0;\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.adjust_stack_reg(imm16);\r\n    cpu.diverged();\r\n};\r\nt32[0xC2] = cpu => {\r\n    // retn\r\n    var imm16 = cpu.read_op16();\r\n    var ip = cpu.pop32s();\r\n\r\n    dbg_assert(cpu.is_asize_32() || ip < 0x10000);\r\n    cpu.instruction_pointer = cpu.get_seg(reg_cs) + ip | 0;\r\n    cpu.adjust_stack_reg(imm16);\r\n    cpu.diverged();\r\n};\r\nt16[0xC3] = cpu => {\r\n    // retn\r\n    cpu.instruction_pointer = cpu.get_seg(reg_cs) + cpu.pop16() | 0;\r\n    cpu.diverged();\r\n};\r\nt32[0xC3] = cpu => {\r\n    // retn\r\n    var ip = cpu.pop32s();\r\n    dbg_assert(cpu.is_asize_32() || ip < 0x10000);\r\n    cpu.instruction_pointer = cpu.get_seg(reg_cs) + ip | 0;\r\n    cpu.diverged();\r\n};\r\n\r\nt16[0xC4] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss16(reg_es);\r\n};\r\nt32[0xC4] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss32(reg_es);\r\n};\r\nt16[0xC5] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss16(reg_ds);\r\n};\r\nt32[0xC5] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss32(reg_ds);\r\n};\r\n\r\nt[0xC6] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.safe_write8(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8());\r\n    } else {\r\n        cpu.reg8[cpu.modrm_byte << 2 & 0xC | cpu.modrm_byte >> 2 & 1] = cpu.read_op8();\r\n    }\r\n}\r\nt16[0xC7] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.safe_write16(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op16());\r\n    } else {\r\n        cpu.reg16[cpu.modrm_byte << 1 & 14] = cpu.read_op16();\r\n    }\r\n};\r\nt32[0xC7] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.safe_write32(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op32s());\r\n    } else {\r\n        cpu.reg32s[cpu.modrm_byte & 7] = cpu.read_op32s();\r\n    }\r\n}\r\n\r\nt16[0xC8] = cpu => { cpu.enter16(cpu.read_op16(), cpu.read_disp8()); };\r\nt32[0xC8] = cpu => { cpu.enter32(cpu.read_op16(), cpu.read_disp8()); };\r\nt16[0xC9] = cpu => {\r\n    // leave\r\n    var old_vbp = cpu.stack_size_32 ? cpu.reg32s[reg_ebp] : cpu.reg16[reg_bp];\r\n    var new_bp = cpu.safe_read16(cpu.get_seg(reg_ss) + old_vbp | 0);\r\n    cpu.set_stack_reg(old_vbp + 2 | 0);\r\n    cpu.reg16[reg_bp] = new_bp;\r\n};\r\nt32[0xC9] = cpu => {\r\n    var old_vbp = cpu.stack_size_32 ? cpu.reg32s[reg_ebp] : cpu.reg16[reg_bp];\r\n    var new_ebp = cpu.safe_read32s(cpu.get_seg(reg_ss) + old_vbp | 0);\r\n    cpu.set_stack_reg(old_vbp + 4 | 0);\r\n    cpu.reg32s[reg_ebp] = new_ebp;\r\n};\r\nt16[0xCA] = cpu => {\r\n    // retf\r\n    var imm16 = cpu.read_op16();\r\n    var ip = cpu.safe_read16(cpu.get_stack_pointer(0));\r\n    var cs = cpu.safe_read16(cpu.get_stack_pointer(2));\r\n\r\n    cpu.far_return(ip, cs, imm16);\r\n    cpu.diverged();\r\n};\r\nt32[0xCA] = cpu => {\r\n    // retf\r\n    var imm16 = cpu.read_op16();\r\n    var ip = cpu.safe_read32s(cpu.get_stack_pointer(0));\r\n    var cs = cpu.safe_read32s(cpu.get_stack_pointer(4)) & 0xFFFF;\r\n\r\n    cpu.far_return(ip, cs, imm16);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt16[0xCB] = cpu => {\r\n    // retf\r\n    var ip = cpu.safe_read16(cpu.get_stack_pointer(0));\r\n    var cs = cpu.safe_read16(cpu.get_stack_pointer(2));\r\n\r\n    cpu.far_return(ip, cs, 0);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt32[0xCB] = cpu => {\r\n    // retf\r\n    var ip = cpu.safe_read32s(cpu.get_stack_pointer(0));\r\n    var cs = cpu.safe_read32s(cpu.get_stack_pointer(4)) & 0xFFFF;\r\n\r\n    cpu.far_return(ip, cs, 0);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\n\r\nt[0xCC] = cpu => {\r\n    // INT3\r\n    // TODO: inhibit iopl checks\r\n    dbg_log(\"INT3\", LOG_CPU);\r\n    cpu.call_interrupt_vector(3, true, false);\r\n    cpu.diverged();\r\n};\r\nt[0xCD] = cpu => {\r\n    // INT\r\n    var imm8 = cpu.read_op8();\r\n    cpu.call_interrupt_vector(imm8, true, false);\r\n    cpu.diverged();\r\n};\r\nt[0xCE] = cpu => {\r\n    // INTO\r\n    dbg_log(\"INTO\", LOG_CPU);\r\n    if(cpu.getof())\r\n    {\r\n        // TODO: inhibit iopl checks\r\n        cpu.call_interrupt_vector(4, true, false);\r\n    }\r\n    cpu.diverged();\r\n};\r\n\r\nt16[0xCF] = cpu => {\r\n    // iret\r\n    cpu.iret16();\r\n    cpu.diverged();\r\n};\r\nt32[0xCF] = cpu => {\r\n    cpu.iret32();\r\n    cpu.diverged();\r\n};\r\n\r\nt[0xD0] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e8();\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol8(op1, 1); break;\r\n        case 1: result = cpu.ror8(op1, 1); break;\r\n        case 2: result = cpu.rcl8(op1, 1); break;\r\n        case 3: result = cpu.rcr8(op1, 1); break;\r\n        case 4: result = cpu.shl8(op1, 1); break;\r\n        case 5: result = cpu.shr8(op1, 1); break;\r\n        case 6: result = cpu.shl8(op1, 1); break;\r\n        case 7: result = cpu.sar8(op1, 1); break;\r\n    }\r\n    cpu.write_e8(result);\r\n};\r\nt16[0xD1] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e16();\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol16(op1, 1); break;\r\n        case 1: result = cpu.ror16(op1, 1); break;\r\n        case 2: result = cpu.rcl16(op1, 1); break;\r\n        case 3: result = cpu.rcr16(op1, 1); break;\r\n        case 4: result = cpu.shl16(op1, 1); break;\r\n        case 5: result = cpu.shr16(op1, 1); break;\r\n        case 6: result = cpu.shl16(op1, 1); break;\r\n        case 7: result = cpu.sar16(op1, 1); break;\r\n    }\r\n    cpu.write_e16(result);\r\n};\r\nt32[0xD1] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e32();\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol32(op1, 1); break;\r\n        case 1: result = cpu.ror32(op1, 1); break;\r\n        case 2: result = cpu.rcl32(op1, 1); break;\r\n        case 3: result = cpu.rcr32(op1, 1); break;\r\n        case 4: result = cpu.shl32(op1, 1); break;\r\n        case 5: result = cpu.shr32(op1, 1); break;\r\n        case 6: result = cpu.shl32(op1, 1); break;\r\n        case 7: result = cpu.sar32(op1, 1); break;\r\n    }\r\n    cpu.write_e32(result);\r\n};\r\n\r\nt[0xD2] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e8();\r\n    var op2 = cpu.reg8[reg_cl] & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol8(op1, op2); break;\r\n        case 1: result = cpu.ror8(op1, op2); break;\r\n        case 2: result = cpu.rcl8(op1, op2); break;\r\n        case 3: result = cpu.rcr8(op1, op2); break;\r\n        case 4: result = cpu.shl8(op1, op2); break;\r\n        case 5: result = cpu.shr8(op1, op2); break;\r\n        case 6: result = cpu.shl8(op1, op2); break;\r\n        case 7: result = cpu.sar8(op1, op2); break;\r\n    }\r\n    cpu.write_e8(result);\r\n};\r\nt16[0xD3] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e16();\r\n    var op2 = cpu.reg8[reg_cl] & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol16(op1, op2); break;\r\n        case 1: result = cpu.ror16(op1, op2); break;\r\n        case 2: result = cpu.rcl16(op1, op2); break;\r\n        case 3: result = cpu.rcr16(op1, op2); break;\r\n        case 4: result = cpu.shl16(op1, op2); break;\r\n        case 5: result = cpu.shr16(op1, op2); break;\r\n        case 6: result = cpu.shl16(op1, op2); break;\r\n        case 7: result = cpu.sar16(op1, op2); break;\r\n    }\r\n    cpu.write_e16(result);\r\n};\r\nt32[0xD3] = cpu => { cpu.read_modrm_byte();\r\n    var op1 = cpu.read_write_e32();\r\n    var op2 = cpu.reg8[reg_cl] & 31;\r\n    var result = 0;\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: result = cpu.rol32(op1, op2); break;\r\n        case 1: result = cpu.ror32(op1, op2); break;\r\n        case 2: result = cpu.rcl32(op1, op2); break;\r\n        case 3: result = cpu.rcr32(op1, op2); break;\r\n        case 4: result = cpu.shl32(op1, op2); break;\r\n        case 5: result = cpu.shr32(op1, op2); break;\r\n        case 6: result = cpu.shl32(op1, op2); break;\r\n        case 7: result = cpu.sar32(op1, op2); break;\r\n    }\r\n    cpu.write_e32(result);\r\n};\r\n\r\nt[0xD4] = cpu => {\r\n    cpu.bcd_aam(cpu.read_op8());\r\n};\r\nt[0xD5] = cpu => {\r\n    cpu.bcd_aad(cpu.read_op8());\r\n};\r\n\r\nt[0xD6] = cpu => {\r\n    // salc\r\n    cpu.reg8[reg_al] = -cpu.getcf();\r\n};\r\nt[0xD7] = cpu => {\r\n    // xlat\r\n    if(cpu.is_asize_32())\r\n    {\r\n        cpu.reg8[reg_al] = cpu.safe_read8(cpu.get_seg_prefix(reg_ds) + cpu.reg32s[reg_ebx] + cpu.reg8[reg_al] | 0);\r\n    }\r\n    else\r\n    {\r\n        cpu.reg8[reg_al] = cpu.safe_read8(cpu.get_seg_prefix(reg_ds) + (cpu.reg16[reg_bx] + cpu.reg8[reg_al] & 0xFFFF) | 0);\r\n    }\r\n};\r\n\r\nt[0xD8] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_D8_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_D8_reg(cpu.modrm_byte);\r\n};\r\nt[0xD9] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_D9_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_D9_reg(cpu.modrm_byte);\r\n};\r\nt[0xDA] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DA_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DA_reg(cpu.modrm_byte);\r\n};\r\nt[0xDB] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DB_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DB_reg(cpu.modrm_byte);\r\n};\r\nt[0xDC] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DC_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DC_reg(cpu.modrm_byte);\r\n};\r\nt[0xDD] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DD_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DD_reg(cpu.modrm_byte);\r\n};\r\nt[0xDE] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DE_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DE_reg(cpu.modrm_byte);\r\n};\r\nt[0xDF] = cpu => { cpu.read_modrm_byte();\r\n    cpu.task_switch_test();\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.fpu.op_DF_mem(cpu.modrm_byte, cpu.modrm_resolve(cpu.modrm_byte));\r\n    else\r\n        cpu.fpu.op_DF_reg(cpu.modrm_byte);\r\n};\r\n\r\nt[0xE0] = cpu => { cpu.loopne(cpu.read_op8s()); };\r\nt[0xE1] = cpu => { cpu.loope(cpu.read_op8s()); };\r\nt[0xE2] = cpu => { cpu.loop(cpu.read_op8s()); };\r\nt[0xE3] = cpu => { cpu.jcxz(cpu.read_op8s()); };\r\n\r\nt[0xE4] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 1);\r\n    cpu.reg8[reg_al] = cpu.io.port_read8(port);\r\n    cpu.diverged();\r\n};\r\nt16[0xE5] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 2);\r\n    cpu.reg16[reg_ax] = cpu.io.port_read16(port);\r\n    cpu.diverged();\r\n};\r\nt32[0xE5] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 4);\r\n    cpu.reg32s[reg_eax] = cpu.io.port_read32(port);\r\n    cpu.diverged();\r\n};\r\nt[0xE6] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 1);\r\n    cpu.io.port_write8(port, cpu.reg8[reg_al]);\r\n    cpu.diverged();\r\n};\r\nt16[0xE7] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 2);\r\n    cpu.io.port_write16(port, cpu.reg16[reg_ax]);\r\n    cpu.diverged();\r\n};\r\nt32[0xE7] = cpu => {\r\n    var port = cpu.read_op8();\r\n    cpu.test_privileges_for_io(port, 4);\r\n    cpu.io.port_write32(port, cpu.reg32s[reg_eax]);\r\n    cpu.diverged();\r\n};\r\n\r\nt16[0xE8] = cpu => {\r\n    // call\r\n    var imm16 = cpu.read_op16();\r\n    cpu.push16(cpu.get_real_eip());\r\n\r\n    cpu.jmp_rel16(imm16);\r\n    cpu.diverged();\r\n};\r\nt32[0xE8] = cpu => {\r\n    // call\r\n    var imm32s = cpu.read_op32s();\r\n    cpu.push32(cpu.get_real_eip());\r\n\r\n    cpu.instruction_pointer = cpu.instruction_pointer + imm32s | 0;\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt16[0xE9] = cpu => {\r\n    // jmp\r\n    var imm16 = cpu.read_op16();\r\n    cpu.jmp_rel16(imm16);\r\n    cpu.diverged();\r\n};\r\nt32[0xE9] = cpu => {\r\n    // jmp\r\n    var imm32s = cpu.read_op32s();\r\n    cpu.instruction_pointer = cpu.instruction_pointer + imm32s | 0;\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt16[0xEA] = cpu => {\r\n    // jmpf\r\n    var ip = cpu.read_op16();\r\n    var cs = cpu.read_disp16();\r\n    cpu.far_jump(ip, cs, false);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt32[0xEA] = cpu => {\r\n    // jmpf\r\n    var new_ip = cpu.read_op32s();\r\n    var cs = cpu.read_disp16();\r\n    cpu.far_jump(new_ip, cs, false);\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\nt[0xEB] = cpu => {\r\n    // jmp near\r\n    var imm8 = cpu.read_op8s();\r\n    cpu.instruction_pointer = cpu.instruction_pointer + imm8 | 0;\r\n    dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n    cpu.diverged();\r\n};\r\n\r\nt[0xEC] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 1);\r\n    cpu.reg8[reg_al] = cpu.io.port_read8(port);\r\n    cpu.diverged();\r\n};\r\nt16[0xED] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 2);\r\n    cpu.reg16[reg_ax] = cpu.io.port_read16(port);\r\n    cpu.diverged();\r\n};\r\nt32[0xED] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 4);\r\n    cpu.reg32s[reg_eax] = cpu.io.port_read32(port);\r\n    cpu.diverged();\r\n};\r\nt[0xEE] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 1);\r\n    cpu.io.port_write8(port, cpu.reg8[reg_al]);\r\n    cpu.diverged();\r\n};\r\nt16[0xEF] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 2);\r\n    cpu.io.port_write16(port, cpu.reg16[reg_ax]);\r\n    cpu.diverged();\r\n};\r\nt32[0xEF] = cpu => {\r\n    var port = cpu.reg16[reg_dx];\r\n    cpu.test_privileges_for_io(port, 4);\r\n    cpu.io.port_write32(port, cpu.reg32s[reg_eax]);\r\n    cpu.diverged();\r\n};\r\n\r\nt[0xF0] = cpu => {\r\n    // lock\r\n    //dbg_log(\"lock\", LOG_CPU);\r\n\r\n    // TODO\r\n    // This triggers UD when used with\r\n    // some instructions that don't write to memory\r\n    cpu.run_prefix_instruction();\r\n};\r\nt[0xF1] = cpu => {\r\n    // INT1\r\n    // https://code.google.com/p/corkami/wiki/x86oddities#IceBP\r\n    throw cpu.debug.unimpl(\"int1 instruction\");\r\n};\r\n\r\nt[0xF2] = cpu => {\r\n    // repnz\r\n    dbg_assert((cpu.prefixes & PREFIX_MASK_REP) === 0);\r\n    cpu.prefixes |= PREFIX_REPNZ;\r\n    cpu.run_prefix_instruction();\r\n    cpu.prefixes = 0;\r\n};\r\nt[0xF3] = cpu => {\r\n    // repz\r\n    dbg_assert((cpu.prefixes & PREFIX_MASK_REP) === 0);\r\n    cpu.prefixes |= PREFIX_REPZ;\r\n    cpu.run_prefix_instruction();\r\n    cpu.prefixes = 0;\r\n};\r\n\r\nt[0xF4] = cpu => {\r\n    cpu.hlt_op();\r\n};\r\n\r\nt[0xF5] = cpu => {\r\n    // cmc\r\n    cpu.flags = (cpu.flags | 1) ^ cpu.getcf();\r\n    cpu.flags_changed &= ~1;\r\n};\r\n\r\nt[0xF6] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            var data = cpu.read_e8(); cpu.test8(data, cpu.read_op8());\r\n            break;\r\n        case 1:\r\n            var data = cpu.read_e8(); cpu.test8(data, cpu.read_op8());\r\n            break;\r\n        case 2:\r\n            var data = cpu.read_write_e8(); cpu.write_e8(~(data));\r\n            break;\r\n        case 3:\r\n            var data = cpu.read_write_e8(); cpu.write_e8(cpu.neg8(data));\r\n            break;\r\n        case 4:\r\n            var data = cpu.read_e8(); cpu.mul8(data);\r\n            break;\r\n        case 5:\r\n            var data = cpu.read_e8s(); cpu.imul8(data);\r\n            break;\r\n        case 6:\r\n            var data = cpu.read_e8(); cpu.div8(data);\r\n            break;\r\n        case 7:\r\n            var data = cpu.read_e8s(); cpu.idiv8(data);\r\n            break;\r\n    }\r\n};\r\n\r\nt16[0xF7] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            var data = cpu.read_e16(); cpu.test16(data, cpu.read_op16());\r\n            break;\r\n        case 1:\r\n            var data = cpu.read_e16(); cpu.test16(data, cpu.read_op16());\r\n            break;\r\n        case 2:\r\n            var data = cpu.read_write_e16(); cpu.write_e16(~(data));\r\n            break;\r\n        case 3:\r\n            var data = cpu.read_write_e16(); cpu.write_e16(cpu.neg16(data));\r\n            break;\r\n        case 4:\r\n            var data = cpu.read_e16(); cpu.mul16(data);\r\n            break;\r\n        case 5:\r\n            var data = cpu.read_e16s(); cpu.imul16(data);\r\n            break;\r\n        case 6:\r\n            var data = cpu.read_e16(); cpu.div16(data);\r\n            break;\r\n        case 7:\r\n            var data = cpu.read_e16s(); cpu.idiv16(data);\r\n            break;\r\n    }\r\n};\r\nt32[0xF7] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            var data = cpu.read_e32s(); cpu.test32(data, cpu.read_op32s());\r\n            break;\r\n        case 1:\r\n            var data = cpu.read_e32s(); cpu.test32(data, cpu.read_op32s());\r\n            break;\r\n        case 2:\r\n            var data = cpu.read_write_e32(); cpu.write_e32(~(data));\r\n            break;\r\n        case 3:\r\n            var data = cpu.read_write_e32(); cpu.write_e32(cpu.neg32(data));\r\n            break;\r\n        case 4:\r\n            var data = cpu.read_e32(); cpu.mul32(data);\r\n            break;\r\n        case 5:\r\n            var data = cpu.read_e32s(); cpu.imul32(data);\r\n            break;\r\n        case 6:\r\n            var data = cpu.read_e32(); cpu.div32(data);\r\n            break;\r\n        case 7:\r\n            var data = cpu.read_e32s(); cpu.idiv32(data);\r\n            break;\r\n    }\r\n};\r\n\r\nt[0xF8] = cpu => {\r\n    // clc\r\n    cpu.flags &= ~flag_carry;\r\n    cpu.flags_changed &= ~1;\r\n};\r\nt[0xF9] = cpu => {\r\n    // stc\r\n    cpu.flags |= flag_carry;\r\n    cpu.flags_changed &= ~1;\r\n};\r\n\r\nt[0xFA] = cpu => {\r\n    // cli\r\n    //dbg_log(\"interrupts off\");\r\n\r\n    if(!cpu.protected_mode || ((cpu.flags & flag_vm) ?\r\n            cpu.getiopl() === 3 : cpu.getiopl() >= cpu.cpl))\r\n    {\r\n        cpu.flags &= ~flag_interrupt;\r\n    }\r\n    else\r\n    {\r\n        //if(cpu.getiopl() < 3 && ((cpu.flags & flag_vm) ?\r\n        //    (cpu.cr[4] & CR4_VME) :\r\n        //    (cpu.cpl === 3 && (cpu.cr[4] & CR4_PVI))))\r\n        //{\r\n        //    cpu.flags &= ~flag_vif;\r\n        //}\r\n        //else\r\n        {\r\n            dbg_log(\"cli #gp\", LOG_CPU);\r\n            cpu.trigger_gp(0);\r\n        }\r\n    }\r\n};\r\nt[0xFB] = cpu => {\r\n    // sti\r\n    //dbg_log(\"interrupts on\");\r\n\r\n    if(!cpu.protected_mode || ((cpu.flags & flag_vm) ?\r\n            cpu.getiopl() === 3 : cpu.getiopl() >= cpu.cpl))\r\n    {\r\n        cpu.flags |= flag_interrupt;\r\n\r\n        cpu.clear_prefixes();\r\n        cpu.cycle_internal();\r\n\r\n        cpu.handle_irqs();\r\n    }\r\n    else\r\n    {\r\n        //if(cpu.getiopl() < 3 && (cpu.flags & flag_vip) === 0 && ((cpu.flags & flag_vm) ?\r\n        //    (cpu.cr[4] & CR4_VME) :\r\n        //    (cpu.cpl === 3 && (cpu.cr[4] & CR4_PVI))))\r\n        //{\r\n        //    cpu.flags |= flag_vif;\r\n        //}\r\n        //else\r\n        {\r\n            dbg_log(\"sti #gp\", LOG_CPU);\r\n            cpu.trigger_gp(0);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nt[0xFC] = cpu => {\r\n    // cld\r\n    cpu.flags &= ~flag_direction;\r\n};\r\nt[0xFD] = cpu => {\r\n    // std\r\n    cpu.flags |= flag_direction;\r\n};\r\n\r\nt[0xFE] = cpu => { cpu.read_modrm_byte();\r\n    var mod = cpu.modrm_byte & 56;\r\n\r\n    if(mod === 0)\r\n    {\r\n        var data = cpu.read_write_e8(); cpu.write_e8(cpu.inc8(data));\r\n    }\r\n    else if(mod === 8)\r\n    {\r\n        var data = cpu.read_write_e8(); cpu.write_e8(cpu.dec8(data));\r\n    }\r\n    else\r\n    {\r\n        cpu.todo();\r\n    }\r\n};\r\nt16[0xFF] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            var data = cpu.read_write_e16(); cpu.write_e16(cpu.inc16(data));\r\n            break;\r\n        case 1:\r\n            var data = cpu.read_write_e16(); cpu.write_e16(cpu.dec16(data));\r\n            break;\r\n        case 2:\r\n            // 2, call near\r\n            var data = cpu.read_e16();\r\n            cpu.push16(cpu.get_real_eip());\r\n            cpu.instruction_pointer = cpu.get_seg(reg_cs) + data | 0;\r\n            dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 3:\r\n            // 3, callf\r\n            if(cpu.modrm_byte >= 0xC0)\r\n            {\r\n                dbg_log(\"callf #ud\", LOG_CPU);\r\n                cpu.trigger_ud();\r\n                dbg_assert(false, \"unreachable\");\r\n            }\r\n\r\n            var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            var new_ip = cpu.safe_read16(virt_addr);\r\n            var new_cs = cpu.safe_read16(virt_addr + 2 | 0);\r\n\r\n            cpu.far_jump(new_ip, new_cs, true);\r\n            dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 4:\r\n            // 4, jmp near\r\n            var data = cpu.read_e16();\r\n            cpu.instruction_pointer = cpu.get_seg(reg_cs) + data | 0;\r\n            dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 5:\r\n            // 5, jmpf\r\n            if(cpu.modrm_byte >= 0xC0)\r\n            {\r\n                dbg_log(\"jmpf #ud\", LOG_CPU);\r\n                cpu.trigger_ud();\r\n                dbg_assert(false, \"unreachable\");\r\n            }\r\n\r\n            var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            var new_ip = cpu.safe_read16(virt_addr);\r\n            var new_cs = cpu.safe_read16(virt_addr + 2 | 0);\r\n\r\n            cpu.far_jump(new_ip, new_cs, false);\r\n            dbg_assert(cpu.is_asize_32() || cpu.get_real_eip() < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 6:\r\n            // 6, push\r\n            var data = cpu.read_e16();\r\n            cpu.push16(data);\r\n            break;\r\n        case 7:\r\n            cpu.todo();\r\n    }\r\n};\r\nt32[0xFF] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            var data = cpu.read_write_e32(); cpu.write_e32(cpu.inc32(data));\r\n            break;\r\n        case 1:\r\n            var data = cpu.read_write_e32(); cpu.write_e32(cpu.dec32(data));\r\n            break;\r\n        case 2:\r\n            // 2, call near\r\n            var data = cpu.read_e32s();\r\n            cpu.push32(cpu.get_real_eip());\r\n\r\n            dbg_assert(cpu.is_asize_32() || data < 0x10000);\r\n            cpu.instruction_pointer = cpu.get_seg(reg_cs) + data | 0;\r\n            cpu.diverged();\r\n            break;\r\n        case 3:\r\n            // 3, callf\r\n            if(cpu.modrm_byte >= 0xC0)\r\n            {\r\n                dbg_log(\"callf #ud\", LOG_CPU);\r\n                cpu.trigger_ud();\r\n                dbg_assert(false, \"unreachable\");\r\n            }\r\n\r\n            var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            var new_ip = cpu.safe_read32s(virt_addr);\r\n            var new_cs = cpu.safe_read16(virt_addr + 4 | 0);\r\n\r\n            if(!cpu.protected_mode || cpu.vm86_mode())\r\n            {\r\n                if(new_ip & 0xFFFF0000)\r\n                {\r\n                    throw cpu.debug.unimpl(\"#GP handler\");\r\n                }\r\n            }\r\n\r\n            cpu.far_jump(new_ip, new_cs, true);\r\n            dbg_assert(cpu.is_asize_32() || new_ip < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 4:\r\n            // 4, jmp near\r\n            var data = cpu.read_e32s();\r\n            dbg_assert(cpu.is_asize_32() || data < 0x10000);\r\n            cpu.instruction_pointer = cpu.get_seg(reg_cs) + data | 0;\r\n            cpu.diverged();\r\n            break;\r\n        case 5:\r\n            // 5, jmpf\r\n            if(cpu.modrm_byte >= 0xC0)\r\n            {\r\n                dbg_log(\"jmpf #ud\", LOG_CPU);\r\n                cpu.trigger_ud();\r\n                dbg_assert(false, \"unreachable\");\r\n            }\r\n\r\n            var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            var new_ip = cpu.safe_read32s(virt_addr);\r\n            var new_cs = cpu.safe_read16(virt_addr + 4 | 0);\r\n\r\n            if(!cpu.protected_mode || cpu.vm86_mode())\r\n            {\r\n                if(new_ip & 0xFFFF0000)\r\n                {\r\n                    throw cpu.debug.unimpl(\"#GP handler\");\r\n                }\r\n            }\r\n\r\n            cpu.far_jump(new_ip, new_cs, false);\r\n            dbg_assert(cpu.is_asize_32() || new_ip < 0x10000);\r\n            cpu.diverged();\r\n            break;\r\n        case 6:\r\n            // push\r\n            var data = cpu.read_e32s();\r\n            cpu.push32(data);\r\n            break;\r\n        case 7:\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nvar table16 = [];\r\nvar table32 = [];\r\nCPU.prototype.table16 = table16;\r\nCPU.prototype.table32 = table32;\r\n\r\nfor(var i = 0; i < 256; i++)\r\n{\r\n    if(t[i])\r\n    {\r\n        //dbg_assert(!t16[i]);\r\n        //dbg_assert(!t32[i]);\r\n        table16[i] = table32[i] = t[i];\r\n    }\r\n    else if(t16[i])\r\n    {\r\n        //dbg_assert(!t[i]);\r\n        //dbg_assert(t32[i]);\r\n        table16[i] = t16[i];\r\n        table32[i] = t32[i];\r\n    }\r\n}\r\n\r\nt = [];\r\nt16 = [];\r\nt32 = [];\r\n\r\n// 0F ops start here\r\n\r\nt[0x00] = cpu => { cpu.read_modrm_byte();\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        // No GP, UD is correct here\r\n        dbg_log(\"0f 00 #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            // sldt\r\n            cpu.set_e16(cpu.sreg[reg_ldtr]);\r\n            if(cpu.is_osize_32() && cpu.modrm_byte >= 0xC0)\r\n            {\r\n                cpu.reg32s[cpu.modrm_byte & 7] &= 0xFFFF;\r\n            }\r\n            break;\r\n        case 1:\r\n            // str\r\n            cpu.set_e16(cpu.sreg[reg_tr]);\r\n            if(cpu.is_osize_32() && cpu.modrm_byte >= 0xC0)\r\n            {\r\n                cpu.reg32s[cpu.modrm_byte & 7] &= 0xFFFF;\r\n            }\r\n            break;\r\n        case 2:\r\n            // lldt\r\n            if(cpu.cpl)\r\n            {\r\n                cpu.trigger_gp(0);\r\n            }\r\n\r\n            var data = cpu.read_e16();\r\n            cpu.load_ldt(data);\r\n            break;\r\n        case 3:\r\n            // ltr\r\n            if(cpu.cpl)\r\n            {\r\n                cpu.trigger_gp(0);\r\n            }\r\n\r\n            var data = cpu.read_e16();\r\n            cpu.load_tr(data);\r\n            break;\r\n        case 4:\r\n            cpu.verr(cpu.read_e16());\r\n            break;\r\n        case 5:\r\n            cpu.verw(cpu.read_e16());\r\n            break;\r\n\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7, LOG_CPU);\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nt[0x01] = cpu => { cpu.read_modrm_byte();\r\n    var mod = cpu.modrm_byte >> 3 & 7;\r\n\r\n    if(mod === 4)\r\n    {\r\n        // smsw\r\n        if(cpu.modrm_byte >= 0xC0 && cpu.is_osize_32())\r\n        {\r\n            cpu.set_e32(cpu.cr[0]);\r\n        }\r\n        else\r\n        {\r\n            cpu.set_e16(cpu.cr[0]);\r\n        }\r\n        return;\r\n    }\r\n    else if(mod === 6)\r\n    {\r\n        // lmsw\r\n        if(cpu.cpl)\r\n        {\r\n            cpu.trigger_gp(0);\r\n        }\r\n\r\n        var cr0 = cpu.read_e16();\r\n\r\n        cr0 = (cpu.cr[0] & ~0xF) | (cr0 & 0xF);\r\n\r\n        if(cpu.protected_mode)\r\n        {\r\n            // lmsw cannot be used to switch back\r\n            cr0 |= CR0_PE;\r\n        }\r\n\r\n        cpu.set_cr0(cr0);\r\n        return;\r\n    }\r\n\r\n    if(cpu.modrm_byte >= 0xC0)\r\n    {\r\n        // only memory\r\n        dbg_log(\"0f 01 #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n\r\n    switch(mod)\r\n    {\r\n        case 0:\r\n            // sgdt\r\n            cpu.writable_or_pagefault(addr, 6);\r\n            cpu.safe_write16(addr, cpu.gdtr_size);\r\n            var mask = cpu.is_osize_32() ? -1 : 0x00FFFFFF;\r\n            cpu.safe_write32(addr + 2, cpu.gdtr_offset & mask);\r\n            break;\r\n        case 1:\r\n            // sidt\r\n            cpu.writable_or_pagefault(addr, 6);\r\n            cpu.safe_write16(addr, cpu.idtr_size);\r\n            var mask = cpu.is_osize_32() ? -1 : 0x00FFFFFF;\r\n            cpu.safe_write32(addr + 2, cpu.idtr_offset & mask);\r\n            break;\r\n        case 2:\r\n            // lgdt\r\n            if(cpu.cpl)\r\n            {\r\n                cpu.trigger_gp(0);\r\n            }\r\n\r\n            var size = cpu.safe_read16(addr);\r\n            var offset = cpu.safe_read32s(addr + 2);\r\n\r\n            cpu.gdtr_size = size;\r\n            cpu.gdtr_offset = offset;\r\n\r\n            if(!cpu.is_osize_32())\r\n            {\r\n                cpu.gdtr_offset &= 0xFFFFFF;\r\n            }\r\n\r\n            //dbg_log(\"gdt at \" + h(cpu.gdtr_offset) + \", \" + cpu.gdtr_size + \" bytes\", LOG_CPU);\r\n            //cpu.debug.dump_state();\r\n            //cpu.debug.dump_regs_short();\r\n            //cpu.debug.dump_gdt_ldt();\r\n            break;\r\n        case 3:\r\n            // lidt\r\n            if(cpu.cpl)\r\n            {\r\n                cpu.trigger_gp(0);\r\n            }\r\n\r\n            var size = cpu.safe_read16(addr);\r\n            var offset = cpu.safe_read32s(addr + 2);\r\n\r\n            cpu.idtr_size = size;\r\n            cpu.idtr_offset = offset;\r\n\r\n            if(!cpu.is_osize_32())\r\n            {\r\n                cpu.idtr_offset &= 0xFFFFFF;\r\n            }\r\n\r\n            //dbg_log(\"[\" + h(cpu.instruction_pointer) + \"] idt at \" +\r\n            //        h(idtr_offset) + \", \" + cpu.idtr_size + \" bytes \" + h(addr), LOG_CPU);\r\n            break;\r\n        case 7:\r\n            // flush translation lookaside buffer\r\n            if(cpu.cpl)\r\n            {\r\n                cpu.trigger_gp(0);\r\n            }\r\n\r\n            cpu.invlpg(addr);\r\n            break;\r\n        default:\r\n            dbg_log(mod);\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nt16[0x02] = cpu => { cpu.read_modrm_byte();\r\n    // lar\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        dbg_log(\"lar #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(cpu.lar(data, cpu.read_g16()));\r\n};\r\nt32[0x02] = cpu => { cpu.read_modrm_byte();\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        dbg_log(\"lar #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e16();\r\n    cpu.write_g32(cpu.lar(data, cpu.read_g32s()));\r\n};\r\n\r\nt16[0x03] = cpu => { cpu.read_modrm_byte();\r\n    // lsl\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        dbg_log(\"lsl #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(cpu.lsl(data, cpu.read_g16()));\r\n};\r\nt32[0x03] = cpu => { cpu.read_modrm_byte();\r\n    if(!cpu.protected_mode || cpu.vm86_mode())\r\n    {\r\n        dbg_log(\"lsl #ud\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e16();\r\n    cpu.write_g32(cpu.lsl(data, cpu.read_g32s()));\r\n};\r\n\r\nt[0x04] = cpu => { cpu.undefined_instruction(); };\r\nt[0x05] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt[0x06] = cpu => {\r\n    // clts\r\n    if(cpu.cpl)\r\n    {\r\n        dbg_log(\"clts #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n    else\r\n    {\r\n        //dbg_log(\"clts\", LOG_CPU);\r\n        cpu.cr[0] &= ~CR0_TS;\r\n    }\r\n};\r\n\r\nt[0x07] = cpu => { cpu.undefined_instruction(); };\r\nt[0x08] = cpu => {\r\n    // invd\r\n    cpu.todo();\r\n};\r\n\r\nt[0x09] = cpu => {\r\n    if(cpu.cpl)\r\n    {\r\n        dbg_log(\"wbinvd #gp\", LOG_CPU);\r\n        cpu.trigger_gp(0);\r\n    }\r\n    // wbinvd\r\n};\r\n\r\n\r\nt[0x0A] = cpu => { cpu.undefined_instruction(); };\r\nt[0x0B] = cpu => {\r\n    // UD2\r\n    cpu.trigger_ud();\r\n};\r\nt[0x0C] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt[0x0D] = cpu => {\r\n    // nop\r\n    cpu.todo();\r\n};\r\n\r\nt[0x0E] = cpu => { cpu.undefined_instruction(); };\r\nt[0x0F] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt[0x10] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x11] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x12] = cpu => {\r\n    // movlpd xmm, xmm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    let data = cpu.read_xmm_mem64s();\r\n    cpu.write_xmm64(data[0], data[1]);\r\n};\r\nt[0x13] = cpu => {\r\n    // movlpd xmm/m64, xmm\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    let data = cpu.read_xmm64s();\r\n    dbg_assert(cpu.modrm_byte < 0xC0);\r\n    var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n    cpu.safe_write64(addr, data[0], data[1]);\r\n};\r\nt[0x14] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x15] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x16] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x17] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0x18] = cpu => { cpu.read_modrm_byte();\r\n    // prefetch\r\n    // nop for us\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.modrm_resolve(cpu.modrm_byte);\r\n};\r\n\r\nt[0x19] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x1A] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x1B] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x1C] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x1D] = cpu => { cpu.unimplemented_sse(); };\r\n// endbr32/endbr64\r\nt[0x1E] = cpu => { cpu.read_modrm_byte()\r\n    // multi-byte nop\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.modrm_resolve(cpu.modrm_byte);\r\n};\r\nt[0x1F] = cpu => { cpu.read_modrm_byte()\r\n    // multi-byte nop\r\n    if(cpu.modrm_byte < 0xC0)\r\n        cpu.modrm_resolve(cpu.modrm_byte);\r\n};\r\n\r\n\r\nt[0x20] = cpu => { cpu.read_modrm_byte();\r\n\r\n    if(cpu.cpl)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n    //dbg_log(\"cr\" + (cpu.modrm_byte >> 3 & 7) + \" read\", LOG_CPU);\r\n\r\n    // mov addr, cr\r\n    // mod = which control register\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            cpu.write_reg_e32(cpu.cr[0]);\r\n            break;\r\n        case 2:\r\n            //dbg_log(\"read cr2 at \" + h(cpu.instruction_pointer >>> 0, 8));\r\n            cpu.write_reg_e32(cpu.cr[2]);\r\n            break;\r\n        case 3:\r\n            //dbg_log(\"read cr3 (\" + h(cpu.cr[3], 8) + \")\", LOG_CPU);\r\n            cpu.write_reg_e32(cpu.cr[3]);\r\n            break;\r\n        case 4:\r\n            cpu.write_reg_e32(cpu.cr[4]);\r\n            break;\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7);\r\n            dbg_assert(false);\r\n            cpu.trigger_ud();\r\n    }\r\n};\r\n\r\nt[0x21] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.cpl)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    var dreg = cpu.modrm_byte >> 3 & 7;\r\n    if((cpu.cr[4] & CR4_DE) && (dreg === 4 || dreg === 5))\r\n    {\r\n        dbg_log(\"#ud mov dreg 4/5 with cr4.DE set\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    // high two bits of modrm are ignored\r\n    cpu.reg32s[cpu.modrm_byte & 7] = cpu.dreg[dreg];\r\n\r\n    //dbg_log(\"read dr\" + dreg + \": \" + h(cpu.dreg[dreg] >>> 0), LOG_CPU);\r\n};\r\n\r\nt[0x22] = cpu => { cpu.read_modrm_byte();\r\n\r\n    if(cpu.cpl)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    var data = cpu.read_reg_e32s();\r\n    //dbg_log(\"cr\" + (cpu.modrm_byte >> 3 & 7) + \" written: \" + h(data >>> 0, 8), LOG_CPU);\r\n\r\n    // mov cr, addr\r\n    // mod = which control register\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0:\r\n            cpu.set_cr0(data);\r\n            //dbg_log(\"cr0=\" + h(data >>> 0), LOG_CPU);\r\n            break;\r\n\r\n        case 2:\r\n            cpu.cr[2] = data;\r\n            //dbg_log(\"cr2=\" + h(data >>> 0), LOG_CPU);\r\n            break;\r\n\r\n        case 3:\r\n            //dbg_log(\"cr3=\" + h(data >>> 0), LOG_CPU);\r\n            data &= ~0b111111100111;\r\n            dbg_assert((data & 0xFFF) === 0, \"TODO\");\r\n            cpu.cr[3] = data;\r\n            cpu.clear_tlb();\r\n\r\n            //dump_page_directory();\r\n            //dbg_log(\"page directory loaded at \" + h(cpu.cr[3] >>> 0, 8), LOG_CPU);\r\n            break;\r\n\r\n        case 4:\r\n            cpu.set_cr4(data);\r\n            break;\r\n\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7);\r\n            dbg_assert(false);\r\n            cpu.trigger_ud();\r\n    }\r\n};\r\nt[0x23] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.cpl)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    var dreg = cpu.modrm_byte >> 3 & 7;\r\n    if((cpu.cr[4] & CR4_DE) && (dreg === 4 || dreg === 5))\r\n    {\r\n        dbg_log(\"#ud mov dreg 4/5 with cr4.DE set\", LOG_CPU);\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    // high two bits of modrm are ignored\r\n    cpu.dreg[dreg] = cpu.read_reg_e32s();\r\n\r\n    //dbg_log(\"write dr\" + dreg + \": \" + h(cpu.dreg[dreg] >>> 0), LOG_CPU);\r\n};\r\n\r\nt[0x24] = cpu => { cpu.undefined_instruction(); };\r\nt[0x25] = cpu => { cpu.undefined_instruction(); };\r\nt[0x26] = cpu => { cpu.undefined_instruction(); };\r\nt[0x27] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt[0x28] = cpu => {\r\n    // movaps xmm, xmm/m128\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    let data = cpu.read_xmm_mem128s();\r\n    cpu.write_xmm128s(data[0], data[1], data[2], data[3]);\r\n};\r\nt[0x29] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66)\r\n    {\r\n        // movapd xmm/m128, xmm\r\n        // (note: same as below, see google.com/?q=MOVAPD+vs+MOVAPS)\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n    else\r\n    {\r\n        // movaps xmm/m128, xmm\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n};\r\nt[0x2A] = cpu => {\r\n    // cvtpi2ps xmm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    let data = cpu.read_mmx_mem64s();\r\n    let float32 = new Float32Array(2);\r\n    let res32 = new Uint32Array(float32.buffer);\r\n    float32[0] = data[0];\r\n    float32[1] = data[1];\r\n    cpu.write_xmm64(res32[0], res32[1]);\r\n };\r\nt[0x2B] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66)\r\n    {\r\n        // movntpd m128, xmm\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n    else\r\n    {\r\n        // movntps m128, xmm\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n };\r\nt[0x2C] = cpu => {\r\n    // cvttps2pi mm, xmm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let data = cpu.read_xmm_mem64s();\r\n    let float32 = new Float32Array(data.buffer);\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    var res0 = Math.trunc(float32[0]);\r\n    if(res0 <= 0x7FFFFFFF && res0 >= -0x80000000)\r\n    {\r\n        low = res0;\r\n    }\r\n    else\r\n    {\r\n        low = 0x80000000|0;\r\n    }\r\n\r\n    var res1 = Math.trunc(float32[1]);\r\n    if(res1 <= 0x7FFFFFFF && res1 >= -0x80000000)\r\n    {\r\n        high = res1;\r\n    }\r\n    else\r\n    {\r\n        high = 0x80000000|0;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x2D] = cpu => {\r\n    // cvtps2pi mm, xmm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let data = cpu.read_xmm_mem64s();\r\n    let float32 = new Float32Array(data.buffer);\r\n    let low = 0;\r\n    let high = 0;\r\n    var rc = cpu.mxcsr >> 13 & 3;\r\n\r\n    var res0 = cpu.integer_round(float32[0], rc);\r\n    if(res0 <= 0x7FFFFFFF && res0 >= -0x80000000)\r\n    {\r\n        low = res0;\r\n    }\r\n    else\r\n    {\r\n        low = 0x80000000|0;\r\n    }\r\n\r\n    var res1 = cpu.integer_round(float32[1], rc);\r\n    if(res1 <= 0x7FFFFFFF && res1 >= -0x80000000)\r\n    {\r\n        high = res1;\r\n    }\r\n    else\r\n    {\r\n        high = 0x80000000|0;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x2E] = cpu => {\r\n    // ucomiss xmm1, xmm2/m32\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source1 = cpu.read_xmm128s();\r\n    let source2 = cpu.read_xmm_mem128s();\r\n\r\n    let x = (new Float32Array(source1.buffer))[0];\r\n    let y = (new Float32Array(source2.buffer))[0];\r\n\r\n    cpu.flags_changed &= ~(1 | flag_parity | flag_zero);\r\n    cpu.flags &= ~(1 | flag_parity | flag_zero);\r\n\r\n    if(x > y)\r\n    {\r\n    }\r\n    else if(y > x)\r\n    {\r\n        cpu.flags |= 1;\r\n    }\r\n    else if(x === y)\r\n    {\r\n        cpu.flags |= flag_zero;\r\n    }\r\n    else\r\n    {\r\n        cpu.flags |= 1 | flag_parity | flag_zero;\r\n\r\n        if (cpu.is_SNaN32(source1[0]) || cpu.is_SNaN32(source2[0])) {\r\n            cpu.invalid_arithmatic();\r\n        }\r\n    }\r\n};\r\n\r\nt[0x2F] = cpu => {\r\n    // comiss xmm1, xmm2/m32\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source1 = cpu.read_xmm128s();\r\n    let source2 = cpu.read_xmm_mem128s();\r\n\r\n    let x = (new Float32Array(source1.buffer))[0];\r\n    let y = (new Float32Array(source2.buffer))[0];\r\n\r\n    cpu.flags_changed &= ~(1 | flag_parity | flag_zero);\r\n    cpu.flags &= ~(1 | flag_parity | flag_zero);\r\n\r\n    if(x > y)\r\n    {\r\n    }\r\n    else if(y > x)\r\n    {\r\n        cpu.flags |= 1;\r\n    }\r\n    else if(x === y)\r\n    {\r\n        cpu.flags |= flag_zero;\r\n    }\r\n    else\r\n    {\r\n        cpu.flags |= 1 | flag_parity | flag_zero;\r\n        cpu.invalid_arithmatic();\r\n    }\r\n};\r\n\r\n// wrmsr\r\nt[0x30] = cpu => {\r\n    // wrmsr - write maschine specific register\r\n\r\n    if(cpu.cpl)\r\n    {\r\n        // cpl > 0 or vm86 mode (vm86 mode is always runs with cpl=3)\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    var index = cpu.reg32s[reg_ecx];\r\n    var low = cpu.reg32s[reg_eax];\r\n    var high = cpu.reg32s[reg_edx];\r\n\r\n    if(index !== IA32_SYSENTER_ESP)\r\n    {\r\n        dbg_log(\"wrmsr ecx=\" + h(index >>> 0, 8) +\r\n                    \" data=\" + h(high >>> 0, 8) + \":\" + h(low >>> 0, 8), LOG_CPU);\r\n    }\r\n\r\n    switch(index)\r\n    {\r\n        case IA32_SYSENTER_CS:\r\n            cpu.sysenter_cs = low & 0xFFFF;\r\n            break;\r\n\r\n        case IA32_SYSENTER_EIP:\r\n            cpu.sysenter_eip = low;\r\n            break;\r\n\r\n        case IA32_SYSENTER_ESP:\r\n            cpu.sysenter_esp = low;\r\n            break;\r\n\r\n        case IA32_APIC_BASE_MSR:\r\n            dbg_assert(high === 0, \"Changing APIC address (high 32 bits) not supported\");\r\n            let address = low & ~(IA32_APIC_BASE_BSP | IA32_APIC_BASE_EXTD | IA32_APIC_BASE_EN);\r\n            dbg_assert((address >>> 0) === APIC_ADDRESS, \"Changing APIC address not supported\");\r\n            dbg_assert((low & IA32_APIC_BASE_EXTD) === 0, \"x2apic not supported\");\r\n            cpu.apic_enabled = (low & IA32_APIC_BASE_EN) === IA32_APIC_BASE_EN;\r\n            break;\r\n\r\n        case IA32_TIME_STAMP_COUNTER:\r\n            var new_tick = (low >>> 0) + 0x100000000 * (high >>> 0);\r\n            cpu.tsc_offset = v86.microtick() - new_tick / TSC_RATE;\r\n            break;\r\n\r\n        case IA32_BIOS_SIGN_ID:\r\n            break;\r\n\r\n        case IA32_MISC_ENABLE: // Enable Misc. Processor Features\r\n            dbg_log(\"IA32_MISC_ENABLE=\" + h(low >>> 0, 8), LOG_CPU);\r\n            break;\r\n\r\n        case IA32_MCG_CAP:\r\n            // netbsd\r\n            break;\r\n\r\n        case IA32_KERNEL_GS_BASE:\r\n            // Only used in 64 bit mode (by SWAPGS), but set by kvm-unit-test\r\n            dbg_log(\"GS Base written\", LOG_CPU);\r\n            break;\r\n\r\n        default:\r\n            dbg_assert(false, \"Unknown msr: \" + h(index >>> 0, 8));\r\n    }\r\n};\r\n\r\nt[0x31] = cpu => {\r\n    // rdtsc - read timestamp counter\r\n\r\n    if(!cpu.cpl || !(cpu.cr[4] & CR4_TSD))\r\n    {\r\n        var n = v86.microtick() - cpu.tsc_offset;\r\n        dbg_assert(isFinite(n), \"non-finite tsc: \" + n);\r\n\r\n        cpu.reg32s[reg_eax] = n * TSC_RATE;\r\n        cpu.reg32s[reg_edx] = n * (TSC_RATE / 0x100000000);\r\n\r\n        //dbg_log(\"rdtsc  edx:eax=\" + h(cpu.reg32[reg_edx], 8) + \":\" + h(cpu.reg32[reg_eax], 8), LOG_CPU);\r\n    }\r\n    else\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n};\r\n\r\nt[0x32] = cpu => {\r\n    // rdmsr - read maschine specific register\r\n    if(cpu.cpl)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    var index = cpu.reg32s[reg_ecx];\r\n\r\n    dbg_log(\"rdmsr ecx=\" + h(index >>> 0, 8), LOG_CPU);\r\n\r\n    var low = 0;\r\n    var high = 0;\r\n\r\n    switch(index)\r\n    {\r\n        case IA32_SYSENTER_CS:\r\n            low = cpu.sysenter_cs;\r\n            break;\r\n\r\n        case IA32_SYSENTER_EIP:\r\n            low = cpu.sysenter_eip;\r\n            break;\r\n\r\n        case IA32_SYSENTER_ESP:\r\n            low = cpu.sysenter_esp;\r\n            break;\r\n\r\n        case IA32_TIME_STAMP_COUNTER:\r\n            var n = v86.microtick() - cpu.tsc_offset;\r\n            low = n * TSC_RATE;\r\n            high = n * (TSC_RATE / 0x100000000);\r\n            break;\r\n\r\n        case IA32_PLATFORM_ID:\r\n            break;\r\n\r\n        case IA32_APIC_BASE_MSR:\r\n            if(ENABLE_ACPI)\r\n            {\r\n                low = APIC_ADDRESS;\r\n\r\n                if(cpu.apic_enabled)\r\n                {\r\n                    low |= IA32_APIC_BASE_EN;\r\n                }\r\n            }\r\n            break;\r\n\r\n        case IA32_BIOS_SIGN_ID:\r\n            break;\r\n\r\n        case IA32_MISC_ENABLE: // Enable Misc. Processor Features\r\n            break;\r\n\r\n        case IA32_RTIT_CTL:\r\n            // linux4\r\n            break;\r\n\r\n        case MSR_SMI_COUNT:\r\n            break;\r\n\r\n        case IA32_MCG_CAP:\r\n            // netbsd\r\n            break;\r\n\r\n        case MSR_PKG_C2_RESIDENCY:\r\n            break;\r\n\r\n        case MSR_EBC_FREQUENCY_ID:\r\n            low = 1 << 24;\r\n            break;\r\n\r\n        default:\r\n            dbg_assert(false, \"Unknown msr: \" + h(index >>> 0, 8));\r\n    }\r\n\r\n    cpu.reg32s[reg_eax] = low;\r\n    cpu.reg32s[reg_edx] = high;\r\n};\r\n\r\nt[0x33] = cpu => {\r\n    // rdpmc\r\n    cpu.todo();\r\n};\r\n\r\nt[0x34] = cpu => {\r\n    // sysenter\r\n    var seg = cpu.sysenter_cs & 0xFFFC;\r\n\r\n    if(!cpu.protected_mode || seg === 0)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    //dbg_log(\"sysenter  cs:eip=\" + h(seg    , 4) + \":\" + h(cpu.sysenter_eip >>> 0, 8) +\r\n    //                 \" ss:esp=\" + h(seg + 8, 4) + \":\" + h(cpu.sysenter_esp >>> 0, 8), LOG_CPU);\r\n\r\n    cpu.flags &= ~flag_vm & ~flag_interrupt;\r\n\r\n    cpu.instruction_pointer = cpu.sysenter_eip;\r\n    cpu.reg32s[reg_esp] = cpu.sysenter_esp;\r\n\r\n    cpu.sreg[reg_cs] = seg;\r\n    cpu.segment_is_null[reg_cs] = 0;\r\n    cpu.segment_limits[reg_cs] = -1;\r\n    cpu.segment_offsets[reg_cs] = 0;\r\n\r\n    cpu.update_cs_size(true);\r\n\r\n    cpu.cpl = 0;\r\n    cpu.cpl_changed();\r\n\r\n    cpu.sreg[reg_ss] = seg + 8;\r\n    cpu.segment_is_null[reg_ss] = 0;\r\n    cpu.segment_limits[reg_ss] = -1;\r\n    cpu.segment_offsets[reg_ss] = 0;\r\n\r\n    cpu.stack_size_32 = true;\r\n    cpu.diverged();\r\n};\r\n\r\nt[0x35] = cpu => {\r\n    // sysexit\r\n    var seg = cpu.sysenter_cs & 0xFFFC;\r\n\r\n    if(!cpu.protected_mode || cpu.cpl || seg === 0)\r\n    {\r\n        cpu.trigger_gp(0);\r\n    }\r\n\r\n    //dbg_log(\"sysexit  cs:eip=\" + h(seg + 16, 4) + \":\" + h(cpu.reg32s[reg_edx] >>> 0, 8) +\r\n    //                 \" ss:esp=\" + h(seg + 24, 4) + \":\" + h(cpu.reg32s[reg_ecx] >>> 0, 8), LOG_CPU);\r\n\r\n    cpu.instruction_pointer = cpu.reg32s[reg_edx];\r\n    cpu.reg32s[reg_esp] = cpu.reg32s[reg_ecx];\r\n\r\n    cpu.sreg[reg_cs] = seg + 16 | 3;\r\n\r\n    cpu.segment_is_null[reg_cs] = 0;\r\n    cpu.segment_limits[reg_cs] = -1;\r\n    cpu.segment_offsets[reg_cs] = 0;\r\n\r\n    cpu.update_cs_size(true);\r\n\r\n    cpu.cpl = 3;\r\n    cpu.cpl_changed();\r\n\r\n    cpu.sreg[reg_ss] = seg + 24 | 3;\r\n    cpu.segment_is_null[reg_ss] = 0;\r\n    cpu.segment_limits[reg_ss] = -1;\r\n    cpu.segment_offsets[reg_ss] = 0;\r\n\r\n    cpu.stack_size_32 = true;\r\n    cpu.diverged();\r\n};\r\n\r\nt[0x36] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt[0x37] = cpu => {\r\n    // getsec\r\n    cpu.todo();\r\n};\r\n\r\n// sse3+\r\nt[0x38] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x39] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3A] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3B] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3C] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3D] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3E] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x3F] = cpu => { cpu.unimplemented_sse(); };\r\n\r\n// cmov\r\nt16[0x40] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_o()); };\r\nt32[0x40] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_o()); };\r\nt16[0x41] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_o()); };\r\nt32[0x41] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_o()); };\r\nt16[0x42] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_b()); };\r\nt32[0x42] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_b()); };\r\nt16[0x43] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_b()); };\r\nt32[0x43] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_b()); };\r\nt16[0x44] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_z()); };\r\nt32[0x44] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_z()); };\r\nt16[0x45] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_z()); };\r\nt32[0x45] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_z()); };\r\nt16[0x46] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_be()); };\r\nt32[0x46] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_be()); };\r\nt16[0x47] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_be()); };\r\nt32[0x47] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_be()); };\r\nt16[0x48] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_s()); };\r\nt32[0x48] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_s()); };\r\nt16[0x49] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_s()); };\r\nt32[0x49] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_s()); };\r\nt16[0x4A] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_p()); };\r\nt32[0x4A] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_p()); };\r\nt16[0x4B] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_p()); };\r\nt32[0x4B] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_p()); };\r\nt16[0x4C] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_l()); };\r\nt32[0x4C] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_l()); };\r\nt16[0x4D] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_l()); };\r\nt32[0x4D] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_l()); };\r\nt16[0x4E] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16( cpu.test_le()); };\r\nt32[0x4E] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32( cpu.test_le()); };\r\nt16[0x4F] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc16(!cpu.test_le()); };\r\nt32[0x4F] = cpu => { cpu.read_modrm_byte(); cpu.cmovcc32(!cpu.test_le()); };\r\n\r\n\r\nt[0x50] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x51] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x52] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x53] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x54] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x55] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x56] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x57] = cpu => {\r\n    // xorps xmm, xmm/mem128\r\n    // xorpd xmm, xmm/mem128\r\n    // Note: Same code as pxor\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_xmm_mem128s();\r\n    let destination = cpu.read_xmm128s();\r\n\r\n    cpu.write_xmm128s(\r\n        source[0] ^ destination[0],\r\n        source[1] ^ destination[1],\r\n        source[2] ^ destination[2],\r\n        source[3] ^ destination[3]\r\n    );\r\n};\r\n\r\nt[0x58] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x59] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5A] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5B] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5C] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5D] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5E] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x5F] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0x60] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // punpcklbw xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem64s();\r\n        let source8 = new Uint8Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm64s();\r\n        let destination8 = new Uint8Array(destination.buffer);\r\n\r\n        cpu.write_xmm128s(\r\n            destination8[0] | source8[0] << 8 | destination8[1] << 16 | source8[1] << 24,\r\n            destination8[2] | source8[2] << 8 | destination8[3] << 16 | source8[3] << 24,\r\n            destination8[4] | source8[4] << 8 | destination8[5] << 16 | source8[5] << 24,\r\n            destination8[6] | source8[6] << 8 | destination8[7] << 16 | source8[7] << 24\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // punpcklbw mm, mm/m32\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem32s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n\r\n        let byte0 = destination_low & 0xFF;\r\n        let byte1 = source & 0xFF;\r\n        let byte2 = (destination_low >> 8) & 0xFF;\r\n        let byte3 = (source >> 8) & 0xFF;\r\n        let byte4 = (destination_low >> 16) & 0xFF;\r\n        let byte5 = (source >> 16) & 0xFF;\r\n        let byte6 = destination_low >>> 24;\r\n        let byte7 = source >>> 24;\r\n\r\n        let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n        let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x61] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // punpcklwd xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem64s();\r\n        let source16 = new Uint16Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm64s();\r\n        let destination16 = new Uint16Array(destination.buffer);\r\n\r\n        cpu.write_xmm128s(\r\n            destination16[0] | source16[0] << 16,\r\n            destination16[1] | source16[1] << 16,\r\n            destination16[2] | source16[2] << 16,\r\n            destination16[3] | source16[3] << 16\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // punpcklwd mm, mm/m32\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let source = cpu.read_mmx_mem32s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n\r\n        let word0 = destination_low & 0xFFFF;\r\n        let word1 = source & 0xFFFF;\r\n        let word2 = destination_low >>> 16;\r\n        let word3 = source >>> 16;\r\n\r\n        let low = word0 | word1 << 16;\r\n        let high = word2 | word3 << 16;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x62] = cpu => {\r\n    // punpckldq mm, mm/m32\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem32s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n\r\n    let low = destination_low;\r\n    let high = source;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x63] = cpu => {\r\n    // packsswb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = 0;\r\n    low |= (cpu.saturate_sw_to_sb((destination_low) & 0xFFFF));\r\n    low |= (cpu.saturate_sw_to_sb(destination_low >>> 16)) << 8;\r\n    low |= (cpu.saturate_sw_to_sb((destination_high) & 0xFFFF)) << 16;\r\n    low |= (cpu.saturate_sw_to_sb(destination_high >>> 16)) << 24;\r\n\r\n    let high = 0;\r\n    high |= (cpu.saturate_sw_to_sb((source[0]) & 0xFFFF));\r\n    high |= (cpu.saturate_sw_to_sb(source[0] >>> 16)) << 8;\r\n    high |= (cpu.saturate_sw_to_sb((source[1]) & 0xFFFF)) << 16;\r\n    high |= (cpu.saturate_sw_to_sb(source[1] >>> 16)) << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x64] = cpu => {\r\n    // pcmpgtb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8s = new Int8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8s = cpu.reg_mmx8s;\r\n\r\n    let byte0 = destination8s[reg_offset] > source8s[0] ? 0xFF : 0;\r\n    let byte1 = destination8s[reg_offset + 1] > source8s[1] ? 0xFF : 0;\r\n    let byte2 = destination8s[reg_offset + 2] > source8s[2] ? 0xFF : 0;\r\n    let byte3 = destination8s[reg_offset + 3] > source8s[3] ? 0xFF : 0;\r\n    let byte4 = destination8s[reg_offset + 4] > source8s[4] ? 0xFF : 0;\r\n    let byte5 = destination8s[reg_offset + 5] > source8s[5] ? 0xFF : 0;\r\n    let byte6 = destination8s[reg_offset + 6] > source8s[6] ? 0xFF : 0;\r\n    let byte7 = destination8s[reg_offset + 7] > source8s[7] ? 0xFF : 0;\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x65] = cpu => {\r\n    // pcmpgtw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = (destination_low << 16 >> 16) > (source[0] << 16 >> 16) ? 0xFFFF : 0;\r\n    let word1 = (destination_low >> 16) > (source[0] >> 16) ? 0xFFFF : 0;\r\n    let word2 = (destination_high << 16 >> 16) > (source[1] << 16 >> 16) ? 0xFFFF : 0;\r\n    let word3 = (destination_high >> 16) > (source[1] >> 16) ? 0xFFFF : 0;\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x66] = cpu => {\r\n    // pcmpgtd mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = destination_low > source[0] ? -1 : 0;\r\n    let high = destination_high > source[1] ? -1 : 0;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x67] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source16s = new Int16Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination16s = new Int16Array(destination.buffer);\r\n\r\n        let result = cpu.create_atom128s(0, 0, 0, 0);\r\n        let result8 = new Uint8Array(result.buffer);\r\n\r\n        for(let i = 0; i < 8; i++)\r\n        {\r\n            result8[i] = cpu.saturate_sw_to_ub(destination16s[i]);\r\n            result8[i | 8] = cpu.saturate_sw_to_ub(source16s[i]);\r\n        }\r\n\r\n        cpu.write_xmm128s(result[0], result[1], result[2], result[3]);\r\n    }\r\n    else\r\n    {\r\n        // packuswb mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let low = 0;\r\n        low |= (cpu.saturate_sw_to_ub((destination_low) & 0xFFFF));\r\n        low |= (cpu.saturate_sw_to_ub(destination_low >>> 16)) << 8;\r\n        low |= (cpu.saturate_sw_to_ub((destination_high) & 0xFFFF)) << 16;\r\n        low |= (cpu.saturate_sw_to_ub(destination_high >>> 16)) << 24;\r\n\r\n        let high = 0;\r\n        high |= (cpu.saturate_sw_to_ub((source[0]) & 0xFFFF));\r\n        high |= (cpu.saturate_sw_to_ub(source[0] >>> 16)) << 8;\r\n        high |= (cpu.saturate_sw_to_ub((source[1]) & 0xFFFF)) << 16;\r\n        high |= (cpu.saturate_sw_to_ub(source[1] >>> 16)) << 24;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x68] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // punpckhbw xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source8 = new Uint8Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination8 = new Uint8Array(destination.buffer);\r\n\r\n        cpu.write_xmm128s(\r\n            destination8[ 8] | source8[ 8] << 8 | destination8[ 9] << 16 | source8[ 9] << 24,\r\n            destination8[10] | source8[10] << 8 | destination8[11] << 16 | source8[11] << 24,\r\n            destination8[12] | source8[12] << 8 | destination8[13] << 16 | source8[13] << 24,\r\n            destination8[14] | source8[14] << 8 | destination8[15] << 16 | source8[15] << 24\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // punpckhbw mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let byte0 = destination_high & 0xFF;\r\n        let byte1 = source[1] & 0xFF;\r\n        let byte2 = (destination_high >> 8) & 0xFF;\r\n        let byte3 = (source[1] >> 8) & 0xFF;\r\n        let byte4 = (destination_high >> 16) & 0xFF;\r\n        let byte5 = (source[1] >> 16) & 0xFF;\r\n        let byte6 = destination_high >>> 24;\r\n        let byte7 = source[1] >>> 24;\r\n\r\n        let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n        let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x69] = cpu => {\r\n    // punpckhwd mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = destination_high & 0xFFFF;\r\n    let word1 = source[1] & 0xFFFF;\r\n    let word2 = destination_high >>> 16;\r\n    let word3 = source[1] >>> 16;\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x6A] = cpu => {\r\n    // punpckhdq mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = destination_high;\r\n    let high = source[1];\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x6B] = cpu => {\r\n    // packssdw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = 0;\r\n    low |= cpu.saturate_sd_to_sw(destination_low);\r\n    low |= cpu.saturate_sd_to_sw(destination_high) << 16;\r\n\r\n    let high = 0;\r\n    high |= cpu.saturate_sd_to_sw(source[0]);\r\n    high |= cpu.saturate_sd_to_sw(source[1]) << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x6C] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x6D] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x6E] = cpu => {\r\n    // movd mm, r/m32\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66)\r\n    {\r\n        let data = cpu.read_e32s();\r\n        cpu.write_xmm128s(data, 0, 0, 0);\r\n    }\r\n    else\r\n    {\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let data = cpu.read_e32s();\r\n        cpu.write_mmx64s(data, 0);\r\n    }\r\n};\r\nt[0x6F] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // movdqa xmm, xmm/mem128\r\n        let data = cpu.read_xmm_mem128s();\r\n        cpu.write_xmm128s(data[0], data[1], data[2], data[3]);\r\n    }\r\n    else if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_F3)\r\n    {\r\n        // movdqu xmm, xmm/m128\r\n        let data = cpu.read_xmm_mem128s_unaligned();\r\n        cpu.write_xmm128s(data[0], data[1], data[2], data[3]);\r\n    }\r\n    else\r\n    {\r\n        // movq mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let data = cpu.read_mmx_mem64s();\r\n        cpu.write_mmx64s(data[0], data[1]);\r\n    }\r\n};\r\n\r\nt[0x70] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66)\r\n    {\r\n        // pshufd xmm, xmm/mem128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let order = cpu.read_op8();\r\n\r\n        cpu.write_xmm128s(\r\n            source[order & 3],\r\n            source[order >> 2 & 3],\r\n            source[order >> 4 & 3],\r\n            source[order >> 6 & 3]\r\n        );\r\n    }\r\n    else if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_F2)\r\n    {\r\n        // pshuflw xmm, xmm/m128, imm8\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source16 = new Uint16Array(source.buffer);\r\n        let order = cpu.read_op8();\r\n\r\n        cpu.write_xmm128s(\r\n            source16[order & 3] | source16[order >> 2 & 3] << 16,\r\n            source16[order >> 4 & 3] | source16[order >> 6 & 3] << 16,\r\n            source[2],\r\n            source[3]\r\n        );\r\n    }\r\n    else if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_F3)\r\n    {\r\n        // pshufhw xmm, xmm/m128, imm8\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source16 = new Uint16Array(source.buffer);\r\n        let order = cpu.read_op8();\r\n\r\n        cpu.write_xmm128s(\r\n            source[0],\r\n            source[1],\r\n            source16[order & 3 | 4] | source16[order >> 2 & 3 | 4] << 16,\r\n            source16[order >> 4 & 3 | 4] | source16[order >> 6 & 3 | 4] << 16\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // pshufw mm1, mm2/m64, imm8\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let source = cpu.read_mmx_mem64s();\r\n        let order = cpu.read_op8();\r\n\r\n        let word0_shift = order & 0b11;\r\n        let word0 = source[word0_shift >> 1] >>> ((word0_shift & 1) * 16) & 0xFFFF;\r\n        let word1_shift = (order >> 2) & 0b11;\r\n        let word1 = source[word1_shift >> 1] >>> ((word1_shift & 1) * 16);\r\n        let low = word0 | word1 << 16;\r\n\r\n        let word2_shift = (order >> 4) & 0b11;\r\n        let word2 = source[word2_shift >> 1] >>> ((word2_shift & 1) * 16) & 0xFFFF;\r\n        let word3_shift = (order >>> 6);\r\n        let word3 = source[word3_shift >> 1] >>> ((word3_shift & 1) * 16);\r\n        let high = word2 | word3 << 16;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\nt[0x71] = cpu => {\r\n    cpu.read_modrm_byte();\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    // psrlw, psraw, psllw\r\n    //     2,     4,     6\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 2:\r\n            // psrlw mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 15) {\r\n                var word0 = (destination_low & 0xFFFF) >>> shift;\r\n                var word1 = (destination_low >>> 16) >>> shift;\r\n                low = word0 | word1 << 16;\r\n\r\n                var word2 = (destination_high & 0xFFFF) >>> shift;\r\n                var word3 = (destination_high >>> 16) >>> shift;\r\n                high = word2 | word3 << 16;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        case 4:\r\n            // psraw mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            if (shift > 15) {\r\n                shift = 16;\r\n            }\r\n\r\n            var word0 = ((destination_low << 16 >> 16) >> shift) & 0xFFFF;\r\n            var word1 = ((destination_low >> 16) >> shift) & 0xFFFF;\r\n            var low = word0 | word1 << 16;\r\n\r\n            var word2 = ((destination_high << 16 >> 16) >> shift) & 0xFFFF;\r\n            var word3 = ((destination_high >> 16) >> shift) & 0xFFFF;\r\n            var high = word2 | word3 << 16;\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        case 6:\r\n            // psllw mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 15) {\r\n                var word0 = ((destination_low & 0xFFFF) << shift) & 0xFFFF;\r\n                var word1 = (destination_low >>> 16) << shift;\r\n                low = word0 | word1 << 16;\r\n\r\n                var word2 = ((destination_high & 0xFFFF) << shift) & 0xFFFF;\r\n                var word3 = (destination_high >>> 16) << shift;\r\n                high = word2 | word3 << 16;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        default:\r\n            cpu.unimplemented_sse();\r\n            break;\r\n    }\r\n};\r\n\r\nt[0x72] = cpu => {\r\n    cpu.read_modrm_byte();\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    // psrld, psrad, pslld\r\n    //     2,     4,     6\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 2:\r\n            // psrld mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 31) {\r\n                low = destination_low >>> shift;\r\n                high = destination_high >>> shift;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        case 4:\r\n            // psrad mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            if (shift > 31) {\r\n                shift = 31;\r\n            }\r\n\r\n            var low = destination_low >> shift;\r\n            var high = destination_high >> shift;\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        case 6:\r\n            // pslld mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 31) {\r\n                low = destination_low << shift;\r\n                high = destination_high << shift;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        default:\r\n            cpu.unimplemented_sse();\r\n            break;\r\n    }\r\n};\r\n\r\nt[0x73] = cpu => {\r\n    cpu.read_modrm_byte();\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    // psrlq, psllq\r\n    //     2,     6\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 2:\r\n            // psrlq mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 31) {\r\n                low = destination_low >>> shift | (destination_high << (32 - shift));\r\n                high = destination_high >>> shift;\r\n            }\r\n            else if (shift <= 63) {\r\n                low = destination_high >>> (shift & 0x1F);\r\n                high = 0;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        case 6:\r\n            // psllq mm, imm8\r\n            var source = cpu.read_op8();\r\n            var destination = cpu.modrm_byte & 7;\r\n\r\n            var destination_low = cpu.reg_mmxs[2 * destination];\r\n            var destination_high = cpu.reg_mmxs[2 * destination + 1];\r\n\r\n            var shift = source;\r\n            var low = 0;\r\n            var high = 0;\r\n\r\n            if (shift <= 31) {\r\n                low = destination_low << shift;\r\n                high = destination_high << shift | (destination_low >>> (32 - shift));\r\n            }\r\n            else if (shift <= 63) {\r\n                high = destination_low << (shift & 0x1F);\r\n                low = 0;\r\n            }\r\n\r\n            cpu.reg_mmxs[2 * destination] = low;\r\n            cpu.reg_mmxs[2 * destination + 1] = high;\r\n\r\n            break;\r\n        default:\r\n            cpu.unimplemented_sse();\r\n            break;\r\n    }\r\n};\r\n\r\nt[0x74] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // pcmpeqb xmm, xmm/m128\r\n        let source64s = cpu.read_xmm_mem128s();\r\n        let source8 = new Uint8Array(source64s.buffer);\r\n\r\n        let destination128 = cpu.read_xmm128s();\r\n        let destination8 = new Uint8Array(destination128.buffer);\r\n\r\n        let result = cpu.create_atom128s(0, 0, 0, 0);\r\n        let result8 = new Uint8Array(result.buffer);\r\n\r\n        for(let i = 0; i < 16; i++)\r\n        {\r\n            result8[i] = source8[i] === destination8[i] ? 0xFF : 0;\r\n        }\r\n\r\n        cpu.write_xmm128s(result[0], result[1], result[2], result[3])\r\n    }\r\n    else\r\n    {\r\n        // pcmpeqb mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let source64s = cpu.read_mmx_mem64s();\r\n        let source8s = new Int8Array(source64s.buffer);\r\n\r\n        let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n        let destination8s = cpu.reg_mmx8s;\r\n\r\n        let byte0 = destination8s[reg_offset] === source8s[0] ? 0xFF : 0;\r\n        let byte1 = destination8s[reg_offset + 1] === source8s[1] ? 0xFF : 0;\r\n        let byte2 = destination8s[reg_offset + 2] === source8s[2] ? 0xFF : 0;\r\n        let byte3 = destination8s[reg_offset + 3] === source8s[3] ? 0xFF : 0;\r\n        let byte4 = destination8s[reg_offset + 4] === source8s[4] ? 0xFF : 0;\r\n        let byte5 = destination8s[reg_offset + 5] === source8s[5] ? 0xFF : 0;\r\n        let byte6 = destination8s[reg_offset + 6] === source8s[6] ? 0xFF : 0;\r\n        let byte7 = destination8s[reg_offset + 7] === source8s[7] ? 0xFF : 0;\r\n\r\n        let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n        let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x75] = cpu => {\r\n    // pcmpeqw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = (destination_low & 0xFFFF) === (source[0] & 0xFFFF) ? 0xFFFF : 0;\r\n    let word1 = (destination_low & 0xFFFF0000) === (source[0] & 0xFFFF0000) ? 0xFFFF : 0;\r\n    let word2 = (destination_high & 0xFFFF) === (source[1] & 0xFFFF) ? 0xFFFF : 0;\r\n    let word3 = (destination_high & 0xFFFF0000) === (source[1] & 0xFFFF0000) ? 0xFFFF : 0;\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0x76] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // pcmpeqd xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let destination = cpu.read_xmm128s();\r\n\r\n        cpu.write_xmm128s(\r\n            source[0] === destination[0] ? -1 : 0,\r\n            source[1] === destination[1] ? -1 : 0,\r\n            source[2] === destination[2] ? -1 : 0,\r\n            source[3] === destination[3] ? -1 : 0\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // pcmpeqd mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let low = destination_low === source[0] ? -1 : 0;\r\n        let high = destination_high === source[1] ? -1 : 0;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0x77] = cpu => {\r\n    // emms\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.fpu.stack_empty = 0xFF;\r\n};\r\n\r\nt[0x78] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x79] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x7A] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x7B] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x7C] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x7D] = cpu => { cpu.unimplemented_sse(); };\r\nt[0x7E] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_F3)\r\n    {\r\n        // movq xmm, xmm/mem64\r\n        let data = cpu.read_xmm_mem64s();\r\n        cpu.write_xmm128s(data[0], data[1], 0, 0);\r\n    }\r\n    else if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // movd r/m32, xmm\r\n        let data = cpu.read_xmm64s();\r\n        cpu.set_e32(data[0]);\r\n    }\r\n    else\r\n    {\r\n        // movd r/m32, mm\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let data = cpu.read_mmx64s();\r\n        cpu.set_e32(data[0]);\r\n    }\r\n};\r\nt[0x7F] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_F3)\r\n    {\r\n        // movdqu xmm/m128, xmm\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n    else if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // movdqa xmm/m128, xmm\r\n        let data = cpu.read_xmm128s();\r\n        dbg_assert(cpu.modrm_byte < 0xC0);\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n    else\r\n    {\r\n        // movq mm/m64, mm\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let data = cpu.read_mmx64s();\r\n        cpu.set_mmx_mem64s(data[0], data[1]);\r\n    }\r\n};\r\n\r\n// jmpcc\r\nt16[0x80] = cpu => { cpu.jmpcc16( cpu.test_o()); };\r\nt32[0x80] = cpu => { cpu.jmpcc32( cpu.test_o()); };\r\nt16[0x81] = cpu => { cpu.jmpcc16(!cpu.test_o()); };\r\nt32[0x81] = cpu => { cpu.jmpcc32(!cpu.test_o()); };\r\nt16[0x82] = cpu => { cpu.jmpcc16( cpu.test_b()); };\r\nt32[0x82] = cpu => { cpu.jmpcc32( cpu.test_b()); };\r\nt16[0x83] = cpu => { cpu.jmpcc16(!cpu.test_b()); };\r\nt32[0x83] = cpu => { cpu.jmpcc32(!cpu.test_b()); };\r\nt16[0x84] = cpu => { cpu.jmpcc16( cpu.test_z()); };\r\nt32[0x84] = cpu => { cpu.jmpcc32( cpu.test_z()); };\r\nt16[0x85] = cpu => { cpu.jmpcc16(!cpu.test_z()); };\r\nt32[0x85] = cpu => { cpu.jmpcc32(!cpu.test_z()); };\r\nt16[0x86] = cpu => { cpu.jmpcc16( cpu.test_be()); };\r\nt32[0x86] = cpu => { cpu.jmpcc32( cpu.test_be()); };\r\nt16[0x87] = cpu => { cpu.jmpcc16(!cpu.test_be()); };\r\nt32[0x87] = cpu => { cpu.jmpcc32(!cpu.test_be()); };\r\nt16[0x88] = cpu => { cpu.jmpcc16( cpu.test_s()); };\r\nt32[0x88] = cpu => { cpu.jmpcc32( cpu.test_s()); };\r\nt16[0x89] = cpu => { cpu.jmpcc16(!cpu.test_s()); };\r\nt32[0x89] = cpu => { cpu.jmpcc32(!cpu.test_s()); };\r\nt16[0x8A] = cpu => { cpu.jmpcc16( cpu.test_p()); };\r\nt32[0x8A] = cpu => { cpu.jmpcc32( cpu.test_p()); };\r\nt16[0x8B] = cpu => { cpu.jmpcc16(!cpu.test_p()); };\r\nt32[0x8B] = cpu => { cpu.jmpcc32(!cpu.test_p()); };\r\nt16[0x8C] = cpu => { cpu.jmpcc16( cpu.test_l()); };\r\nt32[0x8C] = cpu => { cpu.jmpcc32( cpu.test_l()); };\r\nt16[0x8D] = cpu => { cpu.jmpcc16(!cpu.test_l()); };\r\nt32[0x8D] = cpu => { cpu.jmpcc32(!cpu.test_l()); };\r\nt16[0x8E] = cpu => { cpu.jmpcc16( cpu.test_le()); };\r\nt32[0x8E] = cpu => { cpu.jmpcc32( cpu.test_le()); };\r\nt16[0x8F] = cpu => { cpu.jmpcc16(!cpu.test_le()); };\r\nt32[0x8F] = cpu => { cpu.jmpcc32(!cpu.test_le()); };\r\n\r\n// setcc\r\nt[0x90] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_o()); };\r\nt[0x91] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_o()); };\r\nt[0x92] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_b()); };\r\nt[0x93] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_b()); };\r\nt[0x94] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_z()); };\r\nt[0x95] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_z()); };\r\nt[0x96] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_be()); };\r\nt[0x97] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_be()); };\r\nt[0x98] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_s()); };\r\nt[0x99] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_s()); };\r\nt[0x9A] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_p()); };\r\nt[0x9B] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_p()); };\r\nt[0x9C] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_l()); };\r\nt[0x9D] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_l()); };\r\nt[0x9E] = cpu => { cpu.read_modrm_byte(); cpu.setcc( cpu.test_le()); };\r\nt[0x9F] = cpu => { cpu.read_modrm_byte(); cpu.setcc(!cpu.test_le()); };\r\n\r\nt16[0xA0] = cpu => { cpu.push16(cpu.sreg[reg_fs]); };\r\nt32[0xA0] = cpu => { cpu.push32(cpu.sreg[reg_fs]); };\r\nt16[0xA1] = cpu => {\r\n    cpu.switch_seg(reg_fs, cpu.safe_read16(cpu.get_stack_pointer(0)));\r\n    cpu.adjust_stack_reg(2);\r\n};\r\nt32[0xA1] = cpu => {\r\n    cpu.switch_seg(reg_fs, cpu.safe_read32s(cpu.get_stack_pointer(0)) & 0xFFFF);\r\n    cpu.adjust_stack_reg(4);\r\n};\r\n\r\nt[0xA2] = cpu => { cpu.cpuid(); };\r\n\r\nt16[0xA3] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        cpu.bt_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g16s());\r\n    }\r\n    else\r\n    {\r\n        cpu.bt_reg(cpu.read_reg_e16(), cpu.read_g16() & 15);\r\n    }\r\n};\r\nt32[0xA3] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        cpu.bt_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g32s());\r\n    }\r\n    else\r\n    {\r\n        cpu.bt_reg(cpu.read_reg_e32s(), cpu.read_g32s() & 31);\r\n    }\r\n};\r\n\r\nt16[0xA4] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16(); cpu.write_e16(cpu.shld16(data, cpu.read_g16(), cpu.read_op8() & 31));\r\n};\r\nt32[0xA4] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32(); cpu.write_e32(cpu.shld32(data, cpu.read_g32s(), cpu.read_op8() & 31));\r\n};\r\nt16[0xA5] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16(); cpu.write_e16(cpu.shld16(data, cpu.read_g16(), cpu.reg8[reg_cl] & 31));\r\n};\r\nt32[0xA5] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32(); cpu.write_e32(cpu.shld32(data, cpu.read_g32s(), cpu.reg8[reg_cl] & 31));\r\n};\r\n\r\nt[0xA6] = cpu => {\r\n    // obsolete cmpxchg (os/2)\r\n    cpu.trigger_ud();\r\n};\r\nt[0xA7] = cpu => { cpu.undefined_instruction(); };\r\n\r\nt16[0xA8] = cpu => { cpu.push16(cpu.sreg[reg_gs]); };\r\nt32[0xA8] = cpu => { cpu.push32(cpu.sreg[reg_gs]); };\r\nt16[0xA9] = cpu => {\r\n    cpu.switch_seg(reg_gs, cpu.safe_read16(cpu.get_stack_pointer(0)));\r\n    cpu.adjust_stack_reg(2);\r\n};\r\nt32[0xA9] = cpu => {\r\n    cpu.switch_seg(reg_gs, cpu.safe_read32s(cpu.get_stack_pointer(0)) & 0xFFFF);\r\n    cpu.adjust_stack_reg(4);\r\n};\r\n\r\n\r\nt[0xAA] = cpu => {\r\n    // rsm\r\n    cpu.todo();\r\n};\r\n\r\nt16[0xAB] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.bts_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g16s());\r\n    } else {\r\n        cpu.write_reg_e16(cpu.bts_reg(cpu.read_reg_e16(), cpu.read_g16s() & 15));\r\n    }\r\n};\r\nt32[0xAB] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.bts_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g32s());\r\n    } else {\r\n        cpu.write_reg_e32(cpu.bts_reg(cpu.read_reg_e32s(), cpu.read_g32s() & 31));\r\n    }\r\n};\r\n\r\n\r\nt16[0xAC] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16(); cpu.write_e16(cpu.shrd16(data, cpu.read_g16(), cpu.read_op8() & 31));\r\n};\r\nt32[0xAC] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32(); cpu.write_e32(cpu.shrd32(data, cpu.read_g32s(), cpu.read_op8() & 31));\r\n};\r\nt16[0xAD] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16(); cpu.write_e16(cpu.shrd16(data, cpu.read_g16(), cpu.reg8[reg_cl] & 31));\r\n};\r\nt32[0xAD] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32(); cpu.write_e32(cpu.shrd32(data, cpu.read_g32s(), cpu.reg8[reg_cl] & 31));\r\n};\r\n\r\nt[0xAE] = cpu => { cpu.read_modrm_byte();\r\n    // xsave, xrstor, ...\r\n    if(cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) cpu.todo();\r\n\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 0: // fxsave\r\n            if(cpu.modrm_byte >= 0xC0) cpu.trigger_ud();\r\n            var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            cpu.fxsave(addr);\r\n            break;\r\n\r\n        case 1: // fxrstor\r\n            if(cpu.modrm_byte >= 0xC0) cpu.trigger_ud();\r\n            var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            cpu.fxrstor(addr);\r\n            break;\r\n\r\n        case 2: // ldmxcsr\r\n            if(cpu.modrm_byte >= 0xC0) cpu.trigger_ud();\r\n            var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            let new_mxcsr = cpu.safe_read32s(addr);\r\n            if(new_mxcsr & ~MXCSR_MASK)\r\n            {\r\n                dbg_log(\"Invalid mxcsr bits: \" + h((new_mxcsr & ~MXCSR_MASK) >>> 0, 8));\r\n                cpu.trigger_gp(0);\r\n            }\r\n            cpu.mxcsr = new_mxcsr;\r\n            break;\r\n\r\n        case 3: // stmxcsr\r\n            if(cpu.modrm_byte >= 0xC0) cpu.trigger_ud();\r\n            var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            cpu.safe_write32(addr, cpu.mxcsr);\r\n            break;\r\n\r\n        case 5:\r\n            // lfence\r\n            dbg_assert(cpu.modrm_byte >= 0xC0, \"Unexpected lfence encoding\");\r\n            if(cpu.modrm_byte < 0xC0) cpu.trigger_ud();\r\n            break;\r\n        case 6:\r\n            // mfence\r\n            dbg_assert(cpu.modrm_byte >= 0xC0, \"Unexpected mfence encoding\");\r\n            if(cpu.modrm_byte < 0xC0) cpu.trigger_ud();\r\n            break;\r\n        case 7:\r\n            // sfence or clflush\r\n            dbg_assert(cpu.modrm_byte >= 0xC0, \"Unexpected sfence encoding\");\r\n            if(cpu.modrm_byte < 0xC0) cpu.trigger_ud();\r\n            break;\r\n        default:\r\n            dbg_log(\"missing \" + (cpu.modrm_byte >> 3 & 7), LOG_CPU);\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nt16[0xAF] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16s();\r\n    cpu.write_g16(cpu.imul_reg16(cpu.read_g16s(), data));\r\n};\r\nt32[0xAF] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e32s();\r\n    cpu.write_g32(cpu.imul_reg32(cpu.read_g32s(), data));\r\n};\r\n\r\nt[0xB0] = cpu => { cpu.read_modrm_byte();\r\n    // cmpxchg8\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.writable_or_pagefault(virt_addr, 1);\r\n\r\n        var data = cpu.safe_read8(virt_addr);\r\n    }\r\n    else\r\n        data = cpu.reg8[cpu.modrm_byte << 2 & 0xC | cpu.modrm_byte >> 2 & 1];\r\n\r\n\r\n    cpu.cmp8(cpu.reg8[reg_al], data);\r\n\r\n    if(cpu.getzf())\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write8(virt_addr, cpu.read_g8());\r\n        else\r\n            cpu.reg8[cpu.modrm_byte << 2 & 0xC | cpu.modrm_byte >> 2 & 1] = cpu.read_g8();\r\n    }\r\n    else\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write8(virt_addr, data);\r\n\r\n        cpu.reg8[reg_al] = data;\r\n    }\r\n};\r\nt16[0xB1] = cpu => { cpu.read_modrm_byte();\r\n    // cmpxchg16/32\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.writable_or_pagefault(virt_addr, 2);\r\n\r\n        var data = cpu.safe_read16(virt_addr);\r\n    }\r\n    else\r\n        data = cpu.read_reg_e16();\r\n\r\n    cpu.cmp16(cpu.reg16[reg_ax], data);\r\n\r\n    if(cpu.getzf())\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write16(virt_addr, cpu.read_g16());\r\n        else\r\n            cpu.write_reg_e16(cpu.read_g16());\r\n    }\r\n    else\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write16(virt_addr, data);\r\n\r\n        cpu.reg16[reg_ax] = data;\r\n    }\r\n};\r\nt32[0xB1] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0)\r\n    {\r\n        var virt_addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.writable_or_pagefault(virt_addr, 4);\r\n\r\n        var data = cpu.safe_read32s(virt_addr);\r\n    }\r\n    else\r\n    {\r\n        data = cpu.read_reg_e32s();\r\n    }\r\n\r\n    cpu.cmp32(cpu.reg32s[reg_eax], data);\r\n\r\n    if(cpu.getzf())\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write32(virt_addr, cpu.read_g32s());\r\n        else\r\n            cpu.write_reg_e32(cpu.read_g32s());\r\n    }\r\n    else\r\n    {\r\n        if(cpu.modrm_byte < 0xC0)\r\n            cpu.safe_write32(virt_addr, data);\r\n\r\n        cpu.reg32s[reg_eax] = data;\r\n    }\r\n};\r\n\r\n// lss\r\nt16[0xB2] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss16(reg_ss);\r\n};\r\nt32[0xB2] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss32(reg_ss);\r\n};\r\n\r\nt16[0xB3] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.btr_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g16s());\r\n    } else {\r\n        cpu.write_reg_e16(cpu.btr_reg(cpu.read_reg_e16(), cpu.read_g16s() & 15));\r\n    }\r\n};\r\nt32[0xB3] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.btr_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g32s());\r\n    } else {\r\n        cpu.write_reg_e32(cpu.btr_reg(cpu.read_reg_e32s(), cpu.read_g32s() & 31));\r\n    }\r\n};\r\n\r\n// lfs, lgs\r\nt16[0xB4] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss16(reg_fs);\r\n};\r\nt32[0xB4] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss32(reg_fs);\r\n};\r\nt16[0xB5] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss16(reg_gs);\r\n};\r\nt32[0xB5] = cpu => { cpu.read_modrm_byte();\r\n    cpu.lss32(reg_gs);\r\n};\r\n\r\nt16[0xB6] = cpu => { cpu.read_modrm_byte();\r\n    // movzx\r\n    var data = cpu.read_e8();\r\n    cpu.write_g16(data);\r\n};\r\nt32[0xB6] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e8();\r\n    cpu.write_g32(data);\r\n};\r\n\r\nt16[0xB7] = cpu => { cpu.read_modrm_byte();\r\n    // movzx\r\n    dbg_assert(false, \"Possibly invalid encoding\");\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(data);\r\n};\r\nt32[0xB7] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16();\r\n    cpu.write_g32(data);\r\n};\r\n\r\nt16[0xB8] = cpu => { cpu.read_modrm_byte();\r\n    // popcnt\r\n    if((cpu.prefixes & PREFIX_F3) === 0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(cpu.popcnt(data));\r\n};\r\nt32[0xB8] = cpu => { cpu.read_modrm_byte();\r\n    if((cpu.prefixes & PREFIX_F3) === 0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n    var data = cpu.read_e32s();\r\n    cpu.write_g32(cpu.popcnt(data));\r\n};\r\n\r\nt[0xB9] = cpu => {\r\n    // UD\r\n    cpu.todo();\r\n};\r\n\r\nt16[0xBA] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 4:\r\n            if(cpu.modrm_byte < 0xC0)\r\n            {\r\n                cpu.bt_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 15);\r\n            }\r\n            else\r\n            {\r\n                cpu.bt_reg(cpu.read_reg_e16(), cpu.read_op8() & 15);\r\n            }\r\n            break;\r\n        case 5:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.bts_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 15);\r\n            } else {\r\n                cpu.write_reg_e16(cpu.bts_reg(cpu.read_reg_e16(), cpu.read_op8() & 15));\r\n            }\r\n            break;\r\n        case 6:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.btr_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 15);\r\n            } else {\r\n                cpu.write_reg_e16(cpu.btr_reg(cpu.read_reg_e16(), cpu.read_op8() & 15));\r\n            }\r\n            break;\r\n        case 7:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.btc_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 15);\r\n            } else {\r\n                cpu.write_reg_e16(cpu.btc_reg(cpu.read_reg_e16(), cpu.read_op8() & 15));\r\n            }\r\n            break;\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7);\r\n            cpu.todo();\r\n    }\r\n};\r\nt32[0xBA] = cpu => { cpu.read_modrm_byte();\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 4:\r\n            if(cpu.modrm_byte < 0xC0)\r\n            {\r\n                cpu.bt_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 31);\r\n            }\r\n            else\r\n            {\r\n                cpu.bt_reg(cpu.read_reg_e32s(), cpu.read_op8() & 31);\r\n            }\r\n            break;\r\n        case 5:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.bts_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 31);\r\n            } else {\r\n                cpu.write_reg_e32(cpu.bts_reg(cpu.read_reg_e32s(), cpu.read_op8() & 31));\r\n            }\r\n            break;\r\n        case 6:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.btr_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 31);\r\n            } else {\r\n                cpu.write_reg_e32(cpu.btr_reg(cpu.read_reg_e32s(), cpu.read_op8() & 31));\r\n            }\r\n            break;\r\n        case 7:\r\n            if(cpu.modrm_byte < 0xC0) {\r\n                cpu.btc_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_op8() & 31);\r\n            } else {\r\n                cpu.write_reg_e32(cpu.btc_reg(cpu.read_reg_e32s(), cpu.read_op8() & 31));\r\n            }\r\n            break;\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7);\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nt16[0xBB] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.btc_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g16s());\r\n    } else {\r\n        cpu.write_reg_e16(cpu.btc_reg(cpu.read_reg_e16(), cpu.read_g16s() & 15));\r\n    }\r\n};\r\nt32[0xBB] = cpu => { cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) {\r\n        cpu.btc_mem(cpu.modrm_resolve(cpu.modrm_byte), cpu.read_g32s());\r\n    } else {\r\n        cpu.write_reg_e32(cpu.btc_reg(cpu.read_reg_e32s(), cpu.read_g32s() & 31));\r\n    }\r\n};\r\n\r\nt16[0xBC] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(cpu.bsf16(cpu.read_g16(), data));\r\n};\r\nt32[0xBC] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e32s();\r\n    cpu.write_g32(cpu.bsf32(cpu.read_g32s(), data));\r\n};\r\n\r\nt16[0xBD] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(cpu.bsr16(cpu.read_g16(), data));\r\n};\r\nt32[0xBD] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e32s();\r\n    cpu.write_g32(cpu.bsr32(cpu.read_g32s(), data));\r\n};\r\n\r\nt16[0xBE] = cpu => { cpu.read_modrm_byte();\r\n    // movsx\r\n    var data = cpu.read_e8s();\r\n    cpu.write_g16(data);\r\n};\r\nt32[0xBE] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e8s();\r\n    cpu.write_g32(data);\r\n};\r\n\r\nt16[0xBF] = cpu => { cpu.read_modrm_byte();\r\n    // movsx\r\n    dbg_assert(false, \"Possibly invalid encoding\");\r\n    var data = cpu.read_e16();\r\n    cpu.write_g16(data);\r\n};\r\n\r\nt32[0xBF] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_e16s();\r\n    cpu.write_g32(data);\r\n};\r\n\r\nt[0xC0] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e8(); cpu.write_e8(cpu.xadd8(data, cpu.modrm_byte >> 1 & 0xC | cpu.modrm_byte >> 5 & 1));\r\n};\r\n\r\nt16[0xC1] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e16();\r\n    cpu.write_e16(cpu.xadd16(data, cpu.modrm_byte >> 2 & 14));\r\n};\r\nt32[0xC1] = cpu => { cpu.read_modrm_byte();\r\n    var data = cpu.read_write_e32();\r\n    cpu.write_e32(cpu.xadd32(data, cpu.modrm_byte >> 3 & 7));\r\n};\r\n\r\n\r\nt[0xC2] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xC3] = cpu => {\r\n    // movnti\r\n    cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte >= 0xC0) cpu.trigger_ud();\r\n    cpu.set_e32(cpu.read_g32s());\r\n};\r\nt[0xC4] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xC5] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xC6] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xC7] = cpu => {\r\n    cpu.read_modrm_byte();\r\n\r\n    switch(cpu.modrm_byte >> 3 & 7)\r\n    {\r\n        case 1:\r\n            // cmpxchg8b\r\n            if(cpu.modrm_byte >= 0xC0)\r\n            {\r\n                cpu.trigger_ud();\r\n            }\r\n\r\n            var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n            cpu.writable_or_pagefault(addr, 8);\r\n\r\n            var m64_low = cpu.safe_read32s(addr);\r\n            var m64_high = cpu.safe_read32s(addr + 4 | 0);\r\n\r\n            if(cpu.reg32s[reg_eax] === m64_low &&\r\n               cpu.reg32s[reg_edx] === m64_high)\r\n            {\r\n                cpu.flags |= flag_zero;\r\n\r\n                cpu.safe_write32(addr, cpu.reg32s[reg_ebx]);\r\n                cpu.safe_write32(addr + 4 | 0, cpu.reg32s[reg_ecx]);\r\n            }\r\n            else\r\n            {\r\n                cpu.flags &= ~flag_zero;\r\n\r\n                cpu.reg32s[reg_eax] = m64_low;\r\n                cpu.reg32s[reg_edx] = m64_high;\r\n\r\n                cpu.safe_write32(addr, m64_low);\r\n                cpu.safe_write32(addr + 4 | 0, m64_high);\r\n            }\r\n\r\n            cpu.flags_changed &= ~flag_zero;\r\n            break;\r\n\r\n        case 6:\r\n            var has_rand = v86util.has_rand_int();\r\n\r\n            if(has_rand)\r\n            {\r\n                var rand = v86util.get_rand_int();\r\n            }\r\n            else\r\n            {\r\n                var rand = 0;\r\n            }\r\n            //dbg_log(\"rdrand -> \" + h(rand >>> 0, 8), LOG_CPU);\r\n\r\n            if(cpu.is_osize_32())\r\n            {\r\n                cpu.set_e32(rand);\r\n            }\r\n            else\r\n            {\r\n                cpu.set_e16(rand);\r\n            }\r\n\r\n            cpu.flags &= ~flags_all;\r\n            cpu.flags |= has_rand;\r\n            cpu.flags_changed = 0;\r\n            break;\r\n\r\n        default:\r\n            dbg_log(cpu.modrm_byte >> 3 & 7, LOG_CPU);\r\n            cpu.todo();\r\n    }\r\n};\r\n\r\nt[0xC8] = cpu => { cpu.bswap(reg_eax); };\r\nt[0xC9] = cpu => { cpu.bswap(reg_ecx); };\r\nt[0xCA] = cpu => { cpu.bswap(reg_edx); };\r\nt[0xCB] = cpu => { cpu.bswap(reg_ebx); };\r\nt[0xCC] = cpu => { cpu.bswap(reg_esp); };\r\nt[0xCD] = cpu => { cpu.bswap(reg_ebp); };\r\nt[0xCE] = cpu => { cpu.bswap(reg_esi); };\r\nt[0xCF] = cpu => { cpu.bswap(reg_edi); };\r\n\r\nt[0xD0] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xD1] = cpu => {\r\n    // psrlw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 15) {\r\n        let word0 = (destination_low & 0xFFFF) >>> shift;\r\n        let word1 = (destination_low >>> 16) >>> shift;\r\n        low = word0 | word1 << 16;\r\n\r\n        let word2 = (destination_high & 0xFFFF) >>> shift;\r\n        let word3 = (destination_high >>> 16) >>> shift;\r\n        high = word2 | word3 << 16;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xD2] = cpu => {\r\n    // psrld mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 31) {\r\n        low = destination_low >>> shift;\r\n        high = destination_high >>> shift;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xD3] = cpu => {\r\n    // psrlq mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n\r\n    if(shift === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 31) {\r\n        low = destination_low >>> shift | (destination_high << (32 - shift));\r\n        high = destination_high >>> shift;\r\n    }\r\n    else if (shift <= 63) {\r\n        low = destination_high >>> (shift & 0x1F);\r\n        high = 0;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xD4] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xD5] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // pmullw xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source16s = new Int16Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination16s = new Int16Array(destination.buffer);\r\n\r\n        cpu.write_xmm128s(\r\n            source16s[0] * destination16s[0] & 0xFFFF | source16s[1] * destination16s[1] << 16,\r\n            source16s[2] * destination16s[2] & 0xFFFF | source16s[3] * destination16s[3] << 16,\r\n            source16s[4] * destination16s[4] & 0xFFFF | source16s[5] * destination16s[5] << 16,\r\n            source16s[6] * destination16s[6] & 0xFFFF | source16s[7] * destination16s[7] << 16\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // pmullw mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let word0 = ((destination_low & 0xFFFF) * (source[0] & 0xFFFF)) & 0xFFFF;\r\n        let word1 = ((destination_low >>> 16) * (source[0] >>> 16)) & 0xFFFF;\r\n        let low = word0 | word1 << 16;\r\n\r\n        let word2 = ((destination_high & 0xFFFF) * (source[1] & 0xFFFF)) & 0xFFFF;\r\n        let word3 = ((destination_high >>> 16) * (source[1] >>> 16)) & 0xFFFF;\r\n        let high = word2 | word3 << 16;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\nt[0xD6] = cpu => {\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    // movq xmm/m64, xmm\r\n    var data = cpu.read_xmm64s();\r\n    dbg_assert(cpu.modrm_byte < 0xC0);\r\n    var addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n    cpu.safe_write64(addr, data[0], data[1]);\r\n};\r\nt[0xD7] = cpu => {\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n    if(cpu.modrm_byte < 0xC0) cpu.trigger_ud();\r\n\r\n    // pmovmskb reg, xmm\r\n    let data = cpu.read_xmm_mem128s();\r\n    let data8 = new Uint8Array(data.buffer);\r\n    let result =\r\n        data8[0] >> 7 << 0 | data8[1] >> 7 << 1 | data8[2] >> 7 << 2 | data8[3] >> 7 << 3 |\r\n        data8[4] >> 7 << 4 | data8[5] >> 7 << 5 | data8[6] >> 7 << 6 | data8[7] >> 7 << 7 |\r\n        data8[8] >> 7 << 8 | data8[9] >> 7 << 9 | data8[10] >> 7 << 10 | data8[11] >> 7 << 11 |\r\n        data8[12] >> 7 << 12 | data8[13] >> 7 << 13 | data8[14] >> 7 << 14 | data8[15] >> 7 << 15;\r\n    cpu.write_g32(result);\r\n};\r\n\r\nt[0xD8] = cpu => {\r\n    // psubusb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8 = new Uint8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8 = cpu.reg_mmx8;\r\n\r\n    let byte0 = cpu.saturate_sd_to_ub(destination8[reg_offset] - source8[0]);\r\n    let byte1 = cpu.saturate_sd_to_ub(destination8[reg_offset + 1] - source8[1]);\r\n    let byte2 = cpu.saturate_sd_to_ub(destination8[reg_offset + 2] - source8[2]);\r\n    let byte3 = cpu.saturate_sd_to_ub(destination8[reg_offset + 3] - source8[3]);\r\n    let byte4 = cpu.saturate_sd_to_ub(destination8[reg_offset + 4] - source8[4]);\r\n    let byte5 = cpu.saturate_sd_to_ub(destination8[reg_offset + 5] - source8[5]);\r\n    let byte6 = cpu.saturate_sd_to_ub(destination8[reg_offset + 6] - source8[6]);\r\n    let byte7 = cpu.saturate_sd_to_ub(destination8[reg_offset + 7] - source8[7]);\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xD9] = cpu => {\r\n    // psubusw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = (destination_low & 0xFFFF) - (source[0] & 0xFFFF);\r\n    let word1 = (destination_low >>> 16) - (source[0] >>> 16);\r\n    if (word0 < 0) {\r\n        word0 = 0;\r\n    }\r\n    if (word1 < 0) {\r\n        word1 = 0;\r\n    }\r\n\r\n    let word2 = (destination_high & 0xFFFF) - (source[1] & 0xFFFF);\r\n    let word3 = (destination_high >>> 16) - (source[1] >>> 16);\r\n    if (word2 < 0) {\r\n        word2 = 0;\r\n    }\r\n    if (word3 < 0) {\r\n        word3 = 0;\r\n    }\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xDA] = cpu => {\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    // pminub xmm, xmm/m128\r\n    let source = cpu.read_xmm_mem128s();\r\n    let source8 = new Uint8Array(source.buffer);\r\n\r\n    let destination = cpu.read_xmm128s();\r\n    let destination8 = new Uint8Array(destination.buffer);\r\n\r\n    let result = cpu.create_atom128s(0, 0, 0, 0);\r\n    let result8 = new Uint8Array(result.buffer);\r\n\r\n    for(let i = 0; i < 16; i++)\r\n    {\r\n        result8[i] = source8[i] < destination8[i] ? source8[i] : destination8[i];\r\n    }\r\n\r\n    cpu.write_xmm128s(result[0], result[1], result[2], result[3])\r\n};\r\nt[0xDB] = cpu => {\r\n    // pand mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = source[0] & destination_low;\r\n    let high = source[1] & destination_high;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xDC] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // paddusb xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source8 = new Uint8Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination8 = new Uint8Array(destination.buffer);\r\n\r\n        let result = cpu.create_atom128s(0, 0, 0, 0);\r\n        let result8 = new Uint8Array(result.buffer);\r\n\r\n        for(let i = 0; i < 16; i++)\r\n        {\r\n            result8[i] = cpu.saturate_ud_to_ub(source8[i] + destination8[i]);\r\n        }\r\n\r\n        cpu.write_xmm128s(result[0], result[1], result[2], result[3])\r\n    }\r\n    else\r\n    {\r\n        // paddusb mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source64s = cpu.read_mmx_mem64s();\r\n        let source8 = new Uint8Array(source64s.buffer);\r\n\r\n        let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n        let destination8 = cpu.reg_mmx8;\r\n\r\n        let byte0 = cpu.saturate_ud_to_ub(destination8[reg_offset] + source8[0]);\r\n        let byte1 = cpu.saturate_ud_to_ub(destination8[reg_offset + 1] + source8[1]);\r\n        let byte2 = cpu.saturate_ud_to_ub(destination8[reg_offset + 2] + source8[2]);\r\n        let byte3 = cpu.saturate_ud_to_ub(destination8[reg_offset + 3] + source8[3]);\r\n        let byte4 = cpu.saturate_ud_to_ub(destination8[reg_offset + 4] + source8[4]);\r\n        let byte5 = cpu.saturate_ud_to_ub(destination8[reg_offset + 5] + source8[5]);\r\n        let byte6 = cpu.saturate_ud_to_ub(destination8[reg_offset + 6] + source8[6]);\r\n        let byte7 = cpu.saturate_ud_to_ub(destination8[reg_offset + 7] + source8[7]);\r\n\r\n        let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n        let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0xDD] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // paddusw mm, mm/m64\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source16 = new Uint16Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination16 = new Uint16Array(destination.buffer);\r\n\r\n        cpu.write_xmm128s(\r\n            cpu.saturate_uw(source16[0] + destination16[0]) | cpu.saturate_uw(source16[1] + destination16[1]) << 16,\r\n            cpu.saturate_uw(source16[2] + destination16[2]) | cpu.saturate_uw(source16[3] + destination16[3]) << 16,\r\n            cpu.saturate_uw(source16[4] + destination16[4]) | cpu.saturate_uw(source16[5] + destination16[5]) << 16,\r\n            cpu.saturate_uw(source16[6] + destination16[6]) | cpu.saturate_uw(source16[7] + destination16[7]) << 16\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // paddusw mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let word0 = cpu.saturate_uw((destination_low & 0xFFFF) + (source[0] & 0xFFFF));\r\n        let word1 = cpu.saturate_uw((destination_low >>> 16) + (source[0] >>> 16));\r\n        let word2 = cpu.saturate_uw((destination_high & 0xFFFF) + (source[1] & 0xFFFF));\r\n        let word3 = cpu.saturate_uw((destination_high >>> 16) + (source[1] >>> 16));\r\n\r\n        let low = word0 | word1 << 16;\r\n        let high = word2 | word3 << 16;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0xDE] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // pmaxub xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let source8 = new Uint8Array(source.buffer);\r\n\r\n        let destination = cpu.read_xmm128s();\r\n        let destination8 = new Uint8Array(destination.buffer);\r\n\r\n        let result = cpu.create_atom128s(0, 0, 0, 0);\r\n        let result8 = new Uint8Array(result.buffer);\r\n\r\n        for(let i = 0; i < 16; i++)\r\n        {\r\n            result8[i] = source8[i] > destination8[i] ? source8[i] : destination8[i];\r\n        }\r\n\r\n        cpu.write_xmm128s(result[0], result[1], result[2], result[3])\r\n    }\r\n    else\r\n    {\r\n        dbg_assert(false);\r\n    }\r\n};\r\nt[0xDF] = cpu => {\r\n    // pandn mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = source[0] & ~destination_low;\r\n    let high = source[1] & ~destination_high;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xE0] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xE1] = cpu => {\r\n    // psraw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    if (shift > 15) {\r\n        shift = 16;\r\n    }\r\n\r\n    let word0 = ((destination_low << 16 >> 16) >> shift) & 0xFFFF;\r\n    let word1 = ((destination_low >> 16) >> shift) & 0xFFFF;\r\n    let low = word0 | word1 << 16;\r\n\r\n    let word2 = ((destination_high << 16 >> 16) >> shift) & 0xFFFF;\r\n    let word3 = ((destination_high >> 16) >> shift) & 0xFFFF;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xE2] = cpu => {\r\n    // psrad mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    if (shift > 31) {\r\n        shift = 31;\r\n    }\r\n\r\n    let low = destination_low >> shift;\r\n    let high = destination_high >> shift;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xE3] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xE4] = cpu => {\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    // pmulhuw xmm, xmm/m128\r\n    let source = cpu.read_xmm_mem128s();\r\n    let source16 = new Uint16Array(source.buffer);\r\n\r\n    let destination = cpu.read_xmm128s();\r\n    let destination16 = new Uint16Array(destination.buffer);\r\n\r\n    cpu.write_xmm128s(\r\n        source16[0] * destination16[0] >>> 16 | source16[1] * destination16[1] & 0xFFFF0000,\r\n        source16[2] * destination16[2] >>> 16 | source16[3] * destination16[3] & 0xFFFF0000,\r\n        source16[4] * destination16[4] >>> 16 | source16[5] * destination16[5] & 0xFFFF0000,\r\n        source16[6] * destination16[6] >>> 16 | source16[7] * destination16[7] & 0xFFFF0000\r\n    );\r\n};\r\n\r\nt[0xE5] = cpu => {\r\n    // pmulhw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = ((destination_low << 16 >> 16) * (source[0] << 16 >> 16)) >>> 16;\r\n    let word1 = ((destination_low >> 16) * (source[0] >> 16)) >>> 16;\r\n    let word2 = ((destination_high << 16 >> 16) * (source[1] << 16 >> 16)) >>> 16;\r\n    let word3 = ((destination_high >> 16) * (source[1] >> 16)) >>> 16;\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xE6] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xE7] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if(cpu.modrm_byte >= 0xC0)\r\n    {\r\n        cpu.trigger_ud();\r\n    }\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        let data = cpu.read_xmm128s();\r\n        let addr = cpu.modrm_resolve(cpu.modrm_byte);\r\n        cpu.safe_write128(addr, data[0], data[1], data[2], data[3]);\r\n    }\r\n    else\r\n    {\r\n        dbg_assert(false);\r\n    }\r\n};\r\n\r\nt[0xE8] = cpu => {\r\n    // psubsb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8s = new Int8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8s = cpu.reg_mmx8s;\r\n\r\n    let byte0 = cpu.saturate_sd_to_sb(destination8s[reg_offset] - source8s[0]);\r\n    let byte1 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 1] - source8s[1]);\r\n    let byte2 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 2] - source8s[2]);\r\n    let byte3 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 3] - source8s[3]);\r\n    let byte4 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 4] - source8s[4]);\r\n    let byte5 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 5] - source8s[5]);\r\n    let byte6 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 6] - source8s[6]);\r\n    let byte7 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 7] - source8s[7]);\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xE9] = cpu => {\r\n    // psubsw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = cpu.saturate_sd_to_sw((destination_low << 16 >> 16) - (source[0] << 16 >> 16));\r\n    let word1 = cpu.saturate_sd_to_sw((destination_low >> 16) - (source[0] >> 16));\r\n    let word2 = cpu.saturate_sd_to_sw((destination_high << 16 >> 16) - (source[1] << 16 >> 16));\r\n    let word3 = cpu.saturate_sd_to_sw((destination_high >> 16) - (source[1] >> 16));\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xEA] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xEB] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) === PREFIX_66)\r\n    {\r\n        // por xmm, xmm/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let destination = cpu.read_xmm128s();\r\n\r\n        cpu.write_xmm128s(\r\n            source[0] | destination[0],\r\n            source[1] | destination[1],\r\n            source[2] | destination[2],\r\n            source[3] | destination[3]\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // por mm, mm/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let low = source[0] | destination_low;\r\n        let high = source[1] | destination_high;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0xEC] = cpu => {\r\n    // paddsb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8s = new Int8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8s = cpu.reg_mmx8s;\r\n\r\n    let byte0 = cpu.saturate_sd_to_sb(destination8s[reg_offset] + source8s[0]);\r\n    let byte1 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 1] + source8s[1]);\r\n    let byte2 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 2] + source8s[2]);\r\n    let byte3 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 3] + source8s[3]);\r\n    let byte4 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 4] + source8s[4]);\r\n    let byte5 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 5] + source8s[5]);\r\n    let byte6 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 6] + source8s[6]);\r\n    let byte7 = cpu.saturate_sd_to_sb(destination8s[reg_offset + 7] + source8s[7]);\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xED] = cpu => {\r\n    // paddsw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = cpu.saturate_sd_to_sw((destination_low << 16 >> 16) + (source[0] << 16 >> 16));\r\n    let word1 = cpu.saturate_sd_to_sw((destination_low >> 16) + (source[0] >> 16));\r\n    let word2 = cpu.saturate_sd_to_sw((destination_high << 16 >> 16) + (source[1] << 16 >> 16));\r\n    let word3 = cpu.saturate_sd_to_sw((destination_high >> 16) + (source[1] >> 16));\r\n\r\n    let low = word0 | word1 << 16;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xEE] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xEF] = cpu => {\r\n    // pxor mm, mm/m64\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        let source = cpu.read_xmm_mem128s();\r\n        let destination = cpu.read_xmm128s();\r\n\r\n        cpu.write_xmm128s(\r\n            source[0] ^ destination[0],\r\n            source[1] ^ destination[1],\r\n            source[2] ^ destination[2],\r\n            source[3] ^ destination[3]\r\n        );\r\n    }\r\n    else\r\n    {\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let source = cpu.read_mmx_mem64s();\r\n        let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n        let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n        let low = source[0] ^ destination_low;\r\n        let high = source[1] ^ destination_high;\r\n\r\n        cpu.write_mmx64s(low, high);\r\n    }\r\n};\r\n\r\nt[0xF0] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xF1] = cpu => {\r\n    // psllw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 15) {\r\n        let word0 = ((destination_low & 0xFFFF) << shift) & 0xFFFF;\r\n        let word1 = (destination_low >>> 16) << shift;\r\n        low = word0 | word1 << 16;\r\n\r\n        let word2 = ((destination_high & 0xFFFF) << shift) & 0xFFFF;\r\n        let word3 = (destination_high >>> 16) << shift;\r\n        high = word2 | word3 << 16;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xF2] = cpu => {\r\n    // pslld mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 31) {\r\n        low = destination_low << shift;\r\n        high = destination_high << shift;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xF3] = cpu => {\r\n    // psllq mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let shift = source[0] >>> 0;\r\n\r\n    if(shift === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    let low = 0;\r\n    let high = 0;\r\n\r\n    if (shift <= 31) {\r\n        low = destination_low << shift;\r\n        high = destination_high << shift | (destination_low >>> (32 - shift));\r\n    }\r\n    else if (shift <= 63) {\r\n        high = destination_low << (shift & 0x1F);\r\n        low = 0;\r\n    }\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xF4] = cpu => {\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    if((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == PREFIX_66)\r\n    {\r\n        // pmuludq xmm1, xmm2/m128\r\n        let source = cpu.read_xmm_mem128s();\r\n        let destination = cpu.read_xmm128s();\r\n\r\n        let i = (cpu.modrm_byte >> 3 & 7) << 2;\r\n\r\n        cpu.reg_xmm32s[i] = v86util.mul_low(destination[0], source[0]);\r\n        cpu.reg_xmm32s[i + 1] = v86util.mul_high(destination[0], source[0]);\r\n        cpu.reg_xmm32s[i + 2] = v86util.mul_low(destination[2], source[2]);\r\n        cpu.reg_xmm32s[i + 3] = v86util.mul_high(destination[2], source[2]);\r\n    }\r\n    else\r\n    {\r\n        // pmuludq mm1, mm2/m64\r\n        dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n        let s = cpu.read_mmx_mem64s()[0];\r\n        let d = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n\r\n        cpu.write_mmx64s(v86util.mul_low(d, s), v86util.mul_high(d, s));\r\n    }\r\n};\r\n\r\nt[0xF5] = cpu => {\r\n    // pmaddwd mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let mul0 = ((destination_low << 16 >> 16) * (source[0] << 16 >> 16));\r\n    let mul1 = ((destination_low >> 16) * (source[0] >> 16));\r\n    let mul2 = ((destination_high << 16 >> 16) * (source[1] << 16 >> 16));\r\n    let mul3 = ((destination_high >> 16) * (source[1] >> 16));\r\n\r\n    let low = mul0 + mul1 | 0;\r\n    let high = mul2 + mul3 | 0;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xF6] = cpu => { cpu.unimplemented_sse(); };\r\nt[0xF7] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xF8] = cpu => {\r\n    // psubb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8s = new Int8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8s = cpu.reg_mmx8s;\r\n\r\n    let byte0 = (destination8s[reg_offset] - source8s[0]) & 0xFF;\r\n    let byte1 = (destination8s[reg_offset + 1] - source8s[1]) & 0xFF;\r\n    let byte2 = (destination8s[reg_offset + 2] - source8s[2]) & 0xFF;\r\n    let byte3 = (destination8s[reg_offset + 3] - source8s[3]) & 0xFF;\r\n    let byte4 = (destination8s[reg_offset + 4] - source8s[4]) & 0xFF;\r\n    let byte5 = (destination8s[reg_offset + 5] - source8s[5]) & 0xFF;\r\n    let byte6 = (destination8s[reg_offset + 6] - source8s[6]) & 0xFF;\r\n    let byte7 = (destination8s[reg_offset + 7] - source8s[7]) & 0xFF;\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xF9] = cpu => {\r\n    // psubw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = (destination_low - source[0]) & 0xFFFF;\r\n    let word1 = ((destination_low >>> 16) - (source[0] >>> 16)) & 0xFFFF;\r\n    let low = word0 | word1 << 16;\r\n\r\n    let word2 = (destination_high - source[1]) & 0xFFFF;\r\n    let word3 = ((destination_high >>> 16) - (source[1] >>> 16)) & 0xFFFF;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xFA] = cpu => {\r\n    // psubd mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = destination_low - source[0];\r\n    let high = destination_high - source[1];\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xFB] = cpu => { cpu.unimplemented_sse(); };\r\n\r\nt[0xFC] = cpu => {\r\n    // paddb mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source64s = cpu.read_mmx_mem64s();\r\n    let source8s = new Int8Array(source64s.buffer);\r\n\r\n    let reg_offset = 8 * (cpu.modrm_byte >> 3 & 7);\r\n    let destination8s = cpu.reg_mmx8s;\r\n\r\n    let byte0 = (destination8s[reg_offset] + source8s[0]) & 0xFF;\r\n    let byte1 = (destination8s[reg_offset + 1] + source8s[1]) & 0xFF;\r\n    let byte2 = (destination8s[reg_offset + 2] + source8s[2]) & 0xFF;\r\n    let byte3 = (destination8s[reg_offset + 3] + source8s[3]) & 0xFF;\r\n    let byte4 = (destination8s[reg_offset + 4] + source8s[4]) & 0xFF;\r\n    let byte5 = (destination8s[reg_offset + 5] + source8s[5]) & 0xFF;\r\n    let byte6 = (destination8s[reg_offset + 6] + source8s[6]) & 0xFF;\r\n    let byte7 = (destination8s[reg_offset + 7] + source8s[7]) & 0xFF;\r\n\r\n    let low = byte0 | byte1 << 8 | byte2 << 16 | byte3 << 24;\r\n    let high = byte4 | byte5 << 8 | byte6 << 16 | byte7 << 24;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xFD] = cpu => {\r\n    // paddw mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let word0 = (destination_low + source[0]) & 0xFFFF;\r\n    let word1 = ((destination_low >>> 16) + (source[0] >>> 16)) & 0xFFFF;\r\n    let low = word0 | word1 << 16;\r\n\r\n    let word2 = (destination_high + source[1]) & 0xFFFF;\r\n    let word3 = ((destination_high >>> 16) + (source[1] >>> 16)) & 0xFFFF;\r\n    let high = word2 | word3 << 16;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xFE] = cpu => {\r\n    // paddd mm, mm/m64\r\n    dbg_assert((cpu.prefixes & (PREFIX_MASK_REP | PREFIX_MASK_OPSIZE)) == 0);\r\n    cpu.task_switch_test_mmx();\r\n    cpu.read_modrm_byte();\r\n\r\n    let source = cpu.read_mmx_mem64s();\r\n    let destination_low = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7)];\r\n    let destination_high = cpu.reg_mmxs[2 * (cpu.modrm_byte >> 3 & 7) + 1];\r\n\r\n    let low = destination_low + source[0] | 0;\r\n    let high = destination_high + source[1] | 0;\r\n\r\n    cpu.write_mmx64s(low, high);\r\n};\r\n\r\nt[0xFF] = cpu => {\r\n    // Windows 98\r\n    dbg_log(\"#ud: 0F FF\");\r\n    cpu.trigger_ud();\r\n};\r\n\r\n\r\nvar table0F_16 = [];\r\nvar table0F_32 = [];\r\nCPU.prototype.table0F_16 = table0F_16;\r\nCPU.prototype.table0F_32 = table0F_32;\r\n\r\nfor(i = 0; i < 256; i++)\r\n{\r\n    if(t[i])\r\n    {\r\n        //dbg_assert(!t16[i]);\r\n        //dbg_assert(!t32[i]);\r\n        table0F_16[i] = table0F_32[i] = t[i];\r\n    }\r\n    else if(t16[i])\r\n    {\r\n        //dbg_assert(!t[i]);\r\n        //dbg_assert(t32[i]);\r\n        table0F_16[i] = t16[i];\r\n        table0F_32[i] = t32[i];\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nCPU.prototype.debug_init = function()\r\n{\r\n    var cpu = this;\r\n    var debug = {};\r\n    this.debug = debug;\r\n\r\n    /**\r\n     * wheter or not in step mode\r\n     * used for debugging\r\n     * @type {boolean}\r\n     */\r\n    debug.step_mode = false;\r\n    debug.ops = undefined;\r\n    debug.all_ops = [];\r\n\r\n    debug.trace_all = false;\r\n\r\n    // \"log\" some information visually to the user.\r\n    // Also in non-DEBUG modes\r\n    debug.show = function(x)\r\n    {\r\n        if(typeof document !== \"undefined\")\r\n        {\r\n            var el = document.getElementById(\"log\");\r\n\r\n            if(el)\r\n            {\r\n                el.textContent += x + \"\\n\";\r\n                el.style.display = \"block\";\r\n                el.scrollTop = 1e9;\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log(x);\r\n    };\r\n\r\n    debug.init = function()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        // used for debugging\r\n        debug.ops = new CircularQueue(200000);\r\n\r\n        if(cpu.io)\r\n        {\r\n            // write seabios debug output to console\r\n            var seabios_debug = \"\";\r\n\r\n            cpu.io.register_write(0x402, this, handle); // seabios\r\n            cpu.io.register_write(0x500, this, handle); // vgabios\r\n        }\r\n\r\n        function handle(out_byte)\r\n        {\r\n            if(out_byte === 10)\r\n            {\r\n                dbg_log(seabios_debug, LOG_BIOS);\r\n                seabios_debug = \"\";\r\n            }\r\n            else\r\n            {\r\n                seabios_debug += String.fromCharCode(out_byte);\r\n            }\r\n        }\r\n    };\r\n\r\n    debug.get_regs_short = get_regs_short;\r\n    debug.dump_regs = dump_regs_short;\r\n    debug.dump_instructions = dump_instructions;\r\n    debug.get_instructions = get_instructions;\r\n    debug.get_state = get_state;\r\n    debug.dump_state = dump_state;\r\n    debug.dump_stack = dump_stack;\r\n\r\n    debug.dump_page_directory = dump_page_directory;\r\n    debug.dump_gdt_ldt = dump_gdt_ldt;\r\n    debug.dump_idt = dump_idt;\r\n\r\n    debug.get_memory_dump = get_memory_dump;\r\n    debug.memory_hex_dump = memory_hex_dump;\r\n    debug.used_memory_dump = used_memory_dump;\r\n\r\n    debug.step = step;\r\n    debug.run_until = run_until;\r\n\r\n    /**\r\n     * @param {string=} msg\r\n     */\r\n    debug.unimpl = function(msg)\r\n    {\r\n        var s = \"Unimplemented\" + (msg ? \": \" + msg : \"\");\r\n\r\n        debug.show(s);\r\n\r\n        if(DEBUG)\r\n        {\r\n            console.trace();\r\n            return s;\r\n        }\r\n        else\r\n        {\r\n            debug.show(\"Execution stopped\");\r\n            return s;\r\n        }\r\n        //this.name = \"Unimplemented\";\r\n    };\r\n\r\n    function step()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        if(!cpu.running)\r\n        {\r\n            cpu.cycle();\r\n        }\r\n\r\n        dump_regs_short();\r\n        var now = Date.now();\r\n\r\n        cpu.running = false;\r\n        dump_instructions();\r\n    }\r\n\r\n    function run_until()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        cpu.running = false;\r\n        var a = parseInt(prompt(\"input hex\", \"\"), 16);\r\n        if(a) while(cpu.instruction_pointer != a) step();\r\n    }\r\n\r\n    // http://ref.x86asm.net/x86reference.xml\r\n    // for debugging purposes\r\n    var opcode_map = [\r\n        \"ADD\", \"ADD\", \"ADD\", \"ADD\", \"ADD\", \"ADD\", \"PUSH\", \"POP\",\r\n        \"OR\", \"OR\", \"OR\", \"OR\", \"OR\", \"OR\", \"PUSH\", \"0F:\",\r\n        \"ADC\", \"ADC\", \"ADC\", \"ADC\", \"ADC\", \"ADC\", \"PUSH\", \"POP\",\r\n        \"SBB\", \"SBB\", \"SBB\", \"SBB\", \"SBB\", \"SBB\", \"PUSH\", \"POP\",\r\n        \"AND\", \"AND\", \"AND\", \"AND\", \"AND\", \"AND\", \"ES\", \"DAA\",\r\n        \"SUB\", \"SUB\", \"SUB\", \"SUB\", \"SUB\", \"SUB\", \"CS\", \"DAS\",\r\n        \"XOR\", \"XOR\", \"XOR\", \"XOR\", \"XOR\", \"XOR\", \"SS\", \"AAA\",\r\n        \"CMP\", \"CMP\", \"CMP\", \"CMP\", \"CMP\", \"CMP\", \"DS\", \"AAS\",\r\n        \"INC\", \"INC\", \"INC\", \"INC\", \"INC\", \"INC\", \"INC\", \"INC\",\r\n        \"DEC\", \"DEC\", \"DEC\", \"DEC\", \"DEC\", \"DEC\", \"DEC\", \"DEC\",\r\n        \"PUSH\", \"PUSH\", \"PUSH\", \"PUSH\", \"PUSH\", \"PUSH\", \"PUSH\", \"PUSH\",\r\n        \"POP\", \"POP\", \"POP\", \"POP\", \"POP\", \"POP\", \"POP\", \"POP\",\r\n        \"PUSHA\", \"POPA\", \"BOUND\", \"ARPL\", \"FS\", \"GS\", \"none\", \"none\",\r\n        \"PUSH\", \"IMUL\", \"PUSH\", \"IMUL\", \"INS\", \"INS\", \"OUTS\", \"OUTS\",\r\n        \"JO\", \"JNO\", \"JB\", \"JNB\", \"JZ\", \"JNZ\", \"JBE\", \"JNBE\",\r\n        \"JS\", \"JNS\", \"JP\", \"JNP\", \"JL\", \"JNL\", \"JLE\", \"JNLE\",\r\n        \"ADD\", \"ADD\", \"ADD\", \"ADD\", \"TEST\", \"TEST\", \"XCHG\", \"XCHG\",\r\n        \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"LEA\", \"MOV\", \"POP\",\r\n        \"NOP\", \"XCHG\", \"XCHG\", \"XCHG\", \"XCHG\", \"XCHG\", \"XCHG\", \"XCHG\",\r\n        \"CBW\", \"CWD\", \"CALLF\", \"FWAIT\", \"PUSHF\", \"POPF\", \"SAHF\", \"LAHF\",\r\n        \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOVS\", \"MOVS\", \"CMPS\", \"CMPS\",\r\n        \"TEST\", \"TEST\", \"STOS\", \"STOS\", \"LODS\", \"LODS\", \"SCAS\", \"SCAS\",\r\n        \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\",\r\n        \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\", \"MOV\",\r\n        \"ROL\", \"ROL\", \"RETN\", \"RETN\", \"LES\", \"LDS\", \"MOV\", \"MOV\",\r\n        \"ENTER\", \"LEAVE\", \"RETF\", \"RETF\", \"INT\", \"INT\", \"INTO\", \"IRET\",\r\n        \"ROL\", \"ROL\", \"ROL\", \"ROL\", \"AAM\", \"AAD\", \"none\", \"XLAT\",\r\n        \"FADD\", \"FLD\", \"FIADD\", \"FILD\", \"FADD\", \"FLD\", \"FIADD\", \"FILD\",\r\n        \"LOOPNZ\", \"LOOPZ\", \"LOOP\", \"JCXZ\", \"IN\", \"IN\", \"OUT\", \"OUT\",\r\n        \"CALL\", \"JMP\", \"JMPF\", \"JMP\", \"IN\", \"IN\", \"OUT\", \"OUT\",\r\n        \"LOCK\", \"none\", \"REPNZ\", \"REPZ\", \"HLT\", \"CMC\", \"TEST\", \"TEST\",\r\n        \"CLC\", \"STC\", \"CLI\", \"STI\", \"CLD\", \"STD\", \"INC\", \"INC\"\r\n    ];\r\n\r\n    debug.logop = function(_ip, op)\r\n    {\r\n        if(!DEBUG || !debug.step_mode)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(debug.trace_all && debug.all_ops)\r\n        {\r\n            debug.all_ops.push(_ip, op);\r\n        }\r\n        else if(debug.ops)\r\n        {\r\n            debug.ops.add(_ip);\r\n            debug.ops.add(op);\r\n        }\r\n    };\r\n\r\n    function dump_stack(start, end)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        var esp = cpu.reg32[reg_esp];\r\n        dbg_log(\"========= STACK ==========\");\r\n\r\n        if(end >= start || end === undefined)\r\n        {\r\n            start = 5;\r\n            end = -5;\r\n        }\r\n\r\n        for(var i = start; i > end; i--)\r\n        {\r\n            var line = \"    \";\r\n\r\n            if(!i) line = \"=>  \";\r\n\r\n            line += h(i, 2) + \" | \";\r\n\r\n            dbg_log(line + h(esp + 4 * i, 8) + \" | \" + h(cpu.read32s(esp + 4 * i) >>> 0));\r\n        }\r\n    }\r\n\r\n    function get_state(where)\r\n    {\r\n        var vm = (cpu.flags & flag_vm) ? 1 : 0;\r\n        var mode = cpu.protected_mode ? vm ? \"vm86\" : \"prot\" : \"real\";\r\n        var flags = cpu.get_eflags();\r\n        var iopl = cpu.getiopl();\r\n        var cpl = cpu.cpl;\r\n        var cs_eip = h(cpu.sreg[reg_cs], 4) + \":\" + h(cpu.get_real_eip() >>> 0, 8);\r\n        var ss_esp = h(cpu.sreg[reg_ss], 4) + \":\" + h(cpu.get_stack_reg() >>> 0, 8);\r\n        var op_size = cpu.is_32 ? \"32\" : \"16\";\r\n        var if_ = (cpu.flags & flag_interrupt) ? 1 : 0;\r\n\r\n        var flag_names = {\r\n            [flag_carry]: \"c\",\r\n            [flag_parity]: \"p\",\r\n            [flag_adjust]: \"a\",\r\n            [flag_zero]: \"z\",\r\n            [flag_sign]: \"s\",\r\n            [flag_trap]: \"t\",\r\n            [flag_interrupt]: \"i\",\r\n            [flag_direction]: \"d\",\r\n            [flag_overflow]: \"o\",\r\n        };\r\n        var flag_string = \"\";\r\n\r\n        for(var i = 0; i < 16; i++)\r\n        {\r\n            if(flag_names[1 << i])\r\n            {\r\n                if(flags & 1 << i)\r\n                {\r\n                    flag_string += flag_names[1 << i];\r\n                }\r\n                else\r\n                {\r\n                    flag_string += \" \";\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\"mode=\" + mode + \"/\" + op_size + \" paging=\" + (+cpu.paging) +\r\n                \" iopl=\" + iopl + \" cpl=\" + cpl + \" if=\" + if_ + \" cs:eip=\" + cs_eip +\r\n                \" cs_off=\" + h(cpu.get_seg(reg_cs) >>> 0, 8) +\r\n                \" flgs=\" + h(cpu.get_eflags() >>> 0, 6) + \" (\" + flag_string + \")\" +\r\n                \" ss:esp=\" + ss_esp +\r\n                \" ssize=\" + (+cpu.stack_size_32) +\r\n                (where ? \" in \" + where : \"\"));\r\n    }\r\n\r\n    function dump_state(where)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        dbg_log(get_state(where), LOG_CPU);\r\n    }\r\n\r\n    function get_regs_short()\r\n    {\r\n        var\r\n            r32 = { \"eax\": reg_eax, \"ecx\": reg_ecx, \"edx\": reg_edx, \"ebx\": reg_ebx,\r\n                    \"esp\": reg_esp, \"ebp\": reg_ebp, \"esi\": reg_esi, \"edi\": reg_edi },\r\n            r32_names = [\"eax\", \"ecx\", \"edx\", \"ebx\", \"esp\", \"ebp\", \"esi\", \"edi\"],\r\n            s = { \"cs\": reg_cs, \"ds\": reg_ds, \"es\": reg_es, \"fs\": reg_fs, \"gs\": reg_gs, \"ss\": reg_ss },\r\n            line1 = \"\",\r\n            line2 = \"\";\r\n\r\n\r\n\r\n        for(var i = 0; i < 4; i++)\r\n        {\r\n            line1 += r32_names[i] + \"=\"  + h(cpu.reg32[r32[r32_names[i]]], 8) + \" \";\r\n            line2 += r32_names[i+4] + \"=\"  + h(cpu.reg32[r32[r32_names[i+4]]], 8) + \" \";\r\n        }\r\n\r\n        //line1 += \" eip=\" + h(cpu.get_real_eip() >>> 0, 8);\r\n        //line2 += \" flg=\" + h(cpu.get_eflags(), 8);\r\n\r\n        line1 += \"  ds=\" + h(cpu.sreg[reg_ds], 4) + \" es=\" + h(cpu.sreg[reg_es], 4) + \" fs=\" + h(cpu.sreg[reg_fs], 4);\r\n        line2 += \"  gs=\" + h(cpu.sreg[reg_gs], 4) + \" cs=\" + h(cpu.sreg[reg_cs], 4) + \" ss=\" + h(cpu.sreg[reg_ss], 4);\r\n\r\n        return [line1, line2];\r\n    }\r\n\r\n    function dump_regs_short()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        var lines = get_regs_short();\r\n\r\n        dbg_log(lines[0], LOG_CPU);\r\n        dbg_log(lines[1], LOG_CPU);\r\n    }\r\n\r\n    function get_instructions()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        debug.step_mode = true;\r\n\r\n        function add(ip, op)\r\n        {\r\n            out += h(ip, 8)  + \":        \" +\r\n                v86util.pads(opcode_map[op] || \"unkown\", 20) + h(op, 2) + \"\\n\";\r\n        }\r\n\r\n        var opcodes;\r\n        var out = \"\";\r\n\r\n        if(debug.trace_all && debug.all_ops)\r\n        {\r\n            opcodes = debug.all_ops;\r\n        }\r\n        else if(debug.ops)\r\n        {\r\n            opcodes = debug.ops.toArray();\r\n        }\r\n\r\n        if(!opcodes)\r\n        {\r\n            return \"\";\r\n        }\r\n\r\n        for(var i = 0; i < opcodes.length; i += 2)\r\n        {\r\n            add(opcodes[i], opcodes[i + 1]);\r\n        }\r\n\r\n        debug.ops.clear();\r\n        debug.all_ops = [];\r\n\r\n        return out;\r\n    }\r\n\r\n    function dump_instructions()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        debug.show(get_instructions());\r\n    }\r\n\r\n    function dump_gdt_ldt()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        dbg_log(\"gdt: (len = \" + h(cpu.gdtr_size) + \")\");\r\n        dump_table(cpu.translate_address_system_read(cpu.gdtr_offset), cpu.gdtr_size);\r\n\r\n        dbg_log(\"\\nldt: (len = \" + h(cpu.segment_limits[reg_ldtr]) + \")\");\r\n        dump_table(cpu.translate_address_system_read(cpu.segment_offsets[reg_ldtr]), cpu.segment_limits[reg_ldtr]);\r\n\r\n        function dump_table(addr, size)\r\n        {\r\n            for(var i = 0; i < size; i += 8, addr += 8)\r\n            {\r\n                var base = cpu.read16(addr + 2) |\r\n                        cpu.read8(addr + 4) << 16 |\r\n                        cpu.read8(addr + 7) << 24,\r\n\r\n                    limit = cpu.read16(addr) | (cpu.read8(addr + 6) & 0xF) << 16,\r\n                    access = cpu.read8(addr + 5),\r\n                    flags = cpu.read8(addr + 6) >> 4,\r\n                    flags_str = \"\",\r\n                    dpl = access >> 5 & 3;\r\n\r\n                if(!(access & 128))\r\n                {\r\n                    // present bit not set\r\n                    //continue;\r\n                    flags_str += \"NP \";\r\n                }\r\n                else\r\n                {\r\n                    flags_str += \" P \";\r\n                }\r\n\r\n                if(access & 16)\r\n                {\r\n                    if(flags & 4)\r\n                    {\r\n                        flags_str += \"32b \";\r\n                    }\r\n                    else\r\n                    {\r\n                        flags_str += \"16b \";\r\n                    }\r\n\r\n                    if(access & 8)\r\n                    {\r\n                        // executable\r\n                        flags_str += \"X \";\r\n\r\n                        if(access & 4)\r\n                        {\r\n                            flags_str += \"C \";\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        // data\r\n                        flags_str += \"R \";\r\n                    }\r\n\r\n                    flags_str += \"RW \";\r\n                }\r\n                else\r\n                {\r\n                    // system\r\n                    flags_str += \"sys: \" + h(access & 15);\r\n                }\r\n\r\n                if(flags & 8)\r\n                {\r\n                    limit = limit << 12 | 0xFFF;\r\n                }\r\n\r\n                dbg_log(h(i & ~7, 4) + \" \" + h(base >>> 0, 8) + \" (\" + h(limit >>> 0, 8) + \" bytes) \" +\r\n                        flags_str + \";  dpl = \" + dpl + \", a = \" + access.toString(2) +\r\n                        \", f = \" + flags.toString(2));\r\n            }\r\n        }\r\n    }\r\n\r\n    function dump_idt()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        for(var i = 0; i < cpu.idtr_size; i += 8)\r\n        {\r\n            var addr = cpu.translate_address_system_read(cpu.idtr_offset + i),\r\n                base = cpu.read16(addr) | cpu.read16(addr + 6) << 16,\r\n                selector = cpu.read16(addr + 2),\r\n                type = cpu.read8(addr + 5),\r\n                line,\r\n                dpl = type >> 5 & 3;\r\n\r\n            if((type & 31) === 5)\r\n            {\r\n                line = \"task gate \";\r\n            }\r\n            else if((type & 31) === 14)\r\n            {\r\n                line = \"intr gate \";\r\n            }\r\n            else if((type & 31) === 15)\r\n            {\r\n                line = \"trap gate \";\r\n            }\r\n            else\r\n            {\r\n                line = \"invalid   \";\r\n            }\r\n\r\n\r\n            if(type & 128)\r\n            {\r\n                line += \" P\";\r\n            }\r\n            else\r\n            {\r\n                // present bit not set\r\n                //continue;\r\n                line += \"NP\";\r\n            }\r\n\r\n\r\n            dbg_log(h(i >> 3, 4) + \" \" + h(base >>> 0, 8) + \", \" +\r\n                    h(selector, 4) + \"; \" + line + \";  dpl = \" + dpl + \", t = \" + type.toString(2));\r\n        }\r\n    }\r\n\r\n    function load_page_entry(dword_entry, is_directory)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        if(!(dword_entry & 1))\r\n        {\r\n            // present bit not set\r\n            return false;\r\n        }\r\n\r\n        var size = (dword_entry & 128) === 128,\r\n            address;\r\n\r\n        if(size && !is_directory)\r\n        {\r\n            address = dword_entry & 0xFFC00000;\r\n        }\r\n        else\r\n        {\r\n            address = dword_entry & 0xFFFFF000;\r\n        }\r\n\r\n        return {\r\n            size: size,\r\n            global: (dword_entry & 256) === 256,\r\n            accessed: (dword_entry & 0x20) === 0x20,\r\n            dirty: (dword_entry & 0x40) === 0x40,\r\n            cache_disable : (dword_entry & 16) === 16,\r\n            user : (dword_entry & 4) === 4,\r\n            read_write : (dword_entry & 2) === 2,\r\n            address : address >>> 0\r\n        };\r\n    }\r\n\r\n    function dump_page_directory()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        for(var i = 0; i < 1024; i++)\r\n        {\r\n            var addr = cpu.cr[3] + 4 * i;\r\n            var dword = cpu.read32s(addr),\r\n                entry = load_page_entry(dword, true);\r\n\r\n            if(!entry)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var flags = \"\";\r\n\r\n            flags += entry.size ? \"S \" : \"  \";\r\n            flags += entry.accessed ? \"A \" : \"  \";\r\n            flags += entry.cache_disable ? \"Cd \" : \"  \";\r\n            flags += entry.user ? \"U \" : \"  \";\r\n            flags += entry.read_write ? \"Rw \" : \"   \";\r\n\r\n            if(entry.size)\r\n            {\r\n                dbg_log(\"=== \" + h((i << 22) >>> 0, 8) + \" -> \" + h(entry.address >>> 0, 8) + \" | \" + flags);\r\n                continue;\r\n            }\r\n            else\r\n            {\r\n                dbg_log(\"=== \" + h((i << 22) >>> 0, 8) + \" | \" + flags);\r\n            }\r\n\r\n            for(var j = 0; j < 1024; j++)\r\n            {\r\n                var sub_addr = entry.address + 4 * j;\r\n                dword = cpu.read32s(sub_addr);\r\n\r\n                var subentry = load_page_entry(dword, false);\r\n\r\n                if(subentry)\r\n                {\r\n                    flags = \"\";\r\n\r\n                    flags += subentry.cache_disable ? \"Cd \" : \"   \";\r\n                    flags += subentry.user ? \"U \" : \"  \";\r\n                    flags += subentry.read_write ? \"Rw \" : \"   \";\r\n                    flags += subentry.global ? \"G \" : \"  \";\r\n                    flags += subentry.accessed ? \"A \" : \"  \";\r\n                    flags += subentry.dirty ? \"Di \" : \"   \";\r\n\r\n                    dbg_log(\"# \" + h((i << 22 | j << 12) >>> 0, 8) + \" -> \" +\r\n                            h(subentry.address, 8) + \" | \" + flags + \"        (at \" + h(sub_addr, 8) + \")\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function get_memory_dump(start, count)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        if(start === undefined)\r\n        {\r\n            start = 0;\r\n            count = cpu.memory_size;\r\n        }\r\n        else if(count === undefined)\r\n        {\r\n            count = start;\r\n            start = 0;\r\n        }\r\n\r\n        return cpu.mem8.slice(start, start + count).buffer;\r\n    }\r\n\r\n\r\n    function memory_hex_dump(addr, length)\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        length = length || 4 * 0x10;\r\n        var line, byt;\r\n\r\n        for(var i = 0; i < length >> 4; i++)\r\n        {\r\n            line = h(addr + (i << 4), 5) + \"   \";\r\n\r\n            for(var j = 0; j < 0x10; j++)\r\n            {\r\n                byt = cpu.read8(addr + (i << 4) + j);\r\n                line += h(byt, 2) + \" \";\r\n            }\r\n\r\n            line += \"  \";\r\n\r\n            for(j = 0; j < 0x10; j++)\r\n            {\r\n                byt = cpu.read8(addr + (i << 4) + j);\r\n                line += (byt < 33 || byt > 126) ? \".\" : String.fromCharCode(byt);\r\n            }\r\n\r\n            dbg_log(line);\r\n        }\r\n    }\r\n\r\n    function used_memory_dump()\r\n    {\r\n        if(!DEBUG) return;\r\n\r\n        var width = 0x80,\r\n            height = 0x10,\r\n            block_size = cpu.memory_size / width / height | 0,\r\n            row;\r\n\r\n        for(var i = 0; i < height; i++)\r\n        {\r\n            row = h(i * width * block_size, 8) + \" | \";\r\n\r\n            for(var j = 0; j < width; j++)\r\n            {\r\n                var used = cpu.mem32s[(i * width + j) * block_size] > 0;\r\n\r\n                row += used ? \"X\" : \" \";\r\n            }\r\n\r\n            dbg_log(row);\r\n        }\r\n    }\r\n\r\n\r\n    debug.debug_interrupt = function(interrupt_nr)\r\n    {\r\n        //if(interrupt_nr === 0x20)\r\n        //{\r\n        //    //var vxd_device = cpu.safe_read16(cpu.instruction_pointer + 2);\r\n        //    //var vxd_sub = cpu.safe_read16(cpu.instruction_pointer + 0);\r\n        //    //var service = \"\";\r\n        //    //if(vxd_device === 1)\r\n        //    //{\r\n        //    //    service = vxd_table1[vxd_sub];\r\n        //    //}\r\n        //    //dbg_log(\"vxd: \" + h(vxd_device, 4) + \" \" + h(vxd_sub, 4) + \" \" + service);\r\n        //}\r\n\r\n        //if(interrupt_nr >= 0x21 && interrupt_nr < 0x30)\r\n        //{\r\n        //    dbg_log(\"dos: \" + h(interrupt_nr, 2) + \" ah=\" + h(this.reg8[reg_ah], 2) + \" ax=\" + h(this.reg16[reg_ax], 4));\r\n        //}\r\n\r\n        //if(interrupt_nr === 0x13 && (this.reg8[reg_ah] | 1) === 0x43)\r\n        //{\r\n        //    this.debug.memory_hex_dump(this.get_seg(reg_ds) + this.reg16[reg_si], 0x18);\r\n        //}\r\n\r\n        //if(interrupt_nr == 0x10)\r\n        //{\r\n        //    dbg_log(\"int10 ax=\" + h(this.reg16[reg_ax], 4) + \" '\" + String.fromCharCode(this.reg8[reg_al]) + \"'\");\r\n        //    this.debug.dump_regs_short();\r\n        //    if(this.reg8[reg_ah] == 0xe) vga.tt_write(this.reg8[reg_al]);\r\n        //}\r\n\r\n        //if(interrupt_nr === 0x13)\r\n        //{\r\n        //    this.debug.dump_regs_short();\r\n        //}\r\n\r\n        //if(interrupt_nr === 6)\r\n        //{\r\n        //    this.instruction_pointer += 2;\r\n        //    dbg_log(\"BUG()\", LOG_CPU);\r\n        //    dbg_log(\"line=\" + this.read_imm16() + \" \" +\r\n        //            \"file=\" + this.read_string(this.translate_address_read(this.read_imm32s())), LOG_CPU);\r\n        //    this.instruction_pointer -= 8;\r\n        //    this.debug.dump_regs_short();\r\n        //}\r\n\r\n        //if(interrupt_nr === 0x80)\r\n        //{\r\n        //    dbg_log(\"linux syscall\");\r\n        //    this.debug.dump_regs_short();\r\n        //}\r\n\r\n        //if(interrupt_nr === 0x40)\r\n        //{\r\n        //    dbg_log(\"kolibri syscall\");\r\n        //    this.debug.dump_regs_short();\r\n        //}\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\n// A minimal elf parser for loading 32 bit, x86, little endian, executable elf files\r\n\r\nconst ELF_MAGIC = 0x464C457F;\r\n\r\nlet types = DataView.prototype;\r\nlet U8 = { size: 1, get: types.getUint8, set: types.setUint8, };\r\nlet U16 = { size: 2, get: types.getUint16, set: types.setUint16, };\r\nlet U32 = { size: 4, get: types.getUint32, set: types.setUint32, };\r\nlet pad = function(size)\r\n{\r\n    return {\r\n        size,\r\n        get: offset => -1,\r\n    };\r\n};\r\n\r\nlet Header = create_struct([\r\n    { magic: U32, },\r\n\r\n    { class: U8, },\r\n    { data: U8, },\r\n    { version0: U8, },\r\n    { osabi: U8, },\r\n\r\n    { abiversion: U8, },\r\n    { pad0: pad(7) },\r\n\r\n    { type: U16, },\r\n    { machine: U16, },\r\n\r\n    { version1: U32, },\r\n    { entry: U32, },\r\n    { phoff: U32, },\r\n    { shoff: U32, },\r\n    { flags: U32, },\r\n\r\n    { ehsize: U16, },\r\n    { phentsize: U16, },\r\n    { phnum: U16, },\r\n    { shentsize: U16, },\r\n    { shnum: U16, },\r\n    { shstrndx: U16, },\r\n]);\r\nconsole.assert(Header.reduce((a, entry) => a + entry.size, 0) === 52);\r\n\r\nlet ProgramHeader = create_struct([\r\n    { type: U32, },\r\n    { offset: U32, },\r\n    { vaddr: U32, },\r\n    { paddr: U32, },\r\n    { filesz: U32, },\r\n    { memsz: U32, },\r\n    { flags: U32, },\r\n    { align: U32, },\r\n]);\r\nconsole.assert(ProgramHeader.reduce((a, entry) => a + entry.size, 0) === 32);\r\n\r\nlet SectionHeader = create_struct([\r\n    { name: U32, },\r\n    { type: U32, },\r\n    { flags: U32, },\r\n    { addr: U32, },\r\n    { offset: U32, },\r\n    { size: U32, },\r\n    { link: U32, },\r\n    { info: U32, },\r\n    { addralign: U32, },\r\n    { entsize: U32, },\r\n]);\r\nconsole.assert(SectionHeader.reduce((a, entry) => a + entry.size, 0) === 40);\r\n\r\n\r\n// From [{ name: type }, ...] to [{ name, type, size, get, set }, ...]\r\nfunction create_struct(struct)\r\n{\r\n    return struct.map(function(entry)\r\n    {\r\n        let keys = Object.keys(entry);\r\n        console.assert(keys.length === 1);\r\n        let name = keys[0];\r\n        let type = entry[name];\r\n\r\n        console.assert(type.size > 0);\r\n\r\n        return {\r\n            name,\r\n            type,\r\n            size: type.size,\r\n            get: type.get,\r\n            set: type.set,\r\n        };\r\n    });\r\n}\r\n\r\n/** @param {ArrayBuffer} buffer */\r\nfunction read_elf(buffer)\r\n{\r\n    let view = new DataView(buffer);\r\n\r\n    let [header, offset] = read_struct(view, Header);\r\n    console.assert(offset === 52);\r\n\r\n    if(DEBUG)\r\n    {\r\n        for(let key in header)\r\n        {\r\n            console.log(key + \": 0x\" + header[key].toString(16));\r\n        }\r\n        console.log(header);\r\n    }\r\n\r\n    console.assert(header.magic === ELF_MAGIC, \"Bad magic\");\r\n    console.assert(header.class === 1, \"Unimplemented: 64 bit elf\");\r\n    console.assert(header.data === 1, \"Unimplemented: big endian\");\r\n    console.assert(header.version0 === 1, \"Bad version0\");\r\n\r\n    // 1, 2, 3, 4 specify whether the object is relocatable, executable,\r\n    // shared, or core, respectively.\r\n    console.assert(header.type === 2, \"Unimplemented type\");\r\n\r\n    console.assert(header.version1 === 1, \"Bad version1\");\r\n\r\n    // these are different in 64 bit\r\n    console.assert(header.ehsize === 52, \"Bad header size\");\r\n    console.assert(header.phentsize === 32, \"Bad program header size\");\r\n    console.assert(header.shentsize === 40, \"Bad section header size\");\r\n\r\n    let [program_headers, ph_offset] = read_structs(\r\n        view_slice(view, header.phoff, header.phentsize * header.phnum),\r\n        ProgramHeader,\r\n        header.phnum);\r\n\r\n    let [sections_headers, sh_offset] = read_structs(\r\n        view_slice(view, header.shoff, header.shentsize * header.shnum),\r\n        SectionHeader,\r\n        header.shnum);\r\n\r\n    if(DEBUG)\r\n    {\r\n        console.log(\"%d program headers:\", program_headers.length);\r\n        for(let program of program_headers)\r\n        {\r\n            console.log(\r\n                \"type=%s offset=%s vaddr=%s paddr=%s \" +\r\n                \"filesz=%s memsz=%s flags=%s align=%s\",\r\n                program.type.toString(16),\r\n                program.offset.toString(16),\r\n                program.vaddr.toString(16),\r\n                program.paddr.toString(16),\r\n                program.filesz.toString(16),\r\n                program.memsz.toString(16),\r\n                program.flags.toString(16),\r\n                program.align.toString(16)\r\n            );\r\n        }\r\n\r\n        console.log(\"%d program headers:\", sections_headers.length);\r\n        for(let section of sections_headers)\r\n        {\r\n            console.log(\r\n                \"name=%s type=%s flags=%s addr=%s offset=%s \" +\r\n                \"size=%s link=%s info=%s addralign=%s entsize=%s\",\r\n                section.name.toString(16),\r\n                section.type.toString(16),\r\n                section.flags.toString(16),\r\n                section.addr.toString(16),\r\n                section.offset.toString(16),\r\n                section.size.toString(16),\r\n                section.link.toString(16),\r\n                section.info.toString(16),\r\n                section.addralign.toString(16),\r\n                section.entsize.toString(16)\r\n            );\r\n        }\r\n    }\r\n\r\n    return {\r\n        header,\r\n        program_headers,\r\n        sections_headers,\r\n    };\r\n}\r\n\r\nfunction read_struct(view, Struct)\r\n{\r\n    let result = {};\r\n    let offset = 0;\r\n    const LITTLE_ENDIAN = true; // big endian not supported yet\r\n\r\n    for(let entry of Struct)\r\n    {\r\n        let value = entry.get.call(view, offset, LITTLE_ENDIAN);\r\n        console.assert(result[entry.name] === undefined);\r\n        result[entry.name] = value;\r\n        offset += entry.size;\r\n    }\r\n\r\n    return [result, offset];\r\n}\r\n\r\nfunction read_structs(view, Struct, count)\r\n{\r\n    let result = [];\r\n    let offset = 0;\r\n\r\n    for(var i = 0; i < count; i++)\r\n    {\r\n        let [s, size] = read_struct(view_slice(view, offset), Struct);\r\n        result.push(s);\r\n        offset += size;\r\n    }\r\n\r\n    return [result, offset];\r\n}\r\n\r\n/** @param {number=} length */\r\nfunction view_slice(view, offset, length)\r\n{\r\n    return new DataView(view.buffer, view.byteOffset + offset, length);\r\n}\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar SHIFT_SCAN_CODE = 0x2A;\r\n\r\n/** @const */\r\nvar SCAN_CODE_RELEASE = 0x80;\r\n\r\n/**\r\n * @constructor\r\n *\r\n * @param {BusConnector} bus\r\n */\r\nfunction KeyboardAdapter(bus)\r\n{\r\n    var\r\n        /**\r\n         * @type {!Object.<boolean>}\r\n         */\r\n        keys_pressed = {},\r\n\r\n        keyboard = this;\r\n\r\n    /**\r\n     * Set by emulator\r\n     * @type {boolean}\r\n     */\r\n    this.emu_enabled = true;\r\n\r\n    /**\r\n     * Format:\r\n     * Javascript event.keyCode -> make code\r\n     * @const\r\n     */\r\n    var charmap = new Uint16Array([\r\n        0, 0, 0, 0,  0, 0, 0, 0,\r\n        // 0x08: backspace, tab, enter\r\n        0x0E, 0x0F, 0, 0,  0, 0x1C, 0, 0,\r\n\r\n        // 0x10: shift, ctrl, alt, pause, caps lock\r\n        0x2A, 0x1D, 0x38, 0,  0x3A, 0, 0, 0,\r\n\r\n        // 0x18: escape\r\n        0, 0, 0, 0x01,  0, 0, 0, 0,\r\n\r\n        // 0x20: spacebar, page down/up, end, home, arrow keys, ins, del\r\n        0x39, 0xE049, 0xE051, 0xE04F,  0xE047, 0xE04B, 0xE048, 0xE04D,\r\n        0x50, 0, 0, 0,  0, 0x52, 0x53, 0,\r\n\r\n        // 0x30: numbers\r\n        0x0B, 0x02, 0x03, 0x04,  0x05, 0x06, 0x07, 0x08,\r\n        0x09, 0x0A,\r\n\r\n        // 0x3B: ;= (firefox only)\r\n        0, 0x27, 0, 0x0D, 0, 0,\r\n\r\n        // 0x40\r\n        0,\r\n\r\n        // 0x41: letters\r\n        0x1E, 0x30, 0x2E, 0x20, 0x12, 0x21, 0x22, 0x23, 0x17, 0x24, 0x25, 0x26, 0x32,\r\n        0x31, 0x18, 0x19, 0x10, 0x13, 0x1F, 0x14, 0x16, 0x2F, 0x11, 0x2D, 0x15, 0x2C,\r\n\r\n        // 0x5B: Left Win, Right Win, Menu\r\n        0xE05B, 0xE05C, 0xE05D, 0, 0,\r\n\r\n        // 0x60: keypad\r\n        0x52, 0x4F, 0x50, 0x51, 0x4B, 0x4C, 0x4D, 0x47,\r\n        0x48, 0x49, 0, 0, 0, 0, 0, 0,\r\n\r\n        // 0x70: F1 to F12\r\n        0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x57, 0x58,\r\n\r\n        0, 0, 0, 0,\r\n\r\n        // 0x80\r\n        0, 0, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0, 0,  0, 0, 0, 0,\r\n\r\n        // 0x90: Numlock\r\n        0x45, 0, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0, 0,     0, 0, 0, 0,\r\n\r\n        // 0xA0: - (firefox only)\r\n        0, 0, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0, 0,  0, 0x0C, 0, 0,\r\n\r\n        // 0xB0\r\n        // ,\r\n        0, 0, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0x27, 0x0D,  0x33, 0x0C, 0x34, 0x35,\r\n\r\n        // 0xC0\r\n        // `\r\n        0x29, 0, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0, 0,     0, 0, 0, 0,\r\n\r\n        // 0xD0\r\n        // [']\\\r\n        0, 0, 0, 0,     0, 0, 0, 0,\r\n        0, 0, 0, 0x1A,  0x2B, 0x1B, 0x28, 0,\r\n\r\n        // 0xE0\r\n        // Apple key on Gecko, Right alt\r\n        0xE05B, 0xE038, 0, 0,  0, 0, 0, 0,\r\n        0, 0, 0, 0,            0, 0, 0, 0,\r\n    ]);\r\n\r\n\r\n    /**\r\n     * ascii -> javascript event code (US layout)\r\n     * @const\r\n     */\r\n    var asciimap = {10: 13, 32: 32, 39: 222, 44: 188, 45: 189, 46: 190, 47: 191, 48: 48, 49: 49, 50: 50, 51: 51, 52: 52, 53: 53, 54: 54, 55: 55, 56: 56, 57: 57, 59: 186, 61: 187, 91: 219, 92: 220, 93: 221, 96: 192, 97: 65, 98: 66, 99: 67, 100: 68, 101: 69, 102: 70, 103: 71, 104: 72, 105: 73, 106: 74, 107: 75, 108: 76, 109: 77, 110: 78, 111: 79, 112: 80, 113: 81, 114: 82, 115: 83, 116: 84, 117: 85, 118: 86, 119: 87, 120: 88, 121: 89, 122: 90};\r\n    var asciimap_shift = {33: 49, 34: 222, 35: 51, 36: 52, 37: 53, 38: 55, 40: 57, 41: 48, 42: 56, 43: 187, 58: 186, 60: 188, 62: 190, 63: 191, 64: 50, 65: 65, 66: 66, 67: 67, 68: 68, 69: 69, 70: 70, 71: 71, 72: 72, 73: 73, 74: 74, 75: 75, 76: 76, 77: 77, 78: 78, 79: 79, 80: 80, 81: 81, 82: 82, 83: 83, 84: 84, 85: 85, 86: 86, 87: 87, 88: 88, 89: 89, 90: 90, 94: 54, 95: 189, 123: 219, 124: 220, 125: 221, 126: 192};\r\n\r\n    // From:\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code#Code_values_on_Linux_%28X11%29_%28When_scancode_is_available%29\r\n    // http://stanislavs.org/helppc/make_codes.html\r\n    // http://www.computer-engineering.org/ps2keyboard/scancodes1.html\r\n    //\r\n    // Mapping from event.code to scancode\r\n    var codemap = {\r\n        \"Escape\": 0x0001,\r\n        \"Digit1\": 0x0002,\r\n        \"Digit2\": 0x0003,\r\n        \"Digit3\": 0x0004,\r\n        \"Digit4\": 0x0005,\r\n        \"Digit5\": 0x0006,\r\n        \"Digit6\": 0x0007,\r\n        \"Digit7\": 0x0008,\r\n        \"Digit8\": 0x0009,\r\n        \"Digit9\": 0x000a,\r\n        \"Digit0\": 0x000b,\r\n        \"Minus\": 0x000c,\r\n        \"Equal\": 0x000d,\r\n        \"Backspace\": 0x000e,\r\n        \"Tab\": 0x000f,\r\n        \"KeyQ\": 0x0010,\r\n        \"KeyW\": 0x0011,\r\n        \"KeyE\": 0x0012,\r\n        \"KeyR\": 0x0013,\r\n        \"KeyT\": 0x0014,\r\n        \"KeyY\": 0x0015,\r\n        \"KeyU\": 0x0016,\r\n        \"KeyI\": 0x0017,\r\n        \"KeyO\": 0x0018,\r\n        \"KeyP\": 0x0019,\r\n        \"BracketLeft\": 0x001a,\r\n        \"BracketRight\": 0x001b,\r\n        \"Enter\": 0x001c,\r\n        \"ControlLeft\": 0x001d,\r\n        \"KeyA\": 0x001e,\r\n        \"KeyS\": 0x001f,\r\n        \"KeyD\": 0x0020,\r\n        \"KeyF\": 0x0021,\r\n        \"KeyG\": 0x0022,\r\n        \"KeyH\": 0x0023,\r\n        \"KeyJ\": 0x0024,\r\n        \"KeyK\": 0x0025,\r\n        \"KeyL\": 0x0026,\r\n        \"Semicolon\": 0x0027,\r\n        \"Quote\": 0x0028,\r\n        \"Backquote\": 0x0029,\r\n        \"ShiftLeft\": 0x002a,\r\n        \"Backslash\": 0x002b,\r\n        \"KeyZ\": 0x002c,\r\n        \"KeyX\": 0x002d,\r\n        \"KeyC\": 0x002e,\r\n        \"KeyV\": 0x002f,\r\n        \"KeyB\": 0x0030,\r\n        \"KeyN\": 0x0031,\r\n        \"KeyM\": 0x0032,\r\n        \"Comma\": 0x0033,\r\n        \"Period\": 0x0034,\r\n        \"Slash\": 0x0035,\r\n        \"ShiftRight\": 0x0036,\r\n        \"NumpadMultiply\": 0x0037,\r\n        \"AltLeft\": 0x0038,\r\n        \"Space\": 0x0039,\r\n        \"CapsLock\": 0x003a,\r\n        \"F1\": 0x003b,\r\n        \"F2\": 0x003c,\r\n        \"F3\": 0x003d,\r\n        \"F4\": 0x003e,\r\n        \"F5\": 0x003f,\r\n        \"F6\": 0x0040,\r\n        \"F7\": 0x0041,\r\n        \"F8\": 0x0042,\r\n        \"F9\": 0x0043,\r\n        \"F10\": 0x0044,\r\n        \"NumLock\": 0x0045,\r\n        \"ScrollLock\": 0x0046,\r\n        \"Numpad7\": 0x0047,\r\n        \"Numpad8\": 0x0048,\r\n        \"Numpad9\": 0x0049,\r\n        \"NumpadSubtract\": 0x004a,\r\n        \"Numpad4\": 0x004b,\r\n        \"Numpad5\": 0x004c,\r\n        \"Numpad6\": 0x004d,\r\n        \"NumpadAdd\": 0x004e,\r\n        \"Numpad1\": 0x004f,\r\n        \"Numpad2\": 0x0050,\r\n        \"Numpad3\": 0x0051,\r\n        \"Numpad0\": 0x0052,\r\n        \"NumpadDecimal\": 0x0053,\r\n        \"IntlBackslash\": 0x0056,\r\n        \"F11\": 0x0057,\r\n        \"F12\": 0x0058,\r\n\r\n        \"NumpadEnter\": 0xe01c,\r\n        \"ControlRight\": 0xe01d,\r\n        \"NumpadDivide\": 0xe035,\r\n        //\"PrintScreen\": 0x0063,\r\n        \"AltRight\": 0xe038,\r\n        \"Home\": 0xe047,\r\n        \"ArrowUp\": 0xe048,\r\n        \"PageUp\": 0xe049,\r\n        \"ArrowLeft\": 0xe04b,\r\n        \"ArrowRight\": 0xe04d,\r\n        \"End\": 0xe04f,\r\n        \"ArrowDown\": 0xe050,\r\n        \"PageDown\": 0xe051,\r\n        \"Insert\": 0xe052,\r\n        \"Delete\": 0xe053,\r\n\r\n        \"OSLeft\": 0xe05b,\r\n        \"OSRight\": 0xe05c,\r\n        \"ContextMenu\": 0xe05d,\r\n    };\r\n\r\n    this.bus = bus;\r\n\r\n    this.destroy = function()\r\n    {\r\n        if(typeof window !== \"undefined\")\r\n        {\r\n            window.removeEventListener(\"keyup\", keyup_handler, false);\r\n            window.removeEventListener(\"keydown\", keydown_handler, false);\r\n            window.removeEventListener(\"blur\", blur_handler, false);\r\n        }\r\n    };\r\n\r\n    this.init = function()\r\n    {\r\n        if(typeof window === \"undefined\")\r\n        {\r\n            return;\r\n        }\r\n        this.destroy();\r\n\r\n        window.addEventListener(\"keyup\", keyup_handler, false);\r\n        window.addEventListener(\"keydown\", keydown_handler, false);\r\n        window.addEventListener(\"blur\", blur_handler, false);\r\n    };\r\n    this.init();\r\n\r\n    this.simulate_press = function(code)\r\n    {\r\n        var ev = { keyCode: code };\r\n        handler(ev, true);\r\n        handler(ev, false);\r\n    };\r\n\r\n    this.simulate_char = function(chr)\r\n    {\r\n        var code = chr.charCodeAt(0);\r\n\r\n        if(code in asciimap)\r\n        {\r\n            this.simulate_press(asciimap[code]);\r\n        }\r\n        else if(code in asciimap_shift)\r\n        {\r\n            send_to_controller(SHIFT_SCAN_CODE);\r\n            this.simulate_press(asciimap_shift[code]);\r\n            send_to_controller(SHIFT_SCAN_CODE | SCAN_CODE_RELEASE);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"ascii -> keyCode not found: \", code, chr);\r\n        }\r\n    };\r\n\r\n    function may_handle(e)\r\n    {\r\n        if(e.shiftKey && e.ctrlKey && (e.keyCode === 74 || e.keyCode === 75))\r\n        {\r\n              // don't prevent opening chromium dev tools\r\n              // maybe add other important combinations here, too\r\n              return false;\r\n        }\r\n\r\n        if(!keyboard.emu_enabled)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if(e.target)\r\n        {\r\n            // className shouldn't be hardcoded here\r\n            return e.target.classList.contains(\"phone_keyboard\") ||\r\n                (e.target.nodeName !== \"INPUT\" && e.target.nodeName !== \"TEXTAREA\");\r\n        }\r\n        else\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function translate(e)\r\n    {\r\n        if(e.code !== undefined)\r\n        {\r\n            var code = codemap[e.code];\r\n\r\n            if(code !== undefined)\r\n            {\r\n                return code;\r\n            }\r\n        }\r\n\r\n        return charmap[e.keyCode];\r\n    }\r\n\r\n    function keyup_handler(e)\r\n    {\r\n        if(!e.altKey && keys_pressed[0x38])\r\n        {\r\n            // trigger ALT keyup manually - some browsers don't\r\n            // see issue #165\r\n            handle_code(0x38, false);\r\n        }\r\n        return handler(e, false);\r\n    }\r\n\r\n    function keydown_handler(e)\r\n    {\r\n        if(!e.altKey && keys_pressed[0x38])\r\n        {\r\n            // trigger ALT keyup manually - some browsers don't\r\n            // see issue #165\r\n            handle_code(0x38, false);\r\n        }\r\n        return handler(e, true);\r\n    }\r\n\r\n    function blur_handler(e)\r\n    {\r\n        // trigger keyup for all pressed keys\r\n        var keys = Object.keys(keys_pressed),\r\n            key;\r\n\r\n        for(var i = 0; i < keys.length; i++)\r\n        {\r\n            key = +keys[i];\r\n\r\n            if(keys_pressed[key])\r\n            {\r\n                handle_code(key, false);\r\n            }\r\n        }\r\n\r\n        keys_pressed = {};\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} keydown\r\n     */\r\n    function handler(e, keydown)\r\n    {\r\n        if(!keyboard.bus)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(!may_handle(e))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var code = translate(e);\r\n\r\n        if(!code)\r\n        {\r\n            console.log(\"Missing char in map: \" + e.keyCode.toString(16));\r\n            return;\r\n        }\r\n\r\n        handle_code(code, keydown);\r\n\r\n        e.preventDefault && e.preventDefault();\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {number} code\r\n     * @param {boolean} keydown\r\n     */\r\n    function handle_code(code, keydown)\r\n    {\r\n        if(keydown)\r\n        {\r\n            if(keys_pressed[code])\r\n            {\r\n                handle_code(code, false);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(!keys_pressed[code])\r\n            {\r\n                // stray keyup\r\n                return;\r\n            }\r\n        }\r\n\r\n        keys_pressed[code] = keydown;\r\n\r\n        if(!keydown)\r\n        {\r\n            code |= 0x80;\r\n        }\r\n        //console.log(\"Key: \" + code.toString(16) + \" from \" + chr.toString(16) + \" down=\" + keydown);\r\n\r\n        if(code > 0xFF)\r\n        {\r\n            // prefix\r\n            send_to_controller(code >> 8);\r\n            send_to_controller(code & 0xFF);\r\n        }\r\n        else\r\n        {\r\n            send_to_controller(code);\r\n        }\r\n    }\r\n\r\n    function send_to_controller(code)\r\n    {\r\n        keyboard.bus.send(\"keyboard-code\", code);\r\n    }\r\n}\r\n\r\n","\"use strict\";\r\n\r\n/**\r\n * @constructor\r\n *\r\n * @param {BusConnector} bus\r\n */\r\nfunction MouseAdapter(bus, screen_container)\r\n{\r\n    /** @const */\r\n    var SPEED_FACTOR = 0.15;\r\n\r\n    var left_down = false,\r\n        right_down = false,\r\n        middle_down = false,\r\n\r\n        last_x = 0,\r\n        last_y = 0,\r\n\r\n        mouse = this;\r\n\r\n    // set by controller\r\n    this.enabled = false;\r\n\r\n    // set by emulator\r\n    this.emu_enabled = true;\r\n\r\n    this.bus = bus;\r\n\r\n    this.bus.register(\"mouse-enable\", function(enabled)\r\n    {\r\n        this.enabled = enabled;\r\n    }, this);\r\n\r\n    this.destroy = function()\r\n    {\r\n        if(typeof window === \"undefined\")\r\n        {\r\n            return;\r\n        }\r\n        window.removeEventListener(\"touchstart\", touch_start_handler, false);\r\n        window.removeEventListener(\"touchend\", touch_end_handler, false);\r\n        window.removeEventListener(\"touchmove\", mousemove_handler, false);\r\n        window.removeEventListener(\"mousemove\", mousemove_handler, false);\r\n        window.removeEventListener(\"mousedown\", mousedown_handler, false);\r\n        window.removeEventListener(\"mouseup\", mouseup_handler, false);\r\n        window.removeEventListener(\"wheel\", mousewheel_handler, { passive: false });\r\n    };\r\n\r\n    this.init = function()\r\n    {\r\n        if(typeof window === \"undefined\")\r\n        {\r\n            return;\r\n        }\r\n        this.destroy();\r\n\r\n        window.addEventListener(\"touchstart\", touch_start_handler, false);\r\n        window.addEventListener(\"touchend\", touch_end_handler, false);\r\n        window.addEventListener(\"touchmove\", mousemove_handler, false);\r\n        window.addEventListener(\"mousemove\", mousemove_handler, false);\r\n        window.addEventListener(\"mousedown\", mousedown_handler, false);\r\n        window.addEventListener(\"mouseup\", mouseup_handler, false);\r\n        window.addEventListener(\"wheel\", mousewheel_handler, { passive: false });\r\n    };\r\n    this.init();\r\n\r\n    function is_child(child, parent)\r\n    {\r\n        while(child.parentNode)\r\n        {\r\n            if(child === parent)\r\n            {\r\n                return true;\r\n            }\r\n            child = child.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function may_handle(e)\r\n    {\r\n        if(!mouse.enabled || !mouse.emu_enabled)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const MOVE_MOUSE_WHEN_OVER_SCREEN_ONLY = true;\r\n\r\n        if(MOVE_MOUSE_WHEN_OVER_SCREEN_ONLY)\r\n        {\r\n            var parent = screen_container || document.body;\r\n            return document.pointerLockElement || is_child(e.target, parent);\r\n        }\r\n        else\r\n        {\r\n            if(e.type === \"mousemove\" || e.type === \"touchmove\")\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if(e.type === \"mousewheel\" || e.type === \"DOMMouseScroll\")\r\n            {\r\n                return is_child(e.target, parent);\r\n            }\r\n\r\n            return !e.target || e.target.nodeName !== \"INPUT\" && e.target.nodeName !== \"TEXTAREA\";\r\n        }\r\n    }\r\n\r\n    function touch_start_handler(e)\r\n    {\r\n        if(may_handle(e))\r\n        {\r\n            var touches = e[\"changedTouches\"];\r\n\r\n            if(touches && touches.length)\r\n            {\r\n                var touch = touches[touches.length - 1];\r\n                last_x = touch.clientX;\r\n                last_y = touch.clientY;\r\n            }\r\n        }\r\n    }\r\n\r\n    function touch_end_handler(e)\r\n    {\r\n        if(left_down || middle_down || right_down)\r\n        {\r\n            mouse.bus.send(\"mouse-click\", [false, false, false]);\r\n            left_down = middle_down = right_down = false;\r\n        }\r\n    }\r\n\r\n    function mousemove_handler(e)\r\n    {\r\n        if(!mouse.bus)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(!may_handle(e))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var delta_x = 0;\r\n        var delta_y = 0;\r\n\r\n        var touches = e[\"changedTouches\"];\r\n\r\n        if(touches)\r\n        {\r\n            if(touches.length)\r\n            {\r\n                var touch = touches[touches.length - 1];\r\n                delta_x = touch.clientX - last_x;\r\n                delta_y = touch.clientY - last_y;\r\n\r\n                last_x = touch.clientX;\r\n                last_y = touch.clientY;\r\n\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(typeof e[\"movementX\"] === \"number\")\r\n            {\r\n                delta_x = e[\"movementX\"];\r\n                delta_y = e[\"movementY\"];\r\n            }\r\n            else if(typeof e[\"webkitMovementX\"] === \"number\")\r\n            {\r\n                delta_x = e[\"webkitMovementX\"];\r\n                delta_y = e[\"webkitMovementY\"];\r\n            }\r\n            else if(typeof e[\"mozMovementX\"] === \"number\")\r\n            {\r\n                delta_x = e[\"mozMovementX\"];\r\n                delta_y = e[\"mozMovementY\"];\r\n            }\r\n            else\r\n            {\r\n                // Fallback for other browsers?\r\n                delta_x = e.clientX - last_x;\r\n                delta_y = e.clientY - last_y;\r\n\r\n                last_x = e.clientX;\r\n                last_y = e.clientY;\r\n            }\r\n        }\r\n\r\n        delta_x *= SPEED_FACTOR;\r\n        delta_y *= SPEED_FACTOR;\r\n\r\n        //if(Math.abs(delta_x) > 100 || Math.abs(delta_y) > 100)\r\n        //{\r\n        //    // Large mouse delta, drop?\r\n        //}\r\n\r\n        delta_y = -delta_y;\r\n\r\n        mouse.bus.send(\"mouse-delta\", [delta_x, delta_y]);\r\n\r\n        if(screen_container)\r\n        {\r\n            let absolute_x = e.pageX - screen_container.offsetLeft;\r\n            let absolute_y = e.pageY - screen_container.offsetTop;\r\n            mouse.bus.send(\"mouse-absolute\", [\r\n                absolute_x, absolute_y, screen_container.offsetWidth, screen_container.offsetHeight]);\r\n        }\r\n    }\r\n\r\n    function mousedown_handler(e)\r\n    {\r\n        if(may_handle(e))\r\n        {\r\n            click_event(e, true);\r\n        }\r\n    }\r\n\r\n    function mouseup_handler(e)\r\n    {\r\n        if(may_handle(e))\r\n        {\r\n            click_event(e, false);\r\n        }\r\n    }\r\n\r\n    function click_event(e, down)\r\n    {\r\n        if(!mouse.bus)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(e.which === 1)\r\n        {\r\n            left_down = down;\r\n        }\r\n        else if(e.which === 2)\r\n        {\r\n            middle_down = down;\r\n        }\r\n        else if(e.which === 3)\r\n        {\r\n            right_down = down;\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Unknown event.which: \" + e.which);\r\n        }\r\n        mouse.bus.send(\"mouse-click\", [left_down, middle_down, right_down]);\r\n        e.preventDefault();\r\n    }\r\n\r\n    function mousewheel_handler(e)\r\n    {\r\n        if(!may_handle(e))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var delta_x = e.wheelDelta || -e.detail;\r\n        var delta_y = 0;\r\n\r\n        if(delta_x < 0)\r\n        {\r\n            delta_x = -1;\r\n        }\r\n        else if(delta_x > 0)\r\n        {\r\n            delta_x = 1;\r\n        }\r\n\r\n        mouse.bus.send(\"mouse-wheel\", [delta_x, delta_y]);\r\n        e.preventDefault();\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar DAC_QUEUE_RESERVE = 0.2;\r\n\r\n/** @const */\r\nvar AUDIOBUFFER_MINIMUM_SAMPLING_RATE = 8000;\r\n\r\n/**\r\n * @constructor\r\n * @param {!BusConnector} bus\r\n */\r\nfunction SpeakerAdapter(bus)\r\n{\r\n    if(typeof window === \"undefined\")\r\n    {\r\n        return;\r\n    }\r\n    if(!window.AudioContext && !window[\"webkitAudioContext\"])\r\n    {\r\n        console.warn(\"Web browser doesn't support Web Audio API\");\r\n        return;\r\n    }\r\n\r\n    var SpeakerDAC = window.AudioWorklet ? SpeakerWorkletDAC : SpeakerBufferSourceDAC;\r\n\r\n    /** @const */\r\n    this.bus = bus;\r\n\r\n    /** @const */\r\n    this.audio_context = new (window.AudioContext || window[\"webkitAudioContext\"])();\r\n\r\n    /** @const */\r\n    this.mixer = new SpeakerMixer(bus, this.audio_context);\r\n\r\n    /** @const */\r\n    this.pcspeaker = new PCSpeaker(bus, this.audio_context, this.mixer);\r\n\r\n    /** @const */\r\n    this.dac = new SpeakerDAC(bus, this.audio_context, this.mixer);\r\n\r\n    this.pcspeaker.start();\r\n\r\n    bus.register(\"emulator-stopped\", function()\r\n    {\r\n        this.audio_context.suspend();\r\n    }, this);\r\n\r\n    bus.register(\"emulator-started\", function()\r\n    {\r\n        this.audio_context.resume();\r\n    }, this);\r\n\r\n    bus.register(\"speaker-confirm-initialized\", function()\r\n    {\r\n        bus.send(\"speaker-has-initialized\");\r\n    }, this);\r\n    bus.send(\"speaker-has-initialized\");\r\n}\r\n\r\n/**\r\n * @constructor\r\n * @param {!BusConnector} bus\r\n * @param {!AudioContext} audio_context\r\n */\r\nfunction SpeakerMixer(bus, audio_context)\r\n{\r\n    /** @const */\r\n    this.audio_context = audio_context;\r\n\r\n    this.sources = new Map();\r\n\r\n    // States\r\n\r\n    this.volume_both = 1;\r\n    this.volume_left = 1;\r\n    this.volume_right = 1;\r\n    this.gain_left = 1;\r\n    this.gain_right = 1;\r\n\r\n    // Nodes\r\n    // TODO: Find / calibrate / verify the filter frequencies\r\n\r\n    this.node_treble_left = this.audio_context.createBiquadFilter();\r\n    this.node_treble_right = this.audio_context.createBiquadFilter();\r\n    this.node_treble_left.type = \"highshelf\";\r\n    this.node_treble_right.type = \"highshelf\";\r\n    this.node_treble_left.frequency.setValueAtTime(2000, this.audio_context.currentTime);\r\n    this.node_treble_right.frequency.setValueAtTime(2000, this.audio_context.currentTime);\r\n\r\n    this.node_bass_left = this.audio_context.createBiquadFilter();\r\n    this.node_bass_right = this.audio_context.createBiquadFilter();\r\n    this.node_bass_left.type = \"lowshelf\";\r\n    this.node_bass_right.type = \"lowshelf\";\r\n    this.node_bass_left.frequency.setValueAtTime(200, this.audio_context.currentTime);\r\n    this.node_bass_right.frequency.setValueAtTime(200, this.audio_context.currentTime);\r\n\r\n    this.node_gain_left = this.audio_context.createGain();\r\n    this.node_gain_right = this.audio_context.createGain();\r\n\r\n    this.node_merger = this.audio_context.createChannelMerger(2);\r\n\r\n    // Graph\r\n\r\n    this.input_left = this.node_treble_left;\r\n    this.input_right = this.node_treble_right;\r\n\r\n    this.node_treble_left.connect(this.node_bass_left);\r\n    this.node_bass_left.connect(this.node_gain_left);\r\n    this.node_gain_left.connect(this.node_merger, 0, 0);\r\n\r\n    this.node_treble_right.connect(this.node_bass_right);\r\n    this.node_bass_right.connect(this.node_gain_right);\r\n    this.node_gain_right.connect(this.node_merger, 0, 1);\r\n\r\n    this.node_merger.connect(this.audio_context.destination);\r\n\r\n    // Interface\r\n\r\n    bus.register(\"mixer-connect\", function(data)\r\n    {\r\n        var source_id = data[0];\r\n        var channel = data[1];\r\n        this.connect_source(source_id, channel);\r\n    }, this);\r\n\r\n    bus.register(\"mixer-disconnect\", function(data)\r\n    {\r\n        var source_id = data[0];\r\n        var channel = data[1];\r\n        this.disconnect_source(source_id, channel);\r\n    }, this);\r\n\r\n    bus.register(\"mixer-volume\", function(data)\r\n    {\r\n        var source_id = data[0];\r\n        var channel = data[1];\r\n        var decibels = data[2];\r\n\r\n        var gain = Math.pow(10, decibels / 20);\r\n\r\n        var source = source_id === MIXER_SRC_MASTER ? this : this.sources.get(source_id);\r\n\r\n        if(source === undefined)\r\n        {\r\n            dbg_assert(false, \"Mixer set volume - cannot set volume for undefined source: \" + source_id);\r\n            return;\r\n        }\r\n\r\n        source.set_volume(gain, channel);\r\n    }, this);\r\n\r\n    bus.register(\"mixer-gain-left\", function(/** number */ decibels)\r\n    {\r\n        this.gain_left = Math.pow(10, decibels / 20);\r\n        this.update();\r\n    }, this);\r\n\r\n    bus.register(\"mixer-gain-right\", function(/** number */ decibels)\r\n    {\r\n        this.gain_right = Math.pow(10, decibels / 20);\r\n        this.update();\r\n    }, this);\r\n\r\n    function create_gain_handler(audio_node)\r\n    {\r\n        return function(decibels)\r\n        {\r\n            audio_node.gain.setValueAtTime(decibels, this.audio_context.currentTime);\r\n        };\r\n    }\r\n    bus.register(\"mixer-treble-left\", create_gain_handler(this.node_treble_left), this);\r\n    bus.register(\"mixer-treble-right\", create_gain_handler(this.node_treble_right), this);\r\n    bus.register(\"mixer-bass-left\", create_gain_handler(this.node_bass_left), this);\r\n    bus.register(\"mixer-bass-right\", create_gain_handler(this.node_bass_right), this);\r\n}\r\n\r\n/**\r\n * @param {!AudioNode} source_node\r\n * @param {number} source_id\r\n * @return {SpeakerMixerSource}\r\n */\r\nSpeakerMixer.prototype.add_source = function(source_node, source_id)\r\n{\r\n    var source = new SpeakerMixerSource(\r\n        this.audio_context,\r\n        source_node,\r\n        this.input_left,\r\n        this.input_right\r\n    );\r\n\r\n    dbg_assert(!this.sources.has(source_id), \"Mixer add source - overwritting source: \" + source_id);\r\n\r\n    this.sources.set(source_id, source);\r\n    return source;\r\n};\r\n\r\n/**\r\n * @param {number} source_id\r\n * @param {number=} channel\r\n */\r\nSpeakerMixer.prototype.connect_source = function(source_id, channel)\r\n{\r\n    var source = this.sources.get(source_id);\r\n\r\n    if(source === undefined)\r\n    {\r\n        dbg_assert(false, \"Mixer connect - cannot connect undefined source: \" + source_id);\r\n        return;\r\n    }\r\n\r\n    source.connect(channel);\r\n};\r\n\r\n/**\r\n * @param {number} source_id\r\n * @param {number=} channel\r\n */\r\nSpeakerMixer.prototype.disconnect_source = function(source_id, channel)\r\n{\r\n    var source = this.sources.get(source_id);\r\n\r\n    if(source === undefined)\r\n    {\r\n        dbg_assert(false, \"Mixer disconnect - cannot disconnect undefined source: \" + source_id);\r\n        return;\r\n    }\r\n\r\n    source.disconnect(channel);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {number=} channel\r\n */\r\nSpeakerMixer.prototype.set_volume = function(value, channel)\r\n{\r\n    if(channel === undefined)\r\n    {\r\n        channel = MIXER_CHANNEL_BOTH;\r\n    }\r\n\r\n    switch(channel)\r\n    {\r\n        case MIXER_CHANNEL_LEFT:\r\n            this.volume_left = value;\r\n            break;\r\n        case MIXER_CHANNEL_RIGHT:\r\n            this.volume_right = value;\r\n            break;\r\n        case MIXER_CHANNEL_BOTH:\r\n            this.volume_both = value;\r\n            break;\r\n        default:\r\n            dbg_assert(false, \"Mixer set master volume - unknown channel: \" + channel);\r\n            return;\r\n    }\r\n\r\n    this.update();\r\n};\r\n\r\nSpeakerMixer.prototype.update = function()\r\n{\r\n    var net_gain_left = this.volume_both * this.volume_left * this.gain_left;\r\n    var net_gain_right = this.volume_both * this.volume_right * this.gain_right;\r\n\r\n    this.node_gain_left.gain.setValueAtTime(net_gain_left, this.audio_context.currentTime);\r\n    this.node_gain_right.gain.setValueAtTime(net_gain_right, this.audio_context.currentTime);\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @param {!AudioContext} audio_context\r\n * @param {!AudioNode} source_node\r\n * @param {!AudioNode} destination_left\r\n * @param {!AudioNode} destination_right\r\n */\r\nfunction SpeakerMixerSource(audio_context, source_node, destination_left, destination_right)\r\n{\r\n    /** @const */\r\n    this.audio_context = audio_context;\r\n\r\n    // States\r\n\r\n    this.connected_left = true;\r\n    this.connected_right = true;\r\n    this.gain_hidden = 1;\r\n    this.volume_both = 1;\r\n    this.volume_left = 1;\r\n    this.volume_right = 1;\r\n\r\n    // Nodes\r\n\r\n    this.node_splitter = audio_context.createChannelSplitter(2);\r\n    this.node_gain_left = audio_context.createGain();\r\n    this.node_gain_right = audio_context.createGain();\r\n\r\n    // Graph\r\n\r\n    source_node.connect(this.node_splitter);\r\n\r\n    this.node_splitter.connect(this.node_gain_left, 0);\r\n    this.node_gain_left.connect(destination_left);\r\n\r\n    this.node_splitter.connect(this.node_gain_right, 1);\r\n    this.node_gain_right.connect(destination_right);\r\n}\r\n\r\nSpeakerMixerSource.prototype.update = function()\r\n{\r\n    var net_gain_left = this.connected_left * this.gain_hidden * this.volume_both * this.volume_left;\r\n    var net_gain_right = this.connected_right * this.gain_hidden * this.volume_both * this.volume_right;\r\n\r\n    this.node_gain_left.gain.setValueAtTime(net_gain_left, this.audio_context.currentTime);\r\n    this.node_gain_right.gain.setValueAtTime(net_gain_right, this.audio_context.currentTime);\r\n};\r\n\r\n/** @param {number=} channel */\r\nSpeakerMixerSource.prototype.connect = function(channel)\r\n{\r\n    var both = !channel || channel === MIXER_CHANNEL_BOTH;\r\n    if(both || channel === MIXER_CHANNEL_LEFT)\r\n    {\r\n        this.connected_left = true;\r\n    }\r\n    if(both || channel === MIXER_CHANNEL_RIGHT)\r\n    {\r\n        this.connected_right = true;\r\n    }\r\n    this.update();\r\n};\r\n\r\n/** @param {number=} channel */\r\nSpeakerMixerSource.prototype.disconnect = function(channel)\r\n{\r\n    var both = !channel || channel === MIXER_CHANNEL_BOTH;\r\n    if(both || channel === MIXER_CHANNEL_LEFT)\r\n    {\r\n        this.connected_left = false;\r\n    }\r\n    if(both || channel === MIXER_CHANNEL_RIGHT)\r\n    {\r\n        this.connected_right = false;\r\n    }\r\n    this.update();\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {number=} channel\r\n */\r\nSpeakerMixerSource.prototype.set_volume = function(value, channel)\r\n{\r\n    if(channel === undefined)\r\n    {\r\n        channel = MIXER_CHANNEL_BOTH;\r\n    }\r\n\r\n    switch(channel)\r\n    {\r\n        case MIXER_CHANNEL_LEFT:\r\n            this.volume_left = value;\r\n            break;\r\n        case MIXER_CHANNEL_RIGHT:\r\n            this.volume_right = value;\r\n            break;\r\n        case MIXER_CHANNEL_BOTH:\r\n            this.volume_both = value;\r\n            break;\r\n        default:\r\n            dbg_assert(false, \"Mixer set volume - unknown channel: \" + channel);\r\n            return;\r\n    }\r\n\r\n    this.update();\r\n};\r\n\r\nSpeakerMixerSource.prototype.set_gain_hidden = function(value)\r\n{\r\n    this.gain_hidden = value;\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @param {!BusConnector} bus\r\n * @param {!AudioContext} audio_context\r\n * @param {!SpeakerMixer} mixer\r\n */\r\nfunction PCSpeaker(bus, audio_context, mixer)\r\n{\r\n    // Nodes\r\n\r\n    this.node_oscillator = audio_context.createOscillator();\r\n    this.node_oscillator.type = \"square\";\r\n    this.node_oscillator.frequency.setValueAtTime(440, audio_context.currentTime);\r\n\r\n    // Interface\r\n\r\n    this.mixer_connection = mixer.add_source(this.node_oscillator, MIXER_SRC_PCSPEAKER);\r\n    this.mixer_connection.disconnect();\r\n\r\n    bus.register(\"pcspeaker-enable\", function()\r\n    {\r\n        mixer.connect_source(MIXER_SRC_PCSPEAKER);\r\n    }, this);\r\n\r\n    bus.register(\"pcspeaker-disable\", function()\r\n    {\r\n        mixer.disconnect_source(MIXER_SRC_PCSPEAKER);\r\n    }, this);\r\n\r\n    bus.register(\"pcspeaker-update\", function(data)\r\n    {\r\n        var counter_mode = data[0];\r\n        var counter_reload = data[1];\r\n\r\n        var frequency = 0;\r\n        var beep_enabled = counter_mode === 3;\r\n\r\n        if(beep_enabled)\r\n        {\r\n            frequency = OSCILLATOR_FREQ * 1000 / counter_reload;\r\n            frequency = Math.min(frequency, this.node_oscillator.frequency.maxValue);\r\n            frequency = Math.max(frequency, 0);\r\n        }\r\n\r\n        this.node_oscillator.frequency.setValueAtTime(frequency, audio_context.currentTime);\r\n    }, this);\r\n}\r\n\r\nPCSpeaker.prototype.start = function()\r\n{\r\n    this.node_oscillator.start();\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @param {!BusConnector} bus\r\n * @param {!AudioContext} audio_context\r\n * @param {!SpeakerMixer} mixer\r\n */\r\nfunction SpeakerWorkletDAC(bus, audio_context, mixer)\r\n{\r\n    /** @const */\r\n    this.bus = bus;\r\n\r\n    /** @const */\r\n    this.audio_context = audio_context;\r\n\r\n    // State\r\n\r\n    this.enabled = false;\r\n    this.sampling_rate = 48000;\r\n\r\n    // Worklet\r\n\r\n    function worklet()\r\n    {\r\n        /** @const */\r\n        var RENDER_QUANTUM = 128;\r\n\r\n        /** @const */\r\n        var MINIMUM_BUFFER_SIZE = 2 * RENDER_QUANTUM;\r\n\r\n        /** @const */\r\n        var QUEUE_RESERVE = 1024;\r\n\r\n        function sinc(x)\r\n        {\r\n            if(x === 0) return 1;\r\n            x *= Math.PI;\r\n            return Math.sin(x) / x;\r\n        }\r\n\r\n        var EMPTY_BUFFER =\r\n        [\r\n            new Float32Array(MINIMUM_BUFFER_SIZE),\r\n            new Float32Array(MINIMUM_BUFFER_SIZE),\r\n        ];\r\n\r\n        /**\r\n         * @constructor\r\n         * @extends AudioWorkletProcessor\r\n         */\r\n        function DACProcessor()\r\n        {\r\n            var self = Reflect.construct(AudioWorkletProcessor, [], DACProcessor);\r\n\r\n            // Params\r\n\r\n            self.kernel_size = 3;\r\n\r\n            // States\r\n\r\n            // Buffers waiting for their turn to be consumed\r\n            self.queue_data = new Array(1024);\r\n            self.queue_start = 0;\r\n            self.queue_end = 0;\r\n            self.queue_length = 0;\r\n            self.queue_size = self.queue_data.length;\r\n            self.queued_samples = 0;\r\n\r\n            // Buffers being actively consumed\r\n            /** @type{Array<Float32Array>} */\r\n            self.source_buffer_previous = EMPTY_BUFFER;\r\n            /** @type{Array<Float32Array>} */\r\n            self.source_buffer_current = EMPTY_BUFFER;\r\n\r\n            // Ratio of alienland sample rate to homeland sample rate.\r\n            self.source_samples_per_destination = 1.0;\r\n\r\n            // Integer representing the position of the first destination sample\r\n            // for the current block, relative to source_buffer_current.\r\n            self.source_block_start = 0;\r\n\r\n            // Real number representing the position of the current destination\r\n            // sample relative to source_buffer_current, since source_block_start.\r\n            self.source_time = 0.0;\r\n\r\n            // Same as source_time but rounded down to an index.\r\n            self.source_offset = 0;\r\n\r\n            // Interface\r\n\r\n            self.port.onmessage = (event) =>\r\n            {\r\n                switch(event.data.type)\r\n                {\r\n                    case \"queue\":\r\n                        self.queue_push(event.data.value);\r\n                        break;\r\n                    case \"sampling-rate\":\r\n                        self.source_samples_per_destination = event.data.value / sampleRate;\r\n                        break;\r\n                }\r\n            };\r\n\r\n            return self;\r\n        }\r\n\r\n        Reflect.setPrototypeOf(DACProcessor.prototype, AudioWorkletProcessor.prototype);\r\n        Reflect.setPrototypeOf(DACProcessor, AudioWorkletProcessor);\r\n\r\n        DACProcessor.prototype[\"process\"] =\r\n        DACProcessor.prototype.process = function(inputs, outputs, parameters)\r\n        {\r\n            for(var i = 0; i < outputs[0][0].length; i++)\r\n            {\r\n                // Lanczos resampling\r\n                var sum0 = 0;\r\n                var sum1 = 0;\r\n\r\n                var start = this.source_offset - this.kernel_size + 1;\r\n                var end = this.source_offset + this.kernel_size;\r\n\r\n                for(var j = start; j <= end; j++)\r\n                {\r\n                    var convolute_index = this.source_block_start + j;\r\n                    sum0 += this.get_sample(convolute_index, 0) * this.kernel(this.source_time - j);\r\n                    sum1 += this.get_sample(convolute_index, 1) * this.kernel(this.source_time - j);\r\n                }\r\n\r\n                if(isNaN(sum0) || isNaN(sum1))\r\n                {\r\n                    // NaN values cause entire audio graph to cease functioning.\r\n                    sum0 = sum1 = 0;\r\n                    this.dbg_log(\"ERROR: NaN values! Ignoring for now.\");\r\n                }\r\n\r\n                outputs[0][0][i] = sum0;\r\n                outputs[0][1][i] = sum1;\r\n\r\n                this.source_time += this.source_samples_per_destination;\r\n                this.source_offset = Math.floor(this.source_time);\r\n            }\r\n\r\n            // +2 to safeguard against rounding variations\r\n            var samples_needed_per_block = this.source_offset;\r\n            samples_needed_per_block += this.kernel_size + 2;\r\n\r\n            this.source_time -= this.source_offset;\r\n            this.source_block_start += this.source_offset;\r\n            this.source_offset = 0;\r\n\r\n            // Note: This needs to be done after source_block_start is updated.\r\n            this.ensure_enough_data(samples_needed_per_block);\r\n\r\n            return true;\r\n        };\r\n\r\n        DACProcessor.prototype.kernel = function(x)\r\n        {\r\n            return sinc(x) * sinc(x / this.kernel_size);\r\n        };\r\n\r\n        DACProcessor.prototype.get_sample = function(index, channel)\r\n        {\r\n            if(index < 0)\r\n            {\r\n                // -ve index represents previous buffer\r\n                //          <-------|\r\n                // [Previous buffer][Current buffer]\r\n                index += this.source_buffer_previous[0].length;\r\n                return this.source_buffer_previous[channel][index];\r\n            }\r\n            else\r\n            {\r\n                return this.source_buffer_current[channel][index];\r\n            }\r\n        };\r\n\r\n        DACProcessor.prototype.ensure_enough_data = function(needed)\r\n        {\r\n            var current_length = this.source_buffer_current[0].length;\r\n            var remaining = current_length - this.source_block_start;\r\n\r\n            if(remaining < needed)\r\n            {\r\n                this.prepare_next_buffer();\r\n                this.source_block_start -= current_length;\r\n            }\r\n        };\r\n\r\n        DACProcessor.prototype.prepare_next_buffer = function()\r\n        {\r\n            if(this.queued_samples < MINIMUM_BUFFER_SIZE && this.queue_length)\r\n            {\r\n                this.dbg_log(\"Not enough samples - should not happen during midway of playback\");\r\n            }\r\n\r\n            this.source_buffer_previous = this.source_buffer_current;\r\n            this.source_buffer_current = this.queue_shift();\r\n\r\n            var sample_count = this.source_buffer_current[0].length;\r\n\r\n            if(sample_count < MINIMUM_BUFFER_SIZE)\r\n            {\r\n                // Unfortunately, this single buffer is too small :(\r\n\r\n                var queue_pos = this.queue_start;\r\n                var buffer_count = 0;\r\n\r\n                // Figure out how many small buffers to combine.\r\n                while(sample_count < MINIMUM_BUFFER_SIZE && buffer_count < this.queue_length)\r\n                {\r\n                    sample_count += this.queue_data[queue_pos][0].length;\r\n\r\n                    queue_pos = queue_pos + 1 & this.queue_size - 1;\r\n                    buffer_count++;\r\n                }\r\n\r\n                // Note: if not enough buffers, this will be end-padded with zeros:\r\n                var new_big_buffer_size = Math.max(sample_count, MINIMUM_BUFFER_SIZE);\r\n                var new_big_buffer =\r\n                [\r\n                    new Float32Array(new_big_buffer_size),\r\n                    new Float32Array(new_big_buffer_size),\r\n                ];\r\n\r\n                // Copy the first, already-shifted, small buffer into the new buffer.\r\n                new_big_buffer[0].set(this.source_buffer_current[0]);\r\n                new_big_buffer[1].set(this.source_buffer_current[1]);\r\n                var new_big_buffer_pos = this.source_buffer_current[0].length;\r\n\r\n                // Copy the rest.\r\n                for(var i = 0; i < buffer_count; i++)\r\n                {\r\n                    var small_buffer = this.queue_shift();\r\n                    new_big_buffer[0].set(small_buffer[0], new_big_buffer_pos);\r\n                    new_big_buffer[1].set(small_buffer[1], new_big_buffer_pos);\r\n                    new_big_buffer_pos += small_buffer[0].length;\r\n                }\r\n\r\n                // Pretend that everything's just fine.\r\n                this.source_buffer_current = new_big_buffer;\r\n            }\r\n\r\n            this.pump();\r\n        };\r\n\r\n        DACProcessor.prototype.pump = function()\r\n        {\r\n            if(this.queued_samples / this.source_samples_per_destination < QUEUE_RESERVE)\r\n            {\r\n                this.port.postMessage(\r\n                {\r\n                    type: \"pump\",\r\n                });\r\n            }\r\n        };\r\n\r\n        DACProcessor.prototype.queue_push = function(item)\r\n        {\r\n            if(this.queue_length < this.queue_size)\r\n            {\r\n                this.queue_data[this.queue_end] = item;\r\n                this.queue_end = this.queue_end + 1 & this.queue_size - 1;\r\n                this.queue_length++;\r\n\r\n                this.queued_samples += item[0].length;\r\n\r\n                this.pump();\r\n            }\r\n        };\r\n\r\n        DACProcessor.prototype.queue_shift = function()\r\n        {\r\n            if(!this.queue_length)\r\n            {\r\n                return EMPTY_BUFFER;\r\n            }\r\n\r\n            var item = this.queue_data[this.queue_start];\r\n\r\n            this.queue_data[this.queue_start] = null;\r\n            this.queue_start = this.queue_start + 1 & this.queue_size - 1;\r\n            this.queue_length--;\r\n\r\n            this.queued_samples -= item[0].length;\r\n\r\n            return item;\r\n        };\r\n\r\n        DACProcessor.prototype.dbg_log = function(message)\r\n        {\r\n            if(DEBUG)\r\n            {\r\n                this.port.postMessage(\r\n                {\r\n                    type: \"debug-log\",\r\n                    value: message,\r\n                });\r\n            }\r\n        };\r\n\r\n        registerProcessor(\"dac-processor\", DACProcessor);\r\n    }\r\n\r\n    var worklet_string = worklet.toString();\r\n\r\n    var worklet_code_start = worklet_string.indexOf(\"{\") + 1;\r\n    var worklet_code_end = worklet_string.lastIndexOf(\"}\");\r\n    var worklet_code = worklet_string.substring(worklet_code_start, worklet_code_end);\r\n\r\n    if(DEBUG)\r\n    {\r\n        worklet_code = \"var DEBUG = true;\\n\" + worklet_code;\r\n    }\r\n\r\n    var worklet_blob = new Blob([worklet_code], { type: \"application/javascript\" });\r\n    var worklet_url = URL.createObjectURL(worklet_blob);\r\n\r\n    /** @type {AudioWorkletNode} */\r\n    this.node_processor = null;\r\n\r\n    // Placeholder pass-through node to connect to, when worklet node is not ready yet.\r\n    this.node_output = this.audio_context.createGain();\r\n\r\n    this.audio_context\r\n        .audioWorklet\r\n        .addModule(worklet_url)\r\n        .then(() =>\r\n    {\r\n        URL.revokeObjectURL(worklet_url);\r\n\r\n        this.node_processor = new AudioWorkletNode(this.audio_context, \"dac-processor\",\r\n        {\r\n            \"numberOfInputs\": 0,\r\n            \"numberOfOutputs\": 1,\r\n            \"outputChannelCount\": [2],\r\n        });\r\n\r\n        this.node_processor.port.postMessage(\r\n        {\r\n            type: \"sampling-rate\",\r\n            value: this.sampling_rate,\r\n        });\r\n\r\n        this.node_processor.port.onmessage = (event) =>\r\n        {\r\n            switch(event.data.type)\r\n            {\r\n                case \"pump\":\r\n                    this.pump();\r\n                    break;\r\n                case \"debug-log\":\r\n                    dbg_log(\"SpeakerWorkletDAC - Worklet: \" + event.data.value);\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Graph\r\n\r\n        this.node_processor.connect(this.node_output);\r\n    });\r\n\r\n    // Interface\r\n\r\n    this.mixer_connection = mixer.add_source(this.node_output, MIXER_SRC_DAC);\r\n    this.mixer_connection.set_gain_hidden(3);\r\n\r\n    bus.register(\"dac-send-data\", function(data)\r\n    {\r\n        this.queue(data);\r\n    }, this);\r\n\r\n    bus.register(\"dac-enable\", function(enabled)\r\n    {\r\n        this.enabled = true;\r\n    }, this);\r\n\r\n    bus.register(\"dac-disable\", function()\r\n    {\r\n        this.enabled = false;\r\n    }, this);\r\n\r\n    bus.register(\"dac-tell-sampling-rate\", function(/** number */ rate)\r\n    {\r\n        dbg_assert(rate > 0, \"Sampling rate should be nonzero\");\r\n        this.sampling_rate = rate;\r\n\r\n        if(!this.node_processor)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.node_processor.port.postMessage(\r\n        {\r\n            type: \"sampling-rate\",\r\n            value: rate,\r\n        });\r\n    }, this);\r\n\r\n    if(DEBUG)\r\n    {\r\n        this.debugger = new SpeakerDACDebugger(this.audio_context, this.node_output);\r\n    }\r\n}\r\n\r\nSpeakerWorkletDAC.prototype.queue = function(data)\r\n{\r\n    if(!this.node_processor)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(DEBUG)\r\n    {\r\n        this.debugger.push_queued_data(data);\r\n    }\r\n\r\n    this.node_processor.port.postMessage(\r\n    {\r\n        type: \"queue\",\r\n        value: data,\r\n    }, [data[0].buffer, data[1].buffer]);\r\n};\r\n\r\nSpeakerWorkletDAC.prototype.pump = function()\r\n{\r\n    if(!this.enabled)\r\n    {\r\n        return;\r\n    }\r\n    this.bus.send(\"dac-request-data\");\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @param {!BusConnector} bus\r\n * @param {!AudioContext} audio_context\r\n * @param {!SpeakerMixer} mixer\r\n */\r\nfunction SpeakerBufferSourceDAC(bus, audio_context, mixer)\r\n{\r\n    /** @const */\r\n    this.bus = bus;\r\n\r\n    /** @const */\r\n    this.audio_context = audio_context;\r\n\r\n    // States\r\n\r\n    this.enabled = false;\r\n    this.sampling_rate = 22050;\r\n    this.buffered_time = 0;\r\n    this.rate_ratio = 1;\r\n\r\n    // Nodes\r\n\r\n    this.node_lowpass = this.audio_context.createBiquadFilter();\r\n    this.node_lowpass.type = \"lowpass\";\r\n\r\n    // Interface\r\n\r\n    this.node_output = this.node_lowpass;\r\n\r\n    this.mixer_connection = mixer.add_source(this.node_output, MIXER_SRC_DAC);\r\n    this.mixer_connection.set_gain_hidden(3);\r\n\r\n    bus.register(\"dac-send-data\", function(data)\r\n    {\r\n        this.queue(data);\r\n    }, this);\r\n\r\n    bus.register(\"dac-enable\", function(enabled)\r\n    {\r\n        this.enabled = true;\r\n        this.pump();\r\n    }, this);\r\n\r\n    bus.register(\"dac-disable\", function()\r\n    {\r\n        this.enabled = false;\r\n    }, this);\r\n\r\n    bus.register(\"dac-tell-sampling-rate\", function(/** number */ rate)\r\n    {\r\n        dbg_assert(rate > 0, \"Sampling rate should be nonzero\");\r\n        this.sampling_rate = rate;\r\n        this.rate_ratio = Math.ceil(AUDIOBUFFER_MINIMUM_SAMPLING_RATE / rate);\r\n        this.node_lowpass.frequency.setValueAtTime(rate / 2, this.audio_context.currentTime);\r\n    }, this);\r\n\r\n    if(DEBUG)\r\n    {\r\n        this.debugger = new SpeakerDACDebugger(this.audio_context, this.node_output);\r\n    }\r\n}\r\n\r\nSpeakerBufferSourceDAC.prototype.queue = function(data)\r\n{\r\n    if(DEBUG)\r\n    {\r\n        this.debugger.push_queued_data(data);\r\n    }\r\n\r\n    var sample_count = data[0].length;\r\n    var block_duration = sample_count / this.sampling_rate;\r\n\r\n    var buffer;\r\n    if(this.rate_ratio > 1)\r\n    {\r\n        var new_sample_count = sample_count * this.rate_ratio;\r\n        var new_sampling_rate = this.sampling_rate * this.rate_ratio;\r\n        buffer = this.audio_context.createBuffer(2, new_sample_count, new_sampling_rate);\r\n        var buffer_data0 = buffer.getChannelData(0);\r\n        var buffer_data1 = buffer.getChannelData(1);\r\n\r\n        var buffer_index = 0;\r\n        for(var i = 0; i < sample_count; i++)\r\n        {\r\n            for(var j = 0; j < this.rate_ratio; j++, buffer_index++)\r\n            {\r\n                buffer_data0[buffer_index] = data[0][i];\r\n                buffer_data1[buffer_index] = data[1][i];\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // Allocating new AudioBuffer every block\r\n        // - Memory profiles show insignificant improvements if recycling old buffers.\r\n        buffer = this.audio_context.createBuffer(2, sample_count, this.sampling_rate);\r\n        if(buffer.copyToChannel)\r\n        {\r\n            buffer.copyToChannel(data[0], 0);\r\n            buffer.copyToChannel(data[1], 1);\r\n        }\r\n        else\r\n        {\r\n            // Safari doesn't support copyToChannel yet. See #286\r\n            buffer.getChannelData(0).set(data[0]);\r\n            buffer.getChannelData(1).set(data[1]);\r\n        }\r\n    }\r\n\r\n    var source = this.audio_context.createBufferSource();\r\n    source.buffer = buffer;\r\n    source.connect(this.node_lowpass);\r\n    source.addEventListener(\"ended\", this.pump.bind(this));\r\n\r\n    var current_time = this.audio_context.currentTime;\r\n\r\n    if(this.buffered_time < current_time)\r\n    {\r\n        dbg_log(\"Speaker DAC - Creating/Recreating reserve - shouldn't occur frequently during playback\");\r\n\r\n        // Schedule pump() to queue evenly, starting from current time\r\n        this.buffered_time = current_time;\r\n        var target_silence_duration = DAC_QUEUE_RESERVE - block_duration;\r\n        var current_silence_duration = 0;\r\n        while(current_silence_duration <= target_silence_duration)\r\n        {\r\n            current_silence_duration += block_duration;\r\n            this.buffered_time += block_duration;\r\n            setTimeout(() => this.pump(), current_silence_duration * 1000);\r\n        }\r\n    }\r\n\r\n    source.start(this.buffered_time);\r\n    this.buffered_time += block_duration;\r\n\r\n    // Chase the schedule - ensure reserve is full\r\n    setTimeout(() => this.pump(), 0);\r\n};\r\n\r\nSpeakerBufferSourceDAC.prototype.pump = function()\r\n{\r\n    if(!this.enabled)\r\n    {\r\n        return;\r\n    }\r\n    if(this.buffered_time - this.audio_context.currentTime > DAC_QUEUE_RESERVE)\r\n    {\r\n        return;\r\n    }\r\n    this.bus.send(\"dac-request-data\");\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\nfunction SpeakerDACDebugger(audio_context, source_node)\r\n{\r\n    /** @const */\r\n    this.audio_context = audio_context;\r\n\r\n    /** @const */\r\n    this.node_source = source_node;\r\n\r\n    this.node_processor = null;\r\n\r\n    this.node_gain = this.audio_context.createGain();\r\n    this.node_gain.gain.setValueAtTime(0, this.audio_context.currentTime);\r\n\r\n    this.node_gain.connect(this.audio_context.destination);\r\n\r\n    this.is_active = false;\r\n    this.queued_history = [];\r\n    this.output_history = [];\r\n    this.queued = [[], []];\r\n    this.output = [[], []];\r\n}\r\n\r\n/** @suppress {deprecated} */\r\nSpeakerDACDebugger.prototype.start = function(duration_ms)\r\n{\r\n    this.is_active = true;\r\n    this.queued = [[], []];\r\n    this.output = [[], []];\r\n    this.queued_history.push(this.queued);\r\n    this.output_history.push(this.output);\r\n\r\n    this.node_processor = this.audio_context.createScriptProcessor(1024, 2, 2);\r\n    this.node_processor.onaudioprocess = (event) =>\r\n    {\r\n        this.output[0].push(event.inputBuffer.getChannelData(0).slice());\r\n        this.output[1].push(event.inputBuffer.getChannelData(1).slice());\r\n    };\r\n\r\n    this.node_source.connect(this.node_processor);\r\n    this.node_processor.connect(this.node_gain);\r\n\r\n    setTimeout(() =>\r\n    {\r\n        this.stop();\r\n    }, duration_ms);\r\n};\r\n\r\nSpeakerDACDebugger.prototype.stop = function()\r\n{\r\n    this.is_active = false;\r\n    this.node_source.disconnect(this.node_processor);\r\n    this.node_processor.disconnect();\r\n    this.node_processor = null;\r\n};\r\n\r\nSpeakerDACDebugger.prototype.push_queued_data = function(data)\r\n{\r\n    if(this.is_active)\r\n    {\r\n        this.queued[0].push(data[0].slice());\r\n        this.queued[1].push(data[1].slice());\r\n    }\r\n};\r\n\r\n// Useful for Audacity imports\r\nSpeakerDACDebugger.prototype.download_txt = function(history_id, channel)\r\n{\r\n    var txt = this.output_history[history_id][channel]\r\n        .map((v) => v.join(\" \"))\r\n        .join(\" \");\r\n\r\n    dump_file(txt, \"dacdata.txt\");\r\n};\r\n\r\n// Useful for general plotting\r\nSpeakerDACDebugger.prototype.download_csv = function(history_id)\r\n{\r\n    var buffers = this.output_history[history_id];\r\n    var csv_rows = [];\r\n    for(var buffer_id = 0; buffer_id < buffers[0].length; buffer_id++)\r\n    {\r\n        for(var i = 0; i < buffers[0][buffer_id].length; i++)\r\n        {\r\n            csv_rows.push(`${buffers[0][buffer_id][i]},${buffers[1][buffer_id][i]}`);\r\n        }\r\n    }\r\n    dump_file(csv_rows.join(\"\\n\"), \"dacdata.csv\");\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * @constructor\r\n *\r\n * @param {BusConnector} bus\r\n */\r\nfunction SerialAdapter(element, bus)\r\n{\r\n    var serial = this;\r\n\r\n    this.enabled = true;\r\n    this.bus = bus;\r\n    this.text = \"\";\r\n    this.text_new_line = false;\r\n\r\n    this.last_update = 0;\r\n\r\n\r\n    this.bus.register(\"serial0-output-char\", function(chr)\r\n    {\r\n        this.show_char(chr);\r\n    }, this);\r\n\r\n\r\n    this.destroy = function()\r\n    {\r\n        element.removeEventListener(\"keypress\", keypress_handler, false);\r\n        element.removeEventListener(\"keydown\", keydown_handler, false);\r\n        element.removeEventListener(\"paste\", paste_handler, false);\r\n        window.removeEventListener(\"mousedown\", window_click_handler, false);\r\n    };\r\n\r\n    this.init = function()\r\n    {\r\n        this.destroy();\r\n\r\n        element.addEventListener(\"keypress\", keypress_handler, false);\r\n        element.addEventListener(\"keydown\", keydown_handler, false);\r\n        element.addEventListener(\"paste\", paste_handler, false);\r\n        window.addEventListener(\"mousedown\", window_click_handler, false);\r\n    };\r\n    this.init();\r\n\r\n\r\n    this.show_char = function(chr)\r\n    {\r\n        if(chr === \"\\x08\")\r\n        {\r\n            this.text = this.text.slice(0, -1);\r\n            this.update();\r\n        }\r\n        else if(chr === \"\\r\")\r\n        {\r\n            // do nothing\r\n        }\r\n        else\r\n        {\r\n            this.text += chr;\r\n\r\n            if(chr === \"\\n\")\r\n            {\r\n                this.text_new_line = true;\r\n            }\r\n\r\n            this.update();\r\n        }\r\n    };\r\n\r\n    this.update = function()\r\n    {\r\n        var now = Date.now();\r\n        var delta = now - this.last_update;\r\n\r\n        if(delta < 16)\r\n        {\r\n            if(this.update_timer === undefined)\r\n            {\r\n                this.update_timer = setTimeout(() => {\r\n                    this.update_timer = undefined;\r\n                    var now = Date.now();\r\n                    dbg_assert(now - this.last_update >= 16);\r\n                    this.last_update = now;\r\n                    this.render();\r\n                }, 16 - delta);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.update_timer !== undefined)\r\n            {\r\n                clearTimeout(this.update_timer);\r\n                this.update_timer = undefined;\r\n            }\r\n\r\n            this.last_update = now;\r\n            this.render();\r\n        }\r\n    };\r\n\r\n    this.render = function()\r\n    {\r\n        element.value = this.text;\r\n\r\n        if(this.text_new_line)\r\n        {\r\n            this.text_new_line = false;\r\n            element.scrollTop = 1e9;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} chr_code\r\n     */\r\n    this.send_char = function(chr_code)\r\n    {\r\n        if(serial.bus)\r\n        {\r\n            serial.bus.send(\"serial0-input\", chr_code);\r\n        }\r\n    };\r\n\r\n    function may_handle(e)\r\n    {\r\n        if(!serial.enabled)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        // Something here?\r\n\r\n        return true;\r\n    }\r\n\r\n    function keypress_handler(e)\r\n    {\r\n        if(!serial.bus)\r\n        {\r\n            return;\r\n        }\r\n        if(!may_handle(e))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var chr = e.which;\r\n\r\n        serial.send_char(chr);\r\n        e.preventDefault();\r\n    }\r\n\r\n    function keydown_handler(e)\r\n    {\r\n        var chr = e.which;\r\n\r\n        if(chr === 8)\r\n        {\r\n            // supress backspace\r\n            serial.send_char(127);\r\n            e.preventDefault();\r\n        }\r\n        else if(chr === 9)\r\n        {\r\n            // tab\r\n            serial.send_char(9);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function paste_handler(e)\r\n    {\r\n        if(!may_handle(e))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var data = e.clipboardData.getData(\"text/plain\");\r\n\r\n        for(var i = 0; i < data.length; i++)\r\n        {\r\n            serial.send_char(data.charCodeAt(i));\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    function window_click_handler(e)\r\n    {\r\n        if(e.target !== element)\r\n        {\r\n            element.blur();\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * An ethernet-through-websocket adapter, to be used with\r\n *     https://github.com/benjamincburns/websockproxy\r\n *\r\n * emulated ethernet card <--\u003e this <--\u003e websocket proxy <--\u003e network\r\n *\r\n * @constructor\r\n *\r\n * @param {string} url\r\n * @param {BusConnector} bus\r\n */\r\nfunction NetworkAdapter(url, bus)\r\n{\r\n    this.bus = bus;\r\n    this.socket = undefined;\r\n\r\n    // TODO: circular buffer?\r\n    this.send_queue = [];\r\n    this.url = url;\r\n\r\n    this.reconnect_interval = 10000;\r\n    this.last_connect_attempt = Date.now() - this.reconnect_interval;\r\n    this.send_queue_limit = 64;\r\n\r\n    this.bus.register(\"net0-send\", function(data)\r\n    {\r\n        this.send(data);\r\n    }, this);\r\n}\r\n\r\nNetworkAdapter.prototype.handle_message = function(e)\r\n{\r\n    if(this.bus)\r\n    {\r\n        this.bus.send(\"net0-receive\", new Uint8Array(e.data));\r\n    }\r\n};\r\n\r\nNetworkAdapter.prototype.handle_close = function(e)\r\n{\r\n    //console.log(\"onclose\", e);\r\n\r\n    this.connect();\r\n    setTimeout(this.connect.bind(this), this.reconnect_interval);\r\n};\r\n\r\nNetworkAdapter.prototype.handle_open = function(e)\r\n{\r\n    //console.log(\"open\", e);\r\n\r\n    for(var i = 0; i < this.send_queue.length; i++)\r\n    {\r\n        this.send(this.send_queue[i]);\r\n    }\r\n\r\n    this.send_queue = [];\r\n};\r\n\r\nNetworkAdapter.prototype.handle_error = function(e)\r\n{\r\n    //console.log(\"onerror\", e);\r\n};\r\n\r\nNetworkAdapter.prototype.destroy = function()\r\n{\r\n    if(this.socket)\r\n    {\r\n        this.socket.close();\r\n    }\r\n};\r\n\r\nNetworkAdapter.prototype.connect = function()\r\n{\r\n    if(typeof WebSocket === \"undefined\")\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(this.socket)\r\n    {\r\n        var state = this.socket.readyState;\r\n\r\n        if(state === 0 || state === 1)\r\n        {\r\n            // already or almost there\r\n            return;\r\n        }\r\n    }\r\n\r\n    var now = Date.now();\r\n\r\n    if(this.last_connect_attempt + this.reconnect_interval > now)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.last_connect_attempt = Date.now();\r\n\r\n    this.socket = new WebSocket(this.url);\r\n    this.socket.binaryType = \"arraybuffer\";\r\n\r\n    this.socket.onopen = this.handle_open.bind(this);\r\n    this.socket.onmessage = this.handle_message.bind(this);\r\n    this.socket.onclose = this.handle_close.bind(this);\r\n    this.socket.onerror = this.handle_error.bind(this);\r\n};\r\n\r\nNetworkAdapter.prototype.send = function(data)\r\n{\r\n    //console.log(\"send\", data);\r\n\r\n    if(!this.socket || this.socket.readyState !== 1)\r\n    {\r\n        this.send_queue.push(data);\r\n\r\n        if(this.send_queue.length > 2 * this.send_queue_limit)\r\n        {\r\n            this.send_queue = this.send_queue.slice(-this.send_queue_limit);\r\n        }\r\n\r\n        this.connect();\r\n    }\r\n    else\r\n    {\r\n        this.socket.send(data);\r\n    }\r\n};\r\n\r\nNetworkAdapter.prototype.change_proxy = function(url)\r\n{\r\n    this.url = url;\r\n\r\n    if(this.socket)\r\n    {\r\n        this.socket.onclose = function() {};\r\n        this.socket.onerror = function() {};\r\n        this.socket.close();\r\n        this.socket = undefined;\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\n/** @const */\r\nvar ASYNC_SAFE = false;\r\n\r\n(function()\r\n{\r\n    if(typeof XMLHttpRequest === \"undefined\")\r\n    {\r\n        v86util.load_file = load_file_nodejs;\r\n    }\r\n    else\r\n    {\r\n        v86util.load_file = load_file;\r\n    }\r\n\r\n    v86util.AsyncXHRBuffer = AsyncXHRBuffer;\r\n    v86util.AsyncFileBuffer = AsyncFileBuffer;\r\n    v86util.SyncFileBuffer = SyncFileBuffer;\r\n\r\n    /**\r\n     * @param {string} filename\r\n     * @param {Object} options\r\n     */\r\n    function load_file(filename, options)\r\n    {\r\n        var http = new XMLHttpRequest();\r\n\r\n        http.open(options.method || \"get\", filename, true);\r\n\r\n        if(!options.as_text)\r\n        {\r\n            http.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        if(options.headers)\r\n        {\r\n            var header_names = Object.keys(options.headers);\r\n\r\n            for(var i = 0; i < header_names.length; i++)\r\n            {\r\n                var name = header_names[i];\r\n                http.setRequestHeader(name, options.headers[name]);\r\n            }\r\n        }\r\n\r\n        if(options.range)\r\n        {\r\n            let start = options.range.start;\r\n            let end = start + options.range.length - 1;\r\n            http.setRequestHeader(\"Range\", \"bytes=\" + start + \"-\" + end);\r\n        }\r\n\r\n        http.onload = function(e)\r\n        {\r\n            if(http.readyState === 4)\r\n            {\r\n                if(http.status !== 200 && http.status !== 206)\r\n                {\r\n                    console.error(\"Loading the image `\" + filename + \"` failed (status %d)\", http.status);\r\n                }\r\n                else if(http.response)\r\n                {\r\n                    options.done && options.done(http.response, http);\r\n                }\r\n            }\r\n        };\r\n\r\n        if(options.progress)\r\n        {\r\n            http.onprogress = function(e)\r\n            {\r\n                options.progress(e);\r\n            };\r\n        }\r\n\r\n        http.send(null);\r\n    }\r\n\r\n    function load_file_nodejs(filename, options)\r\n    {\r\n        let fs = require(\"fs\");\r\n\r\n        if(options.range)\r\n        {\r\n            dbg_assert(!options.as_text);\r\n\r\n            fs[\"open\"](filename, \"r\", (err, fd) =>\r\n            {\r\n                if(err) throw err;\r\n\r\n                let length = options.range.length;\r\n                var buffer = new global[\"Buffer\"](length);\r\n\r\n                fs[\"read\"](fd, buffer, 0, length, options.range.start, (err, bytes_read) =>\r\n                {\r\n                    if(err) throw err;\r\n\r\n                    dbg_assert(bytes_read === length);\r\n                    options.done && options.done(new Uint8Array(buffer));\r\n\r\n                    fs[\"close\"](fd, (err) => {\r\n                        if(err) throw err;\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        else\r\n        {\r\n            var o = {\r\n                encoding: options.as_text ? \"utf-8\" : null,\r\n            };\r\n\r\n            fs[\"readFile\"](filename, o, function(err, data)\r\n            {\r\n                if(err)\r\n                {\r\n                    console.log(\"Could not read file:\", filename, err);\r\n                }\r\n                else\r\n                {\r\n                    var result = data;\r\n\r\n                    if(!options.as_text)\r\n                    {\r\n                        result = new Uint8Array(result).buffer;\r\n                    }\r\n\r\n                    options.done(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if(typeof XMLHttpRequest === \"undefined\")\r\n    {\r\n        var determine_size = function(path, cb)\r\n        {\r\n            require(\"fs\")[\"stat\"](path, (err, stats) =>\r\n            {\r\n                if(err)\r\n                {\r\n                    cb(err);\r\n                }\r\n                else\r\n                {\r\n                    cb(null, stats.size);\r\n                }\r\n            });\r\n        };\r\n    }\r\n    else\r\n    {\r\n        var determine_size = function(url, cb)\r\n        {\r\n            v86util.load_file(url, {\r\n                done: (buffer, http) =>\r\n                {\r\n                    var header = http.getResponseHeader(\"Content-Range\") || \"\";\r\n                    var match = header.match(/\\/(\\d+)\\s*$/);\r\n\r\n                    if(match)\r\n                    {\r\n                        cb(null, +match[1]);\r\n                    }\r\n                    else\r\n                    {\r\n                        cb({ header });\r\n                    }\r\n                },\r\n                headers: {\r\n                    Range: \"bytes=0-0\",\r\n\r\n                    //\"Accept-Encoding\": \"\",\r\n\r\n                    // Added by Chromium, but can cause the whole file to be sent\r\n                    // Settings this to empty also causes problems and Chromium\r\n                    // doesn't seem to create this header any more\r\n                    //\"If-Range\": \"\",\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Asynchronous access to ArrayBuffer, loading blocks lazily as needed,\r\n     * using the `Range: bytes=...` header\r\n     *\r\n     * @constructor\r\n     * @param {string} filename Name of the file to download\r\n     * @param {number|undefined} size\r\n     */\r\n    function AsyncXHRBuffer(filename, size)\r\n    {\r\n        this.filename = filename;\r\n\r\n        /** @const */\r\n        this.block_size = 256;\r\n        this.byteLength = size;\r\n\r\n        this.loaded_blocks = {};\r\n\r\n        this.onload = undefined;\r\n        this.onprogress = undefined;\r\n    }\r\n\r\n    AsyncXHRBuffer.prototype.load = function()\r\n    {\r\n        if(this.byteLength !== undefined)\r\n        {\r\n            this.onload && this.onload({});\r\n            return;\r\n        }\r\n\r\n        // Determine the size using a request\r\n\r\n        determine_size(this.filename, (error, size) =>\r\n        {\r\n            if(error)\r\n            {\r\n                console.assert(false,\r\n                    \"Cannot use: \" + this.filename + \". \" +\r\n                    \"`Range: bytes=...` header not supported (Got `\" + error.header + \"`)\");\r\n            }\r\n            else\r\n            {\r\n                dbg_assert(size >= 0);\r\n                this.byteLength = size;\r\n                this.onload && this.onload({});\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {number} offset\r\n     * @param {number} len\r\n     * @param {function(!Uint8Array)} fn\r\n     */\r\n    AsyncXHRBuffer.prototype.get_from_cache = function(offset, len, fn)\r\n    {\r\n        var number_of_blocks = len / this.block_size;\r\n        var block_index = offset / this.block_size;\r\n\r\n        for(var i = 0; i < number_of_blocks; i++)\r\n        {\r\n            var block = this.loaded_blocks[block_index + i];\r\n\r\n            if(!block)\r\n            {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(number_of_blocks === 1)\r\n        {\r\n            return this.loaded_blocks[block_index];\r\n        }\r\n        else\r\n        {\r\n            var result = new Uint8Array(len);\r\n            for(var i = 0; i < number_of_blocks; i++)\r\n            {\r\n                result.set(this.loaded_blocks[block_index + i], i * this.block_size);\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {number} offset\r\n     * @param {number} len\r\n     * @param {function(!Uint8Array)} fn\r\n     */\r\n    AsyncXHRBuffer.prototype.get = function(offset, len, fn)\r\n    {\r\n        console.assert(offset + len <= this.byteLength);\r\n        console.assert(offset % this.block_size === 0);\r\n        console.assert(len % this.block_size === 0);\r\n        console.assert(len);\r\n\r\n        var block = this.get_from_cache(offset, len, fn);\r\n        if(block)\r\n        {\r\n            if(ASYNC_SAFE)\r\n            {\r\n                setTimeout(fn.bind(this, block), 0);\r\n            }\r\n            else\r\n            {\r\n                fn(block);\r\n            }\r\n            return;\r\n        }\r\n\r\n        v86util.load_file(this.filename, {\r\n            done: function done(buffer)\r\n            {\r\n                var block = new Uint8Array(buffer);\r\n                this.handle_read(offset, len, block);\r\n                fn(block);\r\n            }.bind(this),\r\n            range: { start: offset, length: len },\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Relies on this.byteLength, this.loaded_blocks and this.block_size\r\n     *\r\n     * @this {AsyncFileBuffer|AsyncXHRBuffer}\r\n     *\r\n     * @param {number} start\r\n     * @param {!Uint8Array} data\r\n     * @param {function()} fn\r\n     */\r\n    AsyncXHRBuffer.prototype.set = function(start, data, fn)\r\n    {\r\n        console.assert(start + data.byteLength <= this.byteLength);\r\n\r\n        var len = data.length;\r\n\r\n        console.assert(start % this.block_size === 0);\r\n        console.assert(len % this.block_size === 0);\r\n        console.assert(len);\r\n\r\n        var start_block = start / this.block_size;\r\n        var block_count = len / this.block_size;\r\n\r\n        for(var i = 0; i < block_count; i++)\r\n        {\r\n            var block = this.loaded_blocks[start_block + i];\r\n\r\n            if(block === undefined)\r\n            {\r\n                block = this.loaded_blocks[start_block + i] = new Uint8Array(this.block_size);\r\n            }\r\n\r\n            var data_slice = data.subarray(i * this.block_size, (i + 1) * this.block_size);\r\n            block.set(data_slice);\r\n\r\n            console.assert(block.byteLength === data_slice.length);\r\n        }\r\n\r\n        fn();\r\n    };\r\n\r\n    /**\r\n     * @this {AsyncFileBuffer|AsyncXHRBuffer}\r\n     * @param {number} offset\r\n     * @param {number} len\r\n     * @param {!Uint8Array} block\r\n     */\r\n    AsyncXHRBuffer.prototype.handle_read = function(offset, len, block)\r\n    {\r\n        // Used by AsyncXHRBuffer and AsyncFileBuffer\r\n        // Overwrites blocks from the original source that have been written since\r\n\r\n        var start_block = offset / this.block_size;\r\n        var block_count = len / this.block_size;\r\n\r\n        for(var i = 0; i < block_count; i++)\r\n        {\r\n            var written_block = this.loaded_blocks[start_block + i];\r\n\r\n            if(written_block)\r\n            {\r\n                block.set(written_block, i * this.block_size);\r\n            }\r\n            //else\r\n            //{\r\n            //    var cached = this.loaded_blocks[start_block + i] = new Uint8Array(this.block_size);\r\n            //    cached.set(block.subarray(i * this.block_size, (i + 1) * this.block_size));\r\n            //}\r\n        }\r\n    };\r\n\r\n    AsyncXHRBuffer.prototype.get_buffer = function(fn)\r\n    {\r\n        // We must download all parts, unlikely a good idea for big files\r\n        fn();\r\n    };\r\n\r\n    AsyncXHRBuffer.prototype.get_written_blocks = function()\r\n    {\r\n        var count = 0;\r\n        for(var _ in this.loaded_blocks)\r\n        {\r\n            count++;\r\n        }\r\n\r\n        var buffer = new Uint8Array(count * this.block_size);\r\n        var indices = [];\r\n\r\n        var i = 0;\r\n        for(var index in this.loaded_blocks)\r\n        {\r\n            var block = this.loaded_blocks[index];\r\n            dbg_assert(block.length === this.block_size);\r\n            index = +index;\r\n            indices.push(index);\r\n            buffer.set(\r\n                block,\r\n                i * this.block_size\r\n            );\r\n            i++;\r\n        }\r\n\r\n        return {\r\n            buffer,\r\n            indices,\r\n            block_size: this.block_size,\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Synchronous access to File, loading blocks from the input type=file\r\n     * The whole file is loaded into memory during initialisation\r\n     *\r\n     * @constructor\r\n     */\r\n    function SyncFileBuffer(file)\r\n    {\r\n        this.file = file;\r\n        this.byteLength = file.size;\r\n\r\n        if(file.size > (1 << 30))\r\n        {\r\n            console.warn(\"SyncFileBuffer: Allocating buffer of \" + (file.size >> 20) + \" MB ...\");\r\n        }\r\n\r\n        this.buffer = new ArrayBuffer(file.size);\r\n        this.onload = undefined;\r\n        this.onprogress = undefined;\r\n    }\r\n\r\n    SyncFileBuffer.prototype.load = function()\r\n    {\r\n        this.load_next(0);\r\n    };\r\n\r\n    /**\r\n     * @param {number} start\r\n     */\r\n    SyncFileBuffer.prototype.load_next = function(start)\r\n    {\r\n        /** @const */\r\n        var PART_SIZE = 4 << 20;\r\n\r\n        var filereader = new FileReader();\r\n\r\n        filereader.onload = function(e)\r\n        {\r\n            var buffer = new Uint8Array(e.target.result);\r\n            new Uint8Array(this.buffer, start).set(buffer);\r\n            this.load_next(start + PART_SIZE);\r\n        }.bind(this);\r\n\r\n        if(this.onprogress)\r\n        {\r\n            this.onprogress({\r\n                loaded: start,\r\n                total: this.byteLength,\r\n                lengthComputable: true,\r\n            });\r\n        }\r\n\r\n        if(start < this.byteLength)\r\n        {\r\n            var end = Math.min(start + PART_SIZE, this.byteLength);\r\n            var slice = this.file.slice(start, end);\r\n            filereader.readAsArrayBuffer(slice);\r\n        }\r\n        else\r\n        {\r\n            this.file = undefined;\r\n            this.onload && this.onload({ buffer: this.buffer });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {number} start\r\n     * @param {number} len\r\n     * @param {function(!Uint8Array)} fn\r\n     */\r\n    SyncFileBuffer.prototype.get = function(start, len, fn)\r\n    {\r\n        console.assert(start + len <= this.byteLength);\r\n        fn(new Uint8Array(this.buffer, start, len));\r\n    };\r\n\r\n    /**\r\n     * @param {number} offset\r\n     * @param {!Uint8Array} slice\r\n     * @param {function()} fn\r\n     */\r\n    SyncFileBuffer.prototype.set = function(offset, slice, fn)\r\n    {\r\n        console.assert(offset + slice.byteLength <= this.byteLength);\r\n\r\n        new Uint8Array(this.buffer, offset, slice.byteLength).set(slice);\r\n        fn();\r\n    };\r\n\r\n    SyncFileBuffer.prototype.get_buffer = function(fn)\r\n    {\r\n        fn(this.buffer);\r\n    };\r\n\r\n    /**\r\n     * Asynchronous access to File, loading blocks from the input type=file\r\n     *\r\n     * @constructor\r\n     */\r\n    function AsyncFileBuffer(file)\r\n    {\r\n        this.file = file;\r\n        this.byteLength = file.size;\r\n\r\n        /** @const */\r\n        this.block_size = 256;\r\n        this.loaded_blocks = {};\r\n\r\n        this.onload = undefined;\r\n        this.onprogress = undefined;\r\n    }\r\n\r\n    AsyncFileBuffer.prototype.load = function()\r\n    {\r\n        this.onload && this.onload({});\r\n    };\r\n\r\n    /**\r\n     * @param {number} offset\r\n     * @param {number} len\r\n     * @param {function(!Uint8Array)} fn\r\n     */\r\n    AsyncFileBuffer.prototype.get = function(offset, len, fn)\r\n    {\r\n        console.assert(offset % this.block_size === 0);\r\n        console.assert(len % this.block_size === 0);\r\n        console.assert(len);\r\n\r\n        var block = this.get_from_cache(offset, len, fn);\r\n        if(block)\r\n        {\r\n            fn(block);\r\n            return;\r\n        }\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function(e)\r\n        {\r\n            var buffer = e.target.result;\r\n            var block = new Uint8Array(buffer);\r\n\r\n            this.handle_read(offset, len, block);\r\n            fn(block);\r\n        }.bind(this);\r\n\r\n        fr.readAsArrayBuffer(this.file.slice(offset, offset + len));\r\n    };\r\n    AsyncFileBuffer.prototype.get_from_cache = AsyncXHRBuffer.prototype.get_from_cache;\r\n    AsyncFileBuffer.prototype.set = AsyncXHRBuffer.prototype.set;\r\n    AsyncFileBuffer.prototype.handle_read = AsyncXHRBuffer.prototype.handle_read;\r\n\r\n    AsyncFileBuffer.prototype.get_buffer = function(fn)\r\n    {\r\n        // We must load all parts, unlikely a good idea for big files\r\n        fn();\r\n    };\r\n\r\n    AsyncFileBuffer.prototype.get_as_file = function(name)\r\n    {\r\n        var parts = [];\r\n        var existing_blocks = Object.keys(this.loaded_blocks)\r\n                                .map(Number)\r\n                                .sort(function(x, y) { return x - y; });\r\n\r\n        var current_offset = 0;\r\n\r\n        for(var i = 0; i < existing_blocks.length; i++)\r\n        {\r\n            var block_index = existing_blocks[i];\r\n            var block = this.loaded_blocks[block_index];\r\n            var start = block_index * this.block_size;\r\n            console.assert(start >= current_offset);\r\n\r\n            if(start !== current_offset)\r\n            {\r\n                parts.push(this.file.slice(current_offset, start));\r\n                current_offset = start;\r\n            }\r\n\r\n            parts.push(block);\r\n            current_offset += block.length;\r\n        }\r\n\r\n        if(current_offset !== this.file.size)\r\n        {\r\n            parts.push(this.file.slice(current_offset));\r\n        }\r\n\r\n        var file = new File(parts, name);\r\n        console.assert(file.size === this.file.size);\r\n\r\n        return file;\r\n    };\r\n\r\n})();\r\n","\"use strict\";\r\n\r\n/**\r\n * Constructor for emulator instances.\r\n *\r\n * Usage: `var emulator = new V86Starter(options);`\r\n *\r\n * Options can have the following properties (all optional, default in parenthesis):\r\n *\r\n * - `memory_size number` (16 * 1024 * 1024) - The memory size in bytes, should\r\n *   be a power of 2.\r\n * - `vga_memory_size number` (8 * 1024 * 1024) - VGA memory size in bytes.\r\n *\r\n * - `autostart boolean` (false) - If emulation should be started when emulator\r\n *   is ready.\r\n *\r\n * - `disable_keyboard boolean` (false) - If the keyboard should be disabled.\r\n * - `disable_mouse boolean` (false) - If the mouse should be disabled.\r\n *\r\n * - `network_relay_url string` (No network card) - The url of a server running\r\n *   websockproxy. See [networking.md](networking.md). Setting this will\r\n *   enable an emulated network card.\r\n *\r\n * - `bios Object` (No bios) - Either a url pointing to a bios or an\r\n *   ArrayBuffer, see below.\r\n * - `vga_bios Object` (No VGA bios) - VGA bios, see below.\r\n * - `hda Object` (No hard drive) - First hard disk, see below.\r\n * - `fda Object` (No floppy disk) - First floppy disk, see below.\r\n * - `cdrom Object` (No CD) - See below.\r\n * - `initial_state Object` (Normal boot) - An initial state to load, see\r\n *   [`restore_state`](#restore_statearraybuffer-state) and below.\r\n *\r\n * - `filesystem Object` (No 9p filesystem) - A 9p filesystem, see\r\n *   [filesystem.md](filesystem.md).\r\n *\r\n * - `serial_container HTMLTextAreaElement` (No serial terminal) - A textarea\r\n *   that will receive and send data to the emulated serial terminal.\r\n *   Alternatively the serial terminal can also be accessed programatically,\r\n *   see [serial.html](../examples/serial.html).\r\n *\r\n * - `screen_container HTMLElement` (No screen) - An HTMLElement. This should\r\n *   have a certain structure, see [basic.html](../examples/basic.html).\r\n *\r\n * ***\r\n *\r\n * There are two ways to load images (`bios`, `vga_bios`, `cdrom`, `hda`, ...):\r\n *\r\n * - Pass an object that has a url. Optionally, `async: true` and `size:\r\n *   size_in_bytes` can be added to the object, so that sectors of the image\r\n *   are loaded on demand instead of being loaded before boot (slower, but\r\n *   strongly recommended for big files). In that case, the `Range: bytes=...`\r\n *   header must be supported on the server.\r\n *\r\n *   ```javascript\r\n *   // download file before boot\r\n *   bios: {\r\n *       url: \"bios/seabios.bin\"\r\n *   }\r\n *   // download file sectors as requested, size is required\r\n *   hda: {\r\n *       url: \"disk/linux.iso\",\r\n *       async: true,\r\n *       size: 16 * 1024 * 1024\r\n *   }\r\n *   ```\r\n *\r\n * - Pass an `ArrayBuffer` or `File` object as `buffer` property.\r\n *\r\n *   ```javascript\r\n *   // use <input type=file>\r\n *   bios: {\r\n *       buffer: document.all.hd_image.files[0]\r\n *   }\r\n *   // start with empty hard drive\r\n *   hda: {\r\n *       buffer: new ArrayBuffer(16 * 1024 * 1024)\r\n *   }\r\n *   ```\r\n *\r\n * ***\r\n *\r\n * @param {Object} options Options to initialize the emulator with.\r\n * @constructor\r\n */\r\nfunction V86Starter(options)\r\n{\r\n    //var worker = new Worker(\"src/browser/worker.js\");\r\n    //var adapter_bus = this.bus = WorkerBus.init(worker);\r\n\r\n    this.cpu_is_running = false;\r\n\r\n    var bus = Bus.create();\r\n    var adapter_bus = this.bus = bus[0];\r\n    this.emulator_bus = bus[1];\r\n    var emulator = this.v86 = new v86(this.emulator_bus);\r\n\r\n    this.bus.register(\"emulator-stopped\", function()\r\n    {\r\n        this.cpu_is_running = false;\r\n    }, this);\r\n\r\n    this.bus.register(\"emulator-started\", function()\r\n    {\r\n        this.cpu_is_running = true;\r\n    }, this);\r\n\r\n    var settings = {};\r\n\r\n    this.disk_images = {\r\n        \"fda\": undefined,\r\n        \"fdb\": undefined,\r\n        \"hda\": undefined,\r\n        \"hdb\": undefined,\r\n        \"cdrom\": undefined,\r\n    };\r\n\r\n    settings.load_devices = true;\r\n    settings.memory_size = options[\"memory_size\"] || 64 * 1024 * 1024;\r\n    settings.vga_memory_size = options[\"vga_memory_size\"] || 8 * 1024 * 1024;\r\n    settings.boot_order = options[\"boot_order\"] || 0x213;\r\n    settings.fastboot = options[\"fastboot\"] || false;\r\n    settings.fda = undefined;\r\n    settings.fdb = undefined;\r\n    settings.uart1 = options[\"uart1\"] || false;\r\n    settings.uart2 = options[\"uart2\"] || false;\r\n    settings.uart3 = options[\"uart3\"] || false;\r\n\r\n    if(options[\"network_relay_url\"])\r\n    {\r\n        this.network_adapter = new NetworkAdapter(options[\"network_relay_url\"], adapter_bus);\r\n        settings.enable_ne2k = true;\r\n    }\r\n\r\n    if(!options[\"disable_keyboard\"])\r\n    {\r\n        this.keyboard_adapter = new KeyboardAdapter(adapter_bus);\r\n    }\r\n    if(!options[\"disable_mouse\"])\r\n    {\r\n        this.mouse_adapter = new MouseAdapter(adapter_bus, options[\"screen_container\"]);\r\n    }\r\n\r\n    if(options[\"screen_container\"])\r\n    {\r\n        this.screen_adapter = new ScreenAdapter(options[\"screen_container\"], adapter_bus);\r\n    }\r\n    else if(options[\"screen_dummy\"])\r\n    {\r\n        this.screen_adapter = new DummyScreenAdapter(adapter_bus);\r\n    }\r\n\r\n    if(options[\"serial_container\"])\r\n    {\r\n        this.serial_adapter = new SerialAdapter(options[\"serial_container\"], adapter_bus);\r\n    }\r\n\r\n    if(!options[\"disable_speaker\"])\r\n    {\r\n        this.speaker_adapter = new SpeakerAdapter(adapter_bus);\r\n    }\r\n\r\n    // ugly, but required for closure compiler compilation\r\n    function put_on_settings(name, buffer)\r\n    {\r\n        switch(name)\r\n        {\r\n            case \"hda\":\r\n                settings.hda = this.disk_images[\"hda\"] = buffer;\r\n                break;\r\n            case \"hdb\":\r\n                settings.hdb = this.disk_images[\"hdb\"] = buffer;\r\n                break;\r\n            case \"cdrom\":\r\n                settings.cdrom = this.disk_images[\"cdrom\"] = buffer;\r\n                break;\r\n            case \"fda\":\r\n                settings.fda = this.disk_images[\"fda\"] = buffer;\r\n                break;\r\n            case \"fdb\":\r\n                settings.fdb = this.disk_images[\"fdb\"] = buffer;\r\n                break;\r\n\r\n            case \"multiboot\":\r\n                settings.multiboot = this.disk_images[\"multiboot\"] = buffer;\r\n                break;\r\n\r\n            case \"bios\":\r\n                settings.bios = buffer.buffer;\r\n                break;\r\n            case \"vga_bios\":\r\n                settings.vga_bios = buffer.buffer;\r\n                break;\r\n            case \"initial_state\":\r\n                settings.initial_state = buffer.buffer;\r\n                break;\r\n            case \"fs9p_json\":\r\n                settings.fs9p_json = buffer.buffer;\r\n                break;\r\n            default:\r\n                dbg_assert(false, name);\r\n        }\r\n    }\r\n\r\n    var files_to_load = [];\r\n\r\n    function add_file(name, file)\r\n    {\r\n        if(!file)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(file[\"get\"] && file[\"set\"] && file[\"load\"])\r\n        {\r\n            files_to_load.push({\r\n                name: name,\r\n                loadable: file,\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Anything coming from the outside world needs to be quoted for\r\n        // Closure Compiler compilation\r\n        file = {\r\n            buffer: file[\"buffer\"],\r\n            async: file[\"async\"],\r\n            url: file[\"url\"],\r\n            size: file[\"size\"],\r\n        };\r\n\r\n        if(name === \"bios\" || name === \"vga_bios\" ||\r\n            name === \"initial_state\" || name === \"multiboot\")\r\n        {\r\n            // Ignore async for these because they must be available before boot.\r\n            // This should make result.buffer available after the object is loaded\r\n            file.async = false;\r\n        }\r\n\r\n        if(file.buffer instanceof ArrayBuffer)\r\n        {\r\n            var buffer = new SyncBuffer(file.buffer);\r\n            files_to_load.push({\r\n                name: name,\r\n                loadable: buffer,\r\n            });\r\n        }\r\n        else if(typeof File !== \"undefined\" && file.buffer instanceof File)\r\n        {\r\n            // SyncFileBuffer:\r\n            // - loads the whole disk image into memory, impossible for large files (more than 1GB)\r\n            // - can later serve get/set operations fast and synchronously\r\n            // - takes some time for first load, neglectable for small files (up to 100Mb)\r\n            //\r\n            // AsyncFileBuffer:\r\n            // - loads slices of the file asynchronously as requested\r\n            // - slower get/set\r\n\r\n            // Heuristics: If file is larger than or equal to 256M, use AsyncFileBuffer\r\n            if(file.async === undefined)\r\n            {\r\n                file.async = file.buffer.size >= 256 * 1024 * 1024;\r\n            }\r\n\r\n            if(file.async)\r\n            {\r\n                var buffer = new v86util.AsyncFileBuffer(file.buffer);\r\n            }\r\n            else\r\n            {\r\n                var buffer = new v86util.SyncFileBuffer(file.buffer);\r\n            }\r\n\r\n            files_to_load.push({\r\n                name: name,\r\n                loadable: buffer,\r\n            });\r\n        }\r\n        else if(file.url)\r\n        {\r\n            if(file.async)\r\n            {\r\n                var buffer = new v86util.AsyncXHRBuffer(file.url, file.size);\r\n                files_to_load.push({\r\n                    name: name,\r\n                    loadable: buffer,\r\n                });\r\n            }\r\n            else\r\n            {\r\n                files_to_load.push({\r\n                    name: name,\r\n                    url: file.url,\r\n                    size: file.size,\r\n                });\r\n            }\r\n        }\r\n        else\r\n        {\r\n            dbg_log(\"Ignored file: url=\" + file.url + \" buffer=\" + file.buffer);\r\n        }\r\n    }\r\n\r\n    var image_names = [\r\n        \"bios\", \"vga_bios\",\r\n        \"cdrom\", \"hda\", \"hdb\", \"fda\", \"fdb\",\r\n        \"initial_state\", \"multiboot\",\r\n    ];\r\n\r\n    for(var i = 0; i < image_names.length; i++)\r\n    {\r\n        add_file(image_names[i], options[image_names[i]]);\r\n    }\r\n\r\n    if(options[\"filesystem\"])\r\n    {\r\n        var fs_url = options[\"filesystem\"][\"basefs\"];\r\n        var base_url = options[\"filesystem\"][\"baseurl\"];\r\n\r\n        this.fs9p = new FS(base_url);\r\n        settings.fs9p = this.fs9p;\r\n\r\n        if(fs_url)\r\n        {\r\n            console.assert(base_url, \"Filesystem: baseurl must be specified\");\r\n\r\n            var size;\r\n\r\n            if(typeof fs_url === \"object\")\r\n            {\r\n                size = fs_url[\"size\"];\r\n                fs_url = fs_url[\"url\"];\r\n            }\r\n            dbg_assert(typeof fs_url === \"string\");\r\n\r\n            files_to_load.push({\r\n                name: \"fs9p_json\",\r\n                url: fs_url,\r\n                size: size,\r\n                as_text: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    var starter = this;\r\n    var total = files_to_load.length;\r\n\r\n    var cont = function(index)\r\n    {\r\n        if(index === total)\r\n        {\r\n            setTimeout(done.bind(this), 0);\r\n            return;\r\n        }\r\n\r\n        var f = files_to_load[index];\r\n\r\n        if(f.loadable)\r\n        {\r\n            f.loadable.onload = function(e)\r\n            {\r\n                put_on_settings.call(this, f.name, f.loadable);\r\n                cont(index + 1);\r\n            }.bind(this);\r\n            f.loadable.load();\r\n        }\r\n        else\r\n        {\r\n            v86util.load_file(f.url, {\r\n                done: function(result)\r\n                {\r\n                    put_on_settings.call(this, f.name, new SyncBuffer(result));\r\n                    cont(index + 1);\r\n                }.bind(this),\r\n                progress: function progress(e)\r\n                {\r\n                    if(e.target.status === 200)\r\n                    {\r\n                        starter.emulator_bus.send(\"download-progress\", {\r\n                            file_index: index,\r\n                            file_count: total,\r\n                            file_name: f.url,\r\n\r\n                            lengthComputable: e.lengthComputable,\r\n                            total: e.total || f.size,\r\n                            loaded: e.loaded,\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        starter.emulator_bus.send(\"download-error\", {\r\n                            file_index: index,\r\n                            file_count: total,\r\n                            file_name: f.url,\r\n                            request: e.target,\r\n                        });\r\n                    }\r\n                },\r\n                as_text: f.as_text,\r\n            });\r\n        }\r\n    }.bind(this);\r\n    cont(0);\r\n\r\n    function done()\r\n    {\r\n        if(settings.initial_state)\r\n        {\r\n            // avoid large allocation now, memory will be restored later anyway\r\n            settings.memory_size = 0;\r\n        }\r\n\r\n        this.bus.send(\"cpu-init\", settings);\r\n\r\n        setTimeout(function()\r\n        {\r\n            if(settings.initial_state)\r\n            {\r\n                emulator.restore_state(settings.initial_state);\r\n            }\r\n\r\n            setTimeout(function()\r\n            {\r\n                if(settings.fs9p && settings.fs9p_json)\r\n                {\r\n                    settings.fs9p.OnJSONLoaded(settings.fs9p_json);\r\n                }\r\n\r\n                if(options[\"autostart\"])\r\n                {\r\n                    this.bus.send(\"cpu-run\");\r\n                }\r\n            }.bind(this), 0);\r\n        }.bind(this), 0);\r\n    }\r\n}\r\n\r\n/**\r\n * Start emulation. Do nothing if emulator is running already. Can be\r\n * asynchronous.\r\n * @export\r\n */\r\nV86Starter.prototype.run = function()\r\n{\r\n    this.bus.send(\"cpu-run\");\r\n};\r\n\r\n/**\r\n * Stop emulation. Do nothing if emulator is not running. Can be asynchronous.\r\n * @export\r\n */\r\nV86Starter.prototype.stop = function()\r\n{\r\n    this.bus.send(\"cpu-stop\");\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.destroy = function()\r\n{\r\n    this.stop();\r\n\r\n    this.v86.destroy();\r\n    this.keyboard_adapter && this.keyboard_adapter.destroy();\r\n    this.network_adapter && this.network_adapter.destroy();\r\n    this.mouse_adapter && this.mouse_adapter.destroy();\r\n    this.screen_adapter && this.screen_adapter.destroy();\r\n    this.serial_adapter && this.serial_adapter.destroy();\r\n};\r\n\r\n/**\r\n * Restart (force a reboot).\r\n * @export\r\n */\r\nV86Starter.prototype.restart = function()\r\n{\r\n    this.bus.send(\"cpu-restart\");\r\n};\r\n\r\n/**\r\n * Add an event listener (the emulator is an event emitter). A list of events\r\n * can be found at [events.md](events.md).\r\n *\r\n * The callback function gets a single argument which depends on the event.\r\n *\r\n * @param {string} event Name of the event.\r\n * @param {function(*)} listener The callback function.\r\n * @export\r\n */\r\nV86Starter.prototype.add_listener = function(event, listener)\r\n{\r\n    this.bus.register(event, listener, this);\r\n};\r\n\r\n/**\r\n * Remove an event listener.\r\n *\r\n * @param {string} event\r\n * @param {function(*)} listener\r\n * @export\r\n */\r\nV86Starter.prototype.remove_listener = function(event, listener)\r\n{\r\n    this.bus.unregister(event, listener);\r\n};\r\n\r\n/**\r\n * Restore the emulator state from the given state, which must be an\r\n * ArrayBuffer returned by\r\n * [`save_state`](#save_statefunctionobject-arraybuffer-callback).\r\n *\r\n * Note that the state can only be restored correctly if this constructor has\r\n * been created with the same options as the original instance (e.g., same disk\r\n * images, memory size, etc.).\r\n *\r\n * Different versions of the emulator might use a different format for the\r\n * state buffer.\r\n *\r\n * @param {ArrayBuffer} state\r\n * @export\r\n */\r\nV86Starter.prototype.restore_state = function(state)\r\n{\r\n    this.v86.restore_state(state);\r\n};\r\n\r\n/**\r\n * Asynchronously save the current state of the emulator. The first argument to\r\n * the callback is an Error object if something went wrong and is null\r\n * otherwise.\r\n *\r\n * @param {function(Object, ArrayBuffer)} callback\r\n * @export\r\n */\r\nV86Starter.prototype.save_state = function(callback)\r\n{\r\n    // Might become asynchronous at some point\r\n\r\n    setTimeout(function()\r\n    {\r\n        try\r\n        {\r\n            callback(null, this.v86.save_state());\r\n        }\r\n        catch(e)\r\n        {\r\n            callback(e, null);\r\n        }\r\n    }.bind(this), 0);\r\n};\r\n\r\n/**\r\n * Return an object with several statistics. Return value looks similar to\r\n * (but can be subject to change in future versions or different\r\n * configurations, so use defensively):\r\n *\r\n * ```javascript\r\n * {\r\n *     \"cpu\": {\r\n *         \"instruction_counter\": 2821610069\r\n *     },\r\n *     \"hda\": {\r\n *         \"sectors_read\": 95240,\r\n *         \"sectors_written\": 952,\r\n *         \"bytes_read\": 48762880,\r\n *         \"bytes_written\": 487424,\r\n *         \"loading\": false\r\n *     },\r\n *     \"cdrom\": {\r\n *         \"sectors_read\": 0,\r\n *         \"sectors_written\": 0,\r\n *         \"bytes_read\": 0,\r\n *         \"bytes_written\": 0,\r\n *         \"loading\": false\r\n *     },\r\n *     \"mouse\": {\r\n *         \"enabled\": true\r\n *     },\r\n *     \"vga\": {\r\n *         \"is_graphical\": true,\r\n *         \"res_x\": 800,\r\n *         \"res_y\": 600,\r\n *         \"bpp\": 32\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * @deprecated\r\n * @return {Object}\r\n * @export\r\n */\r\nV86Starter.prototype.get_statistics = function()\r\n{\r\n    console.warn(\"V86Starter.prototype.get_statistics is deprecated. Use events instead.\");\r\n\r\n    var stats = {\r\n        cpu: {\r\n            instruction_counter: this.get_instruction_counter(),\r\n        },\r\n    };\r\n\r\n    if(!this.v86)\r\n    {\r\n        return stats;\r\n    }\r\n\r\n    var devices = this.v86.cpu.devices;\r\n\r\n    if(devices.hda)\r\n    {\r\n        stats.hda = devices.hda.stats;\r\n    }\r\n\r\n    if(devices.cdrom)\r\n    {\r\n        stats.cdrom = devices.cdrom.stats;\r\n    }\r\n\r\n    if(devices.ps2)\r\n    {\r\n        stats[\"mouse\"] = {\r\n            \"enabled\": devices.ps2.use_mouse,\r\n        };\r\n    }\r\n\r\n    if(devices.vga)\r\n    {\r\n        stats[\"vga\"] = {\r\n            \"is_graphical\": devices.vga.stats.is_graphical,\r\n        };\r\n    }\r\n\r\n    return stats;\r\n};\r\n\r\n/**\r\n * @return {number}\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.get_instruction_counter = function()\r\n{\r\n    if(this.v86)\r\n    {\r\n        return this.v86.cpu.timestamp_counter;\r\n    }\r\n    else\r\n    {\r\n        // TODO: Should be handled using events\r\n        return 0;\r\n    }\r\n};\r\n\r\n/**\r\n * @return {boolean}\r\n * @export\r\n */\r\nV86Starter.prototype.is_running = function()\r\n{\r\n    return this.cpu_is_running;\r\n};\r\n\r\n/**\r\n * Send a sequence of scan codes to the emulated PS2 controller. A list of\r\n * codes can be found at http://stanislavs.org/helppc/make_codes.html.\r\n * Do nothing if there is no keyboard controller.\r\n *\r\n * @param {Array.<number>} codes\r\n * @export\r\n */\r\nV86Starter.prototype.keyboard_send_scancodes = function(codes)\r\n{\r\n    for(var i = 0; i < codes.length; i++)\r\n    {\r\n        this.bus.send(\"keyboard-code\", codes[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Send translated keys\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.keyboard_send_keys = function(codes)\r\n{\r\n    for(var i = 0; i < codes.length; i++)\r\n    {\r\n        this.keyboard_adapter.simulate_press(codes[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Send text\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.keyboard_send_text = function(string)\r\n{\r\n    for(var i = 0; i < string.length; i++)\r\n    {\r\n        this.keyboard_adapter.simulate_char(string[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Download a screenshot.\r\n *\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.screen_make_screenshot = function()\r\n{\r\n    if(this.screen_adapter)\r\n    {\r\n        this.screen_adapter.make_screenshot();\r\n    }\r\n};\r\n\r\n/**\r\n * Set the scaling level of the emulated screen.\r\n *\r\n * @param {number} sx\r\n * @param {number} sy\r\n *\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.screen_set_scale = function(sx, sy)\r\n{\r\n    if(this.screen_adapter)\r\n    {\r\n        this.screen_adapter.set_scale(sx, sy);\r\n    }\r\n};\r\n\r\n/**\r\n * Go fullscreen.\r\n *\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.screen_go_fullscreen = function()\r\n{\r\n    if(!this.screen_adapter)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var elem = document.getElementById(\"screen_container\");\r\n\r\n    if(!elem)\r\n    {\r\n        return;\r\n    }\r\n\r\n    // bracket notation because otherwise they get renamed by closure compiler\r\n    var fn = elem[\"requestFullScreen\"] ||\r\n            elem[\"webkitRequestFullscreen\"] ||\r\n            elem[\"mozRequestFullScreen\"] ||\r\n            elem[\"msRequestFullScreen\"];\r\n\r\n    if(fn)\r\n    {\r\n        fn.call(elem);\r\n\r\n        // This is necessary, because otherwise chromium keyboard doesn't work anymore.\r\n        // Might (but doesn't seem to) break something else\r\n        var focus_element = document.getElementsByClassName(\"phone_keyboard\")[0];\r\n        focus_element && focus_element.focus();\r\n    }\r\n\r\n    //this.lock_mouse(elem);\r\n    this.lock_mouse();\r\n};\r\n\r\n/**\r\n * Lock the mouse cursor: It becomes invisble and is not moved out of the\r\n * browser window.\r\n *\r\n * @ignore\r\n * @export\r\n */\r\nV86Starter.prototype.lock_mouse = function()\r\n{\r\n    var elem = document.body;\r\n\r\n    var fn = elem[\"requestPointerLock\"] ||\r\n                elem[\"mozRequestPointerLock\"] ||\r\n                elem[\"webkitRequestPointerLock\"];\r\n\r\n    if(fn)\r\n    {\r\n        fn.call(elem);\r\n    }\r\n};\r\n\r\n/**\r\n * Enable or disable sending mouse events to the emulated PS2 controller.\r\n *\r\n * @param {boolean} enabled\r\n */\r\nV86Starter.prototype.mouse_set_status = function(enabled)\r\n{\r\n    if(this.mouse_adapter)\r\n    {\r\n        this.mouse_adapter.emu_enabled = enabled;\r\n    }\r\n};\r\n\r\n/**\r\n * Enable or disable sending keyboard events to the emulated PS2 controller.\r\n *\r\n * @param {boolean} enabled\r\n * @export\r\n */\r\nV86Starter.prototype.keyboard_set_status = function(enabled)\r\n{\r\n    if(this.keyboard_adapter)\r\n    {\r\n        this.keyboard_adapter.emu_enabled = enabled;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Send a string to the first emulated serial terminal.\r\n *\r\n * @param {string} data\r\n * @export\r\n */\r\nV86Starter.prototype.serial0_send = function(data)\r\n{\r\n    for(var i = 0; i < data.length; i++)\r\n    {\r\n        this.bus.send(\"serial0-input\", data.charCodeAt(i));\r\n    }\r\n};\r\n\r\n/**\r\n * Send bytes to a serial port (to be received by the emulated PC).\r\n *\r\n * @param {Uint8Array} data\r\n * @export\r\n */\r\nV86Starter.prototype.serial_send_bytes = function(serial, data)\r\n{\r\n    for(var i = 0; i < data.length; i++)\r\n    {\r\n        this.bus.send(\"serial\" + serial + \"-input\", data[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Write to a file in the 9p filesystem. Nothing happens if no filesystem has\r\n * been initialized. First argument to the callback is an error object if\r\n * something went wrong and null otherwise.\r\n *\r\n * @param {string} file\r\n * @param {Uint8Array} data\r\n * @param {function(Object)=} callback\r\n * @export\r\n */\r\nV86Starter.prototype.create_file = function(file, data, callback)\r\n{\r\n    var fs = this.fs9p;\r\n\r\n    if(!fs)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var parts = file.split(\"/\");\r\n    var filename = parts[parts.length - 1];\r\n\r\n    var path_infos = fs.SearchPath(file);\r\n    var parent_id = path_infos.parentid;\r\n    var not_found = filename === \"\" || parent_id === -1;\r\n\r\n    if(!not_found)\r\n    {\r\n        fs.CreateBinaryFile(filename, parent_id, data);\r\n    }\r\n\r\n    if(callback)\r\n    {\r\n        setTimeout(function()\r\n        {\r\n            if(not_found)\r\n            {\r\n                callback(new FileNotFoundError());\r\n            }\r\n            else\r\n            {\r\n                callback(null);\r\n            }\r\n        }, 0);\r\n    }\r\n};\r\n\r\n/**\r\n * Read a file in the 9p filesystem. Nothing happens if no filesystem has been\r\n * initialized.\r\n *\r\n * @param {string} file\r\n * @param {function(Object, Uint8Array)} callback\r\n * @export\r\n */\r\nV86Starter.prototype.read_file = function(file, callback)\r\n{\r\n    var fs = this.fs9p;\r\n\r\n    if(!fs)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var path_infos = fs.SearchPath(file);\r\n    var id = path_infos.id;\r\n\r\n    if(id === -1)\r\n    {\r\n        callback(new FileNotFoundError(), null);\r\n    }\r\n    else\r\n    {\r\n        fs.OpenInode(id, undefined);\r\n        fs.AddEvent(\r\n            id,\r\n            function()\r\n            {\r\n                var data = fs.inodedata[id];\r\n\r\n                if(data)\r\n                {\r\n                    callback(null, data.subarray(0, fs.inodes[id].size));\r\n                }\r\n                else\r\n                {\r\n                    callback(new FileNotFoundError(), null);\r\n                }\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @constructor\r\n *\r\n * @param {string=} message\r\n */\r\nfunction FileNotFoundError(message)\r\n{\r\n    this.message = message || \"File not found\";\r\n}\r\nFileNotFoundError.prototype = Error.prototype;\r\n\r\n// Closure Compiler's way of exporting\r\nif(typeof window !== \"undefined\")\r\n{\r\n    window[\"V86Starter\"] = V86Starter;\r\n    window[\"V86\"] = V86Starter;\r\n}\r\nelse if(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\")\r\n{\r\n    module.exports[\"V86Starter\"] = V86Starter;\r\n    module.exports[\"V86\"] = V86Starter;\r\n}\r\nelse if(typeof importScripts === \"function\")\r\n{\r\n    // web worker\r\n    self[\"V86Starter\"] = V86Starter;\r\n    self[\"V86\"] = V86Starter;\r\n}\r\n","\"use strict\";\r\n\r\nvar WorkerBus = {};\r\n\r\n/** @constructor */\r\nWorkerBus.Connector = function(pair)\r\n{\r\n    this.listeners = {};\r\n    this.pair = pair;\r\n\r\n    pair.addEventListener(\"message\", function(e)\r\n    {\r\n        var data = e.data;\r\n        var listeners = this.listeners[data[0]];\r\n\r\n        for(var i = 0; i < listeners.length; i++)\r\n        {\r\n            var listener = listeners[i];\r\n            listener.fn.call(listener.this_value, data[1]);\r\n        }\r\n    }.bind(this), false);\r\n\r\n};\r\n\r\nWorkerBus.Connector.prototype.register = function(name, fn, this_value)\r\n{\r\n    var listeners = this.listeners[name];\r\n\r\n    if(listeners === undefined)\r\n    {\r\n        listeners = this.listeners[name] = [];\r\n    }\r\n\r\n    listeners.push({\r\n        fn: fn,\r\n        this_value: this_value,\r\n    });\r\n};\r\n\r\n/**\r\n * Send (\"emit\") a message\r\n *\r\n * @param {string} name\r\n * @param {*=} value\r\n * @param {*=} transfer_list\r\n */\r\nWorkerBus.Connector.prototype.send = function(name, value, transfer_list)\r\n{\r\n    dbg_assert(arguments.length >= 1);\r\n\r\n    if(!this.pair)\r\n    {\r\n        return;\r\n    }\r\n\r\n    this.pair.postMessage([name, value], transfer_list);\r\n};\r\n\r\n\r\nWorkerBus.init = function(worker)\r\n{\r\n    return new WorkerBus.Connector(worker);\r\n};\r\n\r\n","\"use strict\";\r\n\r\n/**\r\n * @constructor\r\n *\r\n * @param {BusConnector} bus\r\n */\r\nfunction DummyScreenAdapter(bus)\r\n{\r\n    var\r\n        graphic_image_data,\r\n        graphic_buffer,\r\n        graphic_buffer32,\r\n\r\n        /** @type {number} */\r\n        cursor_row,\r\n\r\n        /** @type {number} */\r\n        cursor_col,\r\n\r\n        graphical_mode_width,\r\n        graphical_mode_height,\r\n\r\n        // are we in graphical mode now?\r\n        is_graphical = false,\r\n\r\n        // Index 0: ASCII code\r\n        // Index 1: Background color\r\n        // Index 2: Foreground color\r\n        text_mode_data,\r\n\r\n        // number of columns\r\n        text_mode_width,\r\n\r\n        // number of rows\r\n        text_mode_height;\r\n\r\n    this.bus = bus;\r\n\r\n    bus.register(\"screen-set-mode\", function(data)\r\n    {\r\n        this.set_mode(data);\r\n    }, this);\r\n\r\n    bus.register(\"screen-fill-buffer-end\", function(data)\r\n    {\r\n        var min = data[0];\r\n        var max = data[1];\r\n\r\n        this.update_buffer(min, max);\r\n    }, this);\r\n\r\n    bus.register(\"screen-put-char\", function(data)\r\n    {\r\n        //console.log(data);\r\n        this.put_char(data[0], data[1], data[2], data[3], data[4]);\r\n    }, this);\r\n\r\n    bus.register(\"screen-text-scroll\", function(rows)\r\n    {\r\n        console.log(\"scroll\", rows);\r\n    }, this);\r\n\r\n    bus.register(\"screen-update-cursor\", function(data)\r\n    {\r\n        this.update_cursor(data[0], data[1]);\r\n    }, this);\r\n    bus.register(\"screen-update-cursor-scanline\", function(data)\r\n    {\r\n        this.update_cursor_scanline(data[0], data[1]);\r\n    }, this);\r\n\r\n    bus.register(\"screen-set-size-text\", function(data)\r\n    {\r\n        this.set_size_text(data[0], data[1]);\r\n    }, this);\r\n    bus.register(\"screen-set-size-graphical\", function(data)\r\n    {\r\n        this.set_size_graphical(data[0], data[1]);\r\n    }, this);\r\n\r\n    this.put_char = function(row, col, chr, bg_color, fg_color)\r\n    {\r\n        if(row < text_mode_height && col < text_mode_width)\r\n        {\r\n            var p = 3 * (row * text_mode_width + col);\r\n\r\n            text_mode_data[p] = chr;\r\n            text_mode_data[p + 1] = bg_color;\r\n            text_mode_data[p + 2] = fg_color;\r\n        }\r\n    };\r\n\r\n    this.destroy = function()\r\n    {\r\n    };\r\n\r\n    this.set_mode = function(graphical)\r\n    {\r\n        is_graphical = graphical;\r\n    };\r\n\r\n    this.clear_screen = function()\r\n    {\r\n    };\r\n\r\n    /**\r\n     * @param {number} cols\r\n     * @param {number} rows\r\n     */\r\n    this.set_size_text = function(cols, rows)\r\n    {\r\n        if(cols === text_mode_width && rows === text_mode_height)\r\n        {\r\n            return;\r\n        }\r\n\r\n        text_mode_data = new Int32Array(cols * rows * 3);\r\n\r\n        text_mode_width = cols;\r\n        text_mode_height = rows;\r\n    };\r\n\r\n    this.set_size_graphical = function(width, height)\r\n    {\r\n        graphic_buffer = new Uint8Array(4 * width * height);\r\n        graphic_buffer32 = new Int32Array(graphic_buffer.buffer);\r\n\r\n        graphical_mode_width = width;\r\n        graphical_mode_height = height;\r\n\r\n        this.bus.send(\"screen-tell-buffer\", [graphic_buffer32], [graphic_buffer32.buffer]);\r\n    };\r\n\r\n    this.set_scale = function(s_x, s_y)\r\n    {\r\n    };\r\n\r\n    this.update_cursor_scanline = function(start, end)\r\n    {\r\n    };\r\n\r\n    this.update_cursor = function(row, col)\r\n    {\r\n        if(row !== cursor_row || col !== cursor_col)\r\n        {\r\n            cursor_row = row;\r\n            cursor_col = col;\r\n        }\r\n    };\r\n\r\n    this.update_buffer = function(min, max)\r\n    {\r\n        if(max < min)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var min_y = min / graphical_mode_width | 0;\r\n        var max_y = max / graphical_mode_width | 0;\r\n    };\r\n\r\n    this.get_text_screen = function()\r\n    {\r\n        var screen = [];\r\n\r\n        for(var i = 0; i < text_mode_height; i++)\r\n        {\r\n            screen.push(this.get_text_row(i));\r\n        }\r\n\r\n        return screen;\r\n    };\r\n\r\n    this.get_text_row = function(i)\r\n    {\r\n        var row = \"\";\r\n        var offset = 3 * i * text_mode_width;\r\n\r\n        for(var j = 0; j < text_mode_width; j++)\r\n        {\r\n            row += String.fromCharCode(text_mode_data[offset + 3 * j]);\r\n        }\r\n\r\n        return row;\r\n    };\r\n}\r\n","// -------------------------------------------------\r\n// ----------------- FILESYSTEM---------------------\r\n// -------------------------------------------------\r\n// Implementation of a unix filesystem in memory.\r\n\r\n\"use strict\";\r\n\r\nvar S_IRWXUGO = 0x1FF;\r\nvar S_IFMT = 0xF000;\r\nvar S_IFSOCK = 0xC000;\r\nvar S_IFLNK = 0xA000;\r\nvar S_IFREG = 0x8000;\r\nvar S_IFBLK = 0x6000;\r\nvar S_IFDIR = 0x4000;\r\nvar S_IFCHR = 0x2000;\r\n\r\n//var S_IFIFO  0010000\r\n//var S_ISUID  0004000\r\n//var S_ISGID  0002000\r\n//var S_ISVTX  0001000\r\n\r\nvar O_RDONLY = 0x0000; // open for reading only \r\nvar O_WRONLY = 0x0001; // open for writing only\r\nvar O_RDWR = 0x0002; // open for reading and writing\r\nvar O_ACCMODE = 0x0003; // mask for above modes\r\n\r\nvar STATUS_INVALID = -0x1;\r\nvar STATUS_OK = 0x0;\r\nvar STATUS_OPEN = 0x1;\r\nvar STATUS_ON_SERVER = 0x2;\r\nvar STATUS_LOADING = 0x3;\r\nvar STATUS_UNLINKED = 0x4;\r\n\r\n\r\n/** @const */ var JSONFS_VERSION = 2;\r\n\r\n\r\n/** @const */ var JSONFS_IDX_NAME = 0\r\n/** @const */ var JSONFS_IDX_SIZE = 1\r\n/** @const */ var JSONFS_IDX_MTIME = 2\r\n/** @const */ var JSONFS_IDX_MODE = 3\r\n/** @const */ var JSONFS_IDX_UID = 4\r\n/** @const */ var JSONFS_IDX_GID = 5\r\n/** @const */ var JSONFS_IDX_TARGET = 6\r\n\r\n\r\n/** @constructor */\r\nfunction FS(baseurl) {\r\n    /** @type {Array.<Inode>} */\r\n    this.inodes = [];\r\n    this.events = [];\r\n\r\n    this.baseurl = baseurl;\r\n\r\n    this.qidnumber = 0x0;\r\n    this.filesinloadingqueue = 0;\r\n    this.OnLoaded = function() {};\r\n\r\n    //this.tar = new TAR(this);\r\n\r\n    this.inodedata = {};\r\n\r\n    this.total_size = 256 * 1024 * 1024 * 1024;\r\n    this.used_size = 0;\r\n\r\n    //RegisterMessage(\"LoadFilesystem\", this.LoadFilesystem.bind(this) );\r\n    //RegisterMessage(\"MergeFile\", this.MergeFile.bind(this) );\r\n    //RegisterMessage(\"tar\",\r\n    //    function(data) {\r\n    //        SendToMaster(\"tar\", this.tar.Pack(data));\r\n    //    }.bind(this)\r\n    //);\r\n    //RegisterMessage(\"sync\",\r\n    //    function(data) {\r\n    //        SendToMaster(\"sync\", this.tar.Pack(data));\r\n    //    }.bind(this)\r\n    //);\r\n\r\n    // root entry\r\n    this.CreateDirectory(\"\", -1);\r\n}\r\n\r\n\r\n// -----------------------------------------------------\r\n\r\nFS.prototype.AddEvent = function(id, OnEvent) {\r\n    var inode = this.GetInode(id);\r\n    if (inode.status == STATUS_OK) {\r\n        OnEvent();\r\n        return;\r\n    }\r\n    this.events.push({id: id, OnEvent: OnEvent});    \r\n}\r\n\r\nFS.prototype.HandleEvent = function(id) {\r\n\r\n    if (this.filesinloadingqueue == 0) {\r\n        this.OnLoaded();\r\n        this.OnLoaded = function() {}\r\n    }\r\n    //message.Debug(\"number of events: \" + this.events.length);\r\n    var newevents = [];\r\n    for(var i=0; i<this.events.length; i++) {\r\n        if (this.events[i].id == id) {\r\n            this.events[i].OnEvent();\r\n        } else {\r\n            newevents.push(this.events[i]);\r\n        }\r\n    }\r\n    this.events = newevents;\r\n}\r\n\r\nFS.prototype.OnJSONLoaded = function(fs)\r\n{\r\n    if(DEBUG)\r\n    {\r\n        console.assert(fs, \"Invalid fs passed to OnJSONLoaded\");\r\n    }\r\n\r\n    //console.time(\"parse\");\r\n    var fsdata = JSON.parse(fs);\r\n    //console.timeEnd(\"parse\");\r\n\r\n    if(fsdata[\"version\"] !== JSONFS_VERSION)\r\n    {\r\n        throw \"The filesystem JSON format has changed. \" +\r\n              \"Please update your fs2json (https://github.com/copy/fs2json) and recreate the filesystem JSON.\";\r\n    }\r\n\r\n    var fsroot = fsdata[\"fsroot\"];\r\n    this.used_size = fsdata[\"size\"];\r\n\r\n    var me = this;\r\n\r\n    setTimeout(function()\r\n    {\r\n        //console.time(\"Load\");\r\n        //console.profile(\"Load\");\r\n        for(var i = 0; i < fsroot.length; i++) {\r\n            me.LoadRecursive(fsroot[i], 0);\r\n        }\r\n        //console.profileEnd(\"Load\");\r\n        //console.timeEnd(\"Load\");\r\n\r\n        //if(DEBUG)\r\n        //{\r\n        //    console.time(\"Check\");\r\n        //    me.Check();\r\n        //    console.timeEnd(\"Check\");\r\n        //}\r\n\r\n        me.OnLoaded();\r\n        me.OnLoaded = function() {};\r\n    }, 0);\r\n};\r\n\r\nFS.prototype.LoadRecursive = function(data, parentid)\r\n{\r\n    var inode = this.CreateInode();\r\n\r\n    inode.name = data[JSONFS_IDX_NAME]\r\n    inode.size = data[JSONFS_IDX_SIZE];\r\n    inode.mtime = data[JSONFS_IDX_MTIME];\r\n    inode.ctime = inode.mtime;\r\n    inode.atime = inode.mtime;\r\n    inode.mode = data[JSONFS_IDX_MODE];\r\n    inode.uid = data[JSONFS_IDX_UID];\r\n    inode.gid = data[JSONFS_IDX_GID];\r\n\r\n    inode.parentid = parentid;\r\n    this.inodes[inode.parentid].nlinks++;\r\n\r\n    var ifmt = inode.mode & S_IFMT;\r\n\r\n    if(ifmt === S_IFDIR)\r\n    {\r\n        this.LoadDir(inode, data[JSONFS_IDX_TARGET]);\r\n    }\r\n    else if(ifmt === S_IFREG)\r\n    {\r\n        inode.status = STATUS_ON_SERVER;\r\n        this.PushInode(inode);\r\n    }\r\n    else if(ifmt === S_IFLNK)\r\n    {\r\n        inode.symlink = data[JSONFS_IDX_TARGET];\r\n        this.PushInode(inode);\r\n    }\r\n    else if(ifmt === S_IFSOCK)\r\n    {\r\n        // socket: ignore\r\n    }\r\n    else\r\n    {\r\n        dbg_log(\"Unexpected ifmt: \" + h(ifmt) + \" (\" + inode.name + \")\");\r\n    }\r\n}\r\n\r\nFS.prototype.LoadDir = function(inode, children)\r\n{\r\n    inode.updatedir = true;\r\n    inode.nlinks = 2; // . and ..\r\n\r\n    var p = this.inodes.length;\r\n    this.PushInode(inode);\r\n\r\n    for(var i = 0; i < children.length; i++) {\r\n        this.LoadRecursive(children[i], p);\r\n    }\r\n}\r\n\r\n// Loads the data from a url for a specific inode\r\nFS.prototype.LoadFile = function(idx) {\r\n    var inode = this.inodes[idx];\r\n    if (inode.status != STATUS_ON_SERVER) {\r\n        return;\r\n    }\r\n    inode.status = STATUS_LOADING;\r\n    this.filesinloadingqueue++;\r\n\r\n    //if (inode.compressed) {\r\n    //    inode.data = new Uint8Array(inode.size);\r\n    //    LoadBinaryResource(inode.url + \".bz2\",\r\n    //    function(buffer){\r\n    //        var buffer8 = new Uint8Array(buffer);\r\n    //        var ofs = 0;\r\n    //        bzip2.simple(buffer8, function(x){inode.data[ofs++] = x;}.bind(this) );    \r\n    //        inode.status = STATUS_OK;\r\n    //        this.filesinloadingqueue--;\r\n    //        this.HandleEvent(idx);            \r\n    //    }.bind(this), \r\n    //    function(error){throw error;});\r\n    //    return;\r\n    //}\r\n\r\n    if(this.baseurl)\r\n    {\r\n        LoadBinaryResource(this.baseurl + this.GetFullPath(inode.fid),  \r\n            function(buffer){\r\n                var data = this.inodedata[idx] = new Uint8Array(buffer);\r\n                inode.size = data.length; // correct size if the previous was wrong. \r\n                inode.status = STATUS_OK;\r\n\r\n                this.filesinloadingqueue--;\r\n                this.HandleEvent(idx);            \r\n            }.bind(this), \r\n            function(error){throw error;});\r\n    }\r\n    else\r\n    {\r\n        // If baseurl is not set, we started with an empty filesystem. No files\r\n        // can be loaded\r\n    }\r\n}\r\n\r\n// -----------------------------------------------------\r\n\r\nFS.prototype.PushInode = function(inode) {\r\n    if (inode.parentid != -1) {\r\n        this.inodes.push(inode);\r\n        inode.fid = this.inodes.length - 1;\r\n        var parent_node = this.inodes[inode.parentid];\r\n        parent_node.updatedir = true;\r\n        inode.nextid = parent_node.firstid;\r\n        parent_node.firstid = this.inodes.length-1;\r\n        return;\r\n    } else {\r\n        if (this.inodes.length == 0) { // if root directory\r\n            this.inodes.push(inode);\r\n            return;\r\n        }\r\n    }\r\n\r\n    message.Debug(\"Error in Filesystem: Pushed inode with name = \"+ inode.name + \" has no parent\");\r\n    message.Abort();\r\n\r\n}\r\n\r\n/** @constructor */\r\nfunction Inode(qidnumber)\r\n{\r\n    this.updatedir = false; // did the directory listing changed?\r\n    this.parentid = -1;\r\n    this.firstid = -1; // first file id in directory\r\n    this.nextid = -1; // next id in directory\r\n    this.status = 0;\r\n    this.name = \"\";\r\n    this.size = 0x0;\r\n    this.uid = 0x0;\r\n    this.gid = 0x0;\r\n    this.fid = 0;\r\n    this.ctime = 0;\r\n    this.atime = 0;\r\n    this.mtime = 0;\r\n    this.major = 0x0;\r\n    this.minor = 0x0;\r\n    //data = new Uint8Array(0);\r\n    this.symlink = \"\";\r\n    this.nlinks = 1;\r\n    this.mode = 0x01ED;\r\n    this.qid = {\r\n        type: 0,\r\n        version: 0,\r\n        path: qidnumber,\r\n    };\r\n    this.caps = undefined;\r\n\r\n    //this.qid_type = 0;\r\n    //this.qid_version = 0;\r\n    //this.qid_path = qidnumber;\r\n}\r\n\r\nFS.prototype.CreateInode = function() {\r\n    //console.log(\"CreateInode\", Error().stack);\r\n    return new Inode(++this.qidnumber);\r\n};\r\n\r\n\r\nFS.prototype.CreateDirectory = function(name, parentid) {\r\n    var x = this.CreateInode();\r\n    x.name = name;\r\n    x.parentid = parentid;\r\n    x.mode = 0x01FF | S_IFDIR;\r\n    x.updatedir = true;\r\n    x.nlinks = 2; // . and ..\r\n    if (parentid >= 0) {\r\n        x.uid = this.inodes[parentid].uid;\r\n        x.gid = this.inodes[parentid].gid;\r\n        x.mode = (this.inodes[parentid].mode & 0x1FF) | S_IFDIR;\r\n        this.inodes[parentid].nlinks++;\r\n    }\r\n    x.qid.type = S_IFDIR >> 8;\r\n    this.PushInode(x);\r\n    this.NotifyListeners(this.inodes.length-1, 'newdir');\r\n    return this.inodes.length-1;\r\n}\r\n\r\nFS.prototype.CreateFile = function(filename, parentid) {\r\n    var x = this.CreateInode();\r\n    x.name = filename;\r\n    x.parentid = parentid;\r\n    x.uid = this.inodes[parentid].uid;\r\n    x.gid = this.inodes[parentid].gid;\r\n    this.inodes[parentid].nlinks++;\r\n    x.qid.type = S_IFREG >> 8;\r\n    x.mode = (this.inodes[parentid].mode & 0x1B6) | S_IFREG;\r\n    this.PushInode(x);\r\n    this.NotifyListeners(this.inodes.length-1, 'newfile');\r\n    return this.inodes.length-1;\r\n}\r\n\r\n\r\nFS.prototype.CreateNode = function(filename, parentid, major, minor) {\r\n    var x = this.CreateInode();\r\n    x.name = filename;\r\n    x.parentid = parentid;\r\n    x.major = major;\r\n    x.minor = minor;\r\n    x.uid = this.inodes[parentid].uid;\r\n    x.gid = this.inodes[parentid].gid;\r\n    this.inodes[parentid].nlinks++;\r\n    x.qid.type = S_IFSOCK >> 8;\r\n    x.mode = (this.inodes[parentid].mode & 0x1B6);\r\n    this.PushInode(x);\r\n    return this.inodes.length-1;\r\n}\r\n     \r\nFS.prototype.CreateSymlink = function(filename, parentid, symlink) {\r\n    var x = this.CreateInode();\r\n    x.name = filename;\r\n    x.parentid = parentid;\r\n    x.uid = this.inodes[parentid].uid;\r\n    x.gid = this.inodes[parentid].gid;\r\n    this.inodes[parentid].nlinks++;\r\n    x.qid.type = S_IFLNK >> 8;\r\n    x.symlink = symlink;\r\n    x.mode = S_IFLNK;\r\n    this.PushInode(x);\r\n    return this.inodes.length-1;\r\n}\r\n\r\nFS.prototype.CreateTextFile = function(filename, parentid, str) {\r\n    var id = this.CreateFile(filename, parentid);\r\n    var x = this.inodes[id];\r\n    var data = this.inodedata[id] = new Uint8Array(str.length);\r\n    x.size = str.length;\r\n    for (var j = 0; j < str.length; j++) {\r\n        data[j] = str.charCodeAt(j);\r\n    }\r\n    return id;\r\n}\r\n\r\n/** \r\n * @param {Uint8Array} buffer\r\n */\r\nFS.prototype.CreateBinaryFile = function(filename, parentid, buffer) {\r\n    var id = this.CreateFile(filename, parentid);\r\n    var x = this.inodes[id];\r\n    var data = this.inodedata[id] = new Uint8Array(buffer.length);\r\n    data.set(buffer);\r\n    x.size = buffer.length;\r\n    return id;\r\n}\r\n\r\n\r\nFS.prototype.OpenInode = function(id, mode) {\r\n    var inode = this.GetInode(id);\r\n    if ((inode.mode&S_IFMT) == S_IFDIR) {\r\n        this.FillDirectory(id);\r\n    }\r\n    /*\r\n    var type = \"\";\r\n    switch(inode.mode&S_IFMT) {\r\n        case S_IFREG: type = \"File\"; break;\r\n        case S_IFBLK: type = \"Block Device\"; break;\r\n        case S_IFDIR: type = \"Directory\"; break;\r\n        case S_IFCHR: type = \"Character Device\"; break;\r\n    }\r\n    */\r\n    //message.Debug(\"open:\" + this.GetFullPath(id) +  \" type: \" + inode.mode + \" status:\" + inode.status);\r\n    if (inode.status == STATUS_ON_SERVER) {\r\n        this.LoadFile(id);\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nFS.prototype.CloseInode = function(id) {\r\n    //message.Debug(\"close: \" + this.GetFullPath(id));\r\n    var inode = this.GetInode(id);\r\n    if (inode.status == STATUS_UNLINKED) {\r\n        //message.Debug(\"Filesystem: Delete unlinked file\");\r\n        inode.status = STATUS_INVALID;\r\n        delete this.inodedata[id];\r\n        inode.size = 0;\r\n    }\r\n}\r\n\r\nFS.prototype.Rename = function(olddirid, oldname, newdirid, newname) {\r\n    // message.Debug(\"Rename \" + oldname + \" to \" + newname);\r\n    if ((olddirid == newdirid) && (oldname == newname)) {\r\n        return true;\r\n    }\r\n    var oldid = this.Search(olddirid, oldname);\r\n    var oldpath = this.GetFullPath(oldid);\r\n    if (oldid == -1) {\r\n        return false;\r\n    }\r\n    var newid = this.Search(newdirid, newname);\r\n    if (newid != -1) {\r\n        this.Unlink(newid);\r\n    }\r\n\r\n    var idx = oldid; // idx contains the id which we want to rename\r\n    var inode = this.inodes[idx];\r\n\r\n    // remove inode ids\r\n    if (this.inodes[inode.parentid].firstid == idx) {\r\n        this.inodes[inode.parentid].firstid = inode.nextid;\r\n    } else {\r\n        var id = this.FindPreviousID(idx);\r\n        if (id == -1) {\r\n            message.Debug(\"Error in Filesystem: Cannot find previous id of inode\");\r\n            message.Abort();\r\n        }\r\n        this.inodes[id].nextid = inode.nextid;\r\n    }\r\n\r\n    inode.parentid = newdirid;\r\n    inode.name = newname;\r\n    inode.qid.version++;\r\n\r\n    inode.nextid = this.inodes[inode.parentid].firstid;\r\n    this.inodes[inode.parentid].firstid = idx;\r\n\r\n    this.inodes[olddirid].updatedir = true;\r\n    this.inodes[newdirid].updatedir = true;\r\n    this.inodes[olddirid].nlinks--;\r\n    this.inodes[newdirid].nlinks++;\r\n\r\n    this.NotifyListeners(idx, \"rename\", {oldpath: oldpath});\r\n    \r\n    return true;\r\n}\r\n\r\nFS.prototype.Write = function(id, offset, count, GetByte) {\r\n    this.NotifyListeners(id, 'write');\r\n    var inode = this.inodes[id];\r\n    var data = this.inodedata[id];\r\n\r\n    if (!data || data.length < (offset+count)) {\r\n        this.ChangeSize(id, Math.floor(((offset+count)*3)/2) );\r\n        inode.size = offset + count;\r\n        data = this.inodedata[id];\r\n    } else\r\n    if (inode.size < (offset+count)) {\r\n        inode.size = offset + count;\r\n    }\r\n    for(var i=0; i<count; i++)\r\n        data[offset+i] = GetByte();\r\n}\r\n\r\nFS.prototype.Search = function(parentid, name) {\r\n    var id = this.inodes[parentid].firstid;\r\n    while(id != -1) {\r\n        if (this.inodes[id].parentid != parentid) { // consistency check\r\n            message.Debug(\"Error in Filesystem: Found inode with wrong parent id\");\r\n        }\r\n        if (this.inodes[id].name == name) return id;\r\n        id = this.inodes[id].nextid;\r\n    }\r\n    return -1;\r\n}\r\n\r\nFS.prototype.GetTotalSize = function() {\r\n    return this.used_size;\r\n    //var size = 0;\r\n    //for(var i=0; i<this.inodes.length; i++) {\r\n    //    var d = this.inodes[i].data;\r\n    //    size += d ? d.length : 0;\r\n    //}\r\n    //return size;\r\n}\r\n\r\nFS.prototype.GetSpace = function() {\r\n    return this.total_size;\r\n};\r\n\r\nFS.prototype.GetFullPath = function(idx) {\r\n    var path = \"\";\r\n\r\n    while(idx != 0) {\r\n        path = \"/\" + this.inodes[idx].name + path;\r\n        idx = this.inodes[idx].parentid;\r\n    }\r\n    return path.substring(1);\r\n}\r\n\r\n// no double linked list. So, we need this\r\nFS.prototype.FindPreviousID = function(idx) {\r\n    var inode = this.GetInode(idx);\r\n    var id = this.inodes[inode.parentid].firstid;\r\n    while(id != -1) {\r\n        if (this.inodes[id].nextid == idx) return id;\r\n        id = this.inodes[id].nextid;\r\n    }\r\n    return id;\r\n}\r\n\r\nFS.prototype.Unlink = function(idx) {\r\n    this.NotifyListeners(idx, 'delete');\r\n    if (idx == 0) return false; // root node cannot be deleted\r\n    var inode = this.GetInode(idx);\r\n    //message.Debug(\"Unlink \" + inode.name);\r\n\r\n    // check if directory is not empty\r\n    if ((inode.mode&S_IFMT) == S_IFDIR) {\r\n       if (inode.firstid != -1) return false;\r\n    }\r\n\r\n    // update ids\r\n    if (this.inodes[inode.parentid].firstid == idx) {\r\n        this.inodes[inode.parentid].firstid = inode.nextid;\r\n    } else {\r\n        var id = this.FindPreviousID(idx);\r\n        if (id == -1) {\r\n            message.Debug(\"Error in Filesystem: Cannot find previous id of inode\");\r\n            message.Abort();\r\n        }\r\n        this.inodes[id].nextid = inode.nextid;\r\n    }\r\n    // don't delete the content. The file is still accessible\r\n    this.inodes[inode.parentid].updatedir = true;\r\n    this.inodes[inode.parentid].nlinks--;\r\n    inode.status = STATUS_UNLINKED;\r\n    inode.nextid = -1;\r\n    inode.firstid = -1;\r\n    inode.parentid = -1;\r\n    inode.nlinks--;\r\n    return true;\r\n}\r\n\r\nFS.prototype.GetInode = function(idx)\r\n{\r\n    if (isNaN(idx)) {\r\n        message.Debug(\"Error in filesystem: id is not a number \");\r\n        return 0;\r\n    }\r\n\r\n    if ((idx < 0) || (idx > this.inodes.length)) {\r\n        message.Debug(\"Error in filesystem: Attempt to get inode with id \" + idx);\r\n        return 0;\r\n    }\r\n    return this.inodes[idx];\r\n}\r\n\r\nFS.prototype.ChangeSize = function(idx, newsize)\r\n{\r\n    var inode = this.GetInode(idx);\r\n    var temp = this.inodedata[idx];\r\n    //message.Debug(\"change size to: \" + newsize);\r\n    if (newsize == inode.size) return;\r\n    var data = this.inodedata[idx] = new Uint8Array(newsize);\r\n    inode.size = newsize;\r\n    if(!temp) return;\r\n    var size = Math.min(temp.length, inode.size);\r\n    for(var i=0; i<size; i++) {\r\n        data[i] = temp[i];\r\n    }\r\n}\r\n\r\nFS.prototype.SearchPath = function(path) {\r\n    //path = path.replace(/\\/\\//g, \"/\");\r\n    path = path.replace(\"//\", \"/\");\r\n    var walk = path.split(\"/\");\r\n    var n = walk.length;\r\n    if (walk[n-1].length == 0) walk.pop();\r\n    if (walk[0].length == 0) walk.shift();\r\n    n = walk.length;\r\n\r\n    var parentid = 0;\r\n    var id = -1;\r\n    for(var i=0; i<n; i++) {\r\n        id = this.Search(parentid, walk[i]);        \r\n        if (id == -1) {\r\n            if (i < n-1) return {id: -1, parentid: -1, name: walk[i]}; // one name of the path cannot be found\r\n            return {id: -1, parentid: parentid, name: walk[i]}; // the last element in the path does not exist, but the parent\r\n        }\r\n        parentid = id;\r\n    }\r\n    return {id: id, parentid: parentid, name: walk[i]};\r\n}\r\n// -----------------------------------------------------\r\n\r\nFS.prototype.GetRecursiveList = function(dirid, list) {\r\n    var id = this.inodes[dirid].firstid;\r\n    while(id != -1) {\r\n        list.push(id);\r\n        if ((this.inodes[id].mode&S_IFMT) == S_IFDIR) {\r\n            this.GetRecursiveList(id, list);\r\n        }\r\n        id = this.inodes[id].nextid;\r\n    }\r\n}\r\n\r\nFS.prototype.MergeFile = function(file) {\r\n    message.Debug(\"Merge path:\" + file.name);\r\n    var ids = this.SearchPath(file.name);\r\n    if (ids.parentid == -1) return; // not even the path seems to exist\r\n    if (ids.id == -1) {\r\n        ids.id = this.CreateFile(ids.name, ids.parentid); \r\n    }\r\n    this.inodes[ids.id].data = file.data;\r\n    this.inodes[ids.id].size = file.data.length;\r\n    // Don't forget to update the timestamps !\r\n    this.inodes[ids.id].mtime = Math.floor((new Date()).getTime()/1000);\r\n    this.inodes[ids.id].atime = this.inodes[ids.id].mtime;\r\n    this.inodes[ids.id].ctime = this.inodes[ids.id].mtime;\r\n}\r\n\r\n\r\nFS.prototype.RecursiveDelete = function(path) {\r\n    var toDelete = []\r\n    var ids = this.SearchPath(path);\r\n    if (ids.parentid == -1 || ids.id == -1) return;\r\n    \r\n    this.GetRecursiveList(ids.id, toDelete);\r\n\r\n    for(var i=toDelete.length-1; i>=0; i--)\r\n        this.Unlink(toDelete[i]);\r\n\r\n}\r\n\r\nFS.prototype.DeleteNode = function(path) {\r\n    var ids = this.SearchPath(path);\r\n    if (ids.parentid == -1 || ids.id == -1) return;\r\n    \r\n    if ((this.inodes[ids.id].mode&S_IFMT) == S_IFREG){\r\n        this.Unlink(ids.id);\r\n        return;\r\n    }\r\n    if ((this.inodes[ids.id].mode&S_IFMT) == S_IFDIR){\r\n        var toDelete = []\r\n        this.GetRecursiveList(ids.id, toDelete);\r\n        for(var i=toDelete.length-1; i>=0; i--)\r\n            this.Unlink(toDelete[i]);\r\n        this.Unlink(ids.id);\r\n        return;\r\n    }\r\n}\r\n\r\n/** @param {*=} info */\r\nFS.prototype.NotifyListeners = function(id, action, info) {\r\n    //if(info==undefined)\r\n    //    info = {};\r\n\r\n    //var path = this.GetFullPath(id);\r\n    //if (this.watchFiles[path] == true && action=='write') {\r\n    //  message.Send(\"WatchFileEvent\", path);\r\n    //}\r\n    //for (var directory in this.watchDirectories) {\r\n    //    if (this.watchDirectories.hasOwnProperty(directory)) {\r\n    //        var indexOf = path.indexOf(directory)\r\n    //        if(indexOf == 0 || indexOf == 1)\r\n    //            message.Send(\"WatchDirectoryEvent\", {path: path, event: action, info: info});         \r\n    //    }\r\n    //}\r\n}\r\n\r\n\r\nFS.prototype.Check = function() {\r\n    for(var i=1; i<this.inodes.length; i++)\r\n    {\r\n        if (this.inodes[i].status == STATUS_INVALID) continue;\r\n        if (this.inodes[i].nextid == i) {\r\n            message.Debug(\"Error in filesystem: file points to itself\");\r\n            message.Abort();\r\n        }\r\n\r\n        var inode = this.GetInode(i);\r\n        if (inode.parentid < 0) {\r\n            message.Debug(\"Error in filesystem: negative parent id \" + i);\r\n        }\r\n        var n = inode.name.length;\r\n        if (n == 0) {\r\n            message.Debug(\"Error in filesystem: inode with no name and id \" + i);\r\n        }\r\n\r\n        for (var j in inode.name) {\r\n            var c = inode.name.charCodeAt(j);\r\n            if (c < 32) {\r\n                message.Debug(\"Error in filesystem: Unallowed char in filename\");\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nFS.prototype.FillDirectory = function(dirid) {\r\n    var inode = this.GetInode(dirid);\r\n    if (!inode.updatedir) return;\r\n    var parentid = inode.parentid;\r\n    if (parentid == -1) parentid = 0; // if root directory point to the root directory\r\n\r\n    // first get size\r\n    var size = 0;\r\n    var id = this.inodes[dirid].firstid;\r\n    while(id != -1) {\r\n        size += 13 + 8 + 1 + 2 + UTF8.UTF8Length(this.inodes[id].name);\r\n        id = this.inodes[id].nextid;\r\n    }\r\n\r\n    size += 13 + 8 + 1 + 2 + 1; // \".\" entry\r\n    size += 13 + 8 + 1 + 2 + 2; // \"..\" entry\r\n    //message.Debug(\"size of dir entry: \" + size);\r\n    var data = this.inodedata[dirid] = new Uint8Array(size);\r\n    inode.size = size;\r\n\r\n    var offset = 0x0;\r\n    offset += marshall.Marshall(\r\n        [\"Q\", \"d\", \"b\", \"s\"],\r\n        [this.inodes[dirid].qid, \r\n        offset+13+8+1+2+1, \r\n        this.inodes[dirid].mode >> 12, \r\n        \".\"],\r\n        data, offset);\r\n\r\n    offset += marshall.Marshall(\r\n        [\"Q\", \"d\", \"b\", \"s\"],\r\n        [this.inodes[parentid].qid,\r\n        offset+13+8+1+2+2, \r\n        this.inodes[parentid].mode >> 12, \r\n        \"..\"],\r\n        data, offset);\r\n\r\n    id = this.inodes[dirid].firstid;\r\n    while(id != -1) {\r\n        offset += marshall.Marshall(\r\n        [\"Q\", \"d\", \"b\", \"s\"],\r\n        [\r\n            this.inodes[id].qid,\r\n            offset+13+8+1+2+UTF8.UTF8Length(this.inodes[id].name),\r\n            this.inodes[id].mode >> 12,\r\n            this.inodes[id].name\r\n        ],\r\n        data, offset);\r\n        id = this.inodes[id].nextid;\r\n    }\r\n    inode.updatedir = false;\r\n}\r\n\r\n\r\n// -----------------------------------------------------\r\n\r\n// only support for security.capabilities\r\n// should return a  \"struct vfs_cap_data\" defined in\r\n// linux/capability for format\r\n// check also:\r\n//   sys/capability.h\r\n//   http://lxr.free-electrons.com/source/security/commoncap.c#L376\r\n//   http://man7.org/linux/man-pages/man7/capabilities.7.html\r\n//   http://man7.org/linux/man-pages/man8/getcap.8.html\r\n//   http://man7.org/linux/man-pages/man3/libcap.3.html\r\nFS.prototype.PrepareCAPs = function(id) {\r\n    var inode = this.GetInode(id);\r\n    if (inode.caps) return inode.caps.length;\r\n    inode.caps = new Uint8Array(12);\r\n    // format is little endian\r\n    // magic_etc (revision=0x01: 12 bytes)\r\n    inode.caps[0]  = 0x00;\r\n    inode.caps[1]  = 0x00;\r\n    inode.caps[2]  = 0x00;\r\n    inode.caps[3]  = 0x01;\r\n    // permitted (full capabilities)\r\n    inode.caps[4]  = 0xFF;\r\n    inode.caps[5]  = 0xFF;\r\n    inode.caps[6]  = 0xFF;\r\n    inode.caps[7]  = 0xFF;\r\n    // inheritable (full capabilities\r\n    inode.caps[8]  = 0xFF;\r\n    inode.caps[9]  = 0xFF;\r\n    inode.caps[10] = 0xFF;\r\n    inode.caps[11] = 0xFF;\r\n\r\n    return inode.caps.length;\r\n}\r\n\r\n","\"use strict\";\r\n\r\n// jor1k compatibility\r\n\r\nvar VIRTIO_MAGIC_REG = 0x0;\r\nvar VIRTIO_VERSION_REG = 0x4;\r\nvar VIRTIO_DEVICE_REG = 0x8;\r\nvar VIRTIO_VENDOR_REG = 0xc;\r\nvar VIRTIO_HOSTFEATURES_REG = 0x10;\r\nvar VIRTIO_HOSTFEATURESSEL_REG = 0x14;\r\nvar VIRTIO_GUESTFEATURES_REG = 0x20;\r\nvar VIRTIO_GUESTFEATURESSEL_REG = 0x24;\r\nvar VIRTIO_GUEST_PAGE_SIZE_REG = 0x28;\r\nvar VIRTIO_QUEUESEL_REG = 0x30;\r\nvar VIRTIO_QUEUENUMMAX_REG = 0x34;\r\nvar VIRTIO_QUEUENUM_REG = 0x38;\r\nvar VIRTIO_QUEUEALIGN_REG = 0x3C;\r\nvar VIRTIO_QUEUEPFN_REG = 0x40;\r\nvar VIRTIO_QUEUENOTIFY_REG = 0x50;\r\nvar VIRTIO_INTERRUPTSTATUS_REG = 0x60;\r\nvar VIRTIO_INTERRUPTACK_REG = 0x64;\r\nvar VIRTIO_STATUS_REG = 0x70;\r\n\r\n/** @const */\r\nvar VRING_DESC_F_NEXT =      1; /* This marks a buffer as continuing via the next field. */\r\n/** @const */\r\nvar VRING_DESC_F_WRITE =     2; /* This marks a buffer as write-only (otherwise read-only). */\r\n/** @const */\r\nvar VRING_DESC_F_INDIRECT =  4; /* This means the buffer contains a list of buffer descriptors. */\r\n\r\n\r\nfunction hex8(n)\r\n{\r\n    return h(n);\r\n}\r\n\r\nvar message = {};\r\n\r\n/** @param {...string} log */\r\nmessage.Debug = function(log)\r\n{\r\n    dbg_log([].slice.apply(arguments).join(\" \"), LOG_9P);\r\n}\r\n\r\nmessage.Abort = function()\r\n{ \r\n    if(DEBUG)\r\n    {\r\n        throw \"abort\"; \r\n    }\r\n}\r\n\r\n\r\n// XXX: Should go through emulator interface\r\nvar LoadBinaryResource;\r\n\r\nif(typeof XMLHttpRequest !== \"undefined\")\r\n{\r\n    LoadBinaryResource = function(url, OnSuccess, OnError) {\r\n        var req = new XMLHttpRequest();\r\n        req.open('GET', url, true);\r\n        req.responseType = \"arraybuffer\";\r\n        req.onreadystatechange = function () {\r\n            if (req.readyState != 4) {\r\n                return;\r\n            }\r\n            if ((req.status != 200) && (req.status != 0)) {\r\n                OnError(\"Error: Could not load file \" + url);\r\n                return;\r\n            }\r\n            var arrayBuffer = req.response;\r\n            if (arrayBuffer) {\r\n                OnSuccess(arrayBuffer);\r\n            } else {\r\n                OnError(\"Error: No data received from: \" + url);\r\n            }\r\n        };\r\n        /*\r\n            req.onload = function(e)\r\n            {\r\n                    var arrayBuffer = req.response;\r\n                    if (arrayBuffer) {\r\n                        OnLoadFunction(arrayBuffer);\r\n                    }\r\n            };\r\n        */\r\n        req.send(null);\r\n    }\r\n}\r\nelse\r\n{\r\n    LoadBinaryResource = function(url, OnSuccess, OnError)\r\n    {\r\n        //console.log(url);\r\n        require(\"fs\")[\"readFile\"](url, function(err, data)\r\n        {\r\n            if(err)\r\n            {\r\n                OnError(err);\r\n            }\r\n            else\r\n            {\r\n                OnSuccess(new Uint8Array(data).buffer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","// -------------------------------------------------\r\n// ------------------ Marshall ---------------------\r\n// -------------------------------------------------\r\n// helper functions for virtio and 9p.\r\n\r\nvar marshall = {};\r\n\r\n\r\n// Inserts data from an array to a byte aligned struct in memory\r\nmarshall.Marshall = function(typelist, input, struct, offset) {\r\n    var item;\r\n    var size = 0;\r\n    for (var i=0; i < typelist.length; i++) {\r\n        item = input[i];\r\n        switch (typelist[i]) {\r\n            case \"w\":\r\n                struct[offset++] = item & 0xFF;\r\n                struct[offset++] = (item >> 8) & 0xFF;\r\n                struct[offset++] = (item >> 16) & 0xFF;\r\n                struct[offset++] = (item >> 24) & 0xFF;\r\n                size += 4;\r\n                break;\r\n            case \"d\": // double word\r\n                struct[offset++] = item & 0xFF;\r\n                struct[offset++] = (item >> 8) & 0xFF;\r\n                struct[offset++] = (item >> 16) & 0xFF;\r\n                struct[offset++] = (item >> 24) & 0xFF;\r\n                struct[offset++] = 0x0;\r\n                struct[offset++] = 0x0;\r\n                struct[offset++] = 0x0;\r\n                struct[offset++] = 0x0;\r\n                size += 8;\r\n                break;\r\n            case \"h\":\r\n                struct[offset++] = item & 0xFF;\r\n                struct[offset++] = item >> 8;\r\n                size += 2;\r\n                break;\r\n            case \"b\":\r\n                struct[offset++] = item;\r\n                size += 1;\r\n                break;\r\n            case \"s\":\r\n                var lengthoffset = offset;\r\n                var length = 0;\r\n                struct[offset++] = 0; // set the length later\r\n                struct[offset++] = 0;\r\n                size += 2;\r\n                for (var j in item) {\r\n                    var utf8 = UnicodeToUTF8Stream(item.charCodeAt(j));\r\n                    utf8.forEach( function(c) {\r\n                        struct[offset++] = c;\r\n                        size += 1;\r\n                        length++;\r\n                    });\r\n                }\r\n                struct[lengthoffset+0] = length & 0xFF;\r\n                struct[lengthoffset+1] = (length >> 8) & 0xFF;\r\n                break;\r\n            case \"Q\":\r\n                marshall.Marshall([\"b\", \"w\", \"d\"], [item.type, item.version, item.path], struct, offset)\r\n                offset += 13;\r\n                size += 13;\r\n                break;\r\n            default:\r\n                message.Debug(\"Marshall: Unknown type=\" + typelist[i]);\r\n                break;\r\n        }\r\n    }\r\n    return size;\r\n};\r\n\r\n\r\n// Extracts data from a byte aligned struct in memory to an array\r\nmarshall.Unmarshall = function(typelist, struct, offset) {\r\n    var output = [];\r\n    for (var i=0; i < typelist.length; i++) {\r\n        switch (typelist[i]) {\r\n            case \"w\":\r\n                var val = struct[offset++];\r\n                val += struct[offset++] << 8;\r\n                val += struct[offset++] << 16;\r\n                val += (struct[offset++] << 24) >>> 0;\r\n                output.push(val);\r\n                break;\r\n            case \"d\":\r\n                var val = struct[offset++];\r\n                val += struct[offset++] << 8;\r\n                val += struct[offset++] << 16;\r\n                val += (struct[offset++] << 24) >>> 0;\r\n                offset += 4;\r\n                output.push(val);\r\n                break;\r\n            case \"h\":\r\n                var val = struct[offset++];\r\n                output.push(val + (struct[offset++] << 8));\r\n                break;\r\n            case \"b\":\r\n                output.push(struct[offset++]);\r\n                break;\r\n            case \"s\":\r\n                var len = struct[offset++];\r\n                len += struct[offset++] << 8;\r\n                var str = '';\r\n                var utf8converter = new UTF8StreamToUnicode();\r\n                for (var j=0; j < len; j++) {\r\n                    var c = utf8converter.Put(struct[offset++])\r\n                    if (c == -1) continue;\r\n                    str += String.fromCharCode(c);\r\n                }\r\n                output.push(str);\r\n                break;\r\n            default:\r\n                message.Debug(\"Error in Unmarshall: Unknown type=\" + typelist[i]);\r\n                break;\r\n        }\r\n    }\r\n    return output;\r\n};\r\n\r\n\r\n// Extracts data from a byte aligned struct in memory to an array\r\nmarshall.Unmarshall2 = function(typelist, GetByte) {\r\n    var output = [];\r\n    for (var i=0; i < typelist.length; i++) {\r\n        switch (typelist[i]) {\r\n            case \"w\":\r\n                var val = GetByte();\r\n                val += GetByte() << 8;\r\n                val += GetByte() << 16;\r\n                val += (GetByte() << 24) >>> 0;\r\n                output.push(val);\r\n                break;\r\n            case \"d\":\r\n                var val = GetByte();\r\n                val += GetByte() << 8;\r\n                val += GetByte() << 16;\r\n                val += (GetByte() << 24) >>> 0;\r\n                GetByte();GetByte();GetByte();GetByte();\r\n                output.push(val);\r\n                break;\r\n            case \"h\":\r\n                var val = GetByte();\r\n                output.push(val + (GetByte() << 8));\r\n                break;\r\n            case \"b\":\r\n                output.push(GetByte());\r\n                break;\r\n            case \"s\":\r\n                var len = GetByte();\r\n                len += GetByte() << 8;\r\n                var str = '';\r\n                var utf8converter = new UTF8StreamToUnicode();\r\n                for (var j=0; j < len; j++) {\r\n                    var c = utf8converter.Put(GetByte())\r\n                    if (c == -1) continue;\r\n                    str += String.fromCharCode(c);\r\n                }\r\n                output.push(str);\r\n                break;\r\n            default:\r\n                message.Debug(\"Error in Unmarshall2: Unknown type=\" + typelist[i]);\r\n                break;\r\n        }\r\n    }\r\n    return output;\r\n};\r\n\r\n","// -------------------------------------------------\r\n// ------------------ UTF8 Helpers -----------------\r\n// -------------------------------------------------\r\n\r\n\"use strict\";\r\n\r\nvar UTF8 = {}\r\n\r\n/** @constructor */\r\nfunction UTF8StreamToUnicode() {\r\n\r\n    this.stream = new Uint8Array(5);\r\n    this.ofs = 0;\r\n\r\n    this.Put = function(key) {\r\n        this.stream[this.ofs] = key;\r\n        this.ofs++;\r\n        switch(this.ofs) {\r\n            case 1:\r\n                if (this.stream[0] < 128) {\r\n                    this.ofs = 0;\r\n                    return this.stream[0];\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                if ((this.stream[0]&0xE0) == 0xC0)\r\n                if ((this.stream[1]&0xC0) == 0x80) {\r\n                    this.ofs = 0;\r\n                    return ((this.stream[0]&0x1F)<<6) | (this.stream[1]&0x3F);\r\n                }\r\n                break;\r\n\r\n            case 3:\r\n                break;\r\n\r\n            case 4:\r\n                break;\r\n\r\n            default:\r\n                return -1;\r\n                //this.ofs = 0;\r\n                //break;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\nfunction UnicodeToUTF8Stream(key)\r\n{\r\n        if (key < 0x80)  return [key];\r\n        if (key < 0x800) return [0xC0|((key>>6)&0x1F), 0x80|(key&0x3F)];\r\n}\r\n\r\nUTF8.UTF8Length = function(s)\r\n{\r\n    var length = 0;\r\n    for(var i=0; i<s.length; i++) {\r\n        var c = s.charCodeAt(i);\r\n        length += c<128?1:2;\r\n    }\r\n    return length;\r\n}\r\n"],
"names":["COMPILED","goog","global","isDef","goog.isDef","val","exportPath_","goog.exportPath_","name","opt_object","opt_objectToExportTo","parts","split","cur","execScript","part","length","shift","define","goog.define","defaultValue","CLOSURE_UNCOMPILED_DEFINES","Object","prototype","hasOwnProperty","call","value","CLOSURE_DEFINES","DEBUG","provide","goog.provide","isProvided_","Error","constructNamespace_","goog.constructNamespace_","opt_obj","implicitNamespaces_","namespace","substring","lastIndexOf","getObjectByName","VALID_MODULE_RE_","module","goog.module","isString","search","isInModuleLoader_","moduleLoaderState_","moduleName","get","goog.module.get","getInternal_","goog.module.getInternal_","loadedModules_","goog.isInModuleLoader_","declareTestMethods","goog.module.declareTestMethods","declareLegacyNamespace","goog.module.declareLegacyNamespace","setTestOnly","goog.setTestOnly","opt_message","DISALLOW_TEST_ONLY_CODE","forwardDeclare","goog.forwardDeclare","goog.isProvided_","isDefAndNotNull","goog.getObjectByName","globalize","goog.globalize","obj","opt_global","x","addDependency","goog.addDependency","relPath","provides","requires","opt_isModule","DEPENDENCIES_ENABLED","path","replace","deps","dependencies_","i","nameToPath","pathIsModule","j","require","logToConsole_","goog.logToConsole_","msg","console","goog.require","ENABLE_DEBUG_LOADER","IS_OLD_IE_","maybeProcessDeferredDep_","getPathFromDeps_","included_","writeScripts_","errorMessage","basePath","nullFunction","goog.nullFunction","abstractMethod","goog.abstractMethod","addSingletonGetter","goog.addSingletonGetter","ctor","getInstance","ctor.getInstance","instance_","instantiatedSingletons_","visited","written","deferred","inHtmlDocument_","goog.inHtmlDocument_","doc","document","findBasePath_","goog.findBasePath_","CLOSURE_BASE_PATH","scripts","getElementsByTagName","src","script","qmark","l","substr","importScript_","goog.importScript_","opt_sourceText","CLOSURE_IMPORT_SCRIPT","writeScriptTag_","atob","all","importModule_","goog.importModule_","queuedModules_","wrapModule_","goog.wrapModule_","srcUrl","scriptText","LOAD_MODULE_USING_EVAL","JSON","stringify","loadQueuedModules_","goog.loadQueuedModules_","count","queue","maybeProcessDeferredPath_","goog.maybeProcessDeferredDep_","isDeferredModule_","allDepsAreAvailable_","goog.isDeferredModule_","goog.allDepsAreAvailable_","requireName","goog.maybeProcessDeferredPath_","abspath","globalEval","loadModule","goog.loadModule","moduleDef","previousState","undefined","isFunction","exports","loadModuleFromSource_","SEAL_MODULE_EXPORTS","seal","entry","indexOf","goog.loadModuleFromSource_","source","eval","writeScriptSrcNode_","goog.writeScriptSrcNode_","write","appendScriptSrcNode_","goog.appendScriptSrcNode_","scriptEl","createElement","type","defer","async","head","appendChild","goog.writeScriptTag_","ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING","readyState","test","isDeps","isOldIE","state","lastNonModuleScriptIndex_","onScriptLoad_","goog.onScriptLoad_","scriptIndex","goog.writeScripts_","visitNode","seenScript","push","moduleState","goog.getPathFromDeps_","rule","CLOSURE_NO_DEPS","normalizePath_","goog.normalizePath_","components","splice","join","loadFileSync_","goog.loadFileSync_","CLOSURE_LOAD_FILE_SYNC","xhr","open","send","responseText","retrieveAndExecModule_","goog.retrieveAndExecModule_","originalPath","importScript","execModuleScript","typeOf","goog.typeOf","s","Array","className","toString","propertyIsEnumerable","isNull","goog.isNull","goog.isDefAndNotNull","isArray","goog.isArray","isArrayLike","goog.isArrayLike","isDateLike","goog.isDateLike","isObject","getFullYear","goog.isString","isBoolean","goog.isBoolean","isNumber","goog.isNumber","goog.isFunction","goog.isObject","getUid","goog.getUid","UID_PROPERTY_","uidCounter_","hasUid","goog.hasUid","removeUid","goog.removeUid","removeAttribute","ex","Math","random","getHashCode","removeHashCode","cloneObject","goog.cloneObject","clone","key","bindNative_","goog.bindNative_","fn","selfObj","var_args","apply","bind","arguments","bindJs_","goog.bindJs_","boundArgs","slice","newArgs","unshift","goog.bind","Function","partial","goog.partial","args","mixin","goog.mixin","target","now","TRUSTED_SITE","Date","goog.globalEval","evalWorksForGlobals_","scriptElt","createTextNode","body","removeChild","getCssName","goog.getCssName","opt_modifier","getMapping","cssName","cssNameMapping_","renameByParts","mapped","rename","cssNameMappingStyle_","a","setCssNameMapping","goog.setCssNameMapping","mapping","opt_style","CLOSURE_CSS_NAME_MAPPING","getMsg","goog.getMsg","str","opt_values","match","getMsgWithFallback","goog.getMsgWithFallback","b","exportSymbol","goog.exportSymbol","publicPath","object","exportProperty","goog.exportProperty","publicName","symbol","inherits","goog.inherits","childCtor","parentCtor","tempCtor","superClass_","constructor","base","childCtor.base","me","methodName","goog.base","opt_methodName","caller","callee","STRICT_MODE_COMPATIBLE","ctorArgs","foundCaller","scope","goog.scope","defineClass","goog.defineClass","superClass","def","statics","cls","createSealingConstructor_","applyProperties_","goog.defineClass.createSealingConstructor_","ctr","SEAL_CLASS_INSTANCES","UNSEALABLE_CONSTRUCTOR_PROPERTY_","wrappedCtr","instance","OBJECT_PROTOTYPE_FIELDS_","goog.defineClass.applyProperties_","tagUnsealableClass","goog.tagUnsealableClass","LOG_ALL","LOG_NONE","LOG_OTHER","LOG_CPU","LOG_FPU","LOG_MEM","LOG_DMA","LOG_IO","LOG_PS2","LOG_PIC","LOG_VGA","LOG_PIT","LOG_MOUSE","LOG_PCI","LOG_BIOS","LOG_FLOPPY","LOG_SERIAL","LOG_DISK","LOG_RTC","LOG_HPET","LOG_ACPI","LOG_APIC","LOG_NET","LOG_VIRTIO","LOG_9P","LOG_SB16","LOG_NAMES","TLB_SYSTEM_READ","TLB_SYSTEM_WRITE","TLB_USER_READ","TLB_USER_WRITE","flag_carry","flag_parity","flag_adjust","flag_zero","flag_sign","flag_trap","flag_interrupt","flag_direction","flag_overflow","flag_iopl","flag_nt","flag_rf","flag_vm","flag_ac","flag_vif","flag_vip","flag_id","flags_default","flags_mask","flags_all","OPSIZE_8","OPSIZE_16","OPSIZE_32","PSE_ENABLED","reg_eax","reg_ecx","reg_edx","reg_ebx","reg_esp","reg_ebp","reg_esi","reg_edi","reg_ax","reg_cx","reg_dx","reg_bx","reg_sp","reg_bp","reg_si","reg_di","reg_al","reg_cl","reg_dl","reg_bl","reg_ah","reg_ch","reg_dh","reg_bh","reg_es","reg_cs","reg_ss","reg_ds","reg_fs","reg_gs","reg_tr","reg_ldtr","MMAP_BLOCK_BITS","MMAP_BLOCK_SIZE","MEM_PAGE_WRITTEN","MAGIC_CPU_EXCEPTION","REPEAT_STRING_PREFIX_NONE","REPEAT_STRING_PREFIX_NZ","REPEAT_STRING_PREFIX_Z","CR0_PE","CR0_MP","CR0_EM","CR0_TS","CR0_ET","CR0_WP","CR0_NW","CR0_CD","CR0_PG","CR4_VME","CR4_PVI","CR4_TSD","CR4_PSE","CR4_DE","CR4_PAE","CR4_PGE","CR4_OSFXSR","CR4_OSXMMEXCPT","SEG_PREFIX_NONE","SEG_PREFIX_ZERO","IA32_SYSENTER_CS","IA32_SYSENTER_ESP","IA32_SYSENTER_EIP","IA32_TIME_STAMP_COUNTER","IA32_PLATFORM_ID","MSR_EBC_FREQUENCY_ID","IA32_APIC_BASE_MSR","IA32_BIOS_SIGN_ID","IA32_MISC_ENABLE","IA32_RTIT_CTL","MSR_SMI_COUNT","IA32_MCG_CAP","IA32_KERNEL_GS_BASE","MSR_PKG_C2_RESIDENCY","IA32_APIC_BASE_BSP","IA32_APIC_BASE_EXTD","IA32_APIC_BASE_EN","TSR_BACKLINK","TSR_CR3","TSR_EIP","TSR_EFLAGS","TSR_EAX","TSR_ECX","TSR_EDX","TSR_EBX","TSR_ESP","TSR_EBP","TSR_ESI","TSR_EDI","TSR_ES","TSR_CS","TSR_SS","TSR_DS","TSR_FS","TSR_GS","TSR_LDT","FW_CFG_SIGNATURE","FW_CFG_RAM_SIZE","FW_CFG_NB_CPUS","PREFIX_MASK_REP","PREFIX_REPZ","PREFIX_REPNZ","PREFIX_MASK_SEGMENT","PREFIX_MASK_OPSIZE","PREFIX_MASK_ADDRSIZE","PREFIX_F2","PREFIX_F3","PREFIX_66","MXCSR_MASK","MIXER_CHANNEL_LEFT","MIXER_CHANNEL_RIGHT","MIXER_CHANNEL_BOTH","MIXER_SRC_MASTER","MIXER_SRC_PCSPEAKER","MIXER_SRC_DAC","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","ScreenAdapter","screen_container","bus","number_as_color","n","repeat","update_scale_text","current_scale_x","scale_x","char_wide","char_width","current_scale_y","scale_y","char_height","elem_set_scale","text_screen","elem","use_scale","style","width","height","transform","rectangle","getBoundingClientRect","scale_str","graphic_screen","imageRendering","device_pixel_ratio","devicePixelRatio","assert","graphic_context","getContext","alpha","cursor_element","graphic_image_data","graphic_buffer32","cursor_row","cursor_col","changed_rows","is_graphical","text_mode_data","text_mode_width","text_mode_height","stopped","screen","charmap_high","Uint16Array","charmap_low","charmap","chr","String","fromCharCode","imageSmoothingEnabled","position","backgroundColor","display","id","register","data","set_mode","update_buffer","put_char","update_cursor","update_cursor_scanline","clear_screen","set_size_text","set_size_char","set_size_graphical","init","this.init","timer","make_screenshot","this.make_screenshot","image","Image","toDataURL","char_size","canvas","context","font","getComputedStyle","textBaseline","scale","y","index","fillStyle","fillRect","fillText","parseInt","marginTop","w","outerHTML","e","this.put_char","row","col","bg_color","fg_color","p","this.timer","update_graphical","update_text","text_update_row","destroy","this.destroy","this.set_mode","graphical","this.clear_screen","this.set_size_text","cols","rows","Int8Array","Int32Array","childNodes","firstChild","this.set_size_char","wide","this.set_size_graphical","buffer_width","buffer_height","DEBUG_SCREEN_LAYERS","createImageData","Uint8Array","buffer","set_scale","this.set_scale","s_x","s_y","this.update_cursor_scanline","start","end","min","this.update_cursor","this.text_update_row","offset","text","row_element","fragment","color_element","color","ascii","dbg_assert","textContent","parentNode","replaceChild","this.update_buffer","layers","putImageData","strokeStyle","lineWidth","forEach","layer","strokeRect","buffer_x","buffer_y","screen_x","screen_y","EPERM","ENOENT","EINVAL","ENOTSUPP","ENOTEMPTY","EPROTO","P9_SETATTR_MODE","P9_SETATTR_UID","P9_SETATTR_GID","P9_SETATTR_SIZE","P9_SETATTR_ATIME","P9_SETATTR_MTIME","P9_SETATTR_CTIME","P9_SETATTR_ATIME_SET","P9_SETATTR_MTIME_SET","P9_STAT_MODE_DIR","P9_STAT_MODE_APPEND","P9_STAT_MODE_EXCL","P9_STAT_MODE_MOUNT","P9_STAT_MODE_AUTH","P9_STAT_MODE_TMP","P9_STAT_MODE_SYMLINK","P9_STAT_MODE_LINK","P9_STAT_MODE_DEVICE","P9_STAT_MODE_NAMED_PIPE","P9_STAT_MODE_SOCKET","P9_STAT_MODE_SETUID","P9_STAT_MODE_SETGID","P9_STAT_MODE_SETVTX","FID_NONE","FID_INODE","FID_XATTR","Virtio9p","filesystem","fs","SendReply","this.SendReply","deviceid","hostfeature","configspace","VERSION","msize","BLOCKSIZE","replybuffer","replybuffersize","fids","get_state","Virtio9p.prototype.get_state","map","f","inodeid","uid","set_state","Virtio9p.prototype.set_state","Createfid","Virtio9p.prototype.Createfid","inode","Reset","Virtio9p.prototype.Reset","BuildReply","Virtio9p.prototype.BuildReply","tag","payloadsize","marshall","Marshall","message","Debug","SendError","Virtio9p.prototype.SendError","errormsg","errorcode","size","ReceiveRequest","Virtio9p.prototype.ReceiveRequest","GetByte","header","Unmarshall2","GetTotalSize","space","GetSpace","req","floor","inodes","fid","mode","idx","GetInode","ret","OpenInode","AddEvent","qid","dfid","CreateInode","inodetarget","targetdata","inodedata","symlink","parentid","PushInode","symgt","gid","CreateSymlink","major","minor","CreateNode","CreateDirectory","S_IFDIR","flags","CreateFile","status","STATUS_UNLINKED","nlinks","atime","mtime","ctime","getTime","ChangeSize","caps","file","Write","olddirfid","oldname","newdirfid","newname","Rename","dirfd","Search","Unlink","version","hex8","nwfid","nwname","wnames","walk","nwidx","CloseInode","attr_size","newfid","PrepareCAPs","Abort","LOG_TO_FILE","LOG_ALL_IO","LOG_PAGE_FAULTS","LOG_LEVEL","ENABLE_HPET","ENABLE_ACPI","WINNT_FIX","LOOP_COUNTER","TIME_PER_FRAME","TSC_RATE","APIC_TIMER_FREQ","VMWARE_HYPERVISOR_PORT","IO","cpu","ports","create_empty_entry","memory_size","memory_map_read8","memory_map_write8","memory_map_read32","memory_map_write32","mmap_register","addr","dbg_log","h","IO.prototype.create_empty_entry","read8","empty_port_read8","read16","empty_port_read16","read32","empty_port_read32","write8","empty_port_write","write16","write32","device","IO.prototype.empty_port_read8","IO.prototype.empty_port_read16","IO.prototype.empty_port_read32","IO.prototype.empty_port_write","register_read","IO.prototype.register_read","port_addr","r8","r16","r32","fail","register_write","IO.prototype.register_write","w8","w16","w32","register_read_consecutive","IO.prototype.register_read_consecutive","r8_1","r8_2","r8_3","r8_4","r16_1","r16_2","register_write_consecutive","IO.prototype.register_write_consecutive","w8_1","w8_2","w8_3","w8_4","w16_1","w16_2","in_mmap_range","IO.prototype.in_mmap_range","in_mapped_range","mmap_read32_shim","IO.prototype.mmap_read32_shim","mmap_write32_shim","IO.prototype.mmap_write32_shim","IO.prototype.mmap_register","read_func8","write_func8","read_func32","write_func32","aligned_addr","port_write8","IO.prototype.port_write8","get_port_description","port_write16","IO.prototype.port_write16","port_write32","IO.prototype.port_write32","port_read8","IO.prototype.port_read8","port_read16","IO.prototype.port_read16","port_read32","IO.prototype.port_read32","debug_port_list","IO.prototype.get_port_description","v86","running","CPU","run","stop","restart","register_tick","v86.prototype.run","fast_next_tick","do_tick","v86.prototype.do_tick","dt","main_run","next_tick","v86.prototype.stop","v86.prototype.destroy","unregister_tick","v86.prototype.restart","reset","load_bios","v86.prototype.init","settings","setImmediate","postMessage","MAGIC_POST_MESSAGE","tick","addEventListener","removeEventListener","setTimeout","hidden","t","save_state","v86.prototype.save_state","restore_state","v86.prototype.restore_state","microtick","performance","v86.microtick","v86util","pads","v86util.pads","len","pad0","v86util.pad0","toUpperCase","crypto","getRandomValues","rand_data","has_rand_int","v86util.has_rand_int","get_rand_int","v86util.get_rand_int","SyncBuffer","byteLength","onprogress","onload","load","SyncBuffer.prototype.load","SyncBuffer.prototype.get","set","SyncBuffer.prototype.set","get_buffer","SyncBuffer.prototype.get_buffer","clz32","int_log2_byte","v86util.int_log2_byte","int_log2","v86util.int_log2","int_log2_table","tt","mul_low","imul_low","imul","imul_high","v86util.imul_high","mul_high","v86util.mul_high","ByteQueue","this.push","item","this.shift","peek","this.peek","clear","this.clear","FloatQueue","Float32Array","FloatQueue.prototype.push","FloatQueue.prototype.shift","shift_block","FloatQueue.prototype.shift_block","slice_end","subarray","FloatQueue.prototype.peek","FloatQueue.prototype.clear","CircularQueue","add","CircularQueue.prototype.add","toArray","CircularQueue.prototype.toArray","concat","CircularQueue.prototype.clear","CircularQueue.prototype.set","new_data","dump_file","ab","blob","Blob","download","file_or_blob","href","URL","createObjectURL","dataset","createEvent","ev","initMouseEvent","dispatchEvent","click","revokeObjectURL","FPU_LOG_OP","FPU_C0","FPU_C1","FPU_C2","FPU_C3","FPU_RESULT_FLAGS","FPU_STACK_TOP","FPU_PC","FPU_RC","FPU_IF","FPU_EX_SF","FPU_EX_P","FPU_EX_U","FPU_EX_O","FPU_EX_Z","FPU_EX_D","FPU_EX_I","TWO_POW_63","FPU","st","Float64Array","float32","float32_byte","float32_int","float64","float64_byte","float64_int","st8","st32","stack_empty","stack_ptr","control_word","fpu_dp_selector","fpu_dp","fpu_opcode","fpu_ip_selector","fpu_ip","status_word","indefinite_nan","NaN","constants","log","LN2","LOG2E","PI","LN10","FPU.prototype.get_state","FPU.prototype.set_state","fpu_unimpl","FPU.prototype.fpu_unimpl","dbg_trace","trigger_ud","stack_fault","FPU.prototype.stack_fault","invalid_arithmatic","FPU.prototype.invalid_arithmatic","fcom","FPU.prototype.fcom","get_st0","fucom","FPU.prototype.fucom","fcomi","FPU.prototype.fcomi","flags_changed","fucomi","FPU.prototype.fucomi","ftst","FPU.prototype.ftst","isNaN","fxam","FPU.prototype.fxam","sign","Infinity","finit","FPU.prototype.finit","load_status_word","FPU.prototype.load_status_word","set_status_word","FPU.prototype.set_status_word","sw","load_tag_word","FPU.prototype.load_tag_word","tag_word","isFinite","set_tag_word","FPU.prototype.set_tag_word","fstenv","FPU.prototype.fstenv","is_osize_32","writable_or_pagefault","safe_write16","safe_write32","fldenv","FPU.prototype.fldenv","safe_read16","safe_read32s","fsave","FPU.prototype.fsave","store_m80","frstor","FPU.prototype.frstor","load_m80","fxtract","FPU.prototype.fxtract","exponent","integer_round","FPU.prototype.integer_round","truncate","FPU.prototype.truncate","ceil","FPU.prototype.push","pop","FPU.prototype.pop","get_sti","FPU.prototype.get_sti","FPU.prototype.get_st0","FPU.prototype.load_m80","low","high","mantissa","pow","FPU.prototype.store_m80","load_m64","FPU.prototype.load_m64","store_m64","FPU.prototype.store_m64","load_m32","FPU.prototype.load_m32","store_m32","FPU.prototype.store_m32","FPU.prototype.sign","dbg_log_fpu_op","FPU.prototype.dbg_log_fpu_op","op","imm8","instruction_pointer","fwait","FPU.prototype.fwait","op_D8_reg","FPU.prototype.op_D8_reg","mod","sti","st0","op_D8_mem","FPU.prototype.op_D8_mem","m32","op_D9_reg","FPU.prototype.op_D9_reg","abs","tan","atan2","st1","fprem_quotient","trunc","sqrt","sin","cos","op_D9_mem","FPU.prototype.op_D9_mem","word","op_DA_reg","FPU.prototype.op_DA_reg","test_b","test_z","test_be","test_p","op_DA_mem","FPU.prototype.op_DA_mem","op_DB_reg","FPU.prototype.op_DB_reg","op_DB_mem","FPU.prototype.op_DB_mem","int32","op_DC_reg","FPU.prototype.op_DC_reg","low_ptr","op_DC_mem","FPU.prototype.op_DC_mem","m64","op_DD_reg","FPU.prototype.op_DD_reg","op_DD_mem","FPU.prototype.op_DD_mem","op_DE_reg","FPU.prototype.op_DE_reg","op_DE_mem","FPU.prototype.op_DE_mem","m16","op_DF_reg","FPU.prototype.op_DF_reg","reg16","op_DF_mem","FPU.prototype.op_DF_mem","st0_low","st0_high","hex_dump","result","line","byt","CDROM_SECTOR_SIZE","HD_SECTOR_SIZE","IDEDevice","master_buffer","slave_buffer","is_cd","nr","master","IDEInterface","slave","current_interface","ata_port","irq","pci_id","ata_port_high","master_port","pci_space","pci_bars","device_control","io","device_lower_irq","read_status","write_control","read_data","error","bytecount","sector","cylinder_low","cylinder_high","drive_head","write_data_port8","write_data_port16","write_data_port32","lba_count","is_lba","dma_command","dma_status","prdt_addr","ata_command","dma_read_addr","dma_set_addr","dma_read_command8","dma_read_command","dma_write_command8","dma_write_command","dma_read_status","dma_write_status","devices","pci","register_device","IDEDevice.prototype.read_status","IDEDevice.prototype.write_control","device_reset","IDEDevice.prototype.dma_read_addr","IDEDevice.prototype.dma_set_addr","IDEDevice.prototype.dma_read_status","IDEDevice.prototype.dma_write_status","IDEDevice.prototype.dma_read_command","IDEDevice.prototype.dma_read_command8","IDEDevice.prototype.dma_write_command","IDEDevice.prototype.dma_write_command8","old_command","current_command","do_ata_read_sectors_dma","do_ata_write_sectors_dma","do_atapi_dma","push_irq","IDEDevice.prototype.push_irq","device_raise_irq","IDEDevice.prototype.get_state","IDEDevice.prototype.set_state","device_nr","interface_nr","sector_size","is_atapi","cylinder_count","sectors_per_track","head_count","sector_count","rtc","cmos_write","CMOS_BIOS_DISKTRANSFLAG","cmos_read","CMOS_DISK_DATA","reg","CMOS_DISK_DRIVE1_CYL","stats","sectors_read","sectors_written","bytes_read","bytes_written","loading","sectors_per_drq","data_pointer","data16","data32","data_end","data_length","current_atapi_command","write_dest","IDEInterface.prototype.device_reset","IDEInterface.prototype.push_irq","IDEInterface.prototype.ata_command","cmd","last_sector","ata_read_sectors","ata_write_sectors","data_allocate","create_identify_packet","ata_read_sectors_dma","ata_write_sectors_dma","atapi_handle","IDEInterface.prototype.atapi_handle","data_set","atapi_read_dma","atapi_read","format","page_code","do_write","IDEInterface.prototype.do_write","ata_advance","report_write","IDEInterface.prototype.atapi_read","lba","byte_count","req_length","report_read_start","report_read_end","IDEInterface.prototype.atapi_read_dma","IDEInterface.prototype.do_atapi_dma","prdt_start","read32s","write_blob","IDEInterface.prototype.read_data","align","read_end","IDEInterface.prototype.read_end","write_data_port","IDEInterface.prototype.write_data_port","write_end","IDEInterface.prototype.write_data_port8","IDEInterface.prototype.write_data_port16","IDEInterface.prototype.write_data_port32","IDEInterface.prototype.write_end","IDEInterface.prototype.ata_advance","sectors","new_sector","get_lba48","get_lba28","get_chs","c","IDEInterface.prototype.ata_read_sectors","is_lba48","get_count","get_lba","is_single","IDEInterface.prototype.ata_read_sectors_dma","IDEInterface.prototype.do_ata_read_sectors_dma","orig_prdt_start","prd_addr","prd_count","IDEInterface.prototype.ata_write_sectors","data_allocate_noclear","IDEInterface.prototype.ata_write_sectors_dma","IDEInterface.prototype.do_ata_write_sectors_dma","prdt_count","prdt_write_count","mem8","IDEInterface.prototype.get_chs","IDEInterface.prototype.get_lba28","IDEInterface.prototype.get_lba48","IDEInterface.prototype.get_lba","IDEInterface.prototype.get_count","IDEInterface.prototype.create_identify_packet","IDEInterface.prototype.data_allocate","IDEInterface.prototype.data_allocate_noclear","IDEInterface.prototype.data_set","IDEInterface.prototype.report_read_start","IDEInterface.prototype.report_read_end","IDEInterface.prototype.report_write","IDEInterface.prototype.get_state","IDEInterface.prototype.set_state","PCI_CONFIG_ADDRESS","PCI_CONFIG_DATA","PCI","pci_addr","pci_value","pci_response","pci_status","pci_addr32","pci_value32","pci_response32","pci_status32","device_spaces","pci_write8","pci_write16","pci_write32","out_byte","reboot_internal","pci_query","host_bridge","PAM0","isa_bridge","isa_bridge_space","isa_bridge_space8","PCI.prototype.get_state","PCI.prototype.set_state","bar_nr","bar","set_io_bars","original_bar","PCI.prototype.pci_query","bdf","dev","dbg_line","PCI.prototype.pci_write8","address","PCI.prototype.pci_write16","PCI.prototype.pci_write32","space_addr","from","to","pci_rom_size","pci_rom_address","PCI.prototype.register_device","device_id","bar_space","bar_base","entries","port","PCI.prototype.set_io_bars","old_entry","empty_entry","raise_irq","PCI.prototype.raise_irq","lower_irq","PCI.prototype.lower_irq","FloppyController","fda_image","fdb_image","dma","bytes_expecting","receiving_command","receiving_index","next_command","response_data","floppy_size","response_length","response_index","last_head","last_cylinder","drive","status_reg2","status_reg1","status_reg0","dor","floppy_type","floppy_types","tracks","heads","CMOS_FLOPPY_DRIVE_TYPE","number_of_heads","number_of_cylinders","port3F0_read","port3F2_read","port3F4_read","port3F5_read","port3F7_read","port3F2_write","port3F5_write","FloppyController.prototype.get_state","FloppyController.prototype.set_state","FloppyController.prototype.port3F0_read","FloppyController.prototype.port3F4_read","return_byte","FloppyController.prototype.port3F7_read","FloppyController.prototype.port3F5_read","FloppyController.prototype.port3F5_write","reg_byte","fix_drive_data","check_drive_status","this.next_command","do_sector","calibrate","check_interrupt_status","read_sector_id","seek","FloppyController.prototype.port3F2_read","FloppyController.prototype.port3F2_write","FloppyController.prototype.check_drive_status","FloppyController.prototype.seek","FloppyController.prototype.calibrate","FloppyController.prototype.check_interrupt_status","FloppyController.prototype.do_sector","is_write","cylinder","read_count","read_offset","done","do_read","FloppyController.prototype.done","FloppyController.prototype.fix_drive_data","FloppyController.prototype.read_sector_id","FloppyController.prototype.raise_irq","A20_MASK","A20_MASK16","A20_MASK32","USE_A20","debug_write","CPU.prototype.debug_write","debug_read","CPU.prototype.debug_read","mmap_read8","CPU.prototype.mmap_read8","mmap_write8","CPU.prototype.mmap_write8","mmap_read16","CPU.prototype.mmap_read16","mmap_write16","CPU.prototype.mmap_write16","mmap_read32","CPU.prototype.mmap_read32","mmap_write32","CPU.prototype.mmap_write32","CPU.prototype.in_mapped_range","CPU.prototype.read8","a20_enabled","CPU.prototype.read16","read_aligned16","CPU.prototype.read_aligned16","mem16","CPU.prototype.read32s","read_aligned32","CPU.prototype.read_aligned32","mem32s","CPU.prototype.write8","CPU.prototype.write16","write_aligned16","CPU.prototype.write_aligned16","CPU.prototype.write32","write_aligned32","CPU.prototype.write_aligned32","CPU.prototype.write_blob","write_blob32","CPU.prototype.write_blob32","DMA","channel_page","channel_pagehi","channel_addr","channel_addr_init","channel_count","channel_count_init","channel_mask","channel_mode","unmask_listeners","lsb_msb_flipflop","port_addr_write","port_count_write","port_addr_read","port_count_read","port_page_write","port_page_read","port_pagehi_write","port_pagehi_read","port_singlemask_write","port_multimask_write","port_multimask_read","port_mode_write","portC_write","DMA.prototype.get_state","DMA.prototype.set_state","DMA.prototype.port_count_write","channel","data_byte","flipflop_get","DMA.prototype.port_count_read","flipflop_read","DMA.prototype.port_addr_write","DMA.prototype.port_addr_read","DMA.prototype.port_pagehi_write","DMA.prototype.port_pagehi_read","DMA.prototype.port_page_write","DMA.prototype.port_page_read","DMA.prototype.port_singlemask_write","channel_offset","update_mask","DMA.prototype.port_multimask_write","DMA.prototype.port_multimask_read","DMA.prototype.port_mode_write","DMA.prototype.portC_write","on_unmask","DMA.prototype.on_unmask","this_value","DMA.prototype.update_mask","DMA.prototype.do_read","count_get_8bit","address_get_8bit","DMA.prototype.do_write","bytes_per_count","read_bytes","unfinished","want_more","autoinit","DMA.prototype.address_get_8bit","DMA.prototype.count_get_8bit","DMA.prototype.flipflop_get","old_dword","new_byte","continuing","DMA.prototype.flipflop_read","dword","OSCILLATOR_FREQ","PIT","counter_start_time","counter_start_value","counter_next_low","counter_enabled","counter_mode","counter_read_mode","counter_latch","counter_latch_value","counter_reload","ref_toggle","counter2_out","did_rollover","counter_read","counter_write","port43_write","PIT.prototype.get_state","PIT.prototype.set_state","PIT.prototype.timer","no_irq","get_counter_value","time_to_next_interrupt","PIT.prototype.get_counter_value","diff","diff_in_ticks","reload","PIT.prototype.did_rollover","PIT.prototype.counter_read","latch","next_low","PIT.prototype.counter_write","PIT.prototype.port43_write","binary_mode","read_mode","VGA_BANK_SIZE","MAX_XRES","MAX_YRES","MAX_BPP","VGA_LFB_ADDRESS","VGA_PIXEL_BUFFER_START","VGA_PIXEL_BUFFER_SIZE","VGA_MIN_MEMORY_SIZE","VGA_HOST_MEMORY_SPACE_START","Uint32Array","VGA_HOST_MEMORY_SPACE_SIZE","VGAScreen","vga_memory_size","cursor_address","cursor_scanline_start","cursor_scanline_end","max_cols","max_rows","virtual_height","virtual_width","screen_height","screen_width","start_address_latched","start_address","crtc","line_compare","offset_register","preset_row_scan","underline_location_register","vertical_blank_start","vertical_display_enable_end","horizontal_blank_start","horizontal_display_enable_end","crtc_mode","text_char_width","text_char_height","text_char_wide","character_map_value","character_map","graphical_mode_is_linear","graphical_mode","vga256_palette","svga_height","svga_width","latch_dword","svga_enabled","svga_bpp","svga_offset","svga_bank_offset","res_x","res_y","bpp","dac_state","dac_color_index_read","dac_color_index_write","index_crtc","dac_mask","dac_map","attribute_controller_index","palette_source","color_select","horizontal_panning","color_plane_enable","attribute_mode","sequencer_index","plane_write_bm","clocking_mode","sequencer_memory_mode","graphics_index","planar_rotate_reg","planar_mode","plane_read","planar_bitmap","max_scan_line","color_dont_care","color_compare","miscellaneous_graphics_register","planar_setreset_enable","planar_setreset","port_3DA_value","miscellaneous_output_register","port3C0_write","port3C0_read","port3C0_read16","port3C1_read","port3C2_write","port3C4_write","port3C5_write","port3C4_read","port3C5_read","port3CE_write","port3CF_write","port3CE_read","port3CF_read","port3C6_read","port3C6_write","port3C7_write","port3C7_read","port3C8_write","port3C8_read","port3C9_write","port3C9_read","port3CC_read","port3D4_write","port3D5_write","port3D4_read","port3D5_read","port3DA_read","dispi_index","dispi_enable_value","port1CE_write","port1CF_write","port1CF_read","svga_memory","diff_addr_min","diff_addr_max","diff_plot_min","diff_plot_max","dest_buffer","screen_fill_buffer","svga_memory16","svga_memory32","vga_memory","plane0","plane1","plane2","plane3","pixel_buffer","vga_memory_read","vga_memory_write","svga_memory_read8","svga_memory_write8","svga_memory_read32","svga_memory_write32","VGAScreen.prototype.get_state","VGAScreen.prototype.set_state","update_layers","update_vga_size","complete_replot","complete_redraw","VGAScreen.prototype.vga_memory_read","memory_space_select","reading","plane","VGAScreen.prototype.vga_memory_write","vga_memory_write_graphical_linear","vga_memory_write_graphical","vga_memory_write_text_mode","VGAScreen.prototype.vga_memory_write_graphical_linear","VGAScreen.prototype.vga_memory_write_graphical","write_mode","bitmask","apply_feed","setreset_dword","apply_expand","setreset_enable_dword","apply_rotate","plane_dword","apply_setreset","apply_logical","apply_bitmask","plane_select","pixel_addr","vga_addr_to_pixel","partial_replot","VGAScreen.prototype.apply_feed","VGAScreen.prototype.apply_expand","VGAScreen.prototype.apply_rotate","VGAScreen.prototype.apply_setreset","data_dword","enable_dword","VGAScreen.prototype.apply_logical","VGAScreen.prototype.apply_bitmask","bitmask_dword","text_mode_redraw","VGAScreen.prototype.text_mode_redraw","VGAScreen.prototype.vga_memory_write_text_mode","memory_start","VGAScreen.prototype.update_cursor","VGAScreen.prototype.svga_memory_read8","VGAScreen.prototype.svga_memory_read32","VGAScreen.prototype.svga_memory_write8","VGAScreen.prototype.svga_memory_write32","VGAScreen.prototype.complete_redraw","VGAScreen.prototype.complete_replot","partial_redraw","VGAScreen.prototype.partial_redraw","max","VGAScreen.prototype.partial_replot","reset_diffs","VGAScreen.prototype.reset_diffs","VGAScreen.prototype.destroy","vga_bytes_per_line","VGAScreen.prototype.vga_bytes_per_line","bytes_per_line","vga_addr_shift_count","VGAScreen.prototype.vga_addr_shift_count","shift_count","VGAScreen.prototype.vga_addr_to_pixel","scan_line_to_screen_row","VGAScreen.prototype.scan_line_to_screen_row","scan_line","VGAScreen.prototype.set_size_text","cols_count","rows_count","VGAScreen.prototype.set_size_graphical","VGAScreen.prototype.update_vga_size","horizontal_characters","vertical_scans","available_bytes","update_vertical_retrace","VGAScreen.prototype.update_layers","start_addr","pixel_panning","byte_panning","pixel_addr_start","start_buffer_row","start_buffer_col","split_screen_row","split_buffer_height","start_split_col","VGAScreen.prototype.update_vertical_retrace","VGAScreen.prototype.update_cursor_scanline","VGAScreen.prototype.port3C0_write","previous_mode","VGAScreen.prototype.port3C0_read","VGAScreen.prototype.port3C0_read16","VGAScreen.prototype.port3C1_read","VGAScreen.prototype.port3C2_write","VGAScreen.prototype.port3C4_write","VGAScreen.prototype.port3C4_read","VGAScreen.prototype.port3C5_write","previous_clocking_mode","VGAScreen.prototype.port3C5_read","VGAScreen.prototype.port3C6_write","VGAScreen.prototype.port3C6_read","VGAScreen.prototype.port3C7_write","VGAScreen.prototype.port3C7_read","VGAScreen.prototype.port3C8_write","VGAScreen.prototype.port3C8_read","VGAScreen.prototype.port3C9_write","color_byte","VGAScreen.prototype.port3C9_read","color8","VGAScreen.prototype.port3CC_read","VGAScreen.prototype.port3CE_write","VGAScreen.prototype.port3CE_read","VGAScreen.prototype.port3CF_write","previous_planar_mode","VGAScreen.prototype.port3CF_read","VGAScreen.prototype.port3D4_write","VGAScreen.prototype.port3D4_read","VGAScreen.prototype.port3D5_write","previous_vertical_display_enable_end","previous_vertical_blank_start","previous_underline","VGAScreen.prototype.port3D5_read","VGAScreen.prototype.port3DA_read","svga_bytes_per_line","VGAScreen.prototype.svga_bytes_per_line","bits","VGAScreen.prototype.port1CE_write","VGAScreen.prototype.port1CF_write","VGAScreen.prototype.port1CF_read","svga_register_read","VGAScreen.prototype.svga_register_read","vga_replot","VGAScreen.prototype.vga_replot","addr_shift","addr_substitution","shift_mode","pel_width","byte0","byte1","byte2","byte3","shift_loads","vga_redraw","VGAScreen.prototype.vga_redraw","mask","colorset","color256","VGAScreen.prototype.screen_fill_buffer","start_pixel","end_pixel","red","green","blue","min_y","PS2_LOG_VERBOSE","PS2","use_mouse","enable_mouse_stream","have_mouse","mouse_clicks","mouse_delta_y","mouse_delta_x","have_keyboard","next_read_resolution","next_read_rate","next_handle_scan_code_set","next_read_led","next_read_sample","next_is_mouse_command","enable_keyboard_stream","kbd_buffer","last_port60_byte","sample_rate","mouse_id","mouse_detect_state","mouse_reset_workaround","wheel_movement","resolution","scaling2","last_mouse_packet","mouse_buffer","next_byte_is_aux","next_byte_is_ready","code","kbd_send_code","mouse_send_click","mouse_send_delta","send_mouse_packet","command_register","controller_output_port","read_controller_output_port","read_command_register","read_output_register","port60_read","port64_read","port60_write","port64_write","PS2.prototype.get_state","PS2.prototype.set_state","PS2.prototype.raise_irq","kbd_irq","mouse_irq","PS2.prototype.mouse_irq","PS2.prototype.kbd_irq","PS2.prototype.kbd_send_code","PS2.prototype.mouse_send_delta","delta_x","delta_y","factor","change_x","change_y","PS2.prototype.mouse_send_click","left","middle","right","PS2.prototype.send_mouse_packet","dx","dy","info_byte","apply_scaling2","PS2.prototype.apply_scaling2","PS2.prototype.port60_read","PS2.prototype.port64_read","status_byte","PS2.prototype.port60_write","write_byte","PS2.prototype.port64_write","PIC_LOG_VERBOSE","PIC","irq_value","irr","isr","irq_map","irq_mask","requested_irq","is_master","expect_icw4","read_isr","auto_eoi","elcr","special_mask_mode","check_irqs","this.check_irqs","handle_irqs","enabled_irr","special_mask","irq_number","acknowledge_irq","this.acknowledge_irq","pic_call_irq","set_irq","dump","this.dump","io_base","iobase_high","port20_write","port20_read","port21_write","port21_read","port4D0_write","port4D0_read","this.set_irq","clear_irq","this.clear_irq","get_isr","this.get_isr","PIC.prototype.get_state","PIC.prototype.set_state","PIC.prototype.port20_write","eoi_type","PIC.prototype.port20_read","PIC.prototype.port21_write","PIC.prototype.port21_read","PIC.prototype.port4D0_read","PIC.prototype.port4D0_write","CMOS_RTC_SECONDS","CMOS_RTC_SECONDS_ALARM","CMOS_RTC_MINUTES","CMOS_RTC_MINUTES_ALARM","CMOS_RTC_HOURS","CMOS_RTC_HOURS_ALARM","CMOS_RTC_DAY_WEEK","CMOS_RTC_DAY_MONTH","CMOS_RTC_MONTH","CMOS_RTC_YEAR","CMOS_STATUS_A","CMOS_STATUS_B","CMOS_STATUS_C","CMOS_STATUS_D","CMOS_RESET_CODE","CMOS_EQUIPMENT_INFO","CMOS_MEM_BASE_LOW","CMOS_MEM_BASE_HIGH","CMOS_MEM_OLD_EXT_LOW","CMOS_MEM_OLD_EXT_HIGH","CMOS_DISK_DRIVE1_TYPE","CMOS_DISK_DRIVE2_TYPE","CMOS_DISK_DRIVE2_CYL","CMOS_MEM_EXTMEM_LOW","CMOS_MEM_EXTMEM_HIGH","CMOS_CENTURY","CMOS_MEM_EXTMEM2_LOW","CMOS_MEM_EXTMEM2_HIGH","CMOS_CENTURY_PS2","CMOS_BIOS_BOOTFLAG1","CMOS_BIOS_BOOTFLAG2","CMOS_MEM_HIGHMEM_LOW","CMOS_MEM_HIGHMEM_MID","CMOS_MEM_HIGHMEM_HIGH","CMOS_BIOS_SMP_COUNT","RTC","cmos_index","cmos_data","last_update","rtc_time","next_interrupt_alarm","next_interrupt","periodic_interrupt","periodic_interrupt_time","cmos_a","cmos_b","nmi_disabled","cmos_c","cmos_port_write","cmos_port_read","RTC.prototype.get_state","RTC.prototype.set_state","RTC.prototype.timer","time","legacy_mode","bcd_pack","RTC.prototype.bcd_pack","digit","bcd_unpack","RTC.prototype.bcd_unpack","encode_time","RTC.prototype.encode_time","decode_time","RTC.prototype.decode_time","RTC.prototype.cmos_port_read","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","RTC.prototype.cmos_port_write","seconds","minutes","hours","alarm_date","UTC","RTC.prototype.cmos_read","RTC.prototype.cmos_write","cmos_write_lowhi","RTC.prototype.cmos_write_lowhi","cmos_write_hilow","RTC.prototype.cmos_write_hilow","DLAB","UART_IER_MSI","UART_IER_THRI","UART_IER_RDI","UART_IIR_MSI","UART_IIR_NO_INT","UART_IIR_THRI","UART_IIR_RDI","UART_IIR_RLSI","UART_IIR_CTI","UART_LSR_DATA_READY","UART_LSR_TX_EMPTY","UART_LSR_TRANSMITTER_EMPTY","UART","ints","line_control","baud_rate","lsr","ier","fifo_control","iir","scratch_register","modem_status","modem_control","input","current_line","com","data_received","write_data","out_word","CheckInterrupt","ClearInterrupt","UART.prototype.get_state","UART.prototype.set_state","UART.prototype.CheckInterrupt","ThrowInterrupt","UART.prototype.ThrowInterrupt","UART.prototype.ClearInterrupt","UART.prototype.data_received","UART.prototype.write_data","char","trimRight","HPET_ADDR","HPET_PERIOD","HPET_FREQ_MS","HPET_SUPPORT_64","HPET_COUNTER_CONFIG","HPET_COUNTER_CONFIG_MASK","HPET_NUM_COUNTERS","HPET","get_counter","hpet_enabled","hpet_start","hpet_offset_low","get_counter_high","hpet_offset_high","counter_read_acc_next","interrupt_status","counter_config","counter_comparator","counter_accumulator","last_check","counter_value","config","comparator","do_irq","mmio_read","counter","mmio_write","PMTIMER_FREQ_SECONDS","ACPI","acpi","timer_imprecision_offset","timer_last_value","pm1_enable","pm1_status","last_timer","get_timer","gpe","ACPI.prototype.timer","highest_bit_changed","ACPI.prototype.get_timer","round","ACPI.prototype.get_state","ACPI.prototype.set_state","APIC_LOG_VERBOSE","APIC_ADDRESS","APIC_TIMER_MODE_MASK","APIC_TIMER_MODE_ONE_SHOT","APIC_TIMER_MODE_PERIODIC","APIC_TIMER_MODE_TSC","DELIVERY_MODES","DESTINATION_MODES","APIC","timer_divider","apic_id","timer_divider_shift","timer_current_count","timer_initial_count","lvt_error","lvt_int1","lvt_int0","lvt_perf_counter","lvt_timer","IOAPIC_CONFIG_MASKED","icr1","icr0","tpr","tmr","spurious_vector","destination_format","read_error","local_destination","off","APIC.prototype.read32","APIC.prototype.write32","check_vector","highest_isr","register_clear_bit","register_get_bit","ioapic","remote_eoi","vector","delivery_mode","destination_mode","is_level","destination_shorthand","destination","route","deliver","IOAPIC_DELIVERY_FIXED","divide_shift","timer_active","APIC.prototype.timer","freq","steps","APIC.prototype.route","APIC.prototype.deliver","IOAPIC_DELIVERY_INIT","IOAPIC_DELIVERY_NMI","register_set_bit","highest_irr","APIC.prototype.highest_irr","highest","register_get_highest_bit","APIC.prototype.highest_isr","APIC.prototype.check_vector","APIC.prototype.acknowledge_irq","APIC.prototype.get_state","APIC.prototype.set_state","APIC.prototype.register_get_bit","v","bit","APIC.prototype.register_set_bit","APIC.prototype.register_clear_bit","APIC.prototype.register_get_highest_bit","IOAPIC_ADDRESS","IOREGSEL","IOWIN","IOAPIC_IRQ_COUNT","IOAPIC_ID","IOAPIC_CONFIG_TRIGGER_MODE_LEVEL","IOAPIC_CONFIG_DELIVS","IOAPIC_CONFIG_REMOTE_IRR","IOAPIC_CONFIG_READONLY_MASK","IOAPIC_DELIVERY_LOWEST_PRIORITY","IOAPIC","ioredtbl_config","ioredtbl_destination","ioregsel","ioapic_id","byte","read","IOAPIC.prototype.remote_eoi","check_irq","IOAPIC.prototype.check_irq","apic","IOAPIC.prototype.set_irq","IOAPIC.prototype.clear_irq","IOAPIC.prototype.read","IOAPIC.prototype.write","old_value","disabled","IOAPIC.prototype.get_state","IOAPIC.prototype.set_state","STATE_VERSION","STATE_MAGIC","STATE_INDEX_MAGIC","STATE_INDEX_VERSION","STATE_INDEX_TOTAL_LEN","STATE_INDEX_INFO_LEN","STATE_INFO_BLOCK_START","StateLoadError","save_object","saved_buffers","BYTES_PER_ELEMENT","byteOffset","restore_object","buffers","current","table","Int16Array","info","infos","full","buf","CPU.prototype.save_state","buffer_infos","total_buffer_size","info_object","buffer_block_start","total_size","ArrayBuffer","header_block","info_block","buffer_block","charCodeAt","CPU.prototype.restore_state","info_block_len","info_block_str_len","info_block_buffer","info_block_obj","parse","state_object","NE2K_LOG_VERBOSE","E8390_CMD","EN0_CLDALO","EN0_STARTPG","EN0_CLDAHI","EN0_STOPPG","EN0_BOUNDARY","EN0_TSR","EN0_TPSR","EN0_NCR","EN0_TCNTLO","EN0_FIFO","EN0_TCNTHI","EN0_ISR","EN0_CRDALO","EN0_RSARLO","EN0_CRDAHI","EN0_RSARHI","EN0_RCNTLO","EN0_RCNTHI","EN0_RSR","EN0_RXCR","EN0_TXCR","EN0_COUNTER0","EN0_DCFG","EN0_COUNTER1","EN0_IMR","EN0_COUNTER2","NE_DATAPORT","NE_RESET","ENISR_RX","ENISR_TX","ENISR_RX_ERR","ENISR_TX_ERR","ENISR_OVER","ENISR_COUNTERS","ENISR_RDC","ENISR_RESET","ENISR_ALL","ENRSR_RXOK","START_PAGE","START_RX_PAGE","STOP_PAGE","Ne2k","preserve_mac_from_state_image","receive","imr","cr","tpsr","tcnt","rcnt","dcfg","memory","txcr","rxcr","tsr","mac","rsar","pstart","pstop","boundary","curpg","do_interrupt","pg","get_page","update_irq","data_port_read8","data_port_read16","data_port_read32","data_port_write16","data_port_write32","Ne2k.prototype.get_state","Ne2k.prototype.set_state","Ne2k.prototype.do_interrupt","ir_mask","Ne2k.prototype.update_irq","data_port_write","Ne2k.prototype.data_port_write","Ne2k.prototype.data_port_write16","Ne2k.prototype.data_port_write32","data_port_read","Ne2k.prototype.data_port_read","Ne2k.prototype.data_port_read8","Ne2k.prototype.data_port_read16","Ne2k.prototype.data_port_read32","Ne2k.prototype.receive","total_length","packet_length","data_start","next","needed","available","cut","fill","Ne2k.prototype.get_page","DSP_COPYRIGHT","DSP_NO_COMMAND","DSP_BUFSIZE","DSP_DACSIZE","SB_DMA_BUFSIZE","SB_DMA_BLOCK_SAMPLES","SB_DMA0","SB_DMA1","SB_DMA3","SB_DMA5","SB_DMA6","SB_DMA7","SB_DMA_CHANNEL_8BIT","SB_DMA_CHANNEL_16BIT","SB_IRQ2","SB_IRQ5","SB_IRQ7","SB_IRQ10","SB_IRQ","SB_IRQ_8BIT","SB_IRQ_16BIT","SB_IRQ_MIDI","SB_IRQ_MPU","DSP_COMMAND_SIZES","DSP_COMMAND_HANDLERS","MIXER_READ_HANDLERS","MIXER_WRITE_HANDLERS","MIXER_REGISTER_IS_LEGACY","FM_HANDLERS","SB16","write_buffer","read_buffer","read_buffer_lastvalue","command","mixer_current_address","command_size","mixer_registers","mixer_reset","dummy_speaker_enabled","test_register","dsp_signed","dsp_16bit","dsp_stereo","dsp_highspeed","dac_buffers","dma_channel","dma_irq","dma_bytes_block","dma_bytes_left","dma_bytes_count","dma_sample_count","dma_channel_8bit","dma_channel_16bit","dma_autoinit","dma_buffer","dma_buffer_int8","dma_buffer_uint8","dma_buffer_int16","dma_buffer_uint16","dma_syncbuffer","dma_paused","dma_waiting_transfer","sampling_rate","bytes_per_sample","e2_value","e2_count","asp_registers","mpu_read_buffer","fm_current_address1","fm_current_address0","mpu_read_buffer_lastvalue","fm_waveform_select_enable","irq_triggered","port2x0_read","port2x1_read","port2x2_read","port2x3_read","port2x4_read","port2x5_read","port2x6_read","port2x7_read","port2x8_read","port2x9_read","port2xA_read","port2xB_read","port2xC_read","port2xD_read","port2xE_read","port2xF_read","port2x0_write","port2x1_write","port2x2_write","port2x3_write","port2x4_write","port2x5_write","port2x6_write","port2x7_write","port2x8_write","port2x9_write","port2xA_write","port2xB_write","port2xC_write","port2xD_write","port2xE_write","port2xF_write","port3x0_read","port3x1_read","port3x0_write","port3x1_write","dma_on_unmask","dac_handle_request","dsp_reset","SB16.prototype.dsp_reset","SB16.prototype.get_state","mpu_read_buffer_last_value","SB16.prototype.set_state","mixer_full_update","SB16.prototype.port2x0_read","SB16.prototype.port2x1_read","SB16.prototype.port2x2_read","SB16.prototype.port2x3_read","SB16.prototype.port2x4_read","SB16.prototype.port2x5_read","mixer_read","SB16.prototype.port2x6_read","SB16.prototype.port2x7_read","SB16.prototype.port2x8_read","SB16.prototype.port2x9_read","SB16.prototype.port2xA_read","SB16.prototype.port2xB_read","SB16.prototype.port2xC_read","SB16.prototype.port2xD_read","SB16.prototype.port2xE_read","SB16.prototype.port2xF_read","SB16.prototype.port2x0_write","SB16.prototype.port2x1_write","handler","fm_default_write","SB16.prototype.port2x2_write","SB16.prototype.port2x3_write","SB16.prototype.port2x4_write","SB16.prototype.port2x5_write","mixer_write","SB16.prototype.port2x6_write","yesplease","SB16.prototype.port2x7_write","SB16.prototype.port2x8_write","SB16.prototype.port2x9_write","SB16.prototype.port2xA_write","SB16.prototype.port2xB_write","SB16.prototype.port2xC_write","command_do","SB16.prototype.port2xD_write","SB16.prototype.port2xE_write","SB16.prototype.port2xF_write","SB16.prototype.port3x0_read","SB16.prototype.port3x0_write","SB16.prototype.port3x1_read","SB16.prototype.port3x1_write","SB16.prototype.command_do","dsp_default_handler","SB16.prototype.dsp_default_handler","register_dsp_command","commands","any_first_digit","audio_normalize","dma_transfer_size_set","dma_transfer_start","sampling_rate_change","get_channel_count","SB_F9","SB16.prototype.mixer_read","SB16.prototype.mixer_write","mixer_default_read","SB16.prototype.mixer_default_read","mixer_default_write","SB16.prototype.mixer_default_write","SB16.prototype.mixer_reset","SB16.prototype.mixer_full_update","register_mixer_read","register_mixer_write","register_mixer_legacy","address_old","address_new_left","address_new_right","prev_right","prev_left","register_mixer_volume","mixer_source","SB16.prototype.fm_default_write","register_fm_write","addresses","between","SB_FM_OPERATORS_BY_OFFSET","get_fm_operator","fm_update_waveforms","SB16.prototype.fm_update_waveforms","SB16.prototype.sampling_rate_change","rate","SB16.prototype.get_channel_count","SB16.prototype.dma_transfer_size_set","SB16.prototype.dma_transfer_start","max_bytes_block","SB16.prototype.dma_on_unmask","dma_transfer_next","SB16.prototype.dma_transfer_next","samples","dma_to_dac","SB16.prototype.dma_to_dac","sample_count","amplitude","repeats","sample","dac_send","SB16.prototype.dac_handle_request","SB16.prototype.dac_send","out0","out1","SB16.prototype.raise_irq","SB16.prototype.lower_irq","audio_clip","VirtIO","queue_select","queue_size","queue_address","device_status","ring_start","ring_desc_start","last_idx","desc_idx","handle_descriptor","device_reply","VirtIO.prototype.get_state","VirtIO.prototype.set_state","VirtIO.prototype.reset","VirtIO.prototype.handle_descriptor","desc_start","buffer_idx","VRING_DESC_F_WRITE","VRING_DESC_F_INDIRECT","addr_low","addr_high","VRING_DESC_F_NEXT","buffer_len","pointer","VirtIO.prototype.device_reply","queueidx","result_length","used_desc_start","used_idx","used_desc_offset","Bus","BusConnector","listeners","pair","BusConnector.prototype.register","unregister","BusConnector.prototype.unregister","filter","BusConnector.prototype.send","unused_transfer","listener","send_async","BusConnector.prototype.send_async","create","Bus.create","c0","c1","log_data","do_the_log","dbg_names","reduce","log_last_message","log_message_repetitions","dbg_log_","stuff","level","time_str","getHours","getMinutes","getSeconds","getMilliseconds","stack","cond","dbg_assert_failed","trace","instruction_count","instruction_total","CPU_LOG_VERBOSE","CPU_EX_P","CPU_EX_U","CPU_EX_O","CPU_EX_Z","CPU_EX_D","CPU_EX_I","mem_page_infos","segment_is_null","segment_limits","segment_offsets","tlb_data","tlb_info","tlb_info_global","protected_mode","gdtr_offset","gdtr_size","idtr_offset","idtr_size","page_fault","tss_size_32","page_size_extensions","cpl","in_hlt","stack_size_32","is_32","last_result","last_add_result","last_op_size","last_op2","last_op1","prefixes","sysenter_eip","sysenter_esp","sysenter_cs","esp_phys","last_virt_esp","eip_phys","last_virt_eip","div32_result","phys_addr_high","phys_addr","modrm_byte","tsc_offset","paging","previous_ip","apic_enabled","timestamp_counter","reg32s","reg32","reg16s","reg8s","reg8","reg_mmxs","reg_mmx","reg_mmx8s","reg_mmx8","reg_xmm32s","mxcsr","sreg","dreg","bios","main","vga","fw_value","fpu","table16","table32","table0F_16","table0F_32","update_operand_size","debug_init","init2","winnt_fix","CPU.prototype.get_state","virtio","hpet","ps2","uart0","fdc","cdrom","hda","pit","net","pic","sb16","uart1","uart2","uart3","CPU.prototype.set_state","full_clear_tlb","CPU.prototype.main_run","hlt_loop","do_run","exception_cleanup","CPU.prototype.exception_cleanup","clear_prefixes","CPU.prototype.reboot_internal","CPU.prototype.reset","switch_cs_real_mode","switch_seg","create_memory","CPU.prototype.create_memory","CPU.prototype.init","device_bus","vga_bios","a20_byte","load_devices","CustomRTC","fill_cmos","fda","fdb","ide_device_count","hdb","enable_ne2k","fs9p","multiboot","load_multiboot","debug","CPU.prototype.load_multiboot","MULTIBOOT_SEARCH_BYTES","buf32","MAGIC","checksum","multiboot_info_addr","update_cs_size","MULTIBOOT_HEADER_ADDRESS","header_addr","load_addr","load_end_addr","bss_end_addr","entry_addr","file_start","get_seg","ELF_MAGIC","elf","read_elf","program_headers","program","paddr","vaddr","filesz","memsz","dump_state","dump_regs","CPU.prototype.fill_cmos","boot_order","memory_above_1m","memory_above_16m","fastboot","CPU.prototype.load_bios","vga_bios8","CPU.prototype.do_run","run_hardware_timers","do_many_cycles","CPU.prototype.do_many_cycles","do_many_cycles_unsafe","CPU.prototype.do_many_cycles_unsafe","k","cycle_internal","PROFILING","CPU.prototype.cycle_internal","opcode","read_imm8","logop","cycle","CPU.prototype.cycle","segment_prefix_op","CPU.prototype.segment_prefix_op","run_prefix_instruction","CPU.prototype.run_prefix_instruction","CPU.prototype.hlt_loop","CPU.prototype.run_hardware_timers","CPU.prototype.clear_prefixes","set_cr0","CPU.prototype.set_cr0","cr0","unimpl","new_paging","set_cr4","CPU.prototype.set_cr4","cr4","trigger_gp","clear_tlb","cpl_changed","CPU.prototype.cpl_changed","CPU.prototype.read_imm8","translate_address_read","data8","read_imm8s","CPU.prototype.read_imm8s","read_imm16","CPU.prototype.read_imm16","read_imm32s","CPU.prototype.read_imm32s","create_atom64s","CPU.prototype.create_atom64s","create_atom128s","CPU.prototype.create_atom128s","d0","d1","d2","d3","read_modrm_byte","CPU.prototype.read_modrm_byte","read_op0F","read_sib","read_op8","read_op8s","read_op16","read_op32s","read_disp8","read_disp8s","read_disp16","read_disp32s","CPU.prototype.init2","branch_taken","CPU.prototype.branch_taken","branch_not_taken","CPU.prototype.branch_not_taken","diverged","CPU.prototype.diverged","modrm_resolve","CPU.prototype.modrm_resolve","is_asize_32","modrm_table32","modrm_table16","sib_resolve","CPU.prototype.sib_resolve","sib_table","clear_instruction_cache","CPU.prototype.clear_instruction_cache","virt_boundary_read16","CPU.prototype.virt_boundary_read16","virt_boundary_read32s","CPU.prototype.virt_boundary_read32s","mid","virt_boundary_write16","CPU.prototype.virt_boundary_write16","virt_boundary_write32","CPU.prototype.virt_boundary_write32","safe_read8","CPU.prototype.safe_read8","CPU.prototype.safe_read16","CPU.prototype.safe_read32s","safe_read64s","CPU.prototype.safe_read64s","safe_read128s_aligned","CPU.prototype.safe_read128s_aligned","phys","safe_read128s_unaligned","CPU.prototype.safe_read128s_unaligned","safe_write8","CPU.prototype.safe_write8","translate_address_write","CPU.prototype.safe_write16","phys_low","CPU.prototype.safe_write32","safe_write64","CPU.prototype.safe_write64","safe_write128","CPU.prototype.safe_write128","read_moffs","CPU.prototype.read_moffs","get_seg_prefix","getiopl","CPU.prototype.getiopl","vm86_mode","CPU.prototype.vm86_mode","get_eflags","CPU.prototype.get_eflags","getcf","getpf","getaf","getzf","getsf","getof","update_eflags","CPU.prototype.update_eflags","new_flags","dont_update","get_stack_reg","CPU.prototype.get_stack_reg","set_stack_reg","CPU.prototype.set_stack_reg","adjust_stack_reg","CPU.prototype.adjust_stack_reg","get_stack_pointer","CPU.prototype.get_stack_pointer","get_real_eip","CPU.prototype.get_real_eip","call_interrupt_vector","CPU.prototype.call_interrupt_vector","interrupt_nr","is_software_int","error_code","debug_interrupt","translate_address_system_read","selector","access","dpl","do_task_switch","is_trap","is_16","lookup_segment_selector","effective_limit","is_valid","is_null","is_executable","is_present","trigger_np","old_flags","dc_bit","tss_stack_addr","get_tss_stack_addr","new_esp","new_ss","ss_info","is_system","is_writable","rpl","rw_bit","old_esp","old_ss","stack_space","translate_address_system_write","push32","push16","new_ip","new_cs","iret16","CPU.prototype.iret16","iret","iret32","CPU.prototype.iret32","CPU.prototype.iret","new_eip","temp_esp","temp_ss","new_es","new_ds","new_fs","new_gs","new_cpl","trigger_ss","CPU.prototype.switch_cs_real_mode","far_return","CPU.prototype.far_return","eip","stack_adjust","far_jump","CPU.prototype.far_jump","is_call","cs_selector","raw0","cs_info","parameter_count","raw1","old_stack_pointer","parameter","types","CPU.prototype.get_tss_stack_addr","CPU.prototype.do_task_switch","descriptor","tss_is_16","tss_is_busy","from_gdt","tsr_offset","old_eflags","table_offset","new_tsr_offset","new_cr3","new_eflags","new_ldt","load_ldt","hlt_op","CPU.prototype.hlt_op","raise_exception","CPU.prototype.raise_exception","raise_exception_with_code","CPU.prototype.raise_exception_with_code","trigger_de","CPU.prototype.trigger_de","CPU.prototype.trigger_ud","trigger_nm","CPU.prototype.trigger_nm","trigger_ts","CPU.prototype.trigger_ts","CPU.prototype.trigger_gp","CPU.prototype.trigger_np","CPU.prototype.trigger_ss","task_switch_test","CPU.prototype.task_switch_test","task_switch_test_mmx","CPU.prototype.task_switch_test_mmx","todo","CPU.prototype.todo","undefined_instruction","CPU.prototype.undefined_instruction","unimplemented_sse","CPU.prototype.unimplemented_sse","get_seg_prefix_ds","CPU.prototype.get_seg_prefix_ds","get_seg_prefix_ss","CPU.prototype.get_seg_prefix_ss","get_seg_prefix_cs","CPU.prototype.get_seg_prefix_cs","CPU.prototype.get_seg_prefix","default_segment","prefix","CPU.prototype.get_seg","segment","read_e8","CPU.prototype.read_e8","read_e8s","CPU.prototype.read_e8s","read_e16","CPU.prototype.read_e16","read_e16s","CPU.prototype.read_e16s","read_e32s","CPU.prototype.read_e32s","read_e32","CPU.prototype.read_e32","read_mmx_mem32s","CPU.prototype.read_mmx_mem32s","read_mmx_mem64s","CPU.prototype.read_mmx_mem64s","read_xmm_mem64s","CPU.prototype.read_xmm_mem64s","read_xmm_mem128s","CPU.prototype.read_xmm_mem128s","read_xmm_mem128s_unaligned","CPU.prototype.read_xmm_mem128s_unaligned","set_e8","CPU.prototype.set_e8","set_e16","CPU.prototype.set_e16","set_e32","CPU.prototype.set_e32","set_mmx_mem64s","CPU.prototype.set_mmx_mem64s","read_write_e8","CPU.prototype.read_write_e8","virt_addr","write_e8","CPU.prototype.write_e8","read_write_e16","CPU.prototype.read_write_e16","write_e16","CPU.prototype.write_e16","read_write_e32","CPU.prototype.read_write_e32","write_e32","CPU.prototype.write_e32","read_reg_e16","CPU.prototype.read_reg_e16","write_reg_e16","CPU.prototype.write_reg_e16","read_reg_e32s","CPU.prototype.read_reg_e32s","write_reg_e32","CPU.prototype.write_reg_e32","read_g8","CPU.prototype.read_g8","write_g8","CPU.prototype.write_g8","read_g16","CPU.prototype.read_g16","read_g16s","CPU.prototype.read_g16s","write_g16","CPU.prototype.write_g16","read_g32s","CPU.prototype.read_g32s","write_g32","CPU.prototype.write_g32","read_xmm64s","CPU.prototype.read_xmm64s","read_xmm128s","CPU.prototype.read_xmm128s","read_mmx64s","CPU.prototype.read_mmx64s","write_mmx64s","CPU.prototype.write_mmx64s","write_xmm64","CPU.prototype.write_xmm64","write_xmm128s","CPU.prototype.write_xmm128s","CPU.prototype.pic_call_irq","int","CPU.prototype.handle_irqs","CPU.prototype.device_raise_irq","CPU.prototype.device_lower_irq","test_privileges_for_io","CPU.prototype.test_privileges_for_io","tsr_size","iomap_base","port_info","cpuid","CPU.prototype.cpuid","eax","ecx","edx","ebx","CPU.prototype.update_cs_size","new_size","CPU.prototype.update_operand_size","CPU.prototype.lookup_segment_selector","is_gdt","selector_offset","is_conforming_executable","is_readable","table_limit","limit","CPU.prototype.switch_seg","load_tr","CPU.prototype.load_tr","CPU.prototype.load_ldt","arpl","CPU.prototype.arpl","seg","lar","CPU.prototype.lar","original","dpl_bad","LAR_INVALID_TYPE","lsl","CPU.prototype.lsl","LSL_INVALID_TYPE","verr","CPU.prototype.verr","verw","CPU.prototype.verw","CPU.prototype.clear_tlb","CPU.prototype.full_clear_tlb","invlpg","CPU.prototype.invlpg","page","CPU.prototype.translate_address_read","translate_address_user_read","CPU.prototype.translate_address_write","translate_address_user_write","CPU.prototype.translate_address_user_write","do_page_translation","CPU.prototype.translate_address_user_read","CPU.prototype.translate_address_system_write","CPU.prototype.translate_address_system_read","CPU.prototype.do_page_translation","for_writing","user","page_dir_addr","page_dir_entry","can_write","allow_user","trigger_pagefault","page_table_addr","page_table_entry","allowed_flag","CPU.prototype.writable_or_pagefault","CPU.prototype.trigger_pagefault","present","CPU.prototype.is_osize_32","CPU.prototype.is_asize_32","get_reg_asize","CPU.prototype.get_reg_asize","r","set_ecx_asize","CPU.prototype.set_ecx_asize","add_reg_asize","CPU.prototype.add_reg_asize","decr_ecx_asize","CPU.prototype.decr_ecx_asize","CPU.prototype.invalid_arithmatic","is_SNaN32","CPU.prototype.is_SNaN32","importScripts","self","DynamicTranslator","something","clear_cache","this.clear_cache","cycle_translated","this.cycle_translated","MAX_COUNT_PER_CYCLE","string_get_cycle_count","string_get_cycle_count2","addr1","addr2","movsb","CPU.prototype.movsb","dest","start_count","cycle_counter","phys_src","phys_dest","cont","movsw","CPU.prototype.movsw","single_size","movsd","CPU.prototype.movsd","ds","es","align_mask","cmpsb","is_repz","data_dest","data_src","cmp8","cmpsw","cmp16","cmpsd","cmp32","stosb","stosw","stosd","lodsb","lodsw","lodsd","scasb","scasw","scasd","insb","insw","insd","outsb","outsw","outsd","add8","CPU.prototype.add8","add16","CPU.prototype.add16","add32","CPU.prototype.add32","adc8","CPU.prototype.adc8","adc","adc16","CPU.prototype.adc16","adc32","CPU.prototype.adc32","sub8","CPU.prototype.sub8","sub","sub16","CPU.prototype.sub16","sub32","CPU.prototype.sub32","CPU.prototype.cmp8","CPU.prototype.cmp16","CPU.prototype.cmp32","sbb8","CPU.prototype.sbb8","sbb","sbb16","CPU.prototype.sbb16","sbb32","CPU.prototype.sbb32","CPU.prototype.add","dest_operand","source_operand","op_size","CPU.prototype.adc","cf","CPU.prototype.sub","CPU.prototype.sbb","inc8","CPU.prototype.inc8","inc","inc16","CPU.prototype.inc16","inc32","CPU.prototype.inc32","dec8","CPU.prototype.dec8","dec","dec16","CPU.prototype.dec16","dec32","CPU.prototype.dec32","CPU.prototype.inc","CPU.prototype.dec","neg8","CPU.prototype.neg8","neg","neg16","CPU.prototype.neg16","neg32","CPU.prototype.neg32","CPU.prototype.neg","mul8","CPU.prototype.mul8","imul8","CPU.prototype.imul8","mul16","CPU.prototype.mul16","high_result","imul16","CPU.prototype.imul16","imul_reg16","CPU.prototype.imul_reg16","operand1","operand2","mul32","CPU.prototype.mul32","lo","hi","imul32","CPU.prototype.imul32","imul_reg32","CPU.prototype.imul_reg32","div8","CPU.prototype.div8","target_operand","idiv8","CPU.prototype.idiv8","div16","CPU.prototype.div16","idiv16","CPU.prototype.idiv16","do_div32","CPU.prototype.do_div32","div_low","div_high","quot","q","div","div32","CPU.prototype.div32","dest_operand_low","dest_operand_high","result_mod","idiv32","CPU.prototype.idiv32","div_is_neg","is_neg","xadd8","CPU.prototype.xadd8","tmp","xadd16","CPU.prototype.xadd16","xadd32","CPU.prototype.xadd32","bcd_daa","CPU.prototype.bcd_daa","old_al","old_cf","old_af","bcd_das","CPU.prototype.bcd_das","bcd_aam","CPU.prototype.bcd_aam","temp","bcd_aad","CPU.prototype.bcd_aad","bcd_aaa","CPU.prototype.bcd_aaa","bcd_aas","CPU.prototype.bcd_aas","and8","CPU.prototype.and8","and","and16","CPU.prototype.and16","and32","CPU.prototype.and32","test8","CPU.prototype.test8","test16","CPU.prototype.test16","test32","CPU.prototype.test32","or8","CPU.prototype.or8","or","or16","CPU.prototype.or16","or32","CPU.prototype.or32","xor8","CPU.prototype.xor8","xor","xor16","CPU.prototype.xor16","xor32","CPU.prototype.xor32","CPU.prototype.and","CPU.prototype.or","CPU.prototype.xor","rol8","CPU.prototype.rol8","rol16","CPU.prototype.rol16","rol32","CPU.prototype.rol32","rcl8","CPU.prototype.rcl8","rcl16","CPU.prototype.rcl16","rcl32","CPU.prototype.rcl32","ror8","CPU.prototype.ror8","ror16","CPU.prototype.ror16","ror32","CPU.prototype.ror32","rcr8","CPU.prototype.rcr8","rcr16","CPU.prototype.rcr16","rcr32","CPU.prototype.rcr32","shl8","CPU.prototype.shl8","shl16","CPU.prototype.shl16","shl32","CPU.prototype.shl32","shr8","CPU.prototype.shr8","shr16","CPU.prototype.shr16","shr32","CPU.prototype.shr32","sar8","CPU.prototype.sar8","sar16","CPU.prototype.sar16","sar32","CPU.prototype.sar32","shrd16","CPU.prototype.shrd16","shrd32","CPU.prototype.shrd32","shld16","CPU.prototype.shld16","shld32","CPU.prototype.shld32","bt_reg","CPU.prototype.bt_reg","bit_base","bit_offset","btc_reg","CPU.prototype.btc_reg","bts_reg","CPU.prototype.bts_reg","btr_reg","CPU.prototype.btr_reg","bt_mem","CPU.prototype.bt_mem","btc_mem","CPU.prototype.btc_mem","btr_mem","CPU.prototype.btr_mem","bts_mem","CPU.prototype.bts_mem","bsf16","CPU.prototype.bsf16","old","bsf32","CPU.prototype.bsf32","bsr16","CPU.prototype.bsr16","bsr32","CPU.prototype.bsr32","popcnt","CPU.prototype.popcnt","saturate_sw_to_ub","CPU.prototype.saturate_sw_to_ub","saturate_sw_to_sb","CPU.prototype.saturate_sw_to_sb","saturate_sd_to_sw","CPU.prototype.saturate_sd_to_sw","saturate_sd_to_sb","CPU.prototype.saturate_sd_to_sb","saturate_sd_to_ub","CPU.prototype.saturate_sd_to_ub","saturate_ud_to_ub","CPU.prototype.saturate_ud_to_ub","saturate_uw","CPU.prototype.saturate_uw","CPU.prototype.integer_round","rc","rounded","jmpcc8","CPU.prototype.jmpcc8","condition","jmp_rel16","CPU.prototype.jmp_rel16","rel16","current_cs","jmpcc16","CPU.prototype.jmpcc16","imm16","jmpcc32","CPU.prototype.jmpcc32","imm32s","cmovcc16","CPU.prototype.cmovcc16","cmovcc32","CPU.prototype.cmovcc32","setcc","CPU.prototype.setcc","loopne","CPU.prototype.loopne","imm8s","loope","CPU.prototype.loope","loop","CPU.prototype.loop","jcxz","CPU.prototype.jcxz","CPU.prototype.getcf","CPU.prototype.getpf","CPU.prototype.getaf","CPU.prototype.getzf","CPU.prototype.getsf","CPU.prototype.getof","test_o","test_s","CPU.prototype.test_be","test_l","CPU.prototype.test_l","test_le","CPU.prototype.test_le","CPU.prototype.push16","sp","CPU.prototype.push32","imm32","pop16","CPU.prototype.pop16","pop32s","CPU.prototype.pop32s","pusha16","CPU.prototype.pusha16","pusha32","CPU.prototype.pusha32","popa16","CPU.prototype.popa16","popa32","CPU.prototype.popa32","xchg8","CPU.prototype.xchg8","memory_data","xchg16","CPU.prototype.xchg16","xchg16r","CPU.prototype.xchg16r","operand","xchg32","CPU.prototype.xchg32","xchg32r","CPU.prototype.xchg32r","lss16","CPU.prototype.lss16","new_reg","new_seg","lss32","CPU.prototype.lss32","enter16","CPU.prototype.enter16","nesting_level","frame_temp","tmp_ebp","enter32","CPU.prototype.enter32","bswap","CPU.prototype.bswap","fxsave","CPU.prototype.fxsave","fxrstor","CPU.prototype.fxrstor","new_mxcsr","t16","t32","op1","op2","ip","old_vbp","new_bp","new_ebp","cs","res32","res0","res1","source1","source2","new_tick","source8","destination8","destination_low","source16","destination16","destination_high","source64s","source8s","reg_offset","destination8s","byte4","byte5","byte6","byte7","word0","word1","word2","word3","source16s","destination16s","result8","order","word0_shift","word1_shift","word2_shift","word3_shift","destination128","m64_low","m64_high","rand","has_rand","d","CPU.prototype.debug_init","step","dump_regs_short","dump_instructions","where","vm","iopl","cs_eip","ss_esp","if_","flag_names","flag_string","get_regs_short","r32_names","line1","line2","lines","get_instructions","step_mode","opcodes","out","trace_all","all_ops","ops","opcode_map","show","load_page_entry","dword_entry","is_directory","accessed","dirty","cache_disable","read_write","debug.show","el","getElementById","scrollTop","debug.init","handle","seabios_debug","dump_stack","esp","dump_page_directory","sub_addr","subentry","dump_gdt_ldt","dump_table","flags_str","dump_idt","get_memory_dump","memory_hex_dump","used_memory_dump","block_size","run_until","prompt","debug.unimpl","debug.logop","_ip","debug.debug_interrupt","DataView","U8","getUint8","setUint8","U16","getUint16","setUint16","U32","getUint32","setUint32","pad","Header","create_struct","magic","class","version0","osabi","abiversion","machine","version1","phoff","shoff","ehsize","phentsize","phnum","shentsize","shnum","shstrndx","ProgramHeader","SectionHeader","link","addralign","entsize","struct","keys","view","read_struct","read_structs","view_slice","sections_headers","section","Struct","LITTLE_ENDIAN","SHIFT_SCAN_CODE","SCAN_CODE_RELEASE","KeyboardAdapter","keyup_handler","altKey","keys_pressed","handle_code","keydown_handler","blur_handler","keydown","shiftKey","ctrlKey","keyCode","keyboard","emu_enabled","classList","contains","nodeName","codemap","preventDefault","send_to_controller","asciimap","asciimap_shift","simulate_press","this.simulate_press","simulate_char","this.simulate_char","MouseAdapter","may_handle","mouse","enabled","parent","pointerLockElement","child","touch_start_handler","touches","touch","last_x","clientX","last_y","clientY","touch_end_handler","left_down","middle_down","right_down","mousemove_handler","SPEED_FACTOR","pageX","offsetLeft","pageY","offsetTop","offsetWidth","offsetHeight","mousedown_handler","click_event","mouseup_handler","down","which","mousewheel_handler","wheelDelta","detail","passive","DAC_QUEUE_RESERVE","AUDIOBUFFER_MINIMUM_SAMPLING_RATE","SpeakerAdapter","AudioContext","SpeakerDAC","AudioWorklet","SpeakerWorkletDAC","SpeakerBufferSourceDAC","audio_context","mixer","SpeakerMixer","pcspeaker","PCSpeaker","dac","suspend","resume","warn","create_gain_handler","audio_node","decibels","gain","setValueAtTime","currentTime","sources","Map","gain_right","gain_left","volume_right","volume_left","volume_both","node_treble_left","createBiquadFilter","node_treble_right","frequency","node_bass_left","node_bass_right","node_gain_left","createGain","node_gain_right","node_merger","createChannelMerger","input_left","input_right","connect","connect_source","source_id","disconnect_source","set_volume","update","add_source","SpeakerMixer.prototype.add_source","source_node","SpeakerMixerSource","has","SpeakerMixer.prototype.connect_source","SpeakerMixer.prototype.disconnect_source","disconnect","SpeakerMixer.prototype.set_volume","SpeakerMixer.prototype.update","net_gain_right","destination_left","destination_right","connected_right","connected_left","gain_hidden","node_splitter","createChannelSplitter","SpeakerMixerSource.prototype.update","SpeakerMixerSource.prototype.connect","both","SpeakerMixerSource.prototype.disconnect","SpeakerMixerSource.prototype.set_volume","set_gain_hidden","SpeakerMixerSource.prototype.set_gain_hidden","node_oscillator","createOscillator","mixer_connection","maxValue","PCSpeaker.prototype.start","worklet_string","worklet","sinc","DACProcessor","Reflect","construct","AudioWorkletProcessor","kernel_size","queue_data","queue_start","queue_end","queue_length","queued_samples","source_buffer_previous","EMPTY_BUFFER","source_buffer_current","source_samples_per_destination","source_block_start","source_time","source_offset","onmessage","self.port.onmessage","event","queue_push","sampleRate","MINIMUM_BUFFER_SIZE","setPrototypeOf","process","DACProcessor.prototype.process","inputs","outputs","parameters","sum1","sum0","convolute_index","get_sample","kernel","samples_needed_per_block","ensure_enough_data","DACProcessor.prototype.kernel","DACProcessor.prototype.get_sample","DACProcessor.prototype.ensure_enough_data","current_length","prepare_next_buffer","DACProcessor.prototype.prepare_next_buffer","queue_shift","queue_pos","buffer_count","new_big_buffer_size","new_big_buffer","new_big_buffer_pos","small_buffer","pump","DACProcessor.prototype.pump","QUEUE_RESERVE","DACProcessor.prototype.queue_push","DACProcessor.prototype.queue_shift","DACProcessor.prototype.dbg_log","registerProcessor","worklet_code_start","worklet_code_end","worklet_code","worklet_blob","worklet_url","node_processor","node_output","audioWorklet","addModule","then","AudioWorkletNode","this.node_processor.port.onmessage","debugger","SpeakerDACDebugger","SpeakerWorkletDAC.prototype.queue","push_queued_data","SpeakerWorkletDAC.prototype.pump","buffered_time","rate_ratio","node_lowpass","SpeakerBufferSourceDAC.prototype.queue","block_duration","createBuffer","buffer_data0","getChannelData","buffer_data1","buffer_index","copyToChannel","createBufferSource","current_time","current_silence_duration","target_silence_duration","SpeakerBufferSourceDAC.prototype.pump","node_source","node_gain","is_active","queued_history","output_history","queued","output","SpeakerDACDebugger.prototype.start","duration_ms","createScriptProcessor","onaudioprocess","this.node_processor.onaudioprocess","inputBuffer","SpeakerDACDebugger.prototype.stop","SpeakerDACDebugger.prototype.push_queued_data","download_txt","SpeakerDACDebugger.prototype.download_txt","history_id","txt","download_csv","SpeakerDACDebugger.prototype.download_csv","csv_rows","buffer_id","SerialAdapter","element","keypress_handler","serial","send_char","paste_handler","clipboardData","getData","window_click_handler","blur","text_new_line","show_char","this.show_char","this.update","delta","update_timer","render","clearTimeout","this.render","this.send_char","chr_code","NetworkAdapter","url","socket","send_queue","reconnect_interval","last_connect_attempt","send_queue_limit","handle_message","NetworkAdapter.prototype.handle_message","handle_close","NetworkAdapter.prototype.handle_close","handle_open","NetworkAdapter.prototype.handle_open","handle_error","NetworkAdapter.prototype.handle_error","NetworkAdapter.prototype.destroy","close","NetworkAdapter.prototype.connect","WebSocket","binaryType","onopen","onclose","onerror","NetworkAdapter.prototype.send","change_proxy","NetworkAdapter.prototype.change_proxy","this.socket.onclose","this.socket.onerror","ASYNC_SAFE","load_file","filename","options","http","XMLHttpRequest","method","as_text","responseType","headers","header_names","setRequestHeader","range","http.onload","response","progress","http.onprogress","load_file_nodejs","err","fd","o","encoding","AsyncXHRBuffer","loaded_blocks","SyncFileBuffer","AsyncFileBuffer","determine_size","cb","getResponseHeader","Range","AsyncXHRBuffer.prototype.load","get_from_cache","AsyncXHRBuffer.prototype.get_from_cache","number_of_blocks","block_index","block","AsyncXHRBuffer.prototype.get","handle_read","AsyncXHRBuffer.prototype.set","start_block","block_count","data_slice","AsyncXHRBuffer.prototype.handle_read","written_block","AsyncXHRBuffer.prototype.get_buffer","get_written_blocks","AsyncXHRBuffer.prototype.get_written_blocks","_","indices","SyncFileBuffer.prototype.load","load_next","SyncFileBuffer.prototype.load_next","filereader","FileReader","PART_SIZE","loaded","total","lengthComputable","readAsArrayBuffer","SyncFileBuffer.prototype.get","SyncFileBuffer.prototype.set","SyncFileBuffer.prototype.get_buffer","AsyncFileBuffer.prototype.load","AsyncFileBuffer.prototype.get","fr","AsyncFileBuffer.prototype.get_buffer","get_as_file","AsyncFileBuffer.prototype.get_as_file","existing_blocks","Number","sort","current_offset","File","V86Starter","put_on_settings","disk_images","initial_state","fs9p_json","add_file","files_to_load","loadable","emulator","OnJSONLoaded","cpu_is_running","adapter_bus","emulator_bus","network_adapter","keyboard_adapter","mouse_adapter","screen_adapter","DummyScreenAdapter","serial_adapter","speaker_adapter","image_names","fs_url","base_url","FS","starter","file_index","file_count","file_name","request","V86Starter.prototype.run","V86Starter.prototype.stop","V86Starter.prototype.destroy","V86Starter.prototype.restart","add_listener","V86Starter.prototype.add_listener","remove_listener","V86Starter.prototype.remove_listener","V86Starter.prototype.restore_state","V86Starter.prototype.save_state","callback","get_statistics","V86Starter.prototype.get_statistics","instruction_counter","get_instruction_counter","V86Starter.prototype.get_instruction_counter","is_running","V86Starter.prototype.is_running","keyboard_send_scancodes","V86Starter.prototype.keyboard_send_scancodes","codes","keyboard_send_keys","V86Starter.prototype.keyboard_send_keys","keyboard_send_text","V86Starter.prototype.keyboard_send_text","string","screen_make_screenshot","V86Starter.prototype.screen_make_screenshot","screen_set_scale","V86Starter.prototype.screen_set_scale","sx","sy","screen_go_fullscreen","V86Starter.prototype.screen_go_fullscreen","focus_element","getElementsByClassName","focus","lock_mouse","V86Starter.prototype.lock_mouse","mouse_set_status","V86Starter.prototype.mouse_set_status","keyboard_set_status","V86Starter.prototype.keyboard_set_status","serial0_send","V86Starter.prototype.serial0_send","serial_send_bytes","V86Starter.prototype.serial_send_bytes","create_file","V86Starter.prototype.create_file","parent_id","SearchPath","path_infos","not_found","CreateBinaryFile","FileNotFoundError","read_file","V86Starter.prototype.read_file","WorkerBus","WorkerBus.Connector","Connector","WorkerBus.Connector.prototype.register","WorkerBus.Connector.prototype.send","transfer_list","WorkerBus.init","worker","graphic_buffer","get_text_screen","this.get_text_screen","get_text_row","this.get_text_row","S_IRWXUGO","S_IFMT","S_IFSOCK","S_IFLNK","S_IFREG","S_IFBLK","S_IFCHR","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","STATUS_INVALID","STATUS_OK","STATUS_OPEN","STATUS_ON_SERVER","STATUS_LOADING","JSONFS_VERSION","JSONFS_IDX_NAME","JSONFS_IDX_SIZE","JSONFS_IDX_MTIME","JSONFS_IDX_MODE","JSONFS_IDX_UID","JSONFS_IDX_GID","JSONFS_IDX_TARGET","baseurl","events","filesinloadingqueue","qidnumber","OnLoaded","this.OnLoaded","used_size","FS.prototype.AddEvent","OnEvent","HandleEvent","FS.prototype.HandleEvent","newevents","FS.prototype.OnJSONLoaded","fsdata","fsroot","LoadRecursive","me.OnLoaded","FS.prototype.LoadRecursive","ifmt","LoadDir","FS.prototype.LoadDir","children","updatedir","LoadFile","FS.prototype.LoadFile","LoadBinaryResource","GetFullPath","FS.prototype.PushInode","parent_node","nextid","firstid","Inode","FS.prototype.CreateInode","FS.prototype.CreateDirectory","NotifyListeners","FS.prototype.CreateFile","FS.prototype.CreateNode","FS.prototype.CreateSymlink","CreateTextFile","FS.prototype.CreateTextFile","FS.prototype.CreateBinaryFile","FS.prototype.OpenInode","FillDirectory","FS.prototype.CloseInode","FS.prototype.Rename","olddirid","newdirid","oldid","oldpath","newid","FindPreviousID","FS.prototype.Write","FS.prototype.Search","FS.prototype.GetTotalSize","FS.prototype.GetSpace","FS.prototype.GetFullPath","FS.prototype.FindPreviousID","FS.prototype.Unlink","FS.prototype.GetInode","FS.prototype.ChangeSize","newsize","FS.prototype.SearchPath","GetRecursiveList","FS.prototype.GetRecursiveList","dirid","list","MergeFile","FS.prototype.MergeFile","ids","RecursiveDelete","FS.prototype.RecursiveDelete","toDelete","DeleteNode","FS.prototype.DeleteNode","FS.prototype.NotifyListeners","action","Check","FS.prototype.Check","FS.prototype.FillDirectory","UTF8","UTF8Length","FS.prototype.PrepareCAPs","VIRTIO_MAGIC_REG","VIRTIO_VERSION_REG","VIRTIO_DEVICE_REG","VIRTIO_VENDOR_REG","VIRTIO_HOSTFEATURES_REG","VIRTIO_HOSTFEATURESSEL_REG","VIRTIO_GUESTFEATURES_REG","VIRTIO_GUESTFEATURESSEL_REG","VIRTIO_GUEST_PAGE_SIZE_REG","VIRTIO_QUEUESEL_REG","VIRTIO_QUEUENUMMAX_REG","VIRTIO_QUEUENUM_REG","VIRTIO_QUEUEALIGN_REG","VIRTIO_QUEUEPFN_REG","VIRTIO_QUEUENOTIFY_REG","VIRTIO_INTERRUPTSTATUS_REG","VIRTIO_INTERRUPTACK_REG","VIRTIO_STATUS_REG","message.Debug","message.Abort","OnSuccess","OnError","onreadystatechange","req.onreadystatechange","arrayBuffer","marshall.Marshall","typelist","lengthoffset","UnicodeToUTF8Stream","utf8","marshall.Unmarshall","utf8converter","UTF8StreamToUnicode","Put","marshall.Unmarshall2","stream","ofs","this.Put","UTF8.UTF8Length"]
}
